name: CI-Tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        profile: [debug]
        toolchain: [stable]
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
      CARGO_FLAGS: --verbose --locked
      CARGO_INCREMENTAL: 0
    steps: 
      - name: Set up environment variables and cargo config
        shell: bash
        run: |
          if [ '${{ matrix.profile }}' == release ]; then
            echo "CARGO_FLAGS=$CARGO_FLAGS --release" >> $GITHUB_ENV
          fi
          case '${{ matrix.os }}' in
            ubuntu-latest)  features=systemd,gelf ;;
            *)              features=gelf ;;
          esac
          echo "JORMUNGANDR_FEATURES=$features" >> $GITHUB_ENV

          if [ '${{ matrix.profile }}' == debug ] && [ '${{ matrix.os }}' == windows-latest ]; then
            echo "RUSTFLAGS=$RUSTFLAGS -C link-args=/STACK:2000000" >> $GITHUB_ENV
          fi

          mkdir .cargo
          cat > .cargo/config.toml <<EOF
          [profile.release]
          lto = "thin"
          EOF
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          default: true
          components: rustfmt
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build jormungandr
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: |
            --manifest-path src/jormungandr/jormungandr/Cargo.toml
            --no-default-features
            --features ${{ env.JORMUNGANDR_FEATURES }}
            ${{ env.CARGO_FLAGS }}

      - name: Build jcli
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: -p jcli ${{ env.CARGO_FLAGS }}

      - name: Build tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: --tests --all-features ${{ env.CARGO_FLAGS }}

      - name: Build explorer
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: -p explorer ${{ env.CARGO_FLAGS }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 90
        with:
          command: test
          args: --tests ${{ env.CARGO_FLAGS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # TMPDIR and TMP are used respectively on unix and windows
          TMPDIR: ${{ runner.temp }}
          TMP: ${{ runner.temp }}

      - name: Pack logs from failed tests
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.profile }}-${{ matrix.toolchain }}-node-logs-from-failed-tests
          path: ${{ runner.temp }}/jormungandr_*
          retention-days: 30

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          default: true
          components: clippy

      - name: Checkout code
        uses: actions/checkout@v3

      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings

  fmt:
    name: Fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          default: true
          components: rustfmt

      - name: Checkout code
        uses: actions/checkout@v3

      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
