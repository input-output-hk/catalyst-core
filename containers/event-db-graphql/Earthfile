VERSION 0.7
FROM node:12-alpine
WORKDIR /postgraphile

builder:
    # Clone the source code
    GIT CLONE --branch tags/v4.13.0 "https://github.com/graphile/postgraphile" /src

    # Install root dependencies
    RUN cp /src/package.json /src/yarn.lock .
    RUN yarn install --frozen-lockfile --production=false --no-progress

    # Install postgraphiql dependencies
    RUN cp -r /src/postgraphiql postgraphiql
    WORKDIR /postgraphile/postgraphiql/
    RUN yarn install --frozen-lockfile --production=false --no-progress

    # Copy the remaining source code
    WORKDIR /src
    RUN cp tsconfig.json .eslintrc.js .eslintignore prettier.config.js .prettierignore /postgraphile
    RUN cp index.js cli.js /postgraphile
    RUN cp *.md /postgraphile
    RUN cp -r src/ /postgraphile/src
    RUN cp -r assets/ /postgraphile/assets
    RUN cp -r typings/ /postgraphile/typings
    RUN cp -r scripts/ /postgraphile/scripts

    # Run the build script
    WORKDIR /postgraphile
    RUN ./scripts/build

    SAVE ARTIFACT /postgraphile

build:
    # Clone the source code
    GIT CLONE --branch tags/v4.13.0 "https://github.com/graphile/postgraphile" /src
    WORKDIR /src

    # Copy scripts
    RUN cp index.js cli.js isTurbo.js plugins.js plugins.d.ts /postgraphile
    RUN cp docker/.postgraphilerc.js /postgraphile

    # Copy artifacts from builder
    COPY +builder/postgraphile/package.json +builder/postgraphile/yarn.lock /postgraphile/
    COPY +builder/postgraphile/build/ /postgraphile/build/
    COPY +builder/postgraphile/build-turbo/ /postgraphile/build-turbo/
    COPY +builder/postgraphile/sponsors.json /postgraphile/

    # Add plugins
    RUN yarn add @graphile-contrib/pg-simplify-inflector

    # Run build one final time
    WORKDIR /postgraphile
    RUN yarn install --frozen-lockfile --production=true --no-progress


    # Save the result
    SAVE ARTIFACT /postgraphile AS LOCAL output/postgraphile
    SAVE IMAGE --cache-hint

docker:
    ARG tag="latest"
    ARG registry
    COPY +build/postgraphile /postgraphile
    COPY entry.sh .

    ENV DEBUG="graphile-build-pg,postgraphile:postgres*"
    ENV GRAPHQL_PORT=5000
    EXPOSE 5000
    ENTRYPOINT ["sh", "./entry.sh"]
    SAVE IMAGE --push ${registry}event-db-graphql:$tag
