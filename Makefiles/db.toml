# Tool needed to run DB migrations.
# See: https://github.com/rust-db/refinery/tree/main/refinery_cli
[tasks.install-refinery-cli]
install_crate = { crate_name = "refinery_cli", binary = "refinery", test_arg = "--help" }

# All the prerequisite tooling needed to work with the DB.
[tasks.install-db-prereqs]
workspace = false
run_task = { name = [
        "install-refinery-cli",
    ], parallel = true }

# Setup the local database ready to run the migrations.
[tasks.local-event-db-init]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db

export DB_USER_PW="CHANGE_ME"
ls setup
psql -e postgres -f setup/setup-db.sql \
    -v dbName=CatalystEventDev \
    -v dbDescription="Local Dev Catalayst Event DB" \
    -v dbUser="catalyst-event-dev" ${@}
'''

# Run Diesel Migrations, constructing the full up-to-date DB in a local database.
[tasks.run-event-db-migration]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db
refinery migrate -c refinery.toml -p ./migrations
'''

[tasks.local-db-test-data-setup]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/event_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/snapshot_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/voter_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/contribution_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/goal_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/voting_group_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/objective_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/proposal_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/proposal_review_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/review_rating_table.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f test_data/objective_review_metric_table.sql ${@}
'''

# Install historic data for past events
[tasks.local-db-historic-data-setup]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db
psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_0.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_1.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_2.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_3.sql ${@}
psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_4.sql ${@}
# psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_5.sql ${@}
# psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_6.sql ${@}
# psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_7.sql ${@}
# psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_8.sql ${@}
# psql -U catalyst-event-dev -d CatalystEventDev -f historic_data/fund_9.sql ${@}
'''

# Setup the local database graphql configuration.
[tasks.local-event-db-graphql-init]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db
export ADMIN_ROLE_PW="CHANGE_ME"
export ANON_ROLE_PW="CHANGE_ME"
export ADMIN_USER_PW="CHANGE_ME"

psql -e postgres -f setup/graphql-setup.sql \
    -v dbName=CatalystEventDev \
    -v dbUser="catalyst-event-dev" \
    -v adminUserFirstName="Admin" \
    -v adminUserLastName="Default" \
    -v adminUserAbout="Default Admin User" \
    -v adminUserEmail="admin.default@projectcatalyst.io" ${@}
'''


# Setup the local database ready to run the migrations.
[tasks.local-event-db-setup]
workspace = false
category = "db"
dependencies = [
    "local-event-db-init",
    "local-event-db-graphql-init",
    "run-event-db-migration",
    "local-db-historic-data-setup"
]

# Setup the local database with the test data.
[tasks.local-event-db-test]
workspace = false
category = "db"
dependencies = [
    "local-event-db-init",
    "run-event-db-migration",
    "local-db-test-data-setup"
]



# Run Diesel Migrations, for documentation purposes.
[tasks.run-event-doc-db-migration]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db
refinery migrate -c refinery-docs.toml -p ./migrations
'''

# Setup the local database ready to run the migrations.
[tasks.doc-event-db-init]
workspace = false
category = "db"
script_runner = "@shell"
script = '''
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/src/event-db
psql -e -f setup/setup-db.sql \
    -v dbName=CatalystEventDocs \
    -v dbDescription="Local Docs Catalayst Event DB" \
    -v dbUser="catalyst-event-docs" \
    -v dbUserPw="CHANGE_ME" ${@}
'''

# Setup the local database ready to run the migrations.
[tasks.doc-event-db-setup]
workspace = false
category = "db"
dependencies = [
    "doc-event-db-init",
    "run-event-doc-db-migration"
]
