version: "3"

services:
  eventdb:
    image: eventdb:latest
    environment:
      - POSTGRES_PASSWORD=CHANGE_ME
    # it is useful to restart when developing, change according to your needs
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - eventdb:/var/lib/postgresql/data

  cat-data-service:
    image: cat-data-service:latest
    depends_on:
      eventdb:
        condition: service_started
    environment:
      - ADDRESS=0.0.0.0:3000
      - DATABASE_URL=postgres://catalyst-event-dev:CHANGE_ME@eventdb/CatalystEventDev
      - LOG_LEVEL=debug
    ports:
      - "3030:3030"
    command: cat-data-service run --database-url postgres://catalyst-event-dev:CHANGE_ME@eventdb/CatalystEventDev --log-level debug --address 0.0.0.0:3030

  leader0:
    image: voting-node:latest
    hostname: leader0
    depends_on:
      eventdb:
        condition: service_started
    ports:
      - "5057:5057"
    env_file: .env
    environment:
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@eventdb/CatalystEventDev
    volumes:
      - leader0_store:/node_storage
    command: voting-node start

  leader1:
    image: voting-node:latest
    hostname: leader1
    depends_on:
      eventdb:
        condition: service_started
    ports:
      - "6057:5057"
    env_file: .env
    environment:
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@eventdb/CatalystEventDev
    volumes:
      - leader1_store:/node_storage
    command: voting-node start

  leader2:
    image: voting-node:latest
    hostname: leader2
    depends_on:
      eventdb:
        condition: service_started
    ports:
      - "7057:5057"
    env_file: .env
    environment:
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@eventdb/CatalystEventDev
    volumes:
      - leader2_store:/node_storage
    command: voting-node start

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./extras/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./extras/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./extras/tempo-local.yaml:/etc/tempo.yaml
      - ./extras/tempo-data:/tmp/tempo
    ports:
      - "3200:3200"  # tempo
      - "4317"  # otlp grpc

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasource.yml

volumes:
  eventdb:
  leader0_store:
  leader1_store:
  leader2_store:
