name: Build

on:
  push:
    branches:
    - main
    paths-ignore:
      - '**.md'
      - 'src/**/**.md'
      - 'Makefiles/**'
      - 'nix/**'
      - 'book/**'
  pull_request:
    branches:
    - main
    paths-ignore:
       - '**.md'
       - 'book/**'
       - 'src/**/**.md'
       - 'Makefiles/**'
       - 'nix/**'
       - 'book/**'

env:
  RUST_LATEST_STABLE_VERSION: 1.65
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_FLAGS: --verbose --locked
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 15


permissions:
  contents: read

jobs:
  cancel:
    permissions:
      actions: write  # for styfle/cancel-workflow-action to cancel/stop running workflows
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: styfle/cancel-workflow-action@b173b6ec0100793626c2d9e6b90435061f4fc3e5 # 0.11.0
        with:
          access_token: ${{ github.token }}

  build_on_linux:
    name: Build Catalyst Core on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: ${{env.RUST_LATEST_STABLE_VERSION}}

      - name: Cache rust
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1
        with:
          shared-key: "build_cache"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Build on Linux
        run: cargo build --all-features ${{env.CARGO_FLAGS}}

  build_on_windows:
    name: Build Catalyst Core on Windows
    runs-on: windows-latest
    env:
      CARGO_FLAGS: --verbose --locked
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout code on PR
        # Workaround for the running out of disk space issue. See https://github.com/actions/runner-images/issues/1341
        run: |
          mkdir C:\\${{ github.event.repository.name }}
          git clone -n -v --progress https://github.com/input-output-hk/${{ github.event.repository.name }}.git C:\\${{ github.event.repository.name }}
          cd C:\\${{ github.event.repository.name }}
          git checkout ${{ github.event.pull_request.head.sha }}
        if: ${{ github.event_name == 'pull_request' }}

      - name: Checkout code on push
        run: |
          mkdir C:\\${{ github.event.repository.name }}
          git clone -v --progress https://github.com/input-output-hk/${{ github.event.repository.name }}.git C:\\${{ github.event.repository.name }}
          cd C:\\${{ github.event.repository.name }}
        if: ${{ github.event_name == 'push' }}

      - name: Allow long paths on Windows
        working-directory: "C:\\${{ github.event.repository.name }}"
        shell: powershell
        run: |
          reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f
          git config --system core.longpaths true

      - name: Cache rust
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1
        with:
          workspaces: "C:\\${{ github.event.repository.name }}"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Set default linker
        working-directory: "C:\\${{ github.event.repository.name }}"
        run: rustup default stable-x86_64-pc-windows-msvc

      - name: Install dependencies
        working-directory: "C:\\${{ github.event.repository.name }}"
        run:
          choco install -y protoc openssl sqlite postgresql14

      - name: Set PostgreSQL env variables
        working-directory: "C:\\${{ github.event.repository.name }}"
        shell: powershell
        run: |
          "PQ_LIB_DIR=${env:PROGRAMFILES}\PostgreSQL\14\lib" >> $env:GITHUB_ENV

      - name: Install rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: ${{env.RUST_LATEST_STABLE_VERSION}}

      - name: Build on Windows
        working-directory: "C:\\${{ github.event.repository.name }}"
        run: cargo build --all-features ${{env.CARGO_FLAGS}}
