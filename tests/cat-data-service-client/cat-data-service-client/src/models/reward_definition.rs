/*
 * Catalyst 1.0
 *
 * Revised API expressing all capabilities of the Catalyst 1.0 Backend.  TODO: * Implement Permissionless Auth. * Implement Replacement Functionality for GVC. * Implement drep registration on main-chain, distinct from voter registration. * Implement Voting API abstracting the Jormungandr API from public exposure. * Implement Audit API's (Retrieve voting blockchain records,  registration/voting power audit and private tally audit. * Implement API's needed to support posting Ideas/Proposals etc.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: steven.johnson@iohk.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RewardDefinition {
    #[serde(rename = "currency")]
    pub currency: crate::models::RewardCurrency,
    /// The total value of the reward
    #[serde(rename = "value", deserialize_with = "Option::deserialize")]
    pub value: Option<serde_json::Value>,
}

impl RewardDefinition {
    pub fn new(currency: crate::models::RewardCurrency, value: Option<serde_json::Value>) -> RewardDefinition {
        RewardDefinition {
            currency,
            value,
        }
    }
}


