name: CI-Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'src/**/**.md'
      - 'Makefiles/**'
      - 'nix/**'
      - 'book/**'
  pull_request:
    paths-ignore:
       - '**.md'
       - 'book/**'
       - 'src/**/**.md'
       - 'Makefiles/**'
       - 'nix/**'
       - 'book/**'

env:
  RUST_LATEST_STABLE_VERSION: 1.65
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0

jobs:
  cancel:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  build-tests-artifacts:
    name: Build test artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{env.RUST_LATEST_STABLE_VERSION}}

      - name: Cache rust
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cache1"

      - name: Cache tests artifacts
        id: cache-tests
        uses: actions/cache@v3
        with:
          path: nextest-archive.tar.zst
          #/home/runner/work/catalyst-core-fork/catalyst-core-fork/target/debug/vit-servicing-station-cli*
          #/home/runner/work/catalyst-core-fork/catalyst-core-fork/target/debug/vit-servicing-station-server*
          key: "some-key"

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Build and archive tests
        if: steps.cache-tests.outputs.cache-hit != 'true'
        run: cargo nextest archive --archive-file nextest-archive.tar.zst

  catalyst-core-tests:
    name: Catalyst Core Tests
    runs-on: ubuntu-latest
    needs: build-tests-artifacts
    strategy:
      matrix:
        partition: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{env.RUST_LATEST_STABLE_VERSION}}

      - name: Cache rust
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cache1"

      - name: Cache tests artifacts
        uses: actions/cache@v3
        with:
          path: nextest-archive.tar.zst
          #/home/runner/work/catalyst-core-fork/catalyst-core-fork/target/debug/vit-servicing-station-cli*
          #/home/runner/work/catalyst-core-fork/catalyst-core-fork/target/debug/vit-servicing-station-server*
          key: "some-key"

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - run:
          cargo build -p vit-servicing-station-cli -p vit-servicing-station-server

      - name: Run Catalyst Core tests
        run:
          cargo nextest run -E "not (package(jormungandr-integration-tests) + package(vitup) + package(mainnet-lib) + package(jortestkit) + package(integration-tests) + test(multi_voteplan_ok_private))" --archive-file nextest-archive.tar.zst --extract-to "/home/runner/work/catalyst-core-fork/catalyst-core-fork" --extract-overwrite --partition count:${{ matrix.partition }}/10 --profile ci

  wallet-js-binding:
    name: Wallet JS Binding Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - uses: jetli/wasm-pack-action@v0.3.0
      with:
        version: 'latest'

    - name: Build wasm package
      run: |
        cd src/chain-wallet-libs/bindings/wallet-wasm-js
        wasm-pack build --release --target=nodejs -d pkg

    - name: Build JS package
      run: |
        cd src/chain-wallet-libs/bindings/wallet-wasm-js/js
        rm package.json
        cp package_test.json package.json
        npm install

    - name: Run JS tests
      run: |
        cd src/chain-wallet-libs/bindings/wallet-wasm-js/js-test
        npm install
        npm test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache rust
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "cache1"

      - name: Install deps
        run:
          sudo apt install -y protobuf-compiler libssl-dev libpq-dev libsqlite3-dev pkg-config

      - name: Clippy and fmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{env.RUST_LATEST_STABLE_VERSION}}
          components: rustfmt, clippy

      - run: scripts/check-fmt.sh