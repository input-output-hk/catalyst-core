var searchIndex = JSON.parse('{\
"blockchain":{"doc":"Blockchain management module","t":"NDDDDNEEENNNNNNNNNDEAAMMAAMMMMMMMMAMMMMMMMMMMMMMMMMMEENNNNNNNLLLLLLLLLLLLLLLLLLLLFLLFLFLLLLLLLLLLNDDENLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMLLLLLLLLLLLLLMMMMMDLLLLLLLLLLLLLLLLLLLLDENNLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLLLLLLLLMNENNNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLMLLLMLLLLLLLLLLLLLLLLMMMMMMMM","n":["Added","Blockchain","Checkpoints","Configuration","EpochInfo","EpochInfo","EpochInfoError","Error","Event","HeaderVerification","InvalidBlock0","InvalidBlockDate","InvalidChainLength","Ledger","MissingParent","NotTheParentBlock","PreferCandidate","PreferCurrent","Reference","Selection","block0","blockchain","cache","cache_capacity","checkpoints","epoch_info","epoch_info","epoch_leadership_schedule","epoch_rewards_info","header","heads","heads_capacity","ledger","previous_epoch_state","reference","rewards_info_params","time_frame","tip","source","current","current","current","expected","expected","parent","source","source","epoch_transition","new_branch","new_reference","new_tip","parent","Block0Error","Block0Malformed","CannotParseEntity","Malformed","NoDiscrimination","NoInitialSettings","NoSlotDuration","NoSlotsPerEpoch","NoStartTime","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","initial","into","into","slot_duration","source","start_time","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Added","Blockchain","Configuration","Event","MissingParent","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","branches","cache","cache_capacity","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","heads","heads_capacity","init","init","init","into","into","into","new","put","put_head","rewards_info_params","tip","tip","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","epoch_transition","new_branch","new_reference","new_tip","parent","Checkpoints","as_ref","borrow","borrow_mut","deref","deref","deref_mut","drop","eq","equivalent","fmt","from","init","into","into_iter","iter","new","try_from","try_into","type_id","vzip","EpochInfo","EpochInfoError","HeaderVerification","InvalidBlock0","borrow","borrow","borrow_mut","borrow_mut","chain","check_header","deref","deref","deref_mut","deref_mut","drop","drop","epoch","epoch_leadership_schedule","epoch_leadership_schedule","epoch_rewards_info","epoch_rewards_info","fmt","fmt","from","from","from","from","init","init","into","into","new","slot_of","source","time_frame","time_of","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","source","EpochInfo","Error","InvalidBlockDate","InvalidChainLength","Ledger","NotTheParentBlock","PreferCandidate","PreferCurrent","Reference","Selection","approximate_common_ancestor","block_date","block_parent_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain","chain_epoch_info","chain_length","check_block_date","check_chain_length","check_child","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","elapsed","epoch_info","epoch_info","epoch_transition","fmt","fmt","from","from","from","from","hash","header","header","init","init","init","into","into","into","ledger","ledger","new","new_epoch_info","previous_epoch_state","previous_epoch_state","select","source","time","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","current","current","current","expected","expected","parent","source","source"],"q":[[0,"blockchain"],[38,"blockchain::EpochInfoError"],[39,"blockchain::Error"],[47,"blockchain::Event"],[52,"blockchain::block0"],[97,"blockchain::blockchain"],[154,"blockchain::blockchain::Event"],[159,"blockchain::checkpoints"],[180,"blockchain::epoch_info"],[225,"blockchain::epoch_info::EpochInfoError"],[226,"blockchain::reference"],[301,"blockchain::reference::Error"],[309,"core::fmt"],[310,"core::fmt"],[311,"chain_impl_mockchain::block"],[312,"chain_impl_mockchain::fragment::config"],[313,"core::result"],[314,"core::time"],[315,"core::error"],[316,"core::option"],[317,"std::time"],[318,"alloc::string"],[319,"core::any"],[320,"chain_impl_mockchain::chaintypes"],[321,"alloc::sync"],[322,"lru"],[323,"core::slice::iter"],[324,"chain_impl_mockchain::leadership"],[325,"chain_impl_mockchain::ledger::reward_info"],[326,"chain_impl_mockchain::header::header"],[327,"chain_impl_mockchain::leadership"],[328,"chain_impl_mockchain::date"],[329,"chain_time::timeframe"],[330,"chain_impl_mockchain::chaintypes"]],"d":["","","different checkpoints in time of the blockchain","configuration entries for the blockchain parameters","","","","","","","","","","","","","","","","","","","","","","","the block’s epoch info","the leadership used to validate the current header’s …","If present, this is the rewards info distributed at the …","keeping the block’s header here to save some lookup time …","","","the ledger at the state of the left by applying the …","last <code>Ref</code>. Every time there is a transition this value will …","","","the time frame applicable in the current branch of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","configuration entries for the blockchain parameters","","","","","","","","","get an iterator for all the branches currently being …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","start a blockchain with the given block as starting point","","","","","","","","","","","","","","","","","","","","","","","","different checkpoints in time of the blockchain","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","the leadership used to validate the current header’s …","access the rewards info that were distributed at the end …","If present, this is the rewards info distributed at the …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","get the slot for the given BlockDate","","the time frame applicable in the current branch of the …","get the system time scheduled for the given block date","","","","","","","","","","","","","","","","","","","","","approximate a common ancestor between the given References","retrieve the block date of the <code>Ref</code>","access the reference’s parent hash","","","","","","","chain a new block, expecting the new block to be a child …","","retrieve the chain length, the number of blocks created …","","","","","","","","","","","","","retrieve the number of seconds since this block was …","retrieve the block’s epoch info","the block’s epoch info","once we suppose the end of an epoch as come, we can …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","retrieve the header hash of the <code>Ref</code>","access the <code>Header</code> of the block pointed by this <code>Ref</code>","keeping the block’s header here to save some lookup time …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","the ledger at the state of the left by applying the …","create a new block reference with the given block0","compute a new epoch info from the given Reference for the …","","last <code>Ref</code>. Every time there is a transition this value will …","compare the current Reference with the candidate one","","get the time the block was schedule for","","","","","","","","","","","","","","","","","","","","",""],"i":[23,0,0,0,0,24,0,0,0,33,33,24,24,24,23,24,42,42,0,0,0,0,17,22,0,0,19,29,29,19,17,22,19,19,0,22,29,17,43,44,45,46,44,45,46,47,48,49,49,49,49,50,0,0,3,3,6,6,6,6,6,3,6,3,6,3,6,3,6,3,6,3,3,6,6,3,3,3,6,3,6,0,3,6,0,3,0,3,6,3,6,3,6,3,6,3,6,23,0,0,0,23,17,23,22,17,23,22,17,17,22,22,22,22,17,23,22,17,23,22,17,23,22,22,17,23,22,17,22,17,23,22,17,23,22,17,17,17,22,17,17,22,17,23,22,17,23,22,17,23,22,17,23,22,49,49,49,49,50,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,33,33,29,33,29,33,29,29,29,33,29,33,29,33,29,29,29,29,29,33,33,29,33,33,33,29,33,29,33,29,29,33,29,29,33,29,33,29,33,29,33,29,33,43,24,0,24,24,24,24,42,42,0,0,19,19,19,19,42,24,19,42,24,19,19,19,19,19,19,19,42,24,19,42,24,19,42,24,19,19,19,19,24,24,19,42,24,24,19,19,19,19,42,24,19,42,24,19,19,19,19,19,19,19,24,19,24,19,42,24,19,42,24,19,42,24,19,42,24,44,45,46,44,45,46,47,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[[3,4],5],[[3,4],5],[[6,4],5],[[6,4],5],[6,3],[-1,-1,[]],[7,3],[-1,-1,[]],[[],1],[[],1],[8,[[10,[9,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[8,[[10,[11,3]]]],[3,[[13,[12]]]],[8,[[10,[14,3]]]],[-1,15,[]],[-1,15,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,[[21,[18,[20,[19]]]]]],0,0,[22,22],[[-1,-2],2,[],[]],[[],22],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[[22,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,[20,[19]]],17],[[17,8],[[10,[23,24]]]],[[17,[20,[19]],25,25],23],0,[17,[[20,[19]]]],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[26,[[27,[18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[26],[1,-1,[]],[1,2],[[26,26],25],[[-1,-2],25,[],[]],[[26,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],[26],[26,[[28,[18]]]],[19,26],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,30,[13,[31]]],29],[[29,32],[[10,[2,33]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[29,34],[29,30],0,[29,[[13,[31]]]],0,[[33,4],5],[[33,4],5],[-1,-1,[]],[35,33],[-1,-1,[]],[3,33],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[8,36],[[10,[29,33]]]],[[29,37],38],[33,[[13,[12]]]],0,[[29,37],[[13,[14]]]],[-1,15,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[[20,[19]],[20,[19]]],[[13,[[20,[19]]]]]],[19,37],[19,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[19]],8],[[10,[19,24]]]],[[[20,[19]],8],[[10,[[20,[19]],24]]]],[19,39],[[19,8],[[10,[2,24]]]],[[19,8],[[10,[2,24]]]],[[19,8],[[10,[2,24]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[19,[[10,[11,40]]]],[19,[[20,[29]]]],0,[19,[[10,[19,24]]]],[[24,4],5],[[24,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[33,24],[19,18],[19,32],0,[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,36],0,[8,[[10,[19,24]]]],[[19,41],[[10,[[20,[29]],24]]]],[19,[[13,[[20,[19]]]]]],0,[[[20,[19]],[20,[19]]],42],[24,[[13,[12]]]],[19,14],[-1,15,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0],"c":[],"p":[[15,"usize"],[15,"tuple"],[4,"Block0Error",52],[3,"Formatter",309],[6,"Result",309],[4,"Block0Malformed",52],[4,"Error",310],[3,"Block",311],[3,"ConfigParams",312],[4,"Result",313],[3,"Duration",314],[8,"Error",315],[4,"Option",316],[3,"SystemTime",317],[3,"String",318],[3,"TypeId",319],[3,"Blockchain",97],[6,"HeaderId",320],[3,"Reference",226],[3,"Arc",321],[3,"Iter",322],[3,"Configuration",97],[4,"Event",97],[4,"Error",226],[15,"bool"],[3,"Checkpoints",159],[15,"slice"],[3,"Iter",323],[3,"EpochInfo",180],[3,"Leadership",324],[3,"EpochRewardsInfo",325],[4,"Header",326],[4,"EpochInfoError",180],[15,"u32"],[3,"Error",324],[3,"Ledger",327],[3,"BlockDate",328],[3,"Slot",329],[3,"ChainLength",320],[3,"SystemTimeError",317],[6,"Epoch",328],[4,"Selection",226],[13,"HeaderVerification",225],[13,"NotTheParentBlock",301],[13,"InvalidChainLength",301],[13,"InvalidBlockDate",301],[13,"Ledger",301],[13,"EpochInfo",301],[13,"Added",154],[13,"MissingParent",154]]},\
"cardano_cli_mock":{"doc":"","t":"F","n":["main"],"q":[[0,"cardano_cli_mock"],[1,"eyre"],[2,"core::result"]],"d":[""],"i":[0],"f":[[[],[[3,[1,2]]]]],"c":[],"p":[[15,"tuple"],[3,"Report",1],[4,"Result",2]]},\
"cardano_legacy_address":{"doc":"Cardano Legacy Address generation and parsing","t":"DEDNNDNENMAMAAAMMRRDEDNRNDGNEDRDNMLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMMLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRNENGNFFLLLLLFFLLLLLLLLLLLLAFFRDLLFLLLLLLLLLL","n":["Addr","AddressMatchXPub","Attributes","Base58Error","EncodingError","ExtendedAddr","No","ParseExtendedAddrError","Yes","addr","address","attributes","base58","cbor","crc32","derivation_path","network_magic","ATTRIBUTE_NAME_TAG_DERIVATION","ATTRIBUTE_NAME_TAG_NETWORK_MAGIC","Addr","AddressMatchXPub","Attributes","Base58Error","EXTENDED_ADDR_LEN","EncodingError","ExtendedAddr","HdAddressPayload","No","ParseExtendedAddrError","PubKeyTag","SPENDING_DATA_TAG_PUBKEY","SpendingData","Yes","addr","as_ref","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deconstruct","derivation_path","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash_spending_data","identical_with_pubkey_raw","identical_with_xpub","identical_with_xpub_raw","into","into","into","into","into","into","into","len","network_magic","new","new","new_bootstrap_era","new_simple","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","sha3_then_blake2b224","source","to_address","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ALPHABET","Err","Error","Ok","Result","UnknownSymbol","base_decode","base_encode","borrow","borrow_mut","clone","clone_into","cmp","decode","encode","eq","equivalent","fmt","fmt","from","into","partial_cmp","to_owned","to_string","try_from","try_into","type_id","util","encode_with_crc32_","raw_with_crc32","CRC_TABLE","Crc32","borrow","borrow_mut","crc32","finalize","flush","from","into","new","try_from","try_into","type_id","update","write"],"q":[[0,"cardano_legacy_address"],[17,"cardano_legacy_address::address"],[157,"cardano_legacy_address::base58"],[184,"cardano_legacy_address::cbor"],[185,"cardano_legacy_address::cbor::util"],[187,"cardano_legacy_address::crc32"],[202,"core::cmp"],[203,"cbor_event::de"],[204,"cbor_event::result"],[205,"std::io"],[206,"core::fmt"],[207,"core::fmt"],[208,"core::hash"],[209,"ed25519_bip32::key"],[210,"alloc::vec"],[211,"core::option"],[212,"cbor_event::se"],[213,"std::io"],[214,"alloc::string"],[215,"core::any"],[216,"cbor_event::se"],[217,"std::io::error"],[218,"core::iter::traits::collect"]],"d":["A valid cardano Address that is displayed in base58","","","","","A valid cardano address deconstructed","","","","","Address creation and parsing","","bitcoin’s base58 encoding format","the CBOR util and compatible with the haskell usage…","","","","","","A valid cardano Address that is displayed in base58","","","","","","A valid cardano address deconstructed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","mostly helper of the previous function, so not to have to …","Check if the Addr can be reconstructed with a specific xpub","mostly helper of the previous function, so not to have to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","Contains the success value","","error when a given character is not part of the supported …","","","","","","","","decode from base58 the given input","encode in base58 the given input","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","CBor util and other stuff","","","","structure to compute the CRC32 of chunks of bytes.","","","function is kept for compatibility. however prefer the …","finalize the CRC32, recovering the computed value","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","initialise a new CRC32 state","","","","update the CRC32 with the given bytes.",""],"i":[0,0,0,17,17,0,5,0,5,6,0,6,0,0,0,4,4,0,0,0,0,0,17,0,17,0,0,5,0,0,0,0,5,6,1,6,11,4,1,5,6,17,7,11,4,1,5,6,17,7,38,4,1,5,6,7,4,1,5,6,7,4,1,1,4,11,4,1,6,4,1,5,6,7,4,1,5,6,7,4,1,1,5,6,6,17,17,7,11,4,1,1,5,6,17,7,1,6,1,0,1,1,1,11,4,1,5,6,17,7,38,4,1,6,4,6,4,1,11,4,1,6,7,0,17,6,4,1,5,6,7,1,6,17,11,4,1,1,5,6,6,17,7,11,4,1,5,6,17,7,11,4,1,5,6,17,7,0,39,0,39,0,31,0,0,31,31,31,31,31,0,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,34,34,0,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,4],[1,1],[5,5],[6,6],[7,7],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[4,4],9],[[1,1],9],[1,6],0,[[[10,[-1]]],[[12,[11]]],13],[[[10,[-1]]],[[12,[4]]],13],[[[10,[-1]]],[[12,[1]]],13],[[[10,[-1]]],[[12,[6]]],13],[[4,4],14],[[1,1],14],[[5,5],14],[[6,6],14],[[7,7],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[4,15],16],[[1,15],16],[[1,15],16],[[5,15],16],[[6,15],16],[[6,15],16],[[17,15],16],[[17,15],16],[[7,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[19,[1]]]],[18,[[19,[6]]]],[[1,-1],8,20],[[21,4],[[22,[2]]]],[[1,[22,[2]],[22,[2]]],5],[[1,21],5],[[1,[3,[2]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[23,[2]]],1],[[21,4],6],[[[24,[[23,[2]]]],[24,[25]]],4],[[21,[24,[25]]],6],[[4,4],[[24,[9]]]],[[1,1],[[24,[9]]]],[[11,[26,[-1]]],[[12,[[26,[-1]]]]],27],[[4,[26,[-1]]],[[12,[[26,[-1]]]]],27],[[1,[26,[-1]]],[[12,[[26,[-1]]]]],27],[[6,[26,[-1]]],[[12,[[26,[-1]]]]],27],[[7,[26,[-1]]],[[12,[[26,[-1]]]]],27],[[[3,[2]]],[[22,[2]]]],[17,[[24,[28]]]],[6,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[3,[2]]],[[19,[1]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[3,[2]]],[[19,[6]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,0,0,0,0,0,[[18,[3,[2]]],[[19,[[23,[2]],31]]]],[[18,[3,[2]]],[[23,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],8,[],[]],[[31,31],9],[18,[[19,[[23,[2]],31]]]],[[[3,[2]]],29],[[31,31],14],[[-1,-2],14,[],[]],[[31,15],16],[[31,15],16],[-1,-1,[]],[-1,-2,[],[]],[[31,31],[[24,[9]]]],[-1,-2,[],[]],[-1,29,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,30,[]],0,[[-1,[26,[-2]]],[[12,[8]]],32,[27,33]],[[[10,[-1]]],[[12,[[23,[2]]]]],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[2]]],25],[34,25],[34,[[19,[8,35]]]],[-1,-1,[]],[-1,-2,[],[]],[[],34],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,30,[]],[[34,-1],34,36],[[34,[3,[2]]],[[19,[37,35]]]]],"c":[],"p":[[3,"Addr",17],[15,"u8"],[15,"slice"],[3,"Attributes",17],[4,"AddressMatchXPub",17],[3,"ExtendedAddr",17],[3,"SpendingData",17],[15,"tuple"],[4,"Ordering",202],[3,"Deserializer",203],[3,"PubKeyTag",17],[6,"Result",204],[8,"BufRead",205],[15,"bool"],[3,"Formatter",206],[6,"Result",206],[4,"ParseExtendedAddrError",17],[15,"str"],[4,"Result",207],[8,"Hasher",208],[3,"XPub",209],[15,"array"],[3,"Vec",210],[4,"Option",211],[15,"u32"],[3,"Serializer",212],[8,"Write",205],[8,"Error",213],[3,"String",214],[3,"TypeId",215],[4,"Error",157],[8,"Serialize",212],[8,"Sized",216],[3,"Crc32",187],[3,"Error",217],[8,"IntoIterator",218],[15,"usize"],[6,"HdAddressPayload",17],[6,"Result",157]]},\
"cat_data_service":{"doc":"","t":"AAFAAAAEENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNRREENLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLNEDNFLLLLFLLLLLLMLLLLLLFALLLLFFFLFLLFLLLLLLAALLFFFAFFFDLLLLLLALLLMMAALLLFLAFFFAFFAFFFFAAFFAFFFAFFFFFFDDLLLLFLLLLLLLLMMLLLLLLFLLLLLLFLLMDLLLLLLLLLMMFFMLLLLRDMLLLLLLMLLLLLLLLLLMMMLLLLLLLDLLLLLMLLLLLLLLDALLLLLLLLLLLLLLLLLLLLLLALLLLLLLAAAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLAALAAAAA","n":["cli","logger","main","service","settings","state","types","Cli","Error","EventDb","Run","Service","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Compact","Debug","Error","Full","Info","Json","LOG_FORMAT_DEFAULT","LOG_LEVEL_DEFAULT","LogFormat","LogLevel","Warn","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_ref","init","init","init","init_impl","into","into","to_owned","to_owned","to_possible_value","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","value_variants","value_variants","vzip","vzip","CannotRunService","Error","ErrorMessage","EventDbError","app","borrow","borrow","borrow_mut","borrow_mut","cors_layer","deref","deref","deref_mut","deref_mut","drop","drop","error","fmt","fmt","fmt","from","from","from","handle_result","health","init","init","into","into","metrics_app","run","run_service","serialize","setup_metrics_recorder","source","to_string","track_metrics","try_from","try_from","try_into","try_into","type_id","type_id","v0","v1","vzip","vzip","health","live_exec","ready_exec","fund","v0","fund","fund_exec","LimitOffset","borrow","borrow_mut","deref","deref_mut","deserialize","drop","event","from","init","into","limit","offset","registration","search","try_from","try_into","type_id","v1","vzip","ballots","event","event_exec","events_exec","objective","ballots","ballots_exec","ballots","mocked_voting_status_data","objective","objectives_exec","objectives_voting_statuses_exec","proposal","review_type","ballots","ballots_exec","ballot","proposal","proposal_exec","proposals_exec","review","ballot","ballot_exec","review","reviews_exec","review_type","review_types_exec","DelegationsQuery","VotersQuery","borrow","borrow","borrow_mut","borrow_mut","delegations_exec","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","event_id","event_id","from","from","init","init","into","into","registration","try_from","try_from","try_into","try_into","type_id","type_id","voter_exec","vzip","vzip","with_delegators","SearchParam","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","limit","offset","search","search_exec","total","try_from","try_into","type_id","vzip","ADDRESS_DEFAULT","Settings","address","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","database_url","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","from_ref","group_id","init","into","log_format","log_level","metrics_address","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","State","borrow","borrow_mut","deref","deref_mut","drop","event_db","from","init","into","new","try_from","try_into","type_id","vzip","SerdeType","ballot","borrow","borrow_mut","clone","clone_into","deref","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","event","fmt","from","from","from","from_ref","init","into","objective","proposal","registration","review","search","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_datetime_as_rfc3339","serialize_option_datetime_as_rfc3339","to_owned","try_from","try_into","type_id","vit_ss","voting_status","vzip","challenge","fund","goal","group","vote_plan"],"q":[[0,"cat_data_service"],[7,"cat_data_service::cli"],[52,"cat_data_service::logger"],[101,"cat_data_service::service"],[148,"cat_data_service::service::health"],[151,"cat_data_service::service::v0"],[153,"cat_data_service::service::v0::fund"],[155,"cat_data_service::service::v1"],[175,"cat_data_service::service::v1::event"],[180,"cat_data_service::service::v1::event::ballots"],[182,"cat_data_service::service::v1::event::objective"],[189,"cat_data_service::service::v1::event::objective::ballots"],[191,"cat_data_service::service::v1::event::objective::proposal"],[196,"cat_data_service::service::v1::event::objective::proposal::ballot"],[198,"cat_data_service::service::v1::event::objective::proposal::review"],[200,"cat_data_service::service::v1::event::objective::review_type"],[202,"cat_data_service::service::v1::registration"],[236,"cat_data_service::service::v1::search"],[255,"cat_data_service::settings"],[285,"cat_data_service::state"],[300,"cat_data_service::types"],[443,"cat_data_service::types::vit_ss"],[448,"core::result"],[449,"clap_builder::builder::command"],[450,"core::fmt"],[451,"core::fmt"],[452,"clap_builder::parser::matches::arg_matches"],[453,"clap_builder"],[454,"core::error"],[455,"core::option"],[456,"alloc::string"],[457,"core::any"],[458,"tracing_core::dispatcher"],[459,"tracing_subscriber::registry::sharded"],[460,"tracing_subscriber::fmt::format"],[461,"tracing_subscriber::fmt::format"],[462,"core::marker"],[463,"alloc::sync"],[464,"axum::routing"],[465,"tower_http::cors"],[466,"axum_core::response"],[467,"serde::ser"],[468,"core::net::socket_addr"],[469,"serde::ser"],[470,"http::request"],[471,"axum::middleware::from_fn"],[472,"axum_core::response::into_response"],[473,"event_db::types::vit_ss::fund"],[474,"serde::de"],[475,"event_db::types::event"],[476,"axum::extract::path"],[477,"event_db::types::event"],[478,"event_db::types::event"],[479,"event_db::types::ballot"],[480,"event_db::types::objective"],[481,"event_db::types::voting_status"],[482,"event_db::types::objective"],[483,"event_db::types::proposal"],[484,"event_db::types::review"],[485,"event_db::types::registration"],[486,"axum::json"],[487,"event_db::types::search"],[488,"core::clone"],[489,"event_db::types::search"],[490,"core::fmt"],[491,"event_db::types::event"],[492,"event_db::types::vit_ss::fund"],[493,"event_db::types::ballot"],[494,"event_db::types::proposal"],[495,"chrono::datetime"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Cannot use serde flattening, look this issue …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Server binding address","","","","","","","Url to the postgres event db","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Logging format","Logging level","Server binding address","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,2,6,2,6,6,2,6,2,6,6,6,2,6,2,6,2,6,6,2,2,2,2,2,6,6,6,6,2,6,2,6,2,2,2,6,2,6,2,6,6,6,2,6,19,20,20,19,20,19,0,0,0,0,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,0,19,20,0,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,9,0,0,9,0,9,33,9,33,0,9,33,9,33,9,33,33,9,9,33,9,9,33,0,0,9,33,9,33,0,0,0,33,0,9,9,0,9,33,9,33,9,33,0,0,9,33,0,0,0,0,0,0,0,0,44,44,44,44,44,44,0,44,44,44,44,44,0,0,44,44,44,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,63,65,63,0,65,63,65,63,65,63,65,63,65,63,65,63,65,63,65,63,0,65,63,65,63,65,63,0,65,63,65,0,67,67,67,67,67,67,67,67,67,67,67,0,0,67,67,67,67,67,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,43,43,43,43,0,0,43,0,0,0,0,0],"f":[0,0,[[],[[3,[1,2]]]],0,0,0,0,0,0,0,0,0,[4,4],[4,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,1],[5,1],[6,[[3,[1,2]]]],[[2,7],8],[[2,7],8],[9,2],[-1,-1,[]],[10,2],[-1,-1,[]],[11,[[3,[6,12]]]],[11,[[3,[6,12]]]],[13,14],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[16,[15]]]],[-1,17,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[6,11],[[3,[1,12]]]],[[6,11],[[3,[1,12]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[20,20],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,1],[5,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[19,20],[[3,[1,21]]]],[[],5],[[],5],[[-1,20],[[3,[1,21]]],[[24,[22,23]],25,26]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,[[16,[27]]]],[20,[[16,[27]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[],[[28,[19]]]],[[],[[28,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[30,[29]]],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],32],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,1],[5,1],0,[[9,7],8],[[9,7],8],[[33,7],8],[-1,-1,[]],[10,9],[-1,-1,[]],[[[3,[-1,9]]],34,35],0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[],31],[[36,[16,[36]],[30,[29]]],[[3,[1,9]]]],[[31,36,13],[[3,[1,9]]]],[[33,-1],3,37],[[],38],[9,[[16,[15]]]],[-1,17,[]],[[[39,[-1]],[40,[-1]]],[[0,[41]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],31],[[],[[3,[14,9]]]],[[],[[3,[14,9]]]],0,[[[30,[29]]],31],[[[30,[29]]],31],[[[30,[29]]],[[3,[[43,[42]],9]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[-1,[[3,[44]]],45],[5,1],0,[-1,-1,[]],[[],5],[-1,-2,[],[]],0,0,0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[[[30,[29]]],31],[-1,-2,[],[]],0,[[[30,[29]]],31],[[[47,[[43,[46]]]],[30,[29]]],[[3,[[43,[48]],9]]]],[[[49,[44]],[30,[29]]],[[3,[[51,[[43,[50]]]],9]]]],0,[[[30,[29]]],31],[[[47,[[43,[46]]]],[30,[29]]],[[3,[[51,[[43,[52]]]],9]]]],0,[[],[[1,[14,[16,[17]]]]]],[[[30,[29]]],31],[[[47,[[43,[46]]]],[49,[44]],[30,[29]]],[[3,[[51,[[43,[53]]]],9]]]],[[[47,[[43,[46]]]],[49,[44]],[30,[29]]],[[3,[[51,[[43,[54]]]],9]]]],0,0,[[[30,[29]]],31],[[[47,[[1,[[43,[46]],[43,[55]]]]]],[30,[29]]],[[3,[[51,[[43,[56]]]],9]]]],0,[[[30,[29]]],31],[[[47,[[1,[[43,[46]],[43,[55]],[43,[57]]]]]],[30,[29]]],[[3,[[43,[58]],9]]]],[[[47,[[1,[[43,[46]],[43,[55]]]]]],[49,[44]],[30,[29]]],[[3,[[51,[[43,[59]]]],9]]]],0,[[[30,[29]]],31],[[[47,[[1,[[43,[46]],[43,[55]],[43,[57]]]]]],[30,[29]]],[[3,[[43,[60]],9]]]],[[[30,[29]]],31],[[[47,[[1,[[43,[46]],[43,[55]],[43,[57]]]]]],[49,[44]],[30,[29]]],[[3,[[51,[[43,[61]]]],9]]]],[[[30,[29]]],31],[[[47,[[1,[[43,[46]],[43,[55]]]]]],[49,[44]],[30,[29]]],[[3,[[51,[[43,[62]]]],9]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[17]],[49,[63]],[30,[29]]],[[3,[[43,[64]],9]]]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[3,[65]]],45],[-1,[[3,[63]]],45],[5,1],[5,1],0,0,[-1,-1,[]],[-1,-1,[]],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[29]]],31],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[[47,[17]],[49,[65]],[30,[29]]],[[3,[[43,[66]],9]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[-1,[[3,[67]]],45],[5,1],[-1,-1,[]],[[],5],[-1,-2,[],[]],0,0,[[[30,[29]]],31],[[[49,[67]],[69,[[43,[68]]]],[30,[29]]],[[3,[[43,[70]],9]]]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,[4,4],[4,4],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],1,[],[]],0,[5,-1,[]],[5,-1,[]],[5,1],[-1,-1,[]],[11,[[3,[71,12]]]],[11,[[3,[71,12]]]],[-1,-1,[]],[[],[[16,[72]]]],[[],5],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[[71,11],[[3,[1,12]]]],[[71,11],[[3,[1,12]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,1],0,[-1,-1,[]],[[],5],[-1,-2,[],[]],[[[16,[17]]],[[3,[29,2]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],[[43,[-1]]],73],[[-1,-2],1,[],[]],[[[43,[-1]]],[],[]],[5,-1,[]],[5,-1,[]],[-1,[[3,[[43,[74]]]]],45],[-1,[[3,[[43,[75]]]]],45],[-1,[[3,[[43,[46]]]]],45],[-1,[[3,[[43,[55]]]]],45],[-1,[[3,[[43,[57]]]]],45],[-1,[[3,[[43,[76]]]]],45],[-1,[[3,[[43,[77]]]]],45],[-1,[[3,[[43,[68]]]]],45],[-1,[[3,[[43,[78]]]]],45],[5,1],[[[43,[-1]],[43,[-1]]],14,79],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,[[[43,[-1]],7],8,80],[81,-1,[]],[-1,-1,[]],[-1,[[43,[-1]]],[]],[-1,-1,[]],[[],5],[-1,-2,[],[]],0,0,0,0,0,[[[43,[61]],-1],3,37],[[[43,[82]],-1],3,37],[[[43,[82]],-1],3,37],[[[43,[83]],-1],3,37],[[[43,[46]],-1],3,37],[[[43,[52]],-1],3,37],[[[43,[54]],-1],3,37],[[[43,[84]],-1],3,37],[[[43,[57]],-1],3,37],[[[43,[42]],-1],3,37],[[[43,[85]],-1],3,37],[[[43,[86]],-1],3,37],[[[43,[58]],-1],3,37],[[[43,[87]],-1],3,37],[[[43,[88]],-1],3,37],[[[43,[89]],-1],3,37],[[[43,[90]],-1],3,37],[[[43,[91]],-1],3,37],[[[43,[92]],-1],3,37],[[[43,[93]],-1],3,37],[[[43,[94]],-1],3,37],[[[43,[95]],-1],3,37],[[[43,[60]],-1],3,37],[[[43,[55]],-1],3,37],[[[43,[90]],-1],3,37],[[[43,[96]],-1],3,37],[[[43,[97]],-1],3,37],[[[43,[61]],-1],3,37],[[[43,[66]],-1],3,37],[[[43,[42]],-1],3,37],[[[43,[98]],-1],3,37],[[[43,[89]],-1],3,37],[[[43,[99]],-1],3,37],[[[43,[100]],-1],3,37],[[[43,[83]],-1],3,37],[[[43,[101]],-1],3,37],[[[43,[59]],-1],3,37],[[[43,[102]],-1],3,37],[[[43,[64]],-1],3,37],[[[43,[103]],-1],3,37],[[[43,[104]],-1],3,37],[[[43,[70]],-1],3,37],[[[43,[88]],-1],3,37],[[[43,[105]],-1],3,37],[[[43,[102]],-1],3,37],[[[43,[48]],-1],3,37],[[[43,[46]],-1],3,37],[[[43,[62]],-1],3,37],[[[43,[101]],-1],3,37],[[[43,[56]],-1],3,37],[[[43,[50]],-1],3,37],[[[43,[57]],-1],3,37],[[[43,[70]],-1],3,37],[[[43,[106]],-1],3,37],[[[43,[107]],-1],3,37],[[[43,[55]],-1],3,37],[[[43,[50]],-1],3,37],[[[43,[48]],-1],3,37],[[[43,[58]],-1],3,37],[[[43,[93]],-1],3,37],[[[43,[95]],-1],3,37],[[[43,[66]],-1],3,37],[[[43,[108]],-1],3,37],[[[43,[84]],-1],3,37],[[[43,[109]],-1],3,37],[[[43,[110]],-1],3,37],[[[43,[77]],-1],3,37],[[[43,[106]],-1],3,37],[[[43,[91]],-1],3,37],[[[43,[107]],-1],3,37],[[[43,[59]],-1],3,37],[[[43,[111]],-1],3,37],[[[43,[109]],-1],3,37],[[[43,[53]],-1],3,37],[[[43,[87]],-1],3,37],[[[43,[111]],-1],3,37],[[[43,[64]],-1],3,37],[[[43,[92]],-1],3,37],[[[43,[53]],-1],3,37],[[[43,[77]],-1],3,37],[[[43,[104]],-1],3,37],[[[43,[85]],-1],3,37],[[[43,[56]],-1],3,37],[[[43,[110]],-1],3,37],[[[43,[108]],-1],3,37],[[[43,[96]],-1],3,37],[[[43,[94]],-1],3,37],[[[43,[62]],-1],3,37],[[[43,[60]],-1],3,37],[[[43,[100]],-1],3,37],[[[43,[103]],-1],3,37],[[[43,[99]],-1],3,37],[[[43,[105]],-1],3,37],[[[43,[86]],-1],3,37],[[[43,[52]],-1],3,37],[[[43,[97]],-1],3,37],[[[43,[98]],-1],3,37],[[[113,[112]],-1],3,37],[[[16,[[113,[112]]]],-1],3,37],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,18,[]],0,0,[-1,-2,[],[]],0,0,0,0,0],"c":[],"p":[[15,"tuple"],[4,"Error",7],[4,"Result",448],[3,"Command",449],[15,"usize"],[4,"Cli",7],[3,"Formatter",450],[6,"Result",450],[4,"Error",101],[4,"Error",451],[3,"ArgMatches",452],[6,"Error",453],[15,"str"],[15,"bool"],[8,"Error",454],[4,"Option",455],[3,"String",456],[3,"TypeId",457],[4,"LogFormat",52],[4,"LogLevel",52],[3,"SetGlobalDefaultError",458],[3,"Registry",459],[3,"DefaultFields",460],[8,"FormatEvent",460],[8,"Send",461],[8,"Sync",461],[3,"PossibleValue",462],[15,"slice"],[3,"State",285],[3,"Arc",463],[3,"Router",464],[3,"CorsLayer",465],[3,"ErrorMessage",101],[6,"Response",466],[8,"Serialize",467],[4,"SocketAddr",468],[8,"Serializer",467],[3,"PrometheusHandle",469],[3,"Request",470],[3,"Next",471],[8,"IntoResponse",472],[3,"FundWithNext",473],[3,"SerdeType",300],[3,"LimitOffset",155],[8,"Deserializer",474],[3,"EventId",475],[3,"Path",476],[3,"Event",475],[3,"Query",477],[3,"EventSummary",475],[3,"Vec",478],[3,"ObjectiveBallots",479],[3,"Objective",480],[3,"VotingStatus",481],[3,"ObjectiveId",480],[3,"ProposalBallot",479],[3,"ProposalId",482],[3,"Proposal",482],[3,"ProposalSummary",482],[3,"Ballot",479],[3,"AdvisorReview",483],[3,"ReviewType",483],[3,"DelegationsQuery",202],[3,"Delegator",484],[3,"VotersQuery",202],[3,"Voter",484],[3,"SearchParam",236],[3,"SearchQuery",485],[3,"Json",486],[3,"SearchResult",485],[3,"Settings",255],[3,"Id",487],[8,"Clone",488],[4,"SearchColumn",485],[3,"SearchConstraint",485],[4,"SearchTable",485],[3,"VoterGroupId",484],[3,"SearchOrderBy",485],[8,"PartialEq",489],[8,"Debug",450],[15,"never"],[3,"ProposalDetails",482],[3,"EventGoal",475],[3,"VoterInfo",484],[3,"FundNextInfo",473],[3,"Delegation",484],[3,"Voteplan",490],[3,"VotingPowerSettings",475],[3,"ChallengeHighlights",491],[3,"Fund",473],[3,"BallotType",479],[4,"VotingPowerAlgorithm",475],[3,"ObjectiveDetails",480],[3,"FundStageDates",473],[3,"EventRegistration",475],[3,"Group",492],[3,"ObjectiveChoices",479],[3,"Challenge",491],[3,"Goal",493],[3,"ProposerDetails",482],[3,"GroupVotePlans",479],[3,"RewardDefintion",480],[4,"ValueResults",485],[3,"VotePlan",479],[3,"Rating",483],[3,"EventSchedule",475],[3,"ObjectiveSummary",480],[3,"ObjectiveType",480],[3,"EventDetails",475],[3,"VoterGroup",480],[3,"RewardAddress",484],[3,"Utc",494],[3,"DateTime",495]]},\
"catalyst_toolbox":{"doc":"","t":"AAAAAAAAAAAAAAAAANENRNNDLLLLMMLLLLLLLLMLLLLLFLLLLLLLLMMLLMLLLLLLLLLAGDNDNEGDMMMMLLLLALLLLLLLLMMMMMMLLMMMMMLLLLLLMMMMMLLLLLLMMLLGDGDLMMMMLLLLLLLLLLLLLLLLLLLMMMMMMLLLMMMMMLLLLLLLMMFLLLLLLLLLLLMMLLIDRMMLLFLLLLKLLLLAALMLLLLDLLLLLLLLLMLLMLLLLLRDMLLMLLLLLLLLLLLLLLDEDNNNRNGNGMMLLLLFFFMLLLLLLAFFFLLLLLLLLLMMFFLLLLLLLLAMMMMMMMMMMMLLLLLLLLLLGGMMFFFFFAAADLLLLLLLLLLLLMMMMMMMMMMLLLLCCDCCDDDDDDAAMMLLLLLLLLLLLLLLMAMMCALLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDHDLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLMMMMMMMFLLLLLLLLMLLLLLLLLLLLLMMMMMLLLLMLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLMMMLLLLLLLLLLLLLLLLNEENNNNNNNNNDNENERENNDNNNNNLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLALLLLLLMLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLNNNNNDENNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLENNNNLLFLLLLLLLLLLFLLLLLLLLLLLAADDLLLLMMFLLLLLLMMLLLLLLMMMLLLLLLLLLFMMLLLLLLMMLLNNEDNRDNNNNNRGDNNDDEDINDNNNMMLLLLLLLLLLLLLLLLLLMKLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMFMKLLLLLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMNNENNNNLLLLLLLLLLLLLLLLLAAALLLLLLMMNDELLLLALLLLLLLLLLLLLLLLMLLLLLLLLLLDDEDDRNENNGNLMMMMMLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMADDLLLLLLLLLLFLLLLLLLLLLLLMMLLFMMLLLLLLLLFDDDDEDDNDDMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFRNENNNNRDMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLFFMFMLLLLLLLLLLENNNLLLLLLLLLLLLLLLLFFLLLLLNNNNNDENMMMMAANNENNDNEDNENNDNNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNEDNNNNNNNNENDNNNNNNNDENNDNNMLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMFMLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMFLMLLMMLLMMMFFLLLLLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLMMMMMEGNGDGMLLLLFALLLLALLLMMLLLLLMMLLLLLLLMMMMLMMALMLLLLLLAALLGDGNDCRNGDDEGCGMMMMMMMLLLLLLFFFLLLLLLFLLLMLLLLLAFMLLLLLLLLLMMFAMMMMMMMMMLLLLLLLLLMMLLLMMMMMMDDLMLLLLLLLLLLLLLMLLMLLLLLLMMLLMMLLLLLLLLLGGGMMMMMMFMMENNLLFLLLFLLLLLLLLLLLLLNDNNERNNNEENDDNEMMMMMLLFFFFFMMMMLLLMMFFFLMLMLLAMMMMMMMMMMMFMMFMMMLLLAAMLMGFFFFNDNNENNNEENDNEMMLLMOLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLMMMMMMMMMMMMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMFFGGDMLLFFFLLFLMMLLLLMMLMLLLLRENNNGNFLLFFLLLFMLLLLMLLLLMMFLLLLLNNNNNENNNNNNALLLLALLLLLLLLLLLLLLLLLLLLAALLLLLALEEDNNNNNNAFFAMEDNNNNFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLEDNNLLLLMMLLLLLFLLLLLMLLLLLLLLLLLLFFMMLMLLLLLLLLLENDDLLLLLLLLMMLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLMLLLLLLLLLLLLEDNNNNDLLLLLMMMLLLLLLLALLLMLLMAMMALFMLLLLLDDLLLLLLLLLLMLLLLLLLLLLLLLMMMMLMLLLLLLMLLFDLLLLLMMLLMLLMLMLLLLLFFFFFFFFFENDLMLMLMLLLLLMLLMLLLLLLLLMLLLLLLLLLLLLLLLMLMLMLMLLLMLLLLLLLLAAADNNNNEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMMLLLLLLLMMLLLLLLLLLLLLDLLLLLLLLLLLLLLLMLLLMMLMLLLLLDDDDLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLRFAFAFFFFNNELLLLLLLLLLLLLLFLLLLLLDENNNRNNNNNLLLLLLLLLLLLALLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMDLLLLLLLLLLALLLLGGGGRRDDDDDRMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLL","n":["archive","community_advisors","http","ideascale","kedqr","logs","notifications","proposal_score","recovery","rewards","stats","testing","types","utils","vca_reviews","vote_check","node","Csv","Error","Io","MAIN_TAG","Storage","UnhandledInput","Vote","borrow","borrow","borrow_mut","borrow_mut","caster","choice","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fragment_id","from","from","from","from","from","generate_archive_files","header","in_current_span","init","init","into","into","into_request","into_request","proposal","raw_fragment","serialize","source","time","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","models","AdvisorReviewId","AdvisorReviewRow","Approved","ApprovedProposalRow","NotApproved","ProposalStatus","VeteranAdvisorId","VeteranRankingRow","assessor","assessor","auditability_note","auditability_rating","borrow","borrow","borrow_mut","borrow_mut","de","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","excellent","excellent","feasibility_note","feasibility_rating","filtered_out","filtered_out","from","from","good","good","idea_url","impact_alignment_note","impact_alignment_rating","init","init","into","into","into_request","into_request","proposal_id","proposal_id","proposal_id","requested_dollars","status","try_from","try_from","try_into","try_into","type_id","type_id","vca","vec","vzip","vzip","AdvisorReviewId","AdvisorReviewRow","VeteranAdvisorId","VeteranRankingRow","as_advisor_review","assessor","assessor","auditability_note","auditability_rating","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","excellent","excellent","feasibility_note","feasibility_rating","filtered_out","filtered_out","fmt","from","from","good","good","idea_url","impact_alignment_note","impact_alignment_rating","init","init","into","into","into_request","into_request","new","proposal_id","proposal_id","ranking_mux","review_id","score","score","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vca","vec","vzip","vzip","HttpClient","HttpResponse","RATE_LIMIT_ENV_VAR","_marker","body","borrow","borrow_mut","default_http_client","deref","deref_mut","drop","from","get","init","into","into_request","json","rate_limit","reqwest","status","status","try_from","try_into","type_id","vzip","RateLimitClient","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get","init","inner","into","into_request","limiter","new","try_from","try_into","type_id","vzip","BASE_IDEASCALE_URL","ReqwestClient","base_url","borrow","borrow_mut","client","deref","deref_mut","drop","fmt","from","get","init","into","into_request","new","try_from","try_into","type_id","vzip","CustomFieldTags","Error","IdeaScaleData","InvalidToken","Join","Other","PROCESS_IMPROVEMENTS_ID","Regex","Scores","Serde","Sponsors","base","base","borrow","borrow","borrow_mut","borrow_mut","build_challenges","build_fund","build_proposals","challenges","deref","deref","deref_mut","deref_mut","drop","drop","fetch","fetch_all","filter_proposal_by_stage_type","filter_stages","fmt","fmt","fmt","from","from","from","from","from","from","fund","funnels","get_from_extra_fields","get_from_extra_fields_options","header","in_current_span","init","init","into","into","into_request","into_request","models","proposal_brief","proposal_funds","proposal_goal","proposal_importance","proposal_metrics","proposal_public_key","proposal_relevant_experience","proposal_solution","proposal_why","proposals","proposer_url","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Scores","Sponsors","base","base","get_funds_data","get_funnels_data_for_fund","get_proposals_data","get_stages","is_token_valid","custom_fields","de","se","CustomFieldTags","borrow","borrow_mut","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","proposal_brief","proposal_funds","proposal_goal","proposal_importance","proposal_metrics","proposal_public_key","proposal_relevant_experience","proposal_solution","proposal_why","proposer_url","try_from","try_into","type_id","vzip","AdaRewards","Approval","Challenge","ChallengeTitle","CleanString","Fund","Funnel","Proposal","ProposalCustomFieldsByKey","Proposer","Stage","ada_rewards","approval","approved","assessment_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_id","challenge_title","challenge_url","challenges","clean_str","clean_string","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contact","custom_fields","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","fund_id","funnel_id","funnel_id","id","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_community","label","name","name","proposal_category","proposal_files_url","proposal_id","proposal_summary","proposal_title","proposal_url","proposer","rewards","stage_id","stage_type","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AdaRewards","REGEX","V","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","expecting","fmt","fmt","fmt","from","from","from","header","init","init","into","into","into_request","into_request","partial_cmp","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","Approval","Approved","NotApproved","V","as_bool","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","expecting","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","ChallengeTitle","V","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","expecting","fmt","fmt","from","from","init","init","into","into","into_request","into_request","into_resettable","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","CleanString","REGEX","V","as_ref","borrow","borrow","borrow_mut","borrow_mut","clean_str","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","expecting","fmt","fmt","from","from","from","from","init","init","into","into","into_request","into_request","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","Challenge","Fund","Highlight","Proposal","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_type","challenge_type","challenge_url","default_vote_options","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","goal","highlight","id","id","init","init","init","init","internal_id","into","into","into","into","into_request","into_request","into_request","into_request","proposal_brief","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","rewards_info","rewards_total","serialize","serialize","serialize","serialize","sponsor","threshold","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BadPin","BadPinError","Error","FromFileName","Global","HexDecode","HexDecodeError","Image","InvalidDigit","InvalidLength","Io","Io","KeyQrCode","KeyQrCode","KeyQrCodeError","KeyQrCodeHash","KeyQrCodePayloadError","PIN_LENGTH","PinReadMode","QrCodeHashError","QrDecodeError","QrPin","SecretKey","SecretKey","SymmetricCipher","SymmetricCipher","UnableToDetectFileName","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","generate","header","header","img","in_current_span","in_current_span","init","init","init","init","inner","into","into","into","into","into_qr_pin","into_request","into_request","into_request","into_request","password","payload","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DecodeError","ExtractError","HexDecodeError","Image","Io","KeyQrCode","KeyQrCodeError","NonUtf8Payload","QrCodeHashError","QrDecodeError","QrDecodeError","SecretKey","SymmetricCipher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","generate","header","header","header","in_current_span","in_current_span","init","init","init","inner","into","into","into","into_request","into_request","into_request","source","source","to_img","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_svg","Error","HexDecode","Io","SecretKey","SymmetricCipher","borrow","borrow_mut","decode","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","generate","header","in_current_span","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","compare","sentry","LogCmpFields","LogCmpStats","borrow","borrow","borrow_mut","borrow_mut","chain_proposal_index","choice","compare_logs","deref","deref","deref_mut","deref_mut","drop","drop","duplicated_fragment_logs","duplicated_sentry_logs","eq","equivalent","equivalent","equivalent","equivalent","fmt","fragment_id","fragment_ids_differ","fragment_logs_size","from","from","from","init","init","into","into","into_request","into_request","persistent_fragment_log_to_log_cmp_fields","public_key","sentry_logs_size","try_from","try_from","try_into","try_into","type_id","type_id","unhandled_fragment_logs","voteplan_id","vzip","vzip","Array","Bool","Error","LazySentryLogs","LogParseError","MALFORMED_QR_MESSAGE","MalformedQr","MalformedQr","NotVoteCastTransaction","Null","Number","Object","REGISTERED_MESSAGE","RawLog","RegexMatch","RegexMatch","RequestError","SentryFragmentLog","SentryLogClient","SentryLogsStatChecker","SentryLogsStatsExecutor","Stat","String","SuccessfulScan","SuccessfulScans","UrlParseError","ValidationError","api_url","auth_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","check_raw_log","check_raw_log","check_raw_log","check_raw_log","check_raw_log","check_raw_log","choice","chunk_size","client","client","clone","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fragment_id","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","get_json_logs","get_json_logs_chunks","get_raw_logs","header","header","in_current_span","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","matches","new","new","new","new","new","new","process_raw_logs","proposal_index","public_key","raw_log_message_starts_with","re","report","report","report","report","report","report","source","spending_counter","to_owned","to_string","to_string","total","total","total_checked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voteplan_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","fragment_id","BadDataSent","CreateMessageError","Error","FileError","RequestError","SerdeError","UnsuccessfulRequest","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","header","in_current_span","init","into","into_request","requests","responses","send","source","to_string","try_from","try_into","type_id","vzip","request","response","CreateMessageRequest","Request","RequestData","borrow","borrow","borrow_mut","borrow_mut","create_message","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","from","from","init","init","into","into","into_request","into_request","new","request","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ContentSettings","ContentSettingsBuilder","ContentType","CreateMessage","CreateMessageBuilder","DATETIME_FMT","EmptyContentSettingsError","Error","MissingFieldOnBuilderError","MultiLanguage","MultiLanguageContent","Plain","add_content_settings","application","application","auth","auth","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","campaign","campaign","content","content","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","filter","filter","fmt","fmt","from","from","from","from","from","from","header","ignore_user_timezones","ignore_user_timezones","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","new","new","notifications","notifications","send_date","send_date","serialize","serialize","serialize","timezone","timezone","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_application","with_auth","with_campaign","with_content","with_filter","with_ignore_user_timezones","with_multi_content","with_plain_content","with_send_date","with_timezone","field_name","object_name","create_message","CreateMessageResponse","InnerResponse","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_status_code","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","messages","response","serialize","serialize","serialize_status_code","status_code","status_message","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","send_create_message","AlignmentReviews","AlignmentScore","AuditabilityReviews","AuditabilityScore","Error","FeasibilityReviews","FeasibilityScore","InvalidWeights","ProposalId","Review","allocated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_score","cmp","compare","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_hash","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","load","partial_cmp","rating","review_weight","store","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weighted_avarage_score","ALLOCATED_TYPE","Csv","Error","IO","InvalidProposalData","InvalidReviewType","Json","NOT_ALLOCATED_TYPE","ReviewsRow","alignment_rating","auditability_rating","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","feasibility_rating","fmt","fmt","fmt","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","load_proposals_from_json","load_reviews_from_csv","proposal_id","retrieve_proposal_id","review_type","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","IO","InvalidProposalData","Json","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","header","in_current_span","init","into","into_request","source","store_proposals_into_file","store_score_into_proposal","to_string","try_from","try_into","type_id","vzip","Io","OutputFile","OutputFormat","PersistenLogsLoading","Recovery","Replay","ReplayError","Serialization","block0","logs_path","output","output_format","replay","tally","CannotOpen","CustomFormattingFailed","Error","Io","JsonFormattingFailed","OutputFile","OutputFile","OutputFileError","OutputFormat","OutputFormat","OutputFormatError","PersistenLogsLoading","Recovery","Replay","Serialization","YamlFormattingFailed","augment_args","augment_args","augment_args_for_update","augment_args_for_update","block0","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","exec","extension_prefix","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_json","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","header","header","header","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","logs_path","new","open","output","output","output_format","source","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","cause","path","AccountNotFound","Block0ConfigurationError","DeserializeError","DuplicatedFragment","Error","FragmentReplayer","InvalidTransactionSignature","InvalidUtxoInputs","InvalidUtxoWitnesses","InvalidVoteCast","LedgerError","NonVotingAccount","NotAVotingFragment","NotAVotingFragment","ReplayError","ReplayError","ReplayedFragment","TallyPeriodError","TransactionBeforeStart","TransactionValidForTooLong","TxBuilderError","UnbalancedTransaction","UnsupportedMultipleOutputs","UnsupportedPrivateVotes","ValidatedFragment","ValidationError","ValidationError","ValueError","VoteFragmentFilter","VotingPeriodError","WalletError","block0","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","committee_id_to_address","confirm_fragment","deconstruct_account_transaction","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","era","fees","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragment_log_timestamp_to_blockdate","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_block0","header","header","header","in_current_span","in_current_span","in_current_span","increment_ledger_time_up_to","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","next","non_voting_wallets","original","pending_requests","progress_with","range_check","recorded_date","recover_ledger_from_logs","replay","replay_protection","replay_tx","replay_votecast","replayed","settings","source","source","spending_counter","spending_counters","timeframe","timeframe_from_block0_start_and_slot_duration","timestamp_to_system_time","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_vote_cast","validate_tx","verify_original_tx","voteplans_from_block0","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallets","id","id","id","range","Error","Funds","InvalidHash","Rewards","Threshold","VoteCount","base","borrow","borrow","borrow_mut","borrow_mut","chain_proposal_id_bytes","community_advisors","deref","deref","deref_mut","deref_mut","dreps","drop","drop","filter","flags","flags","fmt","fmt","from","from","header","hi","hi","in_current_span","init","init","into","into","into_request","into_request","lo","lo","mid","mid","new","per_challenge","proposals_per_challenge","proposers","to_string","total","try_from","try_from","try_into","try_into","type_id","type_id","veterans","voters","vzip","vzip","ApprovedProposals","CaRewards","CommunityAdvisor","Fund7","FundSetting","Funds","LEGACY_MAX_WINNING_TICKETS","Legacy","ProposalId","ProposalRewardSlots","ProposalRewards","ProposalTickets","ProposalsReviews","Rewards","Seed","_marker","_marker","alloc","alloc","base_ticket_reward","bonus_ratio","bonus_rewards","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_ca_rewards","calculate_ca_rewards_for_proposal","calculate_rewards_per_proposal","deref","deref","deref","deref_mut","deref_mut","deref_mut","double_lottery","drop","drop","drop","excellent_slots","fmt","fmt","from","from","from","funding","get_tickets_per_proposal","good_slots","init","init","init","into","into","into","into_request","into_request","into_request","length","length","load_tickets_from_reviews","lottery","max_excellent_reviews","max_good_reviews","per_ticket_reward","proposal_ratio","rewards","root","root","tickets","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vec","vec","vzip","vzip","vzip","eligible_assessors","excellent_tkts","excellent_winning_tkts","good_tkts","good_winning_tkts","winning_tkts","FundSetting","ProposalRewardSlots","bonus_funds","bonus_ratio","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","excellent_slots","from","from","good_slots","init","init","into","into","into_request","into_request","max_excellent_reviews","max_good_reviews","max_winning_tickets","proposal_funds","proposal_ratio","total","total_funds","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CasWinnings","TicketsDistribution","TotalTickets","_marker","_marker","alloc","alloc","length","length","lottery_distribution","root","root","Error","MultipleEntries","Overflow","borrow","borrow_mut","calc_dreps_rewards","deref","deref_mut","drop","filter_requirements","fmt","fmt","from","header","in_current_span","init","into","into_request","to_string","try_from","try_into","type_id","vzip","ApprovalThreshold","Calculation","Csv","Funded","FundedStatus","INVALID_CHAIN_ID_UTF8_MSG","Json","No","NotFunded","NotFundedReason","OutputFormat","OverBudget","ProposerRewards","ProposerRewardsInputs","Yes","YesNo","active_voteplans","approval_threshold","approval_threshold","block0","block0_config","borrow","borrow_mut","build_path_for_challenge","calculate_approval_threshold","calculate_results","calculate_total_stake_from_block0","calculate_vote_difference_and_threshold_success","challenges","challenges","committee_keys","committee_keys","deref","deref_mut","drop","excluded_proposals","excluded_proposals","extract_yes_no_votes","filter_data_by_challenge","filter_excluded_proposals","from","fund_depletion","init","internal_id","into","into_request","io","link_to_ideascale","meets_approval_threshold","no","not_funded_reason","output","output_format","overall_score","proposal","proposal_id","proposals","proposals","proposer_rewards","requested_dollars","result","sanity_check_data","status","total_stake_threshold","total_stake_threshold","try_from","try_into","type_id","types","util","voteplans","vzip","yes","CleanedVitSSData","vecs_to_maps","write_csv","write_json","write_results","ApprovalThreshold","Calculation","Csv","Funded","FundedStatus","Json","No","NotFunded","NotFundedReason","OutputFormat","OverBudget","ProposerRewards","Yes","YesNo","active_voteplans","approval_threshold","augment_args","augment_args_for_update","block0","bool_enum","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenges","clone","clone_into","command","command_for_update","committee_keys","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","excluded_proposals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","fund_depletion","group_id","init","init","init","init","init","init","internal_id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","link_to_ideascale","meets_approval_threshold","no","not_funded_reason","output","output_format","overall_score","proposal","proposal_id","proposals","requested_dollars","result","serialize","serialize","serialize","serialize","status","to_owned","total_stake_threshold","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","yes","build_path_for_challenge","sanitize_name","EligibilityThresholds","VcaRewards","VeteranAdvisorIncentive","base","borrow","borrow_mut","calc_final_eligible_rankings","calc_final_ranking_per_review","calculate_veteran_advisors_incentives","deref","deref_mut","disagreement_modifier","drop","end","exhausted","from","init","into","into_request","reputation","rewards","serialize","start","try_from","try_into","type_id","vzip","ADA_TO_LOVELACE_FACTOR","Error","InvalidHash","MultipleEntries","Overflow","Rewards","UnknownVoterGroup","account_hex_to_address","borrow","borrow_mut","calc_voter_rewards","calculate_reward","deref","deref_mut","drop","filter_active_addresses","flags","fmt","fmt","from","header","hi","in_current_span","init","into","into_request","lo","mid","rewards_to_mainnet_addresses","to_string","try_from","try_into","type_id","vzip","ArchiveCalculator","ArchiveReader","Bech32","Block0Parse","Csv","Error","GetBlock0","Io","Live","Read","Reqwest","Serde","archive","borrow","borrow_mut","deref","deref_mut","distribution","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","into","into_request","live","snapshot","source","to_string","try_from","try_into","type_id","voters","vzip","ArchiveCalculatorError","ArchiveReaderError","ArchiveStats","BlockDateParse","Csv","Csv","EmptyResult","General","General","calculator","load_from_csv","load_from_folder","loader","records","ArchiveCalculatorError","ArchiveStats","BlockDateParse","Csv","EmptyResult","General","are_equal_or_adjacent","borrow","borrow","borrow_mut","borrow_mut","calculate_distribution","deref","deref","deref_mut","deref_mut","distinct_casters","drop","drop","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","max_batch_size_per_caster","number_of_tx_per_slot","number_of_votes_per_caster","records","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArchiveReaderError","ArchiverRecord","Csv","General","borrow","borrow","borrow_mut","borrow_mut","caster","choice","deref","deref","deref_mut","deref_mut","deserialize","deserialize_block_date_from_float","drop","drop","fmt","fmt","fmt","fragment_id","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","load_from_csv","load_from_folder","proposal","raw_fragment","source","time","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","InvalidThreshold","Record","Stats","add","add_with_weight","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","content","count","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","format_big_number","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","levels","new","new_with_levels","print_ada_per_level","print_count_per_level","to_string","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Error","Harvester","Io","Reqwest","Rest","Serde","Settings","borrow","borrow_mut","deref","deref_mut","drop","duration","endpoint","endpoint","fmt","fmt","from","from","from","from","from","harvester","header","in_current_span","init","interval","into","into_request","logger","monitor","progress","rest","settings","source","start","timeout","to_string","try_from","try_into","type_id","vzip","Harvester","Snapshot","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","endpoint","entry","fragment_logs","from","from","harvest","header","init","init","into","into","into_request","into_request","new","pending","rest","timeout","timestamp","to_console_output","total_tx","try_from","try_from","try_into","try_into","type_id","type_id","votes_count","vzip","vzip","start","Settings","borrow","borrow_mut","deref","deref_mut","drop","duration","endpoint","from","init","interval","into","into_request","logger","monitor","progress","progress_bar_mode","try_from","try_into","type_id","vzip","read_initials","read_initials_from_file","addr_to_id","blacklist_addresses","calculate_active_wallet_distribution","calculate_wallet_distribution","calculate_wallet_distribution_from_initials","calculate_wallet_distribution_from_initials_utxo","vote_counts_as_utxo","Error","Io","ProposerRewardsCommand","active_voteplan_path","active_voteplan_path","approval_threshold","approval_threshold","block0_path","block0_path","borrow","borrow","borrow_mut","borrow_mut","challenges_path","challenges_path","cmd","committee_keys_path","committee_keys_path","default","deref","deref","deref_mut","deref_mut","drop","drop","excluded_proposals_path","excluded_proposals_path","fmt","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","output_file","output_file","output_format","output_format","proposals_path","proposals_path","python_exec","python_exec","source","to_string","total_stake_threshold","total_stake_threshold","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","advisor_review","challenge","proposal","AdvisorReview","Excellent","FilteredOut","Good","NotReviewedByVCA","ReviewRanking","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","feasibility_note","feasibility_rating_given","fmt","fmt","from","from","get_hash","hash","id","impact_alignment_note","impact_alignment_rating_given","init","init","into","into","into_request","into_request","is_positive","proposal_id","ranking","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Challenge","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","id","init","into","into_request","proposers_rewards","rewards_total","serialize","title","to_owned","try_from","try_into","type_id","vzip","FullProposalInfo","Proposal","ProposalVotePlanCommon","VoteOptions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_id","chain_proposal_index","chain_vote_options","chain_voteplan_id","challenge_id","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","group_id","init","init","init","init","internal_id","into","into","into","into","into_request","into_request","into_request","into_request","proposal","proposal_funds","proposal_id","proposal_impact_score","proposal_title","proposal_url","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voteplan","vzip","vzip","vzip","vzip","DEFAULT_DECIMAL_PRECISION","assert_are_close","csv","json_from_file","serde","dump_data_to_csv","dump_to_csv_or_print","load_data_from_csv","deserialize_truthy_falsy","CouldNotReadCsv","CouldntParseTag","Error","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","header","in_current_span","init","into","into_request","read_vca_reviews_aggregated_file","source","to_string","try_from","try_into","type_id","vzip","CheckNode","Error","ErrorInLogs","Explorer","Io","JORMUNGANDR_APP","Json","NodeStartup","Rest","ResultsDoNotMatch","TransactionNotOnChain","active_vote_plans","borrow","borrow","borrow_mut","borrow_mut","check_transactions_on_chain","deref","deref","deref_mut","deref_mut","drop","drop","explorer","fmt","fmt","from","from","from","from","from","from","from","from","header","in_current_span","init","init","inner","into","into","into_request","into_request","source","spawn","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","actual","expected","TransactionById","borrow","borrow_mut","build_query","deref","deref_mut","drop","from","init","into","into_request","transaction_by_id","try_from","try_into","type_id","vzip","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","TransactionByIdTransaction","TransactionByIdTransactionBlocks","TransactionByIdTransactionBlocksBranches","Variables","__QUERY_WORKAROUND","blocks","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","id","id","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","serialize","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vec","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"catalyst_toolbox"],[16,"catalyst_toolbox::archive"],[17,"catalyst_toolbox::archive::node"],[67,"catalyst_toolbox::community_advisors"],[68,"catalyst_toolbox::community_advisors::models"],[127,"catalyst_toolbox::community_advisors::models::de"],[194,"catalyst_toolbox::http"],[219,"catalyst_toolbox::http::rate_limit"],[238,"catalyst_toolbox::http::reqwest"],[258,"catalyst_toolbox::ideascale"],[332,"catalyst_toolbox::ideascale::fetch"],[341,"catalyst_toolbox::ideascale::models"],[344,"catalyst_toolbox::ideascale::models::custom_fields"],[371,"catalyst_toolbox::ideascale::models::de"],[545,"catalyst_toolbox::ideascale::models::de::ada_rewards"],[594,"catalyst_toolbox::ideascale::models::de::approval"],[639,"catalyst_toolbox::ideascale::models::de::challenge_title"],[683,"catalyst_toolbox::ideascale::models::de::clean_string"],[730,"catalyst_toolbox::ideascale::models::se"],[830,"catalyst_toolbox::kedqr"],[945,"catalyst_toolbox::kedqr::img"],[1026,"catalyst_toolbox::kedqr::payload"],[1056,"catalyst_toolbox::logs"],[1058,"catalyst_toolbox::logs::compare"],[1106,"catalyst_toolbox::logs::sentry"],[1312,"catalyst_toolbox::logs::sentry::Error"],[1313,"catalyst_toolbox::notifications"],[1346,"catalyst_toolbox::notifications::Error"],[1348,"catalyst_toolbox::notifications::requests"],[1383,"catalyst_toolbox::notifications::requests::create_message"],[1520,"catalyst_toolbox::notifications::requests::create_message::Error"],[1522,"catalyst_toolbox::notifications::responses"],[1523,"catalyst_toolbox::notifications::responses::create_message"],[1563,"catalyst_toolbox::notifications::send"],[1564,"catalyst_toolbox::proposal_score"],[1718,"catalyst_toolbox::proposal_score::load"],[1772,"catalyst_toolbox::proposal_score::store"],[1799,"catalyst_toolbox::recovery"],[1813,"catalyst_toolbox::recovery::replay"],[1965,"catalyst_toolbox::recovery::replay::OutputFileError"],[1967,"catalyst_toolbox::recovery::tally"],[2152,"catalyst_toolbox::recovery::tally::ReplayError"],[2153,"catalyst_toolbox::recovery::tally::ValidationError"],[2156,"catalyst_toolbox::rewards"],[2213,"catalyst_toolbox::rewards::community_advisors"],[2299,"catalyst_toolbox::rewards::community_advisors::ProposalTickets"],[2305,"catalyst_toolbox::rewards::community_advisors::funding"],[2347,"catalyst_toolbox::rewards::community_advisors::lottery"],[2359,"catalyst_toolbox::rewards::dreps"],[2382,"catalyst_toolbox::rewards::proposers"],[2455,"catalyst_toolbox::rewards::proposers::io"],[2460,"catalyst_toolbox::rewards::proposers::types"],[2604,"catalyst_toolbox::rewards::proposers::util"],[2606,"catalyst_toolbox::rewards::veterans"],[2633,"catalyst_toolbox::rewards::voters"],[2667,"catalyst_toolbox::stats"],[2714,"catalyst_toolbox::stats::archive"],[2728,"catalyst_toolbox::stats::archive::calculator"],[2777,"catalyst_toolbox::stats::archive::loader"],[2826,"catalyst_toolbox::stats::distribution"],[2886,"catalyst_toolbox::stats::live"],[2928,"catalyst_toolbox::stats::live::harvester"],[2969,"catalyst_toolbox::stats::live::monitor"],[2970,"catalyst_toolbox::stats::live::settings"],[2991,"catalyst_toolbox::stats::snapshot"],[2993,"catalyst_toolbox::stats::voters"],[3000,"catalyst_toolbox::testing"],[3061,"catalyst_toolbox::types"],[3064,"catalyst_toolbox::types::advisor_review"],[3131,"catalyst_toolbox::types::challenge"],[3160,"catalyst_toolbox::types::proposal"],[3275,"catalyst_toolbox::utils"],[3280,"catalyst_toolbox::utils::csv"],[3283,"catalyst_toolbox::utils::serde"],[3284,"catalyst_toolbox::vca_reviews"],[3308,"catalyst_toolbox::vote_check"],[3362,"catalyst_toolbox::vote_check::Error"],[3364,"catalyst_toolbox::vote_check::explorer"],[3380,"catalyst_toolbox::vote_check::explorer::transaction_by_id"],[3473,"core::fmt"],[3474,"core::fmt"],[3475,"chain_storage::error"],[3476,"csv::error"],[3477,"std::path"],[3478,"core::result"],[3479,"color_eyre::section"],[3480,"core::fmt"],[3481,"core::marker"],[3482,"serde::ser"],[3483,"core::error"],[3484,"core::option"],[3485,"alloc::string"],[3486,"core::any"],[3487,"serde::de"],[3488,"eyre"],[3489,"serde::de"],[3490,"core::fmt"],[3491,"alloc::vec"],[3492,"std::collections::hash::set"],[3493,"regex::regex::string"],[3494,"serde_json::error"],[3495,"tokio::runtime::task::error"],[3496,"regex::error"],[3497,"serde_json::value"],[3498,"core::cmp"],[3499,"core::fmt"],[3500,"chain_crypto::algorithms::ed25519_extended"],[3501,"chain_crypto::key"],[3502,"core::convert"],[3503,"image::dynimage"],[3504,"symmetric_cipher"],[3505,"hex::error"],[3506,"chain_crypto::key"],[3507,"quircs::error"],[3508,"quircs::error"],[3509,"image::buffer_"],[3510,"core::convert"],[3511,"reqwest::error"],[3512,"url::parser"],[3513,"url"],[3514,"core::iter::traits::iterator"],[3515,"time::offset_date_time"],[3516,"core::hash"],[3517,"core::marker"],[3518,"std::path"],[3519,"serde_yaml::error"],[3520,"jcli_lib::jcli_lib::utils::output_format"],[3521,"clap_builder::error::format"],[3522,"clap_builder::error"],[3523,"clap_builder::util::id"],[3524,"chain_impl_mockchain::block"],[3525,"std::io"],[3526,"jormungandr_lib::interfaces::committee"],[3527,"jormungandr_lib::interfaces::address"],[3528,"chain_impl_mockchain::fragment"],[3529,"chain_impl_mockchain::transaction::transaction"],[3530,"chain_impl_mockchain::account"],[3531,"chain_impl_mockchain::account"],[3532,"jormungandr_lib::time"],[3533,"chain_time::timeframe"],[3534,"chain_time::era"],[3535,"chain_impl_mockchain::date"],[3536,"jormungandr_lib::interfaces::block0_configuration"],[3537,"wallet::account"],[3538,"chain_impl_mockchain::ledger::ledger"],[3539,"chain_impl_mockchain::value"],[3540,"jormungandr_lib::interfaces::fragment_log_persistent"],[3541,"chain_impl_mockchain::transaction::element"],[3542,"chain_impl_mockchain::ledger::ledger"],[3543,"indicatif::progress"],[3544,"indicatif::iter"],[3545,"chain_impl_mockchain::transaction::payload"],[3546,"jormungandr_lib::interfaces::block0_configuration::slots_duration"],[3547,"std::time"],[3548,"chain_impl_mockchain::fragment"],[3549,"chain_impl_mockchain::chaintypes"],[3550,"chain_impl_mockchain::transaction::element"],[3551,"chain_impl_mockchain::certificate::vote_plan"],[3552,"alloc::collections::btree::map"],[3553,"rand::rng"],[3554,"snapshot_lib"],[3555,"snapshot_lib::voter_hir"],[3556,"rust_decimal::decimal"],[3557,"jormungandr_lib::crypto::account"],[3558,"jormungandr_lib::interfaces::vote"],[3559,"jormungandr_lib::interfaces::block0_configuration"],[3560,"clap_builder"],[3561,"alloc::borrow"],[3562,"core::ops::function"],[3563,"core::borrow"],[3564,"chain_addr"],[3565,"snapshot_lib::registration"],[3566,"bech32"],[3567,"jormungandr_automation::testing::block0"],[3568,"chain_ser::deser"],[3569,"jormungandr_lib::interfaces::blockdate"],[3570,"alloc::collections::btree::set"],[3571,"chain_impl_mockchain::date"],[3572,"jormungandr_lib::interfaces::fragment_log"],[3573,"core::time"],[3574,"jortestkit::load::config"],[3575,"jortestkit::console::progress_bar"],[3576,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[3577,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[3578,"std::process"],[3579,"vit_servicing_station_lib::db::models::proposals"],[3580,"serde::de"],[3581,"jormungandr_automation::jormungandr::explorer"],[3582,"jormungandr_automation::jormungandr"],[3583,"graphql_client"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","(Proposal Id, Assessor Id), an assessor cannot assess the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","(Proposal Id, Assessor Id), an assessor cannot assess the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Types which can make HTTP requests","A value returned from a HTTP method","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","we test token by running lightweight query and observe …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A newtype wrapper around <code>String</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Represents a JSON array.","Represents a JSON boolean.","","","","","","","","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON object.","","","","","","","","","","","Represents a JSON string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pushwoosh application code","","API access token from Pushwoosh Control Panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Push notifications properties","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weighted average score calculation","","","","","","","","","Represents a cvs’s row, as an example of csv file in …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Recover the tally from fragment log files and the initial …","","","","Path to the folder containing the log files used for the …","","","","","","","","","","","","","","","","","","Recover the tally from fragment log files and the initial …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a prefix to the current path extension. For example, …","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Path to the folder containing the log files used for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check that the transaction input/outputs/witnesses is …","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a slice of bytes that represent a valid …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","returns (yes, no)","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Method return max batch size calculated as biggest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Wrapper over proposers rewards scripts. It uses script …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Wrapper that exposes the functionalities of the node used …","","","","","","","","","","","","","","","","Check that all transactions are present on the main chain …","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,0,3,3,0,3,16,3,16,16,16,3,16,3,16,3,16,3,3,16,3,3,3,3,16,0,3,3,3,16,3,16,3,16,16,16,16,3,16,3,3,16,3,16,3,16,3,16,0,0,0,22,0,22,0,0,0,25,27,25,25,22,24,22,24,0,22,24,22,24,22,24,22,24,25,27,25,25,25,27,22,24,25,27,25,25,25,22,24,22,24,22,24,25,27,24,24,24,22,24,22,24,22,24,27,29,22,24,0,0,0,0,25,25,27,25,25,25,27,25,27,27,27,25,27,25,27,25,27,25,27,27,27,27,27,27,25,27,25,25,25,27,27,25,27,25,27,25,25,25,25,27,25,27,25,27,27,25,27,0,27,25,27,27,27,25,27,25,27,25,27,27,29,25,27,0,0,0,34,34,34,34,0,34,34,34,34,33,34,34,34,34,0,0,34,34,34,34,34,34,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,57,57,57,0,57,0,57,0,52,45,57,44,57,44,0,0,0,44,57,44,57,44,57,44,0,0,0,0,57,57,44,57,57,57,57,57,44,44,44,0,0,57,57,57,44,57,44,57,44,0,53,53,53,53,53,53,53,53,53,44,53,57,57,57,44,57,44,57,44,57,44,0,0,52,45,0,0,0,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,66,59,67,60,65,66,68,69,59,67,60,65,66,68,69,59,66,0,67,65,0,0,67,60,65,66,68,69,59,67,60,65,66,68,69,59,68,66,67,60,65,66,68,69,59,67,60,65,66,68,69,59,67,60,67,60,65,66,68,69,59,67,60,65,66,68,69,59,69,67,60,65,66,68,69,59,67,60,65,66,68,69,59,67,67,59,67,60,65,67,60,65,66,68,69,59,67,60,65,66,68,69,59,67,60,65,66,68,69,59,60,59,65,68,66,66,66,66,66,66,66,67,66,66,67,60,67,60,65,66,68,69,59,67,60,65,66,68,69,59,67,60,65,66,68,69,59,67,60,65,66,68,69,59,67,60,65,66,68,69,59,0,0,0,72,70,72,70,70,70,70,70,72,70,72,70,70,72,70,70,70,70,70,70,72,72,70,70,72,70,70,70,72,70,72,70,72,70,70,70,70,72,70,72,70,72,70,72,72,70,0,75,75,0,75,76,75,76,75,75,75,76,75,76,75,75,76,75,75,75,75,75,75,76,76,75,76,75,75,76,75,76,75,76,75,75,76,75,76,75,76,75,76,76,75,0,0,77,78,77,78,77,77,77,78,77,78,77,77,78,77,77,77,77,77,77,78,78,77,78,77,78,77,78,77,78,77,77,77,77,78,77,78,77,78,77,78,78,77,0,0,0,80,81,80,81,80,0,80,80,81,80,81,80,80,81,80,80,80,80,80,80,81,81,80,81,80,80,80,81,80,81,80,81,80,80,80,81,80,81,80,81,80,81,81,80,0,0,0,0,47,82,50,54,47,82,50,54,54,54,54,54,47,54,47,0,47,82,50,54,47,82,50,54,47,47,82,50,54,47,82,50,54,47,82,50,54,47,50,47,47,50,47,82,50,54,54,47,82,50,54,47,82,50,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,47,50,47,47,82,50,54,82,50,47,47,82,50,54,47,82,50,54,47,82,50,54,47,82,50,54,90,0,0,84,84,88,92,92,91,91,92,88,0,90,0,90,0,0,0,92,92,0,92,88,92,88,91,83,90,91,84,83,90,91,84,83,84,83,84,0,83,90,91,84,83,90,91,84,83,90,91,84,83,83,83,83,83,83,90,90,91,91,84,83,90,90,90,90,91,84,83,83,0,90,91,0,90,91,83,90,91,84,94,83,90,91,84,84,83,90,91,84,83,0,90,83,84,90,91,83,90,91,84,83,90,91,84,83,90,91,84,83,90,91,84,95,95,92,92,92,0,0,95,92,0,92,92,92,94,92,95,94,92,95,94,94,92,95,94,92,95,94,92,95,94,92,92,95,95,94,92,92,92,92,92,92,92,92,95,95,95,94,94,92,95,92,95,94,92,95,94,94,92,95,94,92,95,92,95,94,94,92,95,94,92,95,94,92,95,94,92,95,94,92,95,94,0,88,88,88,88,88,88,0,88,88,88,88,88,88,88,88,88,88,0,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,107,108,107,108,108,108,0,107,108,107,108,107,108,107,107,108,108,108,108,108,108,108,107,107,107,108,108,107,108,107,108,107,108,0,108,107,107,108,107,108,107,108,107,108,107,108,110,110,0,0,109,0,0,112,109,110,110,110,0,0,0,112,109,0,0,0,0,0,110,0,112,109,109,119,119,119,120,111,112,113,109,114,115,105,119,120,111,112,113,109,114,115,105,105,302,111,112,113,114,115,105,120,119,120,105,105,114,115,119,120,111,112,113,109,114,115,105,119,120,111,112,113,109,114,115,105,119,120,111,112,113,109,114,115,105,113,109,109,105,105,119,120,111,112,113,109,109,109,109,114,115,105,105,105,119,119,119,113,109,109,119,120,111,112,113,109,114,115,105,119,120,111,112,113,109,114,115,105,120,119,120,111,112,113,109,114,115,105,111,111,119,120,111,113,114,115,302,105,105,0,111,302,111,112,113,114,115,109,105,105,113,109,114,115,111,119,120,111,112,113,109,114,115,105,119,120,111,112,113,109,114,115,105,119,120,111,112,113,109,114,115,105,105,119,120,111,112,113,109,114,115,105,303,123,123,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,0,0,123,123,123,123,123,123,304,305,125,0,0,125,126,125,126,0,125,126,125,126,125,125,126,125,126,125,126,125,126,125,126,126,126,125,126,125,126,125,126,125,126,125,126,0,0,0,0,0,0,124,0,124,131,0,131,127,130,127,130,127,132,129,124,131,128,130,127,129,124,131,128,130,127,129,127,129,128,129,128,129,127,129,124,131,128,130,127,129,124,131,128,130,127,131,128,130,129,124,131,128,130,127,129,128,124,124,129,124,131,128,130,127,124,129,128,124,129,124,131,128,130,127,129,124,131,128,130,127,129,124,131,128,130,127,129,127,130,127,129,128,131,128,130,129,128,124,129,124,131,128,130,127,129,124,131,128,130,127,129,124,131,128,130,127,129,124,131,128,130,127,127,127,129,129,129,129,129,129,129,129,306,306,0,0,0,134,135,134,135,134,135,134,135,134,135,0,134,135,134,135,134,135,134,135,134,135,134,135,134,135,134,135,0,135,135,134,135,134,135,134,135,134,135,0,0,0,0,0,0,0,0,143,0,0,145,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,0,144,144,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,144,144,144,144,144,144,137,138,139,143,143,145,140,141,142,144,137,138,139,143,145,144,144,143,143,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,0,144,145,0,0,143,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,140,141,142,144,137,138,139,143,145,0,0,151,0,151,151,151,151,0,0,150,150,151,150,151,150,151,150,151,150,150,151,150,150,151,151,150,151,151,151,151,150,151,151,151,150,151,150,151,150,0,0,150,0,150,151,151,151,150,151,150,151,150,151,150,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,152,152,152,152,152,155,155,155,155,155,0,0,155,154,154,154,154,0,0,157,158,0,155,158,0,155,0,0,155,0,155,155,0,155,158,156,159,156,159,154,154,155,157,156,159,158,154,155,157,156,159,158,156,159,156,159,154,155,157,156,159,158,154,155,157,156,159,158,154,155,157,156,159,158,154,156,155,155,157,157,156,158,158,159,159,154,155,155,155,155,155,155,157,156,156,159,159,158,158,158,158,156,159,156,159,156,159,155,157,158,155,157,158,154,155,157,156,159,158,154,155,157,156,159,158,154,155,157,156,159,158,154,154,156,154,156,154,155,157,158,155,157,158,154,155,157,156,159,158,154,155,157,156,159,158,154,155,157,156,159,158,156,159,156,159,154,155,157,156,159,158,307,307,179,160,160,118,0,0,118,118,118,118,160,179,118,179,0,160,0,118,118,118,160,118,179,118,0,0,160,160,0,118,160,193,196,197,193,173,160,118,179,196,197,193,173,160,118,179,0,173,0,196,197,193,173,160,118,179,196,197,193,173,160,118,179,196,197,193,173,160,118,179,193,193,160,160,118,118,179,179,196,0,193,196,197,193,173,160,160,160,160,160,160,160,160,160,118,118,179,173,160,118,179,160,118,179,0,196,197,193,173,160,118,179,196,197,193,173,160,118,179,193,196,197,193,173,160,118,179,193,193,173,197,173,193,193,196,0,173,193,173,173,197,173,160,118,196,193,193,0,0,160,118,179,196,197,193,173,160,118,179,196,197,193,173,160,118,179,196,197,193,173,160,118,179,0,193,0,0,196,197,193,173,160,118,179,173,308,309,310,309,0,0,209,0,0,0,228,210,209,210,209,0,0,210,209,210,209,0,210,209,210,226,221,209,209,210,209,209,226,221,209,210,209,210,209,210,209,226,221,226,221,210,210,210,0,209,210,210,209,210,209,210,209,0,0,210,209,0,0,0,225,0,0,0,225,0,0,0,0,0,0,0,213,214,213,214,218,215,218,218,219,225,218,219,225,0,0,0,218,219,225,218,219,225,0,218,219,225,216,219,225,218,219,225,0,0,216,218,219,225,218,219,225,218,219,225,213,214,0,0,216,216,219,215,218,213,214,219,215,218,219,225,218,219,225,218,219,225,220,224,218,219,225,311,312,312,312,312,311,0,0,215,215,215,216,215,216,216,215,216,215,216,215,216,215,216,216,215,216,216,215,216,215,216,215,216,216,216,216,215,215,215,215,215,216,215,216,215,216,215,216,0,0,0,313,314,313,314,313,314,0,313,314,0,232,232,232,232,0,232,232,232,0,232,232,232,232,232,232,232,232,232,232,232,232,232,245,0,241,244,0,0,241,243,244,0,0,245,0,0,243,0,246,238,246,246,238,238,238,0,0,0,0,0,238,246,238,246,238,238,238,238,246,0,0,0,238,235,238,235,238,238,0,235,235,235,235,246,246,235,235,235,238,246,0,235,235,0,235,238,246,238,238,238,0,0,238,238,235,0,0,0,0,0,245,0,241,244,0,241,243,244,0,0,245,0,243,0,246,246,246,246,246,0,243,244,245,246,235,241,243,244,245,246,235,241,246,241,241,246,246,246,243,244,245,246,235,241,243,244,245,246,235,241,243,244,245,235,243,244,245,246,235,241,246,243,244,245,235,241,243,243,244,244,245,246,235,241,246,246,241,235,246,243,244,245,246,235,241,235,243,244,245,246,235,241,243,244,245,246,235,241,235,235,235,235,246,246,235,235,235,246,235,235,243,244,245,235,235,241,246,243,244,245,246,235,241,243,244,245,246,235,241,243,244,245,246,235,241,246,246,243,244,245,246,235,241,235,0,0,0,0,0,315,252,252,0,0,0,252,252,0,252,249,249,252,252,252,252,252,252,252,249,252,252,252,252,0,0,256,256,256,0,256,0,256,256,0,0,256,256,256,0,254,256,256,256,256,254,256,256,256,256,254,254,0,256,256,256,256,256,257,257,257,257,257,0,257,257,257,257,257,257,0,257,257,257,257,0,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,0,0,257,257,257,257,257,0,257,0,0,0,259,259,260,259,259,260,0,0,0,0,266,0,0,259,259,259,259,0,266,259,266,259,266,266,259,266,259,266,266,259,259,259,266,266,259,259,259,259,259,259,266,259,266,259,266,259,266,266,266,266,259,259,266,259,266,259,266,259,266,259,0,0,260,260,264,260,264,260,264,264,264,260,264,260,264,0,264,260,264,260,260,264,264,260,260,260,260,260,264,260,264,260,264,260,0,0,264,264,260,264,260,264,260,264,260,264,260,264,260,0,271,0,0,269,269,269,270,271,269,270,271,269,270,270,269,270,271,269,270,271,269,270,271,271,271,0,269,270,271,271,271,269,270,271,269,270,271,269,270,271,0,269,269,269,269,271,270,269,270,271,269,270,271,269,270,271,269,270,271,0,0,258,258,258,258,0,258,258,258,258,258,274,273,274,258,258,258,258,258,258,258,0,258,258,258,274,258,258,274,0,274,273,0,258,0,273,258,258,258,258,258,0,0,273,275,273,275,273,275,273,275,273,275,273,275,273,273,275,273,275,273,275,273,275,273,275,273,275,273,273,275,275,275,273,275,273,275,273,275,275,273,275,0,0,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,0,0,0,0,0,0,0,0,0,0,285,0,282,282,282,282,282,282,282,285,282,285,282,282,282,282,282,282,282,285,282,285,282,285,282,282,282,285,285,282,285,285,285,285,282,285,282,285,282,285,282,282,282,282,282,282,282,282,285,285,282,282,282,285,282,285,282,285,282,285,0,0,0,0,30,30,30,30,0,26,26,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,30,30,30,30,26,26,26,26,26,26,30,26,30,26,30,30,26,26,26,30,26,30,26,30,26,30,26,26,30,26,30,26,30,26,30,26,30,26,30,26,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,0,0,0,286,233,287,212,286,233,287,212,233,287,233,287,233,286,233,287,212,286,233,287,212,286,233,287,212,286,233,287,212,286,233,287,212,286,233,287,212,286,233,287,212,286,286,286,286,233,233,233,233,287,287,287,287,212,212,212,212,286,233,287,212,286,233,287,212,212,212,286,233,287,212,233,286,233,287,212,286,233,287,212,212,233,233,233,233,233,286,233,287,212,286,233,287,212,286,233,287,212,286,233,287,212,286,233,287,212,212,286,233,287,212,0,0,0,0,0,0,0,0,0,290,290,0,290,290,290,290,290,290,290,290,290,290,290,290,290,290,0,290,290,290,290,290,290,0,0,292,292,292,0,292,292,292,292,292,291,291,292,291,292,291,291,292,291,292,291,292,0,292,292,291,292,292,292,292,292,292,292,292,292,291,292,291,291,292,291,292,292,291,292,291,292,291,292,291,292,291,292,316,316,0,317,317,317,317,317,317,317,317,317,317,0,317,317,317,317,0,0,0,0,0,0,0,0,0,0,0,0,299,297,298,299,300,301,297,298,299,300,301,298,297,298,299,300,301,297,298,299,300,301,297,298,299,300,297,298,299,300,301,297,298,299,300,297,298,299,300,301,297,298,301,297,298,299,300,301,297,298,299,300,301,297,298,299,300,301,301,300,297,298,299,300,301,297,298,299,300,301,297,298,299,300,301,318,297,298,299,300,301],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[[3,4],5],[[3,4],5],0,[6,3],[7,3],[-1,-1,[]],[8,3],[-1,-1,[]],[[9,9],[[10,[2,3]]]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[16,-1],10,17],[3,[[19,[18]]]],0,[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[22]]],23],[-1,[[10,[24]]],23],[1,2],[1,2],0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[25,26],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[25]]],23],[-1,[[10,[27]]],23],[1,2],[1,2],[[27,27],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],0,0,0,0,0,0,[[27,4],5],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[20,20,29,30],27],0,0,[[28,28,28],30],[27,31],[25,30],[27,30],[[27,-1],10,17],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[32]]],[[0,[33]]]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[-1,32],[[35,[[34,[-2]]]]],[],36],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[[[34,[-1]]],[[35,[-1]]],36],0,0,[[[34,[-1]]],37,36],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[[38,[-1]],4],5,[39,33]],[-1,-1,[]],[[[38,[-1]],32],[[10,[[34,[-2]],40]]],33,36],[[],1],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,[[-1,41],[[38,[-1]]],33],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,2],[[42,4],5],[-1,-1,[]],[[42,32],[[35,[[34,[-1]]]]],36],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[[[19,[32]]],42],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,44,45],[[48,[46,47]]]],[[43,20,49],[[51,[50]]]],[[44,[48,[46,47]],52,32,1,53],[[51,[54]]]],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],0,[[1,32,[55,[32]],[56,[46]],-1],[[10,[44,57]]],33],[[32,58],28],[[59,32,[48,[46,60]]],28],[[57,4],5],[[57,4],5],[[44,4],5],[40,57],[61,57],[62,57],[-1,-1,[]],[63,57],[-1,-1,[]],0,0,[[64,32],[[19,[20]]]],[[64,[55,[20]]],[[19,[20]]]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[57,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[10,[[51,[65]],40]]],33],[-1,[[10,[[51,[60]],40]]],33],[[-1,46],[[10,[[51,[66]],40]]],33],[-1,[[10,[[51,[59]],40]]],33],[-1,[[10,[28,40]]],33],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],53],[1,-1,[]],[1,-1,[]],[-1,[[10,[53]]],23],[1,2],[[53,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[67,67],[60,60],[65,65],[66,66],[68,68],[69,69],[59,59],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],0,0,[-1,[[10,[67]]],23],[-1,[[10,[60]]],23],[-1,[[10,[65]]],23],[-1,[[10,[66]]],23],[-1,[[10,[68]]],23],[-1,[[10,[69]]],23],[-1,[[10,[59]]],23],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],0,[[67,4],5],[[60,4],5],[[65,4],5],[[66,4],5],[[68,4],5],[[69,4],5],[[59,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[60,28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,70],[[-1,-2],2,[],[]],[[70,70],71],[[-1,-2],71,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[70]]],23],[1,2],[1,2],[[70,70],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[72,4],5],[[-1,4],[[10,[2,73]]],[]],[[70,4],5],[[70,4],5],[-1,-1,[]],[-1,-1,[]],[41,70],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[70,70],[[19,[71]]]],[-1,-2,[],[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[72,32],[[10,[-1]]],74],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[75,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,75],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[75]]],23],[1,2],[1,2],[[75,75],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[76,4],5],[[-1,4],[[10,[2,73]]],[]],[[75,4],5],[-1,-1,[]],[28,75],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[76,32],[[10,[-1]]],74],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[77,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,77],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[77]]],23],[1,2],[1,2],[[77,77],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[78,4],5],[[-1,4],[[10,[2,73]]],[]],[[77,4],5],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[79,[20]]],[]],[32,77],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[78,32],[[10,[-1]]],74],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[80,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,20],[80,80],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[80]]],23],[1,2],[1,2],[[80,80],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[81,4],5],[[-1,4],[[10,[2,73]]],[]],[[80,4],5],[-1,-1,[]],[-1,-1,[]],[32,80],[20,80],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,-2,[],[]],[80,20],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[81,32],[[10,[-1]]],74],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[],32],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],0,[1,2],[1,2],[1,2],[1,2],[[47,4],5],[[82,4],5],[[50,4],5],[[54,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,-1],10,17],[[82,-1],10,17],[[50,-1],10,17],[[54,-1],10,17],0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[84,84],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,[55,[85]]],[[10,[[87,[86]],88]]],[[89,[20]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[[83,83],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[83,4],5],[[90,4],5],[[90,4],5],[[91,4],5],[[91,4],5],[[84,4],5],[-1,-1,[]],[92,90],[-1,-1,[]],[88,90],[91,90],[-1,-1,[]],[-1,-1,[]],[32,[[10,[83]]]],[32,[[10,[-1]]],[]],[[[87,[86]],[55,[85]]],20],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],0,[-1,[],[]],[-1,[],[]],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,[[10,[83,91]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[90,[[19,[18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[93,[55,[85]]],[[10,[[51,[[87,[86]]]],92]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[[94,4],5],[[92,4],5],[[92,4],5],[[95,4],5],[[95,4],5],[-1,-1,[]],[96,92],[-1,-1,[]],[97,92],[98,92],[95,92],[99,92],[6,92],[88,92],[100,95],[101,95],[-1,-1,[]],[[[87,[86]],[55,[85]]],94],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[-1,[],[]],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[92,[[19,[18]]]],[95,[[19,[18]]]],[94,[[103,[[102,[85]],[51,[85]]]]]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[94,-1],[[10,[2,92]]],[[104,[9]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[55,[85]]],[[10,[[87,[86]],88]]],[[89,[20]]]],[1,-1,[]],[1,-1,[]],[1,2],[[88,4],5],[[88,4],5],[-1,-1,[]],[98,88],[96,88],[6,88],[97,88],[[[87,[86]],[55,[85]]],20],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[88,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[55,[105]],[55,[106]]],107],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],0,0,[[108,108],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[108,4],5],0,0,0,[-1,-1,[]],[105,108],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[106,[[10,[108,109]]]],0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,110],2,[]],[[111,110],2],[[112,110],2],[[113,110],2],[[114,110],2],[[115,110],2],0,0,0,0,[105,105],[[-1,-2],2,[],[]],[[],114],[[],115],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[113,4],5],[[109,4],5],[[109,4],5],[[105,4],5],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[116,109],[-1,-1,[]],[117,109],[118,109],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[32,[[10,[105]]]],[32,[[10,[-1]]],[]],[119,[[10,[[51,[110]],109]]]],[[119,1],[[10,[[51,[110]],109]]]],[119,[[10,[20,109]]]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[121,20],119],[[119,1],120],[[58,20],111],[[[51,[112]]],113],[[],114],[[],115],[[-1,-2],2,[],122],0,0,[[110,32],28],0,[[-1,4],5,[]],[[111,4],5],[[112,4],5],[[113,4],5],[[114,4],5],[[115,4],5],[109,[[19,[18]]]],0,[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[123,4],5],[[123,4],5],[116,123],[6,123],[124,123],[-1,-1,[]],[61,123],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[123,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[125]]],23],[1,2],[1,2],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[125,126],0,[[125,-1],10,17],[[126,-1],10,17],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[127,128],127],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[129,[[10,[128,124]]]],[127,[[10,[130,124]]]],0,0,0,0,[[],129],[[],127],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[131]]],23],[-1,[[10,[128]]],23],[-1,[[10,[130]]],23],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],0,0,[[124,4],5],[[124,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],0,0,[-1,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[],129],[[],127],0,0,0,0,[[131,-1],10,17],[[128,-1],10,17],[[130,-1],10,17],0,0,[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[127,20],127],[[127,20],127],[[129,[19,[20]]],129],[[129,131],129],[[129,[19,[20]]],129],[[129,28],129],[[129,132],129],[[129,20],129],[[129,133],129],[[129,[19,[20]]],129],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[134]]],23],[-1,[[10,[135]]],23],[-1,[[10,[37]]],23],[1,2],[1,2],[[134,4],5],[[135,4],5],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[134,-1],10,17],[[135,-1],10,17],[[37,-1],10,17],0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[121,126],[[10,[135,123]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,136,137,138,139],[[10,[[2,[140,141,142]],143]]]],[[144,144],71],[[-1,-2],71,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[144,144],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[144,4],5],[[137,4],5],[[138,4],5],[[139,4],5],[[143,4],5],[[143,4],5],[[145,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],41,[146,147],148],[[144,-1],2,149],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[[144,144],[[19,[71]]]],0,[[136,1],136],0,[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,136,[55,[145]]],[[10,[136,143]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[150]]],23],[1,2],[1,2],0,[[151,4],5],[[151,4],5],[[150,4],5],[8,151],[61,151],[6,151],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[9,[[10,[[48,[144,64]],151]]]],[9,[[10,[[48,[144,[2,[137,138,139]]]],151]]]],0,[64,[[10,[144,151]]]],0,[151,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[152,4],5],[[152,4],5],[-1,-1,[]],[6,152],[61,152],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[152,[[19,[18]]]],[[9,[51,[64]]],[[10,[2,152]]]],[[64,140,141,142],[[10,[2,152]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[153,153],[153,153],[153,153],[153,153],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],153],[[],153],[[],153],[[],153],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[154,[[10,[2,155]]]],[[156,32],156],[[155,4],5],[[155,4],5],[[157,4],[[10,[2,73]]]],[[157,4],[[10,[2,73]]]],[[156,4],[[10,[2,73]]]],[[158,4],[[10,[2,73]]]],[[158,4],[[10,[2,73]]]],0,[[159,64],[[10,[20,158]]]],[-1,-1,[]],[158,155],[6,155],[61,155],[-1,-1,[]],[160,155],[157,155],[-1,-1,[]],[161,156],[-1,-1,[]],[-1,-1,[]],[162,159],[163,158],[-1,-1,[]],[61,158],[164,158],[165,[[10,[156,[167,[166]]]]]],[165,[[10,[159,[167,[166]]]]]],[165,[[10,[156,[167,[166]]]]]],[165,[[10,[159,[167,[166]]]]]],[[],[[19,[168]]]],[[],[[19,[168]]]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[[169,161,156,159],154],[156,[[10,[[0,[170]],157]]]],0,0,0,[155,[[19,[18]]]],[157,[[19,[18]]]],[158,[[19,[18]]]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[156,165],[[10,[2,[167,[166]]]]]],[[159,165],[[10,[2,[167,[166]]]]]],[[156,165],[[10,[2,[167,[166]]]]]],[[159,165],[[10,[2,[167,[166]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,172],[[173,174],2],[[[175,[-1]]],[[10,[[2,[-1,176,177]],118]]],178],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],0,0,[[160,4],5],[[160,4],5],[[118,4],5],[[118,4],5],[[179,4],5],[[179,4],5],0,[[180,181,182],[[19,[183]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[179,160],[118,160],[-1,-1,[]],[184,160],[185,160],[186,160],[187,160],[188,160],[189,160],[190,118],[-1,-1,[]],[-1,-1,[]],[169,[[10,[[2,[173,169]],160]]]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[191,183],191],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[169,[192,[46]],-1],[[10,[[193,[-1]],160]]],122],[[[193,[-1]]],19,122],0,0,0,[[-1,194],[[195,[-2]]],[],[]],0,0,[[169,-1],[[10,[[2,[191,[51,[174]]]],160]]],122],[[173,196],[[10,[197,[2,[160,174]]]]]],0,[[173,[175,[198]]],[[10,[174,160]]]],[[173,[175,[199]]],[[10,[174,160]]]],0,0,[160,[[19,[18]]]],[118,[[19,[18]]]],0,0,0,[[180,200],181],[180,201],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[175,[199]]],28],[[[193,[-1]],[175,[-2]],202],[[10,[203,118]]],122,178],[[203,204,205,176,177,[192,[46]]],[[2,[28,203]]]],[169,[[48,[206,207]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[85]]],[[10,[[208,[85]],209]]]],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],0,[1,2],[1,2],[[210,[56,[211]]],28],0,0,[[209,4],5],[[209,4],5],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],0,0,[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,[[1,[48,[43,1]],[51,[212]]],[[10,[210,209]]]],0,0,0,[-1,20,[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[213,214,215,216,217],218],[[219,-1],[[222,[220,221]]],223],[[[222,[224,225]],[222,[224,221]],221,216],[[51,[219]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[[222,[220,41]],[222,[220,41]],41,41,-1],[[222,[220,41]]],223],[1,2],[1,2],[1,2],0,[[219,4],5],[[225,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[213,216],[[2,[41,[222,[224,225]]]]]],0,[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[[55,[25]],216],225],0,0,0,0,0,0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[215,226],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],216],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[215]]],23],[-1,[[10,[216]]],23],[1,2],[1,2],0,[-1,-1,[]],[-1,-1,[]],0,[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[216,41],[215,226],0,0,[215,226],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[[222,[220,41]],41,-1],[[2,[[222,[220,41]],[222,[220,41]]]]],223],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[51,[227]],228,229,1,210,230],[[10,[[222,[231,221]],232]]]],[1,-1,[]],[1,-1,[]],[1,2],[[[51,[227]],228,1,210],[[51,[227]]]],[[232,4],5],[[232,4],5],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[9,32],161],[[233,234,136,136],[[35,[[2,[49,28]]]]]],[[[48,[211,233]],[48,[211,234]],49,136,136],[[35,[[51,[235]]]]]],[[236,[55,[172]]],237],[[[48,[211,233]],[48,[211,234]],136,136],[[35,[[48,[211,[2,[49,28]]]]]]]],0,0,0,0,[1,-1,[]],[1,-1,[]],[1,2],0,0,[[233,234],[[35,[[2,[41,41]]]]]],[[43,[48,[211,233]],[48,[211,234]]],[[2,[[48,[211,233]],[48,[211,234]]]]]],[[[48,[211,233]],[56,[20]]],[[48,[211,233]]]],[-1,-1,[]],0,[[],1],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[238,[[35,[[51,[[2,[239,[51,[235]]]]]]]]]],0,0,[[[48,[211,233]],[48,[211,234]]],[[35,[2]]]],0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],0,0,0,[-1,-2,[],[]],0,0,[[[51,[233]],[51,[240]],[51,[239]]],[[35,[[2,[[48,[211,233]],[48,[211,234]],[48,[43,239]]]]]]]],[[9,[55,[235]]],[[35,[2]]]],[[9,[55,[235]]],[[35,[2]]]],[[9,241,-1],[[35,[2]]],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[153,153],[153,153],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[241,241],[[-1,-2],2,[],[]],[[],153],[[],153],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[243]]],23],[-1,[[10,[244]]],23],[-1,[[10,[245]]],23],[-1,[[10,[235]]],23],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],0,[[243,4],5],[[244,4],5],[[245,4],5],[[235,4],5],[[241,4],5],[-1,-1,[]],[28,243],[-1,-1,[]],[28,244],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[165,[[10,[246,247]]]],[165,[[10,[246,247]]]],[32,[[10,[241]]]],0,[[],[[19,[168]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[243,-1],10,17],[[244,-1],10,17],[[245,-1],10,17],[[235,-1],10,17],0,[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[246,165],[[10,[2,247]]]],[[246,165],[[10,[2,247]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[9,32],161],[32,[[248,[32]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[29,1]],[48,[29,1]],249,-1],[[222,[29,221]]],250],[[[55,[-1]]],30,[[251,[27]]]],[[[55,[27]],221,249,249,[51,[[2,[230,230]]]],[51,[[2,[230,230]]]]],[[48,[29,252]]]],[1,-1,[]],[1,-1,[]],[[230,-1],230,122],[1,2],0,0,[-1,-1,[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[252,-1],10,17],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[20,253],[[10,[172,97]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[228,[51,[227]],210,254],[[10,[[222,[255,254]],256]]]],[[41,[48,[231,41]],254],[[48,[231,254]]]],[1,-1,[]],[1,-1,[]],[1,2],[[228,[51,[227]],210],[[51,[227]]]],0,[[256,4],5],[[256,4],5],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],0,[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[[48,[231,254]],[51,[227]]],[[222,[255,254]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],0,[1,2],[[257,4],5],[[257,4],5],[61,257],[8,257],[258,257],[-1,-1,[]],[6,257],[259,257],[184,257],[260,257],[261,257],[262,257],[263,257],[116,257],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,[257,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[10,[[51,[264]],260]]],[[104,[9]]]],[-1,[[10,[[51,[264]],260]]],[[104,[9]]]],0,0,0,0,0,0,0,0,[[265,265,182],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[222,[20,1]]],[[222,[1,1]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[266,[[267,[20]]]],[1,2],[1,2],[[259,4],5],[[259,4],5],[[[51,[264]]],266],[-1,-1,[]],[6,259],[268,259],[-1,-1,[]],[8,259],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[266,46],[[10,[[222,[20,1]],259]]]],[266,[[222,[20,1]]]],[266,[[222,[20,1]]]],0,[259,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[264]]],23],[-1,[[10,[265]]],23],[1,2],[1,2],[[264,4],5],[[260,4],5],[[260,4],5],0,[-1,-1,[]],[8,260],[6,260],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[10,[[51,[264]],260]]],[[104,[9]]]],[-1,[[10,[[51,[264]],260]]],[[104,[9]]]],0,0,[260,[[19,[18]]]],0,[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[269,41],2],[[269,41,46],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],270],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[[271,4],5],[[271,4],5],[41,20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[41,[[10,[[51,[[192,[41]]]],271]]]],[41,[[10,[269,271]]]],[[[51,[[192,[41]]]]],269],[269,2],[269,2],[-1,20,[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],0,0,0,[[258,4],5],[[258,4],5],[6,258],[272,258],[61,258],[-1,-1,[]],[116,258],0,[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,[258,[[19,[18]]]],[[273,274,32],[[10,[2,258]]]],0,[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],0,[275,20],[273,[[10,[[51,[276]],258]]]],[-1,-1,[]],[-1,-1,[]],[273,[[10,[275,258]]]],[275,20],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[-1,277],273,[[89,[20]]]],0,0,0,0,[275,20],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[273,274,32],[[10,[2,258]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],0,0,[-1,-1,[]],[[],1],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,[274,278],0,[274,279],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[-1,[[10,[[51,[280]],257]]],[[89,[20]]]],[-1,[[10,[[51,[280]],257]]],[[104,[9]]]],[172,231],[236,[[51,[172]]]],[[269,-1,-2,28,-3],[[10,[269,257]]],[[89,[20]]],[[104,[9]]],250],[[-1,269,28,-2],[[10,[269,257]]],[[89,[20]]],250],[[269,[51,[280]],[51,[172]],28,-1],[[10,[269,257]]],250],[[269,[51,[[2,[281,46]]]],[51,[172]],28,-1],[[10,[269,257]]],250],[[228,236],[[51,[[2,[281,46]]]]]],0,0,0,[[282,20],282],0,[[282,136],282],0,[[282,161],282],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[282,20],282],0,[[282,283],[[10,[284,285]]]],[[282,20],282],0,[[],282],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[[282,20],282],0,[[282,4],5],[[285,4],5],[[285,4],5],[-1,-1,[]],[6,285],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[282,161],282],0,[[282,20],282],0,[[282,20],282],0,[[282,-1],282,[[104,[9]]]],0,[285,[[19,[18]]]],[-1,20,[]],[[282,136],282],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[26,26],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[30]]],23],[-1,[[10,[26]]],23],[1,2],[1,2],[[30,30],28],[[26,26],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],0,0,[[30,4],5],[[26,4],5],[-1,-1,[]],[-1,-1,[]],[[-1,-2],41,[146,147],148],[[30,-1],2,149],0,0,0,[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[30,28],0,0,[[30,-1],10,17],[[26,-1],10,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[239,239],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[239]]],23],[1,2],[[239,239],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[239,4],5],[-1,-1,[]],0,[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[239,-1],10,17],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[286,286],[233,233],[287,287],[212,212],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[286]]],23],[-1,[[10,[233]]],23],[-1,[[10,[287]]],23],[-1,[[10,[212]]],23],[1,2],[1,2],[1,2],[1,2],[[286,286],28],[[233,233],28],[[287,287],28],[[212,212],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[286,4],5],[[233,4],5],[[287,4],5],[[212,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[288,212],0,[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,0,0,0,[[286,-1],10,17],[[233,-1],10,17],[[287,-1],10,17],[[212,-1],10,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[230,230],2],0,[-1,[[35,[-2]]],[[104,[9]]],36],0,[[-1,9],[[10,[2,8]]],242],[[[19,[161]],-1],[[10,[2,6]]],[122,39]],[9,[[10,[[51,[-1]],8]]],289],[-1,[[10,[28]]],23],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[290,4],5],[[290,4],5],[8,290],[-1,-1,[]],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[9,[[10,[[51,[26]],290]]]],[290,[[19,[18]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[291,[[10,[[51,[240]],292]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[291,[51,[20]]],[[10,[2,292]]]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],0,[[292,4],5],[[292,4],5],[-1,-1,[]],[272,292],[293,292],[-1,-1,[]],[294,292],[6,292],[61,292],[295,292],[[-1,-2],[[11,[-2,-3]]],[],[12,13,14],[]],[-1,[],[]],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[292,[[19,[18]]]],[[161,20,[19,[161]]],[[10,[291,292]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],296],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[297]]],23],[-1,[[10,[298]]],23],[-1,[[10,[299]]],23],[-1,[[10,[300]]],23],[1,2],[1,2],[1,2],[1,2],[1,2],[[297,4],5],[[298,4],5],[[299,4],5],[[300,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[301,-1],10,17],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[4,"Error",17],[3,"Formatter",3473],[6,"Result",3473],[3,"Error",3474],[4,"Error",3475],[3,"Error",3476],[3,"Path",3477],[4,"Result",3478],[3,"IndentedSection",3479],[8,"Display",3473],[8,"Send",3480],[8,"Sync",3480],[3,"Request",3481],[3,"Vote",17],[8,"Serializer",3482],[8,"Error",3483],[4,"Option",3484],[3,"String",3485],[3,"TypeId",3486],[4,"ProposalStatus",68],[8,"Deserializer",3487],[3,"ApprovedProposalRow",68],[3,"AdvisorReviewRow",127],[3,"AdvisorReview",3064],[3,"VeteranRankingRow",127],[15,"bool"],[6,"VeteranAdvisorId",127],[4,"ReviewRanking",3064],[6,"AdvisorReviewId",127],[15,"str"],[8,"HttpClient",194],[3,"HttpResponse",194],[6,"Result",3488],[8,"Deserialize",3487],[3,"StatusCode",3489],[3,"RateLimitClient",219],[8,"Debug",3473],[3,"Report",3488],[15,"u64"],[3,"ReqwestClient",238],[15,"i32"],[3,"IdeaScaleData",258],[6,"Sponsors",332],[15,"u32"],[3,"Challenge",730],[3,"HashMap",3490],[15,"i64"],[3,"Fund",730],[3,"Vec",3491],[6,"Scores",332],[3,"CustomFieldTags",344],[3,"Proposal",730],[15,"slice"],[3,"HashSet",3492],[4,"Error",258],[3,"Regex",3493],[3,"Stage",371],[3,"Funnel",371],[3,"Error",3494],[3,"JoinError",3495],[4,"Error",3496],[4,"Value",3497],[3,"Fund",371],[3,"Proposal",371],[3,"Challenge",371],[3,"Proposer",371],[3,"ProposalCustomFieldsByKey",371],[3,"AdaRewards",545],[4,"Ordering",3498],[3,"V",545],[3,"Error",3473],[8,"Error",3487],[4,"Approval",594],[3,"V",594],[3,"ChallengeTitle",639],[3,"V",639],[4,"Resettable",3499],[3,"CleanString",683],[3,"V",683],[3,"Highlight",730],[3,"QrPin",830],[4,"PinReadMode",830],[15,"u8"],[3,"Ed25519Extended",3500],[3,"SecretKey",3501],[4,"Error",1026],[8,"Into",3502],[4,"Error",830],[4,"BadPinError",830],[4,"KeyQrCodeError",945],[4,"DynamicImage",3503],[3,"KeyQrCode",945],[4,"QrDecodeError",945],[4,"Error",3504],[4,"FromHexError",3505],[4,"SecretKeyError",3501],[4,"ImageError",3506],[4,"ExtractError",3507],[4,"DecodeError",3507],[3,"Luma",3508],[3,"ImageBuffer",3509],[8,"AsRef",3502],[3,"SentryFragmentLog",1106],[3,"PersistentFragmentLog",3510],[3,"LogCmpStats",1058],[3,"LogCmpFields",1058],[4,"Error",1106],[6,"RawLog",1106],[3,"RegexMatch",1106],[4,"SentryLogsStatChecker",1106],[3,"SentryLogsStatsExecutor",1106],[3,"SuccessfulScan",1106],[3,"MalformedQr",1106],[3,"Error",3511],[4,"ParseError",3512],[4,"ValidationError",1967],[3,"SentryLogClient",1106],[3,"LazySentryLogs",1106],[3,"Url",3513],[8,"Iterator",3514],[4,"Error",1313],[4,"Error",1383],[4,"RequestData",1348],[3,"Request",1348],[3,"CreateMessageBuilder",1383],[3,"ContentSettings",1383],[3,"ContentSettingsBuilder",1383],[3,"CreateMessage",1383],[4,"ContentType",1383],[6,"MultiLanguageContent",1383],[3,"OffsetDateTime",3515],[3,"InnerResponse",1523],[3,"CreateMessageResponse",1523],[15,"f64"],[3,"AlignmentReviews",1564],[3,"FeasibilityReviews",1564],[3,"AuditabilityReviews",1564],[3,"AlignmentScore",1564],[3,"FeasibilityScore",1564],[3,"AuditabilityScore",1564],[4,"Error",1564],[3,"ProposalId",1564],[3,"Review",1564],[8,"Hash",3516],[8,"Sized",3480],[8,"BuildHasher",3516],[8,"Hasher",3516],[3,"ReviewsRow",1718],[4,"Error",1718],[4,"Error",1772],[3,"Command",3517],[3,"Replay",1813],[4,"Error",1813],[3,"OutputFile",1813],[4,"OutputFileError",1813],[4,"OutputFormatError",1813],[3,"OutputFormat",1813],[4,"Error",1967],[3,"PathBuf",3477],[4,"FormatVariant",3518],[3,"Error",3519],[3,"GtmplError",3518],[3,"ArgMatches",3520],[3,"RichFormatter",3521],[3,"Error",3522],[3,"Id",3523],[3,"Block",3524],[8,"Write",3525],[3,"CommitteeIdDef",3526],[3,"Address",3527],[3,"FragmentReplayer",1967],[4,"Fragment",3528],[3,"TransactionSlice",3529],[3,"Identifier",3530],[6,"Witness",3530],[8,"Payload",3531],[4,"ReplayError",1967],[3,"SecondsSinceUnixEpoch",3532],[3,"TimeFrame",3533],[3,"TimeEra",3534],[3,"BlockDate",3535],[4,"Block0ConfigurationError",3536],[4,"Error",3537],[4,"Error",3538],[4,"ValueError",3539],[3,"DeserializeError",3510],[4,"Error",3540],[4,"BalanceError",3541],[3,"Ledger",3538],[3,"Range",3542],[3,"VoteFragmentFilter",1967],[3,"ProgressBar",3543],[3,"ProgressBarIter",3544],[3,"ValidatedFragment",1967],[3,"ReplayedFragment",1967],[3,"NoExtra",3531],[3,"VoteCast",3545],[3,"SlotDuration",3546],[3,"SystemTime",3547],[6,"FragmentId",3528],[3,"SpendingCounter",3548],[6,"HeaderId",3549],[6,"TransactionSignDataHash",3541],[6,"VotePlanId",3550],[3,"VotePlan",3550],[15,"array"],[4,"Error",2156],[3,"Threshold",2156],[3,"Hash",3551],[3,"FullProposalInfo",3160],[6,"ProposalsReviews",2213],[6,"ApprovedProposals",2213],[3,"FundSetting",2305],[3,"ProposalRewardSlots",2305],[6,"Seed",2213],[3,"CaRewards",2213],[3,"ProposalRewards",2213],[6,"CommunityAdvisor",2213],[6,"Rewards",2156],[3,"BTreeMap",3552],[8,"Rng",3553],[6,"ProposalId",2213],[4,"ProposalTickets",2213],[6,"Funds",2156],[3,"SnapshotInfo",3554],[6,"VoteCount",2156],[6,"VotingGroup",3555],[3,"Decimal",3556],[3,"Identifier",3557],[4,"Error",2359],[3,"Proposal",3160],[3,"VoteProposalStatus",3558],[3,"Calculation",2460],[3,"Block0Configuration",3536],[3,"Value",3539],[3,"ProposerRewardsInputs",2382],[3,"Challenge",3131],[3,"VotePlanStatus",3558],[4,"OutputFormat",2460],[8,"IntoIterator",3559],[4,"YesNo",2460],[4,"FundedStatus",2460],[4,"NotFundedReason",2460],[3,"ProposerRewards",2460],[6,"Error",3560],[4,"Cow",3561],[6,"EligibilityThresholds",2606],[8,"Fn",3562],[8,"Borrow",3563],[3,"VeteranAdvisorIncentive",2606],[4,"Discrimination",3564],[6,"Rewards",2633],[3,"RewardAddress",3565],[4,"Error",2633],[4,"Error",2667],[4,"Error",2886],[4,"ArchiveCalculatorError",2728],[4,"ArchiveReaderError",2777],[4,"Error",3566],[4,"Block0Error",3567],[4,"ReadError",3568],[3,"ArchiverRecord",2777],[3,"BlockDate",3569],[3,"ArchiveStats",2728],[3,"BTreeSet",3570],[4,"BlockDateParseError",3535],[3,"Stats",2826],[3,"Record",2826],[4,"Error",2826],[4,"RestError",3571],[3,"Harvester",2928],[3,"Settings",2970],[3,"Snapshot",2928],[3,"FragmentLog",3572],[3,"Duration",3573],[4,"Monitor",3574],[4,"ProgressBarMode",3575],[4,"Initial",3576],[3,"InitialUTxO",3576],[3,"ProposerRewardsCommand",3000],[3,"TempDir",3577],[3,"Command",3578],[4,"Error",3000],[3,"VoteOptions",3160],[3,"ProposalVotePlanCommon",3160],[3,"FullProposalInfo",3579],[8,"DeserializeOwned",3487],[4,"Error",3284],[3,"CheckNode",3308],[4,"Error",3308],[4,"StartupError",3580],[4,"ExplorerError",3581],[4,"JormungandrError",3582],[3,"QueryBody",3583],[3,"TransactionByIdTransactionBlocksBranches",3380],[3,"TransactionByIdTransactionBlocks",3380],[3,"TransactionByIdTransaction",3380],[3,"ResponseData",3380],[3,"Variables",3380],[8,"Stat",1106],[13,"NotVoteCastTransaction",1312],[13,"BadDataSent",1346],[13,"UnsuccessfulRequest",1346],[13,"MissingFieldOnBuilderError",1520],[13,"CannotOpen",1965],[13,"NotAVotingFragment",2152],[13,"InvalidTransactionSignature",2153],[13,"DuplicatedFragment",2153],[13,"Legacy",2299],[13,"Fund7",2299],[6,"TicketsDistribution",2347],[6,"CasWinnings",2347],[6,"VcaRewards",2606],[13,"ResultsDoNotMatch",3362],[3,"TransactionById",3364],[6,"ID",3380]]},\
"chain_addr":{"doc":"Address","t":"RRRRRRRRRRRRNNDDENENNNNNNEENNNDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLFLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRFF","n":["ADDR_KIND_ACCOUNT","ADDR_KIND_GROUP","ADDR_KIND_LOW_SENTINEL","ADDR_KIND_MULTISIG","ADDR_KIND_SCRIPT","ADDR_KIND_SENTINEL","ADDR_KIND_SINGLE","ADDR_SIZE_ACCOUNT","ADDR_SIZE_GROUP","ADDR_SIZE_MULTISIG","ADDR_SIZE_SCRIPT","ADDR_SIZE_SINGLE","Account","Account","Address","AddressReadable","Discrimination","EmptyAddress","Error","Group","Group","InvalidAddress","InvalidInternalEncoding","InvalidKind","InvalidPrefix","Kind","KindType","MismatchPrefix","Multisig","Multisig","ParseDiscriminationError","Production","Script","Script","Single","Single","Test","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","as_string","base32","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_crypto_err","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","deserialize","deserialize_from_slice","discrimination","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_address","from_bytes","from_str","from_str","from_str","from_str","from_str_anyprefix","from_string","from_string_anyprefix","get_discrimination_value","get_kind_value","get_prefix","hash","hash","hash","hash","into","into","into","into","into","into","into","is_valid_data","kind","partial_cmp","partial_cmp","partial_cmp","public_key","serialize","serialize","serialize_as_vec","serialized_size","testing","to_address","to_bytes","to_kind_type","to_kind_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_size","to_string","to_string","to_string","to_string","to_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ARBITRARY_PREFIX","arbitrary_32bytes","arbitrary_public_key"],"q":[[0,"chain_addr"],[185,"chain_addr::testing"],[188,"quickcheck::arbitrary"],[189,"alloc::string"],[190,"chain_crypto::key"],[191,"chain_ser::deser"],[192,"core::cmp"],[193,"chain_ser::packer"],[194,"core::result"],[195,"std::io"],[196,"core::fmt"],[197,"core::fmt"],[198,"core::hash"],[199,"core::option"],[200,"chain_crypto::algorithms::ed25519"],[201,"chain_crypto::key"],[202,"chain_ser::deser"],[203,"core::any"]],"d":["","","","","","","","Size of an Account address","Size of a Group address","Size of an Multisig Account address","Size of a script address","Size of a Single address","","","An unstructured address including the discrimination and …","A valid address in a human readable format","","","","","","","","","","Kind of an address, which include the possible variation …","Kind Type of an address","","","","error that can happen when parsing the Discrimination from …","","","","","","","","","","","","","","","","create a base32 encoding of the byte serialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new AddressReadable from an encoded address","Try to convert from_bytes","","","","","","Validate from a String to create a valid AddressReadable","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Convert a valid AddressReadable to an decoded address","Serialize an address into bytes","Return the Kind type of a given address","","","","","","","Return the size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,0,21,0,3,4,21,21,21,21,0,0,21,3,4,0,1,3,4,3,4,1,1,3,4,5,6,1,3,5,6,5,1,3,4,5,21,6,22,1,3,4,5,21,6,22,0,1,3,4,5,6,1,3,4,5,6,1,3,5,5,5,5,1,3,4,5,6,1,3,4,5,6,1,1,3,4,5,21,21,6,6,22,22,1,3,4,5,21,21,21,6,22,6,5,1,1,6,6,6,6,6,0,0,6,1,3,4,5,1,3,4,5,21,6,22,0,5,1,3,5,5,1,5,5,5,0,6,5,5,5,1,3,4,5,6,5,1,21,6,22,4,1,3,4,5,21,6,22,1,3,4,5,21,6,22,1,3,4,5,21,6,22,1,3,4,5,21,6,22,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,2],[-1,3,2],[-1,4,2],[-1,5,2],[-1,6,2],[[]],[[]],[[]],[6,7],[5,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,10],[1,1],[3,3],[4,4],[5,5],[6,6],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[1,1],12],[[3,3],12],[[5,5],12],[[[13,[-1]]],[[14,[5,10]]],15],[[[13,[[17,[16]]]]],[[14,[-1,10]]],[]],[5,1],[[1,1],18],[[3,3],18],[[4,4],18],[[5,5],18],[[6,6],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[1,19],20],[[1,19],20],[[3,19],20],[[4,19],20],[[5,19],20],[[21,19],20],[[21,19],20],[[6,19],20],[[6,19],20],[[22,19],20],[[22,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,21],[9,21],[-1,-1,[]],[-1,-1,[]],[[7,5],6],[[[17,[16]]],[[14,[5,21]]]],[7,[[14,[1]]]],[7,[[14,[-1]]],[]],[7,[[14,[-1]]],[]],[7,[[14,[6]]]],[7,[[14,[6,21]]]],[[7,7],[[14,[6,21]]]],[7,[[14,[6,21]]]],[16,1],[16,16],[6,8],[[1,-1],11,24],[[3,-1],11,24],[[4,-1],11,24],[[5,-1],11,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[16]]],[[14,[[11,[1,4]],21]]]],[5,3],[[1,1],[[25,[12]]]],[[3,3],[[25,[12]]]],[[5,5],[[25,[12]]]],[5,[[25,[[27,[26]]]]]],[[1,-1],14,28],[[5,[13,[-1]]],[[14,[11,29]]],30],[5,[[14,[[31,[16]],29]]]],[5,32],0,[6,5],[5,[[31,[16]]]],[5,4],[5,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,32],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[4,16],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[34,[16]]],2],[-1,[[27,[26]]],2]],"c":[],"p":[[4,"Discrimination",0],[8,"Gen",188],[4,"Kind",0],[4,"KindType",0],[3,"Address",0],[3,"AddressReadable",0],[15,"str"],[3,"String",189],[4,"PublicKeyError",190],[4,"ReadError",191],[15,"tuple"],[4,"Ordering",192],[3,"Codec",193],[4,"Result",194],[8,"Read",195],[15,"u8"],[15,"slice"],[15,"bool"],[3,"Formatter",196],[6,"Result",196],[4,"Error",0],[3,"ParseDiscriminationError",0],[4,"Error",197],[8,"Hasher",198],[4,"Option",199],[3,"Ed25519",200],[3,"PublicKey",190],[8,"Serializer",201],[4,"WriteError",191],[8,"Write",195],[3,"Vec",202],[15,"usize"],[3,"TypeId",203],[15,"array"]]},\
"chain_core":{"doc":"","t":"AAANNEDDNNNENNNNNNNLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLIIIIQQQQIIQIQIQIIIIQQQQQQNNNNQQEINNIINNQQELLLLKKKKKKLLLLLLKLLLLKKKKKKKLLKKKKKLLLLLLLLLLLLKKK","n":["abor","packer","property","Array","Bytes","DecodeError","Decoder","Encoder","EndOfStream","StreamPending","StreamTooSmall","Tag","TypeMismatch","TypeUnknown","U128","U16","U32","U64","U8","array","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone_into","clone_into","current_element","data","default","end","eq","equivalent","finalize","fmt","fmt","from","from","from","from","from_u8","hole","into","into","into","into","new","new","slice","struct_end","struct_start","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","expected","got","has","left","want","Codec","borrow","borrow_mut","bytes_left","copy_to_slice","from","get_be_u128","get_be_u16","get_be_u32","get_be_u64","get_bytes","get_le_u128","get_le_u16","get_le_u32","get_le_u64","get_nz_u32","get_nz_u64","get_slice","get_u8","has_bytes_left","i128_size","i16_size","i32_size","i64_size","i8_size","inner","into","into_inner","new","position","put_be_u128","put_be_u16","put_be_u32","put_be_u64","put_bytes","put_le_u128","put_le_u16","put_le_u32","put_le_u64","put_u8","read_to_end","set_position","skip_bytes","try_from","try_into","type_id","u128_size","u16_size","u32_size","u64_size","u8_size","Block","BlockDate","BlockId","ChainLength","ChainLength","ChainLength","Date","Date","Deserialize","DeserializeFromSlice","Error","Fragment","Fragment","FragmentId","Fragments","FromStr","HasFragments","HasHeader","Header","Header","Id","Id","Id","Input","Inputs","InvalidData","IoError","IoError","NotEnoughBytes","Output","Outputs","ReadError","Serialize","SizeTooBig","StructureInvalid","Transaction","TransactionId","UnconsumedData","UnknownTag","Version","Version","WriteError","borrow","borrow","borrow_mut","borrow_mut","chain_length","chain_length","date","date","deserialize","deserialize_from_slice","deserialize_validate","deserialize_validate_from_slice","fmt","fmt","fmt","fmt","fragments","from","from","from","from","from_epoch_slot_id","from_str","header","id","id","id","inputs","into","into","next","outputs","parent_id","parent_id","serialize","serialize_as_vec","serialized_size","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version","version","zero"],"q":[[0,"chain_core"],[3,"chain_core::abor"],[82,"chain_core::abor::DecodeError"],[87,"chain_core::packer"],[138,"chain_core::property"],[230,"core::result"],[231,"alloc::alloc"],[232,"alloc::boxed"],[233,"core::fmt"],[234,"core::fmt"],[235,"core::any"],[236,"std::io"],[237,"alloc::vec"],[238,"core::num::nonzero"],[239,"core::num::nonzero"],[240,"std::io"],[241,"core::error"],[242,"alloc::string"]],"d":["","Tooling for packing and unpacking from streams","chain core properties","","","","Create a decoder on some data","ABOR Encoder","","","","ABOR Types","","","","","","","","","","","","","","","","","","cannot serialize more than 256 bytes of contiguous data","","","","","","","","","","","Finalize the encoder into an immutable array of data","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Terminate an array","Array cannot contain more than 256 elements","","","","","","","","","","","","","","","","Add a 128-bit unsigned value in little endian format","","Add a 16-bit unsigned value in little endian format","","Add a 32-bit unsigned value in little endian format","","Add a 64-bit unsigned value in little endian format","","Add an unsigned byte","","","","","","The structure to support (de)serialization of binary data …","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Block property","A trait representing block dates.","Trait identifying the block identifier type. TODO: add a …","","the length of the blockchain (number of blocks)","the length of the blockchain (number of blocks)","The block date.","the block date (also known as a block number) represents …","Define that an object that can be read from an …","Define that an object can be read from a byte slice. This …","","A fragment is some item contained in a block, such as a …","The type representing fragments in this block.","Trait identifying the fragment identifier type. TODO: add …","A by-reference iterator over block’s fragments.","Defines the way to parse the object from a UTF-8 string.","Accessor to fragments within a block.","Access to the block header.","Trait identifying the block header type.","The block header type.","The block header id.","the Block identifier. It must be unique. This mean that 2 …","","The input type of the transaction (if none use <code>()</code>).","The iterable type of transaction inputs (if none use …","","","","","The output type of the transaction (if none use <code>()</code>).","The iterable type of transaction outputs (if none use …","","Define that an object can be written to an <code>std::io::Write</code> …","","","define a transaction within the blockchain. This …","Trait identifying the transaction identifier type.","","","the type associated to the version of a block","the type associated to the version of a block","","","","","","get the block’s chain length. The number of block …","get the block’s chain length. The number of block …","Retrieves the block’s date.","get the block date of the block","","","","","","","","","Returns a by-reference iterator over the fragments in the …","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Retrieves the block’s header.","Retrieves the block’s header id.","return the Block’s identifier.","Return the message’s identifier.","Returns a reference that can be used to iterate over …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a reference that can be used to iterate over …","get the parent block identifier (the previous block in the …","get the parent block identifier (the previous block in the …","","Convenience method to serialize into a byte vector.","Default implementation, not efficient, not recommended to …","","","","","","","","","","","access the version of a given block","access the version of a given block","A special ID used to denote a non-existent block (e.g. the …"],"i":[0,0,0,10,10,0,0,0,3,3,3,0,3,3,10,10,10,10,10,1,1,9,10,3,1,9,10,3,1,9,10,3,10,3,9,9,9,1,10,10,9,10,3,1,9,10,3,10,9,1,9,10,3,1,9,1,9,9,10,3,1,9,10,3,1,9,10,3,1,9,10,3,1,9,1,9,1,9,1,9,1,9,34,34,35,36,35,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,37,38,37,38,0,0,39,0,40,0,40,0,0,0,0,41,37,38,42,43,43,22,22,28,22,43,43,0,0,22,22,0,0,22,22,37,38,0,22,28,22,28,37,38,37,38,44,45,44,45,22,22,28,28,40,22,22,28,28,46,39,41,37,38,42,43,22,28,47,43,37,38,48,48,48,22,28,22,28,22,28,22,28,22,28,37,38,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[[8,[[6,[5]],7]],3]]]],[[9,[6,[5]]],9],[10,10],[3,3],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,[[],9],[1,[[4,[11,3]]]],[[10,10],12],[[-1,-2],12,[],[]],[9,[[8,[[6,[5]],7]]]],[[10,13],[[4,[11,14]]]],[[3,13],[[4,[11,14]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[15,[10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[5]]],1],[[],9],0,[9,9],[9,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[1,[[4,[17,3]]]],[[9,17],9],[1,[[4,[18,3]]]],[[9,18],9],[1,[[4,[19,3]]]],[[9,19],9],[1,[[4,[20,3]]]],[[9,20],9],[1,[[4,[5,3]]]],[[9,5],9],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[[6,[5]]]]],2],[[[21,[-1]],[6,[5]]],[[4,[11,22]]],23],[-1,-1,[]],[[[21,[-1]]],[[4,[17,22]]],23],[[[21,[-1]]],[[4,[18,22]]],23],[[[21,[-1]]],[[4,[19,22]]],23],[[[21,[-1]]],[[4,[20,22]]],23],[[[21,[-1]],2],[[4,[[24,[5,7]],22]]],23],[[[21,[-1]]],[[4,[17,22]]],23],[[[21,[-1]]],[[4,[18,22]]],23],[[[21,[-1]]],[[4,[19,22]]],23],[[[21,[-1]]],[[4,[20,22]]],23],[[[21,[-1]]],[[4,[25,22]]],23],[[[21,[-1]]],[[4,[26,22]]],23],[[[21,[[6,[5]]]],2],[[4,[[6,[5]],22]]]],[[[21,[-1]]],[[4,[5,22]]],23],[[[21,[[6,[5]]]]],12],[[],2],[[],2],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[[[21,[-1]]],-1,[]],[-1,[[21,[-1]]],[]],[[[21,[[27,[-1]]]]],2,[]],[[[21,[-1]],17],[[4,[11,28]]],29],[[[21,[-1]],18],[[4,[11,28]]],29],[[[21,[-1]],19],[[4,[11,28]]],29],[[[21,[-1]],20],[[4,[11,28]]],29],[[[21,[-1]],[6,[5]]],[[4,[11,28]]],29],[[[21,[-1]],17],[[4,[11,28]]],29],[[[21,[-1]],18],[[4,[11,28]]],29],[[[21,[-1]],19],[[4,[11,28]]],29],[[[21,[-1]],20],[[4,[11,28]]],29],[[[21,[-1]],5],[[4,[11,28]]],29],[[[21,[-1]],[24,[5,7]]],[[4,[2,22]]],23],[[[21,[[27,[-1]]]],2],11,[]],[[[21,[[6,[5]]]],2],11],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[[21,[-1]]],[[4,[-2,22]]],23,[]],[[[21,[[6,[5]]]]],[[4,[-1,22]]],[]],[[[21,[-1]]],[[4,[11,22]]],23],[[[21,[[6,[5]]]]],[[4,[11,22]]]],[[22,13],[[4,[11,14]]]],[[22,13],[[4,[11,14]]]],[[28,13],[[4,[11,14]]]],[[28,13],[[4,[11,14]]]],[-1,[],[]],[30,22],[-1,-1,[]],[30,28],[-1,-1,[]],[[19,19],-1,[]],[31,[[4,[-1]]],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[-1,[21,[-2]]],[[4,[11,28]]],[],29],[-1,[[4,[[24,[5,7]],28]]],[]],[-1,2,[]],[22,[[15,[32]]]],[28,[[15,[32]]]],[-1,33,[]],[-1,33,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,[],[]],[-1,[],[]],[[],-1,[]]],"c":[],"p":[[3,"Decoder",3],[15,"usize"],[4,"DecodeError",3],[4,"Result",230],[15,"u8"],[15,"slice"],[3,"Global",231],[3,"Box",232],[3,"Encoder",3],[4,"Tag",3],[15,"tuple"],[15,"bool"],[3,"Formatter",233],[3,"Error",233],[4,"Option",234],[3,"TypeId",235],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"Codec",87],[4,"ReadError",138],[8,"Read",236],[3,"Vec",237],[3,"NonZeroU32",238],[3,"NonZeroU64",238],[3,"Cursor",239],[4,"WriteError",138],[8,"Write",236],[3,"Error",240],[15,"str"],[8,"Error",241],[3,"String",242],[13,"TypeMismatch",82],[13,"StreamTooSmall",82],[13,"StreamPending",82],[8,"Header",138],[8,"Block",138],[8,"FromStr",138],[8,"HasFragments",138],[8,"HasHeader",138],[8,"Fragment",138],[8,"Transaction",138],[8,"Deserialize",138],[8,"DeserializeFromSlice",138],[8,"BlockDate",138],[8,"ChainLength",138],[8,"Serialize",138],[8,"BlockId",138]]},\
"chain_crypto":{"doc":"","t":"IICENNNNNQNIINDSSQQDEEQSSSSQDEIDQEEINNNNNNNNNSIEIQEAAAKAAKAKKKAAAAMKAKAKKMKAKKKAFFFMMDDDCDAAAAAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGMLLMLLLLLLLLLLLLLRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDLLLALLLLLLLLLLLALLLLLLDDSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLNNERRNNNNSNSSDDRSRGDSRDDDSSRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLFLLLFLFLLLLLLLFLFLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLCDLLLLLLLLLLLLLLLLALSSSDDDDLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLAADLLLLLLLLLLSDLLMLLLLLLLLLLMLLLLLLLLNENRNLLLLFFLLLLLFLLLLLSSINNNENNGNLLLLLLLLLFKLLKFLLLMMMMDDIQQDESNNDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLOLLLLLLLMMAAOOSSDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLENINLLLLLLLLKLLLLLKLDNESRNNNGLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKIINNDSSQQDEESSQDEINNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLKLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNERRNRRNNRRRNNLLLLFFLLLLLFFFFFFFFFLLLLLDDLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLNNNSSIDQEEINNNEILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKKMLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMMDDLFFLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLNQQNSIQELLLLLLKLLLKLLLLKFFFL","n":["AsymmetricKey","AsymmetricPublicKey","Blake2b256","EvolvingStatus","Failed","Failed","Failed","HexMalformed","HexMalformed","Input","Invalid","KeyEvolvingAlgorithm","KeyEvolvingSignatureAlgorithm","KeyInvalid","KeyPair","PUBLIC_BECH32_HRP","PUBLIC_KEY_SIZE","PubAlg","Public","PublicKey","PublicKeyError","PublicKeyFromStrError","RandomOutput","SECRET_BECH32_HRP","SECRET_KEY_SIZE","SIGNATURE_BECH32_HRP","SIGNATURE_SIZE","Secret","SecretKey","SecretKeyError","SecretKeySizeStatic","Signature","Signature","SignatureError","SignatureFromStrError","SigningAlgorithm","SizeInvalid","SizeInvalid","SizeInvalid","StructureInvalid","StructureInvalid","StructureInvalid","Success","Success","Success","VERIFIED_RANDOM_SIZE","VerifiableRandomFunction","Verification","VerificationAlgorithm","VerifiedRandomOutput","VrfVerification","algorithms","asymlock","bech32","compute_public","digest","ec","evaluate_and_prove","evolving","generate","get_period","get_period","hash","kes","key","multilock","phantom","public_from_binary","role","secret_from_binary","sign","sign","signature_from_bytes","signdata","strip_verification_output","testing","update","verify","verify_bytes","vrf","vrf_evaluate_and_prove","vrf_verified_get_output","vrf_verify","expected","got","Ed25519","Ed25519Bip32","Ed25519Extended","RistrettoGroup2HashDh","SumEd25519_12","ed25519","ed25519_derive","ed25519_extended","sumed25519","vrf","zkps","Ed25519","Priv","Pub","Sig","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","as_ref","as_ref","as_ref","base32_len","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","compute_public","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","generate","hash","into","into","into","into","public_from_binary","secret_from_binary","sign","signature_from_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_bytes","vzip","vzip","vzip","vzip","write_base32","write_base32","write_base32","Ed25519Bip32","XSig","_phantom","borrow","borrow_mut","bytes","compute_public","from","generate","into","public_from_binary","secret_from_binary","sign","signature_from_bytes","try_from","try_into","type_id","verify_bytes","vzip","EXTENDED_KEY_SIZE","Ed25519Extended","ExtendedPriv","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","compute_public","encode_hex","encode_hex_upper","from","from","from","generate","into","into","secret_from_binary","sign","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","DEPTH","SumEd25519_12","arbitrary_with","borrow","borrow_mut","common","compute_public","fmt","from","generate","get_period","get_period","into","public_from_binary","secret_from_binary","sign","signature_from_bytes","sum","try_from","try_into","type_id","update","verify_bytes","vzip","Depth","Hash","SIZE","Seed","arbitrary_with","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","decr","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_bytes","from_slice","half","incr","into","into","into","keygen_1","set_zero","split_seed","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","zero","DataInZeroArea","Ed25519Signature","Error","INDIVIDUAL_PUBLIC_SIZE","INDIVIDUAL_SECRET_SIZE","InvalidPublicKeySize","InvalidSecretKeySize","InvalidSignatureCount","InvalidSignatureSize","KEYPAIR_OFFSET","KeyCannotBeUpdatedMore","MERKLE_PKS_OFFSET","MERKLE_PKS_OFFSET","MerklePublicKeys","MerkleSignaturePublicKeys","PERIOD_SERIALIZE_SIZE","PK_OFFSET","PUBLIC_KEY_SIZE","PeriodSerialized","PublicKey","SIGMA_OFFSET","SIGMA_SIZE","SecretKey","Seeds","Signature","T_OFFSET","T_OFFSET","USE_TRUNCATE","arbitrary_with","as_bytes","as_bytes","as_ref","as_ref","as_ref","base32_len","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","compute_public","create","create","data","depth","depth","depth","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ed25519_publickey","generate_leftmost_rs","get_merkle_pks","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_updatable","keygen","len","len","len","maximum_secret_key_size","merkle_pks","minimum_secret_key_size","new","next","next","next","next_back","next_back","pk","pkeygen","rs_extend","rs_from_period","rs_pop","seed_offset","seed_offset_index","set_merkle_pks","set_sk","set_t","sigma","sign","signature_size","size_bytes","sk","t","t","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","write_base32","ProvenOutputSeed","RistrettoGroup2HashDh","arbitrary_with","borrow","borrow_mut","compute_public","evaluate_and_prove","fmt","from","generate","into","public_from_binary","secret_from_binary","strip_verification_output","try_from","try_into","type_id","verify","vrf","vzip","BYTES_LEN","BYTES_LEN","BYTES_LEN","OutputSeed","ProvenOutputSeed","PublicKey","SecretKey","arbitrary_with","as_bytes","as_bytes","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","check_base32","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","dleq_proof","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","evaluate","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes_unverified","hash","into","into","into","into","prove","public","public","random","secret","to_buffer","to_buffer","to_bytes","to_output","to_output","to_owned","to_owned","to_owned","to_owned","to_verifiable_output","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u","verifiable_output","verify","vzip","vzip","vzip","vzip","write_base32","write_base32","challenge_context","dleq","ChallengeContext","borrow","borrow_mut","first_challenge","from","into","new","try_from","try_into","type_id","vzip","BYTES_LEN","Zkp","borrow","borrow_mut","challenge","clone","clone_into","eq","equivalent","fmt","from","from_bytes","generate","hash","into","response","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","DataTooSmall","DecryptionError","PointInvalid","SCHEME_OVERHEAD","TagMismatch","borrow","borrow_mut","clone","clone_into","decrypt","encrypt","eq","equivalent","fmt","from","into","shared_key_to_symmetric_key","to_owned","try_from","try_into","type_id","vzip","BECH32_HRP","BYTES_LEN","Bech32","Bech32Malformed","DataInvalid","Err","Error","HrpInvalid","Ok","Result","UnexpectedDataLen","borrow","borrow_mut","data_invalid","fmt","fmt","from","from","into","source","to_bech32_from_bytes","to_bech32_str","to_string","try_from","try_from_bech32_str","try_from_bech32_to_bytes","try_into","type_id","vzip","actual","actual","expected","expected","Context","Digest","DigestAlg","DigestContext","DigestData","DigestOf","Error","HASH_SIZE","InvalidDigestSize","InvalidHexEncoding","TryFromSliceError","append_data","append_data","arbitrary","arbitrary","arbitrary_with","arbitrary_with","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coerce","default","define_from_instances","digest","digest","digest_byteslice","digest_with","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","equivalent","equivalent","finalize","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","inner","into","into","into","into","into","marker","new","new","partial_cmp","partial_cmp","source","to_bech32_str","to_bech32_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bech32_str","try_from_bech32_str","try_from_slice","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","typed_define_from_instances","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","expected","got","macros","ristretto255","gen_group_tests","std_ops_gen","BYTES_LEN","BYTES_LEN","GroupElement","Scalar","ScalarExp","add","add","add","add","add","add","add","add","arbitrary_with","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","eq","eq","equivalent","equivalent","exp_iter","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_hash","from_u64","generator","hash","hash","hash_to_scalar","increment","into","into","into","into_iter","inverse","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","multiscalar_multiplication","negate","next","next_exp_x","one","power","random","size_hint","sub","sub","sub","sub","sub","sub","sub","sub","sum","sum","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vartime_multiscalar_multiplication","vzip","vzip","vzip","x","zero","zero","EvolvingStatus","Failed","KeyEvolvingAlgorithm","Success","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","get_period","into","to_owned","try_from","try_into","type_id","update","vzip","Blake2b256","Err","Error","HASH_SIZE","HASH_SIZE_256","InvalidHashSize","InvalidHexEncoding","Ok","Result","append_data","arbitrary","arbitrary_with","as_hash_bytes","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","define_blake2b_new","define_hash_object","encode_hex","encode_hex_upper","eq","eq","equivalent","finalize","fmt","fmt","fmt","fmt","from","from","from","from","from_str","hash","into","into","new","new","partial_cmp","source","to_bech32_str","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from_bech32_str","try_from_slice","try_from_slice","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","KeyEvolvingSignatureAlgorithm","get_period","AsymmetricKey","AsymmetricPublicKey","HexMalformed","KeyInvalid","KeyPair","PUBLIC_BECH32_HRP","PUBLIC_KEY_SIZE","PubAlg","Public","PublicKey","PublicKeyError","PublicKeyFromStrError","SECRET_BECH32_HRP","SECRET_KEY_SIZE","Secret","SecretKey","SecretKeyError","SecretKeySizeStatic","SizeInvalid","SizeInvalid","StructureInvalid","StructureInvalid","arbitrary","arbitrary","arbitrary_with","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compute_public","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","evolve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_binary","from_binary","from_str","generate","generate","generate","get_period","hash","inner","into","into","into","into","into","into","into_keys","leak_secret","partial_cmp","private_key","public_from_binary","public_key","secret_from_binary","sign","sign_slice","source","test","to_bech32_str","to_bech32_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bech32_str","try_from_bech32_str","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","DataNoHeader","DataTooSmall","DecryptionError","EPHEMERAL_PK_SIZE","HEADER_SIZE","HeaderNotValid","PAD1","PAD2","PkNotParticipant","PointInvalid","RECIPIENT_KEY_SIZE","SESSION_KEY_SIZE","TAG_SIZE","TagMismatch","VersionUnknown","borrow","borrow_mut","clone","clone_into","decrypt","encrypt","eq","equivalent","fmt","from","into","nb_participants","participants","prefix_size","recipient_public_key_nth","recipient_public_key_nth_point","recipient_session_key_nth","recipient_start","scheme_overhead","shared_key_to_symmetric_key","to_owned","try_from","try_into","type_id","vzip","PublicKey","SecretKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","equivalent","from","from","generate","hash","inner","inner","into","into","marker","marker","partial_cmp","role","role","to_owned","to_owned","to_public","try_from","try_from","try_into","try_into","type_id","type_id","unrole","unrole","vzip","vzip","Failed","HexMalformed","Invalid","SIGNATURE_BECH32_HRP","SIGNATURE_SIZE","SafeSignatureCoerce","Signature","Signature","SignatureError","SignatureFromStrError","SigningAlgorithm","SizeInvalid","StructureInvalid","Success","Verification","VerificationAlgorithm","arbitrary","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coerce","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_binary","from_str","into","into","into","into","phantom","safe_coerce","sign","signature_from_bytes","signdata","source","to_bech32_str","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from_bech32_str","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify_bytes","verify_slice","vzip","vzip","vzip","vzip","write_base32","expected","got","TestCryptoGen","TestCryptoRng","arbitrary","arbitrary_public_key","arbitrary_secret_key","arbitrary_with","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fill_bytes","fmt","from","from","from_seed","get_rng","into","into","keypair","next_u32","next_u64","public_key_strategy","secret_key","static_secret_key","to_owned","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Failed","Input","RandomOutput","Success","VERIFIED_RANDOM_SIZE","VerifiableRandomFunction","VerifiedRandomOutput","VrfVerification","borrow","borrow_mut","clone","clone_into","eq","equivalent","evaluate_and_prove","fmt","from","into","strip_verification_output","to_owned","try_from","try_into","type_id","verify","vrf_evaluate_and_prove","vrf_verified_get_output","vrf_verify","vzip"],"q":[[0,"chain_crypto"],[83,"chain_crypto::SignatureError"],[85,"chain_crypto::algorithms"],[96,"chain_crypto::algorithms::ed25519"],[177,"chain_crypto::algorithms::ed25519_derive"],[196,"chain_crypto::algorithms::ed25519_extended"],[229,"chain_crypto::algorithms::sumed25519"],[253,"chain_crypto::algorithms::sumed25519::common"],[315,"chain_crypto::algorithms::sumed25519::sum"],[486,"chain_crypto::algorithms::vrf"],[506,"chain_crypto::algorithms::vrf::vrf"],[607,"chain_crypto::algorithms::zkps"],[609,"chain_crypto::algorithms::zkps::challenge_context"],[620,"chain_crypto::algorithms::zkps::dleq"],[644,"chain_crypto::asymlock"],[666,"chain_crypto::bech32"],[695,"chain_crypto::bech32::Error"],[699,"chain_crypto::digest"],[837,"chain_crypto::digest::Error"],[839,"chain_crypto::ec"],[841,"chain_crypto::ec::macros"],[843,"chain_crypto::ec::ristretto255"],[948,"chain_crypto::evolving"],[968,"chain_crypto::hash"],[1034,"chain_crypto::kes"],[1036,"chain_crypto::key"],[1188,"chain_crypto::multilock"],[1228,"chain_crypto::role"],[1267,"chain_crypto::sign"],[1365,"chain_crypto::sign::SignatureError"],[1367,"chain_crypto::testing"],[1404,"chain_crypto::vrf"],[1432,"rand_core"],[1433,"rand_core"],[1434,"bech32"],[1435,"alloc::alloc"],[1436,"alloc::vec"],[1437,"core::iter::traits::collect"],[1438,"core::fmt"],[1439,"core::fmt"],[1440,"core::any"],[1441,"bech32"],[1442,"ed25519_dalek::keypair"],[1443,"ed25519"],[1444,"ed25519_dalek::public"],[1445,"ed25519_dalek::errors"],[1446,"core::option"],[1447,"cryptoxide::chacha20poly1305"],[1448,"core::error"],[1449,"core::marker"],[1450,"core::marker"],[1451,"core::marker"],[1452,"core::cmp"],[1453,"core::convert"],[1454,"typed_bytes"],[1455,"core::ops::function"],[1456,"hex::error"],[1457,"curve25519_dalek_ng::ristretto"],[1458,"cryptoxide::blake2b"],[1459,"core::iter::traits::collect"],[1460,"ed25519_bip32::key"],[1461,"ed25519_bip32::key"],[1462,"rand_core::error"]],"d":["","","","Evolving status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple Assymmetric locking mechanism using:","","","module to provide some handy interfaces atop the hashes so …","Module defining the Group Elements and Scalar structures …","","","","Get the period associated with this signature","Get the period associated with this signature","module to provide some handy interfaces atop the hashes so …","","","Similar to asymlock but takes a set of recipients instead …","","","","","","","","","","","Update the secret key to the next period","","","","Evaluate the VRF for a specific input and return a …","","Verify the VRF output for a specific input is correct","","","ED25519 Signing Algorithm","Ed25519 BIP32 Signature algorithm","ED25519 Signing Algorithm with extended secret key","","","","","","","","","ED25519 Signing Algorithm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ed25519 BIP32 Signature algorithm","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","ED25519 Signing Algorithm with extended secret key","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Secret Key in the binary tree sum composition of the …","","Signature using the repetitive MMM sum composition","","","","","","Get the bytes representation of the signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Generate a keypair using the seed as master seed for the …","","","","","","","","","","","","","","Generate the public key from a specific level and a given …","","","","","","","","","","","","Compute the size in bytes of a signature currently this is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","VRF","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Verifiable Random Function (VRF) implementation using the …","","","","","VRF Output (Point)","VRF Proof of generation","VRF Public Key","VRF Secret Key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a Proof","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a proof, for the given parameters; no check is made …","Get the public key associated with a secret key","","Create a new random secret key","","","","Serialize the secret key in binary form","Get the output for this input and a known suffix","","","","","","","","","","","","","","","","","","","","Get the verifiable output and the associated input base …","Verify a proof for a given public key and a data slice","","","","","","","","Non-interactive Zero Knowledge proof of Discrete Logarithm …","Challenge context for Discrete Logarithm Equality proof. …","","","Generation of the <code>first_challenge</code>. This challenge is …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initialise the challenge context, by including the common …","","","","","","Proof of correct decryption. Note: if the goal is to …","","","","","","","","","Returns the argument unchanged.","","Generate a DLEQ proof","","Calls <code>U::from(self)</code>.","","","","","","","Verify a DLEQ proof","","","","","","","","","","","","Decrypt data in the asymmetric lock. this is the dual of …","Encrypt data in an assymetric lock","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The human-readable prefix that is used to represent the …","Length of the encoded binary data.","Bech32 encoding for fixed-size binary objects.","","","Contains the error value","","","Contains the success value","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Produces a Bech32 string format representation of the …","","","Decodes the object from its Bech32 string representation.","","","","","","","","","A Digest Context for the H digest algorithm","","","","","A typed version of Digest","","","","","","","Append data in the context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coerce a digest of T, to a digest of U","","","Get the digest of a slice of data.","Get the digest of object T, given its AsRef&lt;u8&gt; …","","Get the digest of object T, given its serialization …","","","","","","","","","","","Finalize a context and create a digest","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new digest context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal macros","","","","","Size of the byte representation of <code>GroupElement</code>. We always …","","","Provides an iterator over the powers of a <code>Scalar</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of the powers of <code>x</code>.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns none if slice is not canonical","","Point from hash","","","","","","Increment a","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","multiplicative inverse","","","","","","","","","","","","","","Constant-time multiscalar multiplication using Straus …","","","","multiplicative identity","Raises <code>x</code> to the power <code>n</code> using binary exponentiation, with …","","","","","","","","","","","","","","","","","","","","","","","","","","","Variable multiscalar multiplication. This function is …","","","","","additive identity","","Evolving status","","","","","","","","","","","Returns the argument unchanged.","Get the period associated with this signature","Calls <code>U::from(self)</code>.","","","","","Update the secret key to the next period","","Blake2b 256 bits","Contains the error value","","","","","","Contains the success value","","","","","","","","","","","","","","","","","","defines a blake2b object","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the period associated with this signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Evolve the secret key to the next period","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Get the period associated with the current instance of the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrypt data in the asymmetric lock. this is the dual of …","Encrypt data in an assymetric lock for multiple recipients","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","an Arbitrary friendly cryptographic generator","A faster non-cryptographic RNG to be used in tests. NOTE: …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","get the nth deterministic RNG","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the nth deterministic keypair","","","","Get the nth deterministic secret key","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Evaluate the VRF for a specific input and return a …","","Verify the VRF output for a specific input is correct",""],"i":[0,0,0,0,10,12,11,97,108,14,108,0,0,97,0,96,96,94,96,0,0,0,14,94,103,107,107,94,0,0,0,0,107,0,0,0,8,6,9,8,6,9,10,12,11,14,0,0,0,14,0,0,0,0,94,0,0,14,0,94,98,115,0,0,0,0,101,96,0,94,0,102,107,101,14,0,98,14,107,0,0,0,0,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,16,17,18,16,17,18,16,17,18,27,16,17,18,27,16,17,18,16,17,18,16,17,18,16,17,18,27,16,17,18,16,17,18,17,17,27,16,17,18,27,16,17,18,27,17,27,16,17,18,27,27,27,27,16,17,18,27,16,17,18,27,16,17,18,27,16,17,18,27,27,16,17,18,16,17,18,0,0,117,118,118,117,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,34,34,119,34,119,34,34,34,34,119,34,34,119,34,34,119,119,34,119,119,34,119,34,119,34,119,34,119,34,34,0,0,37,37,37,0,37,37,37,37,37,37,37,37,37,37,37,0,37,37,37,37,37,37,0,0,39,0,39,41,39,39,40,39,41,40,39,41,39,40,39,41,40,39,41,41,39,39,40,39,40,39,40,39,41,40,39,41,39,39,41,41,40,39,41,0,39,0,40,39,41,41,40,39,41,40,39,41,40,39,41,40,39,41,39,39,46,46,0,0,0,46,46,46,46,43,46,43,38,0,0,0,38,0,0,0,38,0,0,0,0,43,38,0,36,36,38,43,36,38,43,36,38,48,49,50,46,43,36,38,48,49,50,46,43,36,38,43,36,38,43,36,38,43,36,38,43,43,38,43,43,38,43,43,36,38,43,36,38,36,36,46,36,38,48,49,50,46,46,43,36,38,43,36,38,36,0,43,0,36,48,49,50,46,43,36,38,48,49,50,43,0,48,49,50,0,38,0,48,48,49,50,48,50,38,0,43,0,43,43,43,43,43,43,38,0,0,38,43,43,38,43,36,38,48,49,50,46,43,36,38,48,49,50,46,43,36,38,48,49,50,46,43,36,38,0,0,48,49,50,46,43,36,38,43,36,38,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,53,54,55,0,0,0,0,54,53,54,53,54,53,54,53,54,56,55,53,54,56,55,55,53,53,54,53,54,56,55,53,54,56,55,55,53,54,53,54,53,54,56,55,53,54,56,55,53,53,54,56,55,53,54,56,55,53,54,55,55,54,53,54,56,55,53,53,53,53,53,54,55,53,56,55,53,54,56,55,55,53,54,56,55,53,54,56,55,53,54,56,55,55,53,55,53,54,56,55,53,54,0,0,0,59,59,59,59,59,59,59,59,59,59,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,0,62,0,62,62,62,62,62,0,0,62,62,62,62,62,0,62,62,62,62,62,120,120,0,64,64,72,0,64,72,0,64,64,64,64,64,64,64,64,64,64,0,120,64,64,120,0,64,64,64,121,122,121,122,0,0,0,75,75,0,0,75,79,79,0,75,74,76,78,76,78,76,78,76,78,74,79,80,76,78,74,79,80,76,78,76,78,74,79,80,76,78,74,79,80,76,78,76,78,78,74,0,76,78,78,78,76,78,76,78,79,76,78,76,78,75,74,79,79,80,80,76,76,78,78,74,79,79,80,76,76,76,76,78,78,78,78,76,78,76,78,78,74,79,80,76,78,78,75,74,76,78,79,76,78,74,79,80,76,78,79,80,76,78,74,79,80,76,76,78,78,76,78,75,74,79,80,76,78,74,79,80,76,78,0,74,79,80,76,78,76,78,123,123,0,0,0,0,60,57,0,0,0,60,60,60,60,57,57,57,57,57,60,60,57,86,60,57,86,60,57,86,60,57,86,57,60,57,60,57,60,60,57,60,60,57,86,60,57,57,60,57,60,57,60,60,60,57,86,86,60,60,60,60,60,60,60,60,60,57,57,57,57,57,57,60,86,86,60,60,60,86,60,60,60,60,57,57,57,57,60,57,60,57,60,57,86,60,57,86,60,57,86,60,57,86,57,60,57,86,86,60,57,0,10,0,10,10,10,10,10,10,10,10,10,98,10,10,10,10,10,98,10,0,93,0,58,0,92,92,93,0,58,58,58,58,58,58,92,58,92,58,58,92,58,92,58,58,0,0,58,58,92,58,58,58,92,92,58,58,92,92,58,58,58,58,92,58,58,58,58,92,58,92,58,92,58,92,58,58,58,58,92,58,92,58,92,58,58,0,115,0,0,97,97,0,96,96,94,96,0,0,0,94,103,94,0,0,0,8,6,8,6,13,95,15,95,15,15,13,15,95,8,6,97,13,15,95,8,6,97,15,13,15,95,8,6,97,13,15,95,8,6,97,15,94,15,15,15,8,6,97,15,8,6,13,13,15,15,95,95,8,8,6,6,97,97,13,15,95,95,8,8,6,6,97,13,15,15,94,13,95,13,15,15,13,15,95,8,6,97,95,13,15,95,96,95,94,13,13,97,0,13,15,13,15,95,8,6,97,13,15,95,8,6,97,13,15,95,8,6,97,13,15,13,15,95,8,6,97,13,15,95,8,6,97,13,15,95,8,6,97,15,104,104,0,0,0,104,0,0,104,104,0,0,0,104,104,104,104,104,104,0,0,104,104,104,104,104,0,0,0,0,0,0,0,0,0,104,104,104,104,104,0,0,105,106,105,106,105,106,105,106,106,106,106,105,106,105,106,105,106,105,106,105,106,106,105,106,105,106,105,105,106,105,106,105,106,105,106,105,106,12,108,108,107,107,0,0,107,0,0,0,9,9,12,0,0,101,101,101,101,12,9,108,101,12,9,108,101,101,12,9,108,101,12,9,108,101,101,101,12,9,108,12,9,101,101,12,9,9,108,108,101,12,12,9,9,108,101,101,101,12,9,108,101,101,102,107,101,108,101,101,12,9,108,101,9,108,101,12,9,108,101,101,12,9,108,101,12,9,108,101,107,101,101,12,9,108,101,116,116,0,0,111,0,0,111,112,112,111,112,111,111,111,112,111,112,111,112,111,112,111,111,112,112,0,111,0,111,112,112,111,112,111,112,111,112,111,11,14,14,11,14,0,14,0,11,11,11,11,11,11,14,11,11,11,14,11,11,11,11,14,0,0,0,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,[-1,[],[1,2]],0,[-1,[],[1,2]],[[],3],[[],3],0,0,0,0,0,[[[5,[4]]],[[7,[6]]]],0,[[[5,[4]]],[[7,[8]]]],0,[[[5,[4]]]],[[[5,[4]]],[[7,[9]]]],0,[[]],0,[[],10],[[],11],[[[5,[4]]],12],0,[[[13,[-1]],-2],[],14,[1,2]],[[]],[[[15,[-1]]],11,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,[[5,[4]]]],[17,[[5,[4]]]],[18,[[5,[4]]]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[-1,[[7,[[22,[20,21]]]]],[]],[-1,[[7,[[22,[20,21]]]]],[]],[16,16],[17,17],[18,18],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[17,17],26],[[-1,-2],26,[],[]],[[27,28],29],[[16,28],29],[[17,28],29],[[18,28],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[1,2]],[[17,-1],23,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[4]]],[[7,[6]]]],[[[5,[4]]],[[7,[8]]]],[[[5,[4]]],18],[[[5,[4]]],[[7,[9]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[5,[4]]],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],[[-1,-2],[[7,[23]]],[],32],[[-1,-2],[[7,[23]]],[],32],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[]],[-1,-1,[]],[-1,[],[1,2]],[-1,-2,[],[]],[[[5,[4]]],[[7,[6]]]],[[[5,[4]]],[[7,[8]]]],[[[5,[4]]],[[33,[4]]]],[[[5,[4]]],[[7,[9]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[[[5,[4]]],12],[-1,-2,[],[]],0,0,0,[34,[[5,[4]]]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[34,34],[[-1,-2],23,[],[]],[[]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-1,[]],[[[35,[4]]],34],[-1,-1,[]],[-1,[],[1,2]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[4]]],[[7,[8]]]],[[[5,[4]]],18],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],0,0,[[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],36],[[37,28],29],[-1,-1,[]],[-1,[],[1,2]],[[],3],[[],3],[-1,-2,[],[]],[[[5,[4]]],[[7,[6]]]],[[[5,[4]]],[[7,[8]]]],[[[5,[4]]],38],[[[5,[4]]],[[7,[9]]]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[[],10],[[[5,[4]]],12],[-1,-2,[],[]],0,0,0,0,[[]],[[]],[39,[[5,[4]]]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[40,40],[39,39],[41,41],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[41,41],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[40,40],26],[[39,39],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[40,28],29],[[39,28],29],[[41,28],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[35,[4]]],39],[[[5,[4]]],39],[41,19],[41,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,42],[39,23],[39,[[23,[39,39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,19],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[36,[[5,[4]]]],[38,[[5,[4]]]],[43,[[5,[4]]]],[36,[[5,[4]]]],[38,[[5,[4]]]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[-1,[[7,[[22,[20,21]]]]],[]],[-1,[[7,[[22,[20,21]]]]],[]],[43,43],[36,36],[38,38],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[43,36],[[19,42,[5,[[23,[36,36]]]],[5,[39]]],43],[[19,44,45,[5,[36]]],38],0,[43,41],[38,41],0,[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[36,36],26],[[-1,-2],26,[],[]],[[46,28],29],[[36,28],29],[[38,28],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,46],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[41,[5,[4]]],[[7,[43,46]]]],[[[5,[4]]],[[7,[36,46]]]],[[41,[5,[4]]],[[7,[38,46]]]],[45,36],[[[22,[39]],41,39],42],[[43,19],[[23,[36,36]]]],[[36,36],36],[[36,-1],23,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,26],[[41,39],[[23,[43,36]]]],[48,19],[49,19],[50,19],[41,19],[38,50],[41,19],[[[5,[4]]],48],[48,51],[49,51],[50,51],[48,51],[50,51],[38,45],[[41,39],36],[[43,19,49],23],[[41,19],3],[43,[[51,[39]]]],[41,19],[[41,19],19],[[43,19,[23,[36,36]]],23],[[43,42],23],[[43,19],23],[38,44],[[43,[5,[4]]],38],[41,19],[38,19],[43,42],[43,19],[38,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[43,[[7,[23,46]]]],[[36,[5,[4]],38],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],[[-1,-2],[[7,[23]]],[],32],[[-1,-2],[[7,[23]]],[],32],0,0,[[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[-1,[],[1,2]],[[52,28],29],[-1,-1,[]],[-1,[],[1,2]],[-1,-2,[],[]],[[[5,[4]]],[[7,[6]]]],[[[5,[4]]],[[7,[8]]]],[[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[[],11],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[[]],[53,[[5,[4]]]],[54,[[5,[4]]]],[53,[[5,[4]]]],[54,[[5,[4]]]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,[[35,[4]]]],0,[-1,[[7,[[22,[20,21]]]]],[]],[-1,[[7,[[22,[20,21]]]]],[]],[53,53],[54,54],[56,56],[55,55],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],0,[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[53,53],26],[[54,54],26],[[56,56],26],[[55,55],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[53,-1,[5,[4]]],55,[1,2]],[[53,28],29],[[54,28],29],[[56,28],29],[[55,28],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[35,[4]]],[[51,[53]]]],[[[5,[4]]],[[7,[54,6]]]],[[54,[5,[4]],[5,[4]]],[[51,[55]]]],[[[5,[4]]],[[51,[55]]]],[[54,-1],23,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[53,-1,57,56],55,[1,2]],[53,54],0,[-1,53,[1,2]],0,[[54,[5,[4]]],23],[[55,[5,[4]]],23],[53,[[35,[4]]]],[[56,[5,[4]],[5,[4]]],58],[55,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,54,[5,[4]]],[[51,[56]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[[53,[5,[4]]],[[23,[57,56]]]],[[55,54,[5,[4]]],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],[[-1,-2],[[7,[23]]],[],32],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[59,57,57],60],[-1,-1,[]],[-1,-2,[],[]],[[57,57,57,57],59],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[61,61],[[-1,-2],23,[],[]],[[61,61],26],[[-1,-2],26,[],[]],[[61,28],29],[-1,-1,[]],[[[5,[4]]],[[51,[61]]]],[[57,57,57,57,60,-1],61,[2,1]],[[61,-1],23,30],[-1,-2,[],[]],0,[61,[[35,[4]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[[61,57,57,57,57],26],[-1,-2,[],[]],[[61,[5,[4]]],23],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[62,62],[[-1,-2],23,[],[]],[[[5,[4]],60,[5,[4]],[5,[4]]],[[7,[23,62]]]],[[-1,[5,[4]],57,[5,[4]]],[[22,[4]]],[1,2]],[[62,62],26],[[-1,-2],26,[],[]],[[62,28],29],[-1,-1,[]],[-1,-2,[],[]],[[[5,[4]],57],63],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,64,[65,66,67]],[[64,28],29],[[64,28],[[7,[23,68]]]],[69,64],[-1,-1,[]],[-1,-2,[],[]],[64,[[51,[65]]]],[[[5,[4]]],70],[-1,70,[]],[-1,70,[]],[-1,[[7,[-2]]],[],[]],[71,[[72,[-1]]],73],[71,[[72,[[22,[4]]]]]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[4]]],23],[[[74,[-1]],[5,[4]]],23,75],[-1,[[76,[-2]]],77,75],[-1,[[78,[-2,-3]]],77,75,66],[[]],[[]],[[[76,[-1]]],[[5,[4]]],75],[[[78,[-1,-2]]],[[5,[4]]],75,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[-1,[[7,[[22,[20,21]]]]],[]],[[[74,[-1]]],[[74,[-1]]],75],[79,79],[80,80],[[[76,[-1]]],[[76,[-1]]],75],[[[78,[-1,-2]]],[[78,[-1,-2]]],75,[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[[76,[-1]],[76,[-1]]],81,75],[[[78,[-1,-2]],[78,[-1,-2]]],81,75,[]],[[[78,[-1,-2]]],[[78,[-1,-3]]],75,[],[]],[[],[[74,[-1]]],75],0,[[[5,[4]]],[[76,[-1]]],75],[-1,[[78,[-2,-1]]],[[82,[[5,[4]]]]],75],[[[83,[-1]]],[[78,[-2,-1]]],[],75],[[-1,-2],[[78,[-3,-1]]],[],84,75],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[79,79],26],[[[76,[-1]],[76,[-1]]],26,75],[[[78,[-1,-2]],[78,[-1,-2]]],26,75,[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[]],[[[74,[-1]]],[[76,[-1]]],75],[[79,28],29],[[79,28],29],[[80,28],29],[[80,28],29],[[[76,[-1]],28],29,75],[[[76,[-1]],28],29,75],[[[78,[-1,-2]],28],29,75,[]],[[[78,[-1,-2]],28],29,75,[]],[-1,-1,[]],[85,79],[-1,-1,[]],[-1,-1,[]],[58,[[76,[58]]]],[-1,-1,[]],[[[78,[-1,-2]]],[[76,[-1]]],75,[]],[[[35,[4]]],[[76,[58]]]],[[[76,[-1]]],[[78,[-1,-2]]],75,[]],[58,[[78,[58,-1]]],[]],[-1,-1,[]],[[[35,[4]]],[[78,[58,-1]]],[]],[71,[[7,[[76,[-1]]]]],75],[71,[[7,[[78,[-1,-2]]]]],75,[]],[[[76,[-1]],-2],23,75,30],[[[78,[-1,-2]],-3],23,75,[],30],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[]],[[],[[74,[-1]]],75],[[[76,[-1]],[76,[-1]]],[[51,[81]]],75],[[[78,[-1,-2]],[78,[-1,-2]]],[[51,[81]]],75,[]],[79,[[51,[65]]]],[[[76,[58]]],70],[[[78,[58,-1]]],70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[5,[4]]],[[7,[[76,[-1]]]]],75],[[[5,[4]]],[[7,[[78,[-1,-2]]]]],75,[]],[-1,[[7,[-2]]],[],[]],[71,[[72,[[76,[58]]]]]],[71,[[72,[[78,[58,-1]]]]],[]],[[[5,[4]]],[[7,[79]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],[[-1,-2],[[7,[23]]],[],32],0,0,0,0,0,0,0,0,0,0,0,[[60,60]],[[60,60],60],[[60,60]],[[60,60]],[[57,57]],[[57,57],57],[[57,57]],[[57,57]],[23],[60,[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[57,57],[86,86],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[57,87],[[60,60],26],[[57,57],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[60,86],[[60,28],29],[[57,28],29],[-1,-1,[]],[26,60],[-1,-1,[]],[-1,-1,[]],[[[5,[4]]],[[51,[60]]]],[[[5,[4]]],[[51,[57]]]],[[[5,[4]]],57],[88,60],[[],57],[[60,-1],23,30],[[57,-1],23,30],[89,60],[60,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[[60,57]],[[60,60],60],[[60,57],57],[[60,60]],[[60,60]],[[60,60]],[[60,57]],[[60,57]],[[57,60]],[[57,60]],[[57,60],57],[[57,60]],[[57,88],57],[[-1,-2],57,90,90],[60,60],[86,[[51,[60]]]],0,[[],60],[[60,19],60],[-1,60,[1,2]],[86,[[23,[19,[51,[19]]]]]],[[60,60]],[[60,60]],[[60,60],60],[[60,60]],[[57,57]],[[57,57],57],[[57,57]],[[57,57]],[-1,[[51,[60]]],91],[-1,57,91],[60,[[35,[4]]]],[57,[[35,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[-1,-2],57,90,90],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],60],[[],57],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[[-1,-2],23,[],[]],[[10,10],26],[[-1,-2],26,[],[]],[[10,28],29],[-1,-1,[]],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[[],10],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[[5,[4]]],23],[-1,58,77],[[]],[58,[[35,[4]]]],[58,[[5,[4]]]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[92,92],[58,58],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[58,58],81],0,0,[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[92,92],26],[[58,58],26],[[-1,-2],26,[],[]],[[]],[[92,28],29],[[92,28],29],[[58,28],29],[[58,28],29],[-1,-1,[]],[85,92],[-1,-1,[]],[[[35,[4]]],58],[71,[[7,[58]]]],[[58,-1],23,30],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[4]]],58],[[]],[[58,58],[[51,[81]]]],[92,[[51,[65]]]],[58,70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[71,[[72,[58]]]],[[[5,[4]]],[[7,[79]]]],[[[5,[4]]],[[93,[58]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],0,[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[13,[-2]]],77,94],[-1,[[95,[-2]]],77,94],[23],[[]],[[[15,[-1]]],[[5,[4]]],96],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[[[13,[-1]]],[[13,[-1]]],94],[[[15,[-1]]],[[15,[-1]]],96],[[[95,[-1]]],[[95,[-1]]],94],[8,8],[6,6],[97,97],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[[15,[-1]],[15,[-1]]],81,96],[[]],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[[15,[-1]],[15,[-1]]],26,96],[[8,8],26],[[6,6],26],[[97,97],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[[13,[-1]]],10,98],[[[13,[-1]],28],29,94],[[[15,[-1]],28],29,96],[[[15,[-1]],28],29,96],[[[95,[-1]],28],29,94],[[[95,[-1]],28],29,94],[[8,28],29],[[8,28],29],[[6,28],29],[[6,28],29],[[97,28],29],[[97,28],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[-1]]],[[95,[-1]]],94],[-1,-1,[]],[99,8],[-1,-1,[]],[100,6],[-1,-1,[]],[[[5,[4]]],[[7,[[13,[-1]],8]]],94],[[[5,[4]]],[[7,[[15,[-1]],6]]],96],[71,[[7,[[15,[-1]]]]],96],[-1,[],[1,2]],[-1,[[13,[-2]]],[1,2],94],[-1,[[95,[-2]]],[1,2],94],[[[13,[-1]]],3,98],[[[15,[-1]],-2],23,96,30],[[[15,[-1]]],[],96],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[-1]]],[[23,[[13,[-1]],15]]],94],[[[13,[-1]]],[],94],[[[15,[-1]],[15,[-1]]],[[51,[81]]],96],[[[95,[-1]]],[[13,[-1]]],94],[[[5,[4]]],[[7,[6]]]],[[[95,[-1]]],15,94],[[[5,[4]]],[[7,[8]]]],[[[13,[-1]],-2],[[101,[-2]]],102,[73,[82,[[5,[4]]]]]],[[[13,[-1]],[5,[4]]],[[101,[-2]]],102,73],[97,[[51,[65]]]],0,[[[13,[-1]]],70,103],[[[15,[-1]]],70,96],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1]]],15,94],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[71,[[7,[[13,[-1]],64]]],103],[71,[[7,[[15,[-1]],64]]],96],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[104,104],[[-1,-2],23,[],[]],[[[5,[4]],60,[5,[4]],[5,[4]]],[[7,[23,104]]]],[[-1,[5,[4]],[5,[57]],[5,[4]]],[[22,[4]]],[1,2]],[[104,104],26],[[-1,-2],26,[],[]],[[104,28],29],[-1,-1,[]],[-1,-2,[],[]],[[[5,[4]]],[[7,[19,104]]]],[[[5,[4]]],[[7,[[22,[57]],104]]]],[19,19],[[[5,[4]],19],[[5,[4]]]],[[[5,[4]],19],[[7,[57,104]]]],[[[5,[4]],19],[[5,[4]]]],[19,19],[19,19],[[[5,[4]],[5,[4]]],63],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[105,[-1,-2]]],[[105,[-1,-2]]],[],94],[[[106,[-1,-2]]],[[106,[-1,-2]]],[],96],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[[106,[-1,-2]],[106,[-1,-2]]],81,[],96],[[[106,[-1,-2]],[106,[-1,-2]]],26,[],96],[[-1,-2],26,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[[105,[-2,-3]]],[1,2],[],94],[[[106,[-1,-2]],-3],23,[],96,30],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[106,[-1,-2]],[106,[-1,-2]]],[[51,[81]]],[],96],[[[13,[-1]]],[[105,[-2,-1]]],94,[]],[[[15,[-1]]],[[106,[-2,-1]]],96,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[105,[-1,-2]]],[[106,[-1]]],[],94],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[[105,[-1,-2]]],[[13,[-2]]],[],94],[[[106,[-1,-2]]],[[15,[-2]]],[],96],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[101,[-2,-3]]],77,66,107],[[[101,[-1,-2]]],[[5,[4]]],73,107],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[22,[20,21]]]]],[]],[[[101,[-1,-2]]],[[101,[-1,-2]]],[],107],[12,12],[9,9],[108,108],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[[101,[-1,-2]]],[[101,[-3,-2]]],73,107,73],[-1,-2,[],[[25,[24]]]],[-1,-2,[],[[25,[24]]]],[[12,12],26],[[9,9],26],[[108,108],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[[101,[-1,-2]],28],29,73,107],[[[101,[-1,-2]],28],29,73,107],[[12,28],29],[[9,28],29],[[9,28],29],[[108,28],29],[[108,28],29],[-1,-1,[]],[26,12],[-1,-1,[]],[109,9],[-1,-1,[]],[-1,-1,[]],[[[5,[4]]],[[7,[[101,[-1,-2]],9]]],73,107],[71,[[7,[[101,[-1,-2]]]]],73,107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[101,[-1,-2]]],[[101,[-3,-2]]],73,107,[73,[110,[-1]]]],[[[5,[4]]]],[[[5,[4]]],[[7,[9]]]],0,[108,[[51,[65]]]],[[[101,[-1,-2]]],70,[],107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[71,[[7,[[101,[-1,-2]],64]]],[],107],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[101,[-1,-2]],[15,[-2]],-1],12,[73,[82,[[5,[4]]]]],107],[[[5,[4]]],12],[[[101,[-1,-2]],[15,[-2]],[5,[4]]],12,73,107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[7,[23]]],[],32],0,0,0,0,[-1,111,77],[-1,15,77],[-1,[[13,[-2]]],77,94],[[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,111],[[-1,-2],23,[],[]],[[112,[5,[4]]],23],[[111,28],29],[-1,-1,[]],[-1,-1,[]],[[],112],[[111,3],112],[-1,-2,[],[]],[-1,-2,[],[]],[[111,3],[[95,[-1]]],94],[112,3],[112,88],[[],[[0,[113]]]],[[111,3],[[13,[-1]]],94],[[],[[13,[-1]]],94],[-1,-2,[],[]],[[112,[5,[4]]],[[7,[23,114]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[11,11],[[-1,-2],23,[],[]],[[11,11],26],[[-1,-2],26,[],[]],[-1,[],[1,2]],[[11,28],29],[-1,-1,[]],[-1,-2,[],[]],[[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[[],11],[[[13,[-1]],-2],[],14,[1,2]],[[]],[[[15,[-1]]],11,14],[-1,-2,[],[]]],"c":[],"p":[[8,"RngCore",1432],[8,"CryptoRng",1432],[15,"u32"],[15,"u8"],[15,"slice"],[4,"PublicKeyError",1036],[4,"Result",1433],[4,"SecretKeyError",1036],[4,"SignatureError",1267],[4,"EvolvingStatus",948],[4,"VrfVerification",1404],[4,"Verification",1267],[3,"SecretKey",1036],[8,"VerifiableRandomFunction",1404],[3,"PublicKey",1036],[3,"Priv",96],[3,"Pub",96],[3,"Sig",96],[15,"usize"],[3,"u5",1434],[3,"Global",1435],[3,"Vec",1436],[15,"tuple"],[15,"char"],[8,"FromIterator",1437],[15,"bool"],[3,"Ed25519",96],[3,"Formatter",1438],[6,"Result",1438],[8,"Hasher",1439],[3,"TypeId",1440],[8,"WriteBase32",1434],[3,"Signature",1441],[3,"ExtendedPriv",196],[15,"array"],[3,"PublicKey",315],[3,"SumEd25519_12",229],[3,"Signature",315],[3,"Seed",253],[3,"Hash",253],[3,"Depth",253],[3,"Keypair",1442],[3,"SecretKey",315],[3,"Signature",1443],[3,"PublicKey",1444],[4,"Error",315],[6,"SignatureError",1445],[3,"MerklePublicKeys",315],[3,"Seeds",315],[3,"MerkleSignaturePublicKeys",315],[4,"Option",1446],[3,"RistrettoGroup2HashDh",486],[3,"SecretKey",506],[3,"PublicKey",506],[3,"ProvenOutputSeed",506],[3,"OutputSeed",506],[3,"GroupElement",843],[3,"Blake2b256",968],[3,"ChallengeContext",609],[3,"Scalar",843],[3,"Zkp",620],[4,"DecryptionError",644],[6,"ChaCha20Poly1305",1447],[4,"Error",666],[8,"Error",1448],[8,"Send",1449],[8,"Sync",1449],[3,"Error",1438],[4,"Error",1434],[3,"String",1450],[15,"str"],[6,"Result",666],[8,"Sized",1449],[3,"Context",699],[8,"DigestAlg",699],[3,"Digest",699],[8,"Gen",1451],[3,"DigestOf",699],[4,"Error",699],[3,"TryFromSliceError",699],[4,"Ordering",1452],[8,"AsRef",1453],[3,"ByteSlice",1454],[8,"FnOnce",1455],[4,"FromHexError",1456],[3,"ScalarExp",843],[3,"CompressedRistretto",1457],[15,"u64"],[3,"Blake2b",1458],[8,"IntoIterator",1437],[8,"Iterator",1459],[4,"Error",968],[6,"Result",968],[8,"AsymmetricKey",1036],[3,"KeyPair",1036],[8,"AsymmetricPublicKey",1036],[4,"PublicKeyFromStrError",1036],[8,"KeyEvolvingAlgorithm",948],[4,"PrivateKeyError",1460],[4,"PublicKeyError",1460],[3,"Signature",1267],[8,"SigningAlgorithm",1267],[8,"SecretKeySizeStatic",1036],[4,"DecryptionError",1188],[3,"SecretKey",1228],[3,"PublicKey",1228],[8,"VerificationAlgorithm",1267],[4,"SignatureFromStrError",1267],[4,"SignatureError",1441],[8,"SafeSignatureCoerce",1267],[3,"TestCryptoGen",1367],[3,"TestCryptoRng",1367],[8,"Strategy",1461],[3,"Error",1462],[8,"KeyEvolvingSignatureAlgorithm",1034],[13,"SizeInvalid",1365],[6,"XSig",177],[3,"Ed25519Bip32",177],[3,"Ed25519Extended",196],[8,"Bech32",666],[13,"HrpInvalid",695],[13,"UnexpectedDataLen",695],[13,"InvalidDigestSize",837]]},\
"chain_impl_mockchain":{"doc":"","t":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGCCDGCCCGLLLLLLLLLLLLLLLLLLLLLLMLLMALLLLLLANCDENNCNCNALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLAALLLLLLLLLLLLDRDENDNNLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLMLMLLLMLLLLMLLLLLLLLLLLLLMLLLLDLLLLLLLLLLMLLLLLLMLLLLLENNSSRDDNSRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMNNCCDCCDECCCCCNGCCCCCGLLLLLLLLAFLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLALLMLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLFGEEEDDDDNNNNDGNGGGDNNNNNDNNNNNNGGDDNNNNGDNNNNEDNNNNNNDDNNEEDNNNNNENDNNNNGGDNNNNGEDNNNDNNNNGDDNNNNEMMLLLLLLLLLLMMLLLLLLMMMAMMLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMMMMMLLLLLMMMMMMMMAMLMMMMMMMMMAMMMMMMMMMMMMMMMAMLLLLLLLLLLLLLLLAAMAMAMMAMMLLLLMMMMMMMMDDMLLLLLLLLLLMMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLAMLLLLMLLLLLLLLLLDLLLLLLLLLLLLLLLLMLLLMLLLLAMLLLLMLRGGRGNNGDGDDGDEDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMMMLLMMMLMMMLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFGDGLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLGDGLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLMLDLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLMLDGNSNNDDENNEDGDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLMMLLLLMLLLLMLLMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMLLLLLLLMMMDDDNNNNEDELLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMNENDNDLLMLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNDEGNNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLALLLLLLLLLLLLLLNNNNDNNNNNEINNNNNNNNENNNNNNNNNRNNNNNNNNNNNNNNNNENNNNNNNNNNEDDNNNNNNNRRLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLALLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNNDENRGGMMANENNNNNNNLLLLLLLLLLLLLLLLLLEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDLLLKLLLLLLLLLMMMMMMLLLLLLMMLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLMLMALLLLLLLLLLLLLLLLLLGGCDDNNNNEGENNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLAALLLLLLLLLLLLLLMLLLLLMMLLLLLLLALLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLGGDDLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLENNDDDECDNGNNNDEDDDGDDDCEEDDNNEGNNNDMMMMMAMAAMAMAFMMMMMMMAAMDDGEDEEEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGGRRRRRRRRRRRRRRRRRRRTGEGDGGNGNNRRRGLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMNDDNDNELLLMMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLMLLLLNNEDDCDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDGGENDDNDGGLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMFLLMMMLLLFFLLLMLLMMMFALLLLLLLLLLLLLLLLLLLLLLLFFMLLLLLLLLLNNDDENNDNNNNNNNNNDEDENNNENAMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLAMLLLLLLLLLLMLLLLLLLLLLLLMLLLMMMLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLENNNDNDNNNEEGGMLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLALLLMMMMMMMMMMMMMMRRDNDNEDGGFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLMLFMMLLLLLLLLLLLLLLLLLLLFMMDDDDMAMMMAAAAAMMAAMMAMMAMMMRRRRNGNNELLLLLLLLLLLLOLLLLLLLFFFFFFFFFFLMMDDNNNNDEENNNNDEEMMMLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLMMMMAMMLLAMLLLLLLLLMMNNDEENNLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMNNNNDEELMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNNNNNEEDNNNENNNDNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLMLLLLLMLLLLNNNDNENNNNNNNNENNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNDDENNNNNNNNNGNGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLMLLMMLLLLFLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLFLLMLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFFFFLLLLLLLLMMMFLLFMLMMLLLLMFLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMLMMMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNDEENNNEDNNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENNNNNNNNNNNLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLDDMLLLLLLLLLLLLLLMLLMLLLLLLLLLMMLMLLMLLLMLLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLNDEDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLALLLLLLLLLLLLLLLLLLSRDSSLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLNNNNEDENNNNDNDDENNNNNNEDDDMLLLLLAMLLLLLLALLALMAMLLLLALEDENNDNGGNNNCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLNNDRRRELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNDENNMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLFLLNEDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMMLLLLLLLLLLLLLNENENNDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLMMLMFLFMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEENNRDNMMMLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLMLMMLMMMMLLLLLMLMLLLLLLLLLLLLLLLLLLNNDEDDDDDDDDDDMMMAMAAMFMMMMMAMMMMMMMMMMDLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLNNEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLMMLLLLDDDMLLFLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLMMLLLLMLMLLLLLLLLLLMLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLCCCDCCDAAAAAAAADDCALLLLLLLLLLALLLLLLLLLLLLLLAAAALLALLLLLLAAALLADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLNDDENDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFFFLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMMDLMLLLLLLLLLLLLMLLMLLLLLMLDLLFFFFFLLLLFLLLLLFLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLNNDDDNDEMAMMMAFFFFFFFFFFFFFMMMAAFFFMMAFAAFFMAAMDDLLLLLLMMMMMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFDDLLLLMFFFFFFFFFFFLLLLLLFLLMLLLLLLMMFLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDMLLLLLLLLLLLMMMMMLLLLLLLLLLLDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLNNDNDELMLLLLLLMMLLLLLLLLLLLLFLMLLLLLMLLLLLLLLLLFFFLFLLLLLLLLLLLLLLLLFFMLLLMFCFFFNDDNDDEDDDDNMAMMMMMMMMAAMMMMMMMAMMMMAMANDDNENLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLMLLLLLLLLLLLMLLLDLLLLLLMLLLLLLLLLLMMLLLLDLLLLLLLLLLLLLLMLLLLLLDLMLLLLLLLLLLLMLLLLLMLMLMLLLLLMLDDLLLLLMLLLLLLLLLLLLLLMLLLLLMLLLLLLLLDMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDGLMMLLLLLLLLLLLMLMMLLLLLLLLLLLLMMMMLLLLLLLLLMMLLMLLLLLLLLLLMLLLLLLLLLLLMMLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMLLMMLLLMMMLLLLMMLLMMLLLLLMMMLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLDDMMAMMMMAMFFAFAFFMDENNNNMLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMNDENNNLLLLLLLLLLLMLLLLLLLLLLLLLLMLLFFFMLLLLLLLLFMLLFLLLLMMDDDDDDDDDDMMLLLMMMMMMMLLLLLLLLLLALLLLLLLLLLLMMLMMMLMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLMMLLLLLMMMMLLLLLLLMMLMMLMMMLMMMMLLLMMMLMMMMMMMMLLLLLLLLLLLLLLLLLLLLMMMMLLLLLDDDDDLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLMLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLMLMMMLLLMMMMMMLLMLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLFDMMADDDDDDDDDLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLAAAANNNENDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLALLLMLLLLLLLLNDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLRDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLRDLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLNNEENQGEENNNENSSRRDEDDENDDNDDNNNNNNDNNNNDENDDNIDNNDDNDNDDEDDNNDNDDDDGDGDEGDNNNNNNDDNNNDEDDDENDDNMAMMMMMMAMMMMMMAMMMAMMMMAKKKMMMMMMMMMAAMAMMMMMAMMMMAMMRDDEDDGDLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLEEENNNNNNNDDDGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNENRRDEENNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLENDDNNENNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLQSSDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLNNNNDDDDNDDNNNNDDDDDEDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLMLLMMMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMLDMLLLLLLLLLLLLLLLLLLLLLLLLLMLGDLLLLLLLLLLLLLLLLLLMLLLMLLLMLNNNNNNRRRREDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLDLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNENDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMALLLLLLLLLLLLLMLLLNDDENDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLNNNNDRDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDDNNDNNNNNNNNNNNNDEENNNNNENDNNNNENEDEEENNDEDNDNNDNDNNAAMMMFMMMAAMMMAMMMAMMMMAAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLALLLLLLLLLLLLLLLLSDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLALLLLLLLLLLLLLLLNNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMMMMMMNNNENNNNNNNNNNNNDENNNEDEDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLMLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMMMMMMMMMMMMMMMMMDNEENNDNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLMMMMFDDLLLLMMLLLLLLLLMMLLLLMMMMMLLLLLLMMMMLLNNNNNNNNENENEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMM","n":["account","accounting","block","certificate","chaineval","chaintypes","config","date","error","evm","fee","fragment","header","key","leadership","ledger","legacy","milli","multisig","multiverse","rewards","setting","stake","testing","tokens","transaction","treasury","update","utxo","value","vote","AccountAlg","DelegationRatio","DelegationType","Identifier","Ledger","LedgerError","SpendingCounter","SpendingCounterIncreasing","Witness","arbitrary","arbitrary_with","as_ref","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize_from_slice","drop","eq","equivalent","fmt","fmt","from","from","hash","init","into","partial_cmp","phantom","serialize","serialized_size","signdata","test","to_owned","to_string","try_from","try_into","type_id","vzip","account","AlreadyExists","LastRewards","Ledger","LedgerError","NonExistent","NonZero","SpendingCounter","SpendingCounterError","SpendingCounterIncreasing","ValueError","account_state","add_account","add_rewards_to_account","add_value","add_value_or_account","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","exists","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","get_state","get_total_value","init","init","into","into","iter","last_rewards","new","remove_account","set_delegation","source","spend","spend_with_no_counter_check","spending","test","to_owned","to_owned","to_string","token_add","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountState","DELEGATION_RATIO_MAX_DECLS","DelegationRatio","DelegationType","Full","Iter","NonDelegated","Ratio","add","add_rewards","add_value","arbitrary","arbitrary","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","delegation","delegation","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","extra","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","is_valid","last_rewards","new","new","new_reward","next","parts","parts","pools","pools","set_delegation","spend","spend_unchecked","spending","to_owned","to_owned","to_owned","token_add","tokens","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","LastRewards","add_for","arbitrary_with","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","epoch","eq","equivalent","fmt","from","init","into","reward","to_owned","try_from","try_into","type_id","vzip","Error","InvalidLaneOrCounter","InvalidLaneValue","LANED_MASK","LANES","LANES_BITS","SpendingCounter","SpendingCounterIncreasing","SpendingCredentialInvalid","UNLANED_MASK","UNLANES_BITS","arbitrary","arbitrary","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","get_valid_counter","get_valid_counters","increment","increment_nth","init","init","init","into","into","into","lane","new","new_from_counter","new_from_counters","next_unchecked","next_verify","nexts","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlaned_counter","vzip","vzip","vzip","zero","actual","expected","BadEpochId","BadSlotId","BftProof","BftSignature","Block","BlockContentHash","BlockContentSize","BlockDate","BlockDateParseError","BlockVersion","ChainLength","Common","Contents","ContentsBuilder","DotMissing","Epoch","GenesisPraosProof","Header","HeaderId","KesSignature","Proof","SlotId","arbitrary","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","builder","chain_length","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contents","contents","date","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","epoch","eq","eq","eq","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","fmt","fragments","fragments","from","from","from","from","from_epoch_slot_id","from_str","from_str","hash","header","header","header","header","id","init","init","init","into","into","into","new_unchecked","next","next_epoch","parent_id","partial_cmp","serialize","serialized_size","slot_id","source","test","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","builder","BftLeaderBindingSignature","Certificate","CertificatePayload","CertificateSlice","DecryptedPrivateTally","DecryptedPrivateTallyError","DecryptedPrivateTallyProposal","EvmMapping","EvmMapping","EvmMapping","EvmMapping","EvmMapping","ExternalProposalDocument","ExternalProposalId","Full","GenesisPraosLeaderHash","IndexSignatures","ManagementThreshold","MintToken","MintToken","MintToken","MintToken","OffChain","Operator","OwnerStakeDelegation","OwnerStakeDelegation","OwnerStakeDelegation","OwnerStakeDelegation","OwnerStakeDelegation","Owners","Parameters","PoolId","PoolOwnersSigned","PoolPermissions","PoolRegistration","PoolRegistration","PoolRegistration","PoolRegistration","PoolRegistration","PoolRegistrationHash","PoolRetirement","PoolRetirement","PoolRetirement","PoolRetirement","PoolRetirement","PoolSignature","PoolUpdate","PoolUpdate","PoolUpdate","PoolUpdate","PoolUpdate","Private","Private","Proposal","Proposals","Public","Public","PushProposal","SignedCertificate","StakeDelegation","StakeDelegation","StakeDelegation","StakeDelegation","StakeDelegation","Success","TallyProof","Treasury","UpdateProposal","UpdateProposal","UpdateProposal","UpdateProposal","UpdateProposal","UpdateProposalId","UpdateProposerId","UpdateVote","UpdateVote","UpdateVote","UpdateVote","UpdateVote","UpdateVoterId","VoteAction","VoteCast","VoteCast","VoteCast","VoteCast","VotePlan","VotePlan","VotePlan","VotePlan","VotePlan","VotePlanId","VotePlanProof","VoteTally","VoteTally","VoteTally","VoteTally","VoteTally","VoteTallyPayload","account_id","action","arbitrary","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","changes","clone","clone","clone","clone_into","clone_into","clone_into","committee_end","committee_public_keys","decrypt_shares","delegation","delegation","delegation","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","evm_mapping","external_id","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","id","id","init","init","init","init","inner","inner","inner","inner","inner","inner","into","into","into","into","into_owned","keys","last_pool_reg_hash","len","marker","marker","marker","marker","marker","mint_token","name","need_auth","new_pool_reg","operators","options","owners","payload","payload","payload_type","permissions","policy","pool","pool_id","pool_id","proposal_id","proposal_index","proposals","proposals","proposer_id","retirement_time","reward_account","rewards","serial","signature","signatures","start_validity","tally_result","test","to","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_proposal","update_vote","value","vote_cast","vote_end","vote_plan","vote_plan","vote_start","vote_tally","voter_id","voting_token","vzip","vzip","vzip","vzip","proposal","id","id","signature","signature","action","action","inner","OwnerStakeDelegation","StakeDelegation","account_id","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delegation","delegation","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_delegation_type","deserialize_from_slice","deserialize_from_slice","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get_delegation_type","get_delegation_type","init","init","into","into","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","serialize","serialize","serialize","serialize","serialize_delegation_type","serialize_in","serialize_in","serialized_size","serialized_size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EvmMapping","EvmMappingSigned","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize_from_slice","drop","drop","eq","eq","equivalent","equivalent","evm_mapping","fmt","fmt","from","from","init","init","into","into","payload_auth_data","payload_data","payload_to_certificate_slice","prop_impl","recid","serialize","serialize","serialize_in","serialized_size","signature_data","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MintToken","arbitrary","arbitrary_with","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","equivalent","fmt","from","init","into","name","payload_auth_data","payload_data","payload_to_certificate_slice","policy","serialize","serialize","serialize_in","serialized_size","tests","to","to_owned","try_from","try_into","type_id","value","vzip","ALL_USED_BITMASK","GenesisPraosLeaderHash","IndexSignatures","MANAGEMENT_THRESHOLD_BITMASK","ManagementThreshold","Operator","Owners","PoolId","PoolOwnersSignature","PoolOwnersSigned","PoolPermissions","PoolRegistration","PoolRegistrationHash","PoolRetirement","PoolSignature","PoolUpdate","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_u64","init","init","init","init","init","init","inner","inner","inner","into","into","into","into","into","into","keys","last_pool_reg_hash","len","management_threshold","management_threshold","marker","marker","marker","new","new_pool_reg","operators","owners","payload_auth_data","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","payload_to_certificate_slice","permissions","pool_id","pool_id","retirement_time","reward_account","rewards","serial","serialize","serialize","serialize","serialize","serialize","serialize","serialize_in","serialize_in","serialize_in","serialize_in","serialize_in","serialized_size","serialized_size","serialized_size","signatures","signatures","start_validity","to_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","arbitrary_decrypted_private_tally","BftLeaderBindingSignature","UpdateProposal","UpdateProposerId","arbitrary","borrow","borrow_mut","changes","changes","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","equivalent","fmt","from","init","into","new","payload_auth_data","payload_data","payload_to_certificate_slice","proposer_id","proposer_id","serialize","serialize","serialize_in","serialized_size","to_owned","try_from","try_into","type_id","vzip","UpdateProposalId","UpdateVote","UpdateVoterId","arbitrary","arbitrary_with","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","equivalent","fmt","from","hash","hash","init","into","new","payload_auth_data","payload_data","payload_to_certificate_slice","proposal_id","proposal_id","serialize","serialize","serialize_in","serialized_size","to_owned","try_from","try_into","type_id","voter_id","voter_id","vzip","VoteCast","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","equivalent","fmt","from","hash","init","into","into_payload","new","payload","payload","payload_auth_data","payload_data","payload_to_certificate_slice","proposal_index","proposal_index","serialize","serialize","serialize_in","serialized_size","to_owned","try_from","try_into","type_id","vote_plan","vote_plan","vzip","ExternalProposalDocument","ExternalProposalId","Full","MAX_LEN","OffChain","Parameters","Proposal","Proposals","PushProposal","Success","Treasury","VoteAction","VotePlan","VotePlanId","VotePlanProof","action","action","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_vote","check_governance","check_governance","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_end","committee_end","committee_finished","committee_public_keys","committee_public_keys","committee_start","committee_started","committee_time","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","external_id","external_id","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","full","id","init","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into","is_governance","marker","marker","new","new","new","options","options","payload_auth_data","payload_data","payload_to_certificate_slice","payload_type","payload_type","proposals","proposals","proposals","proposals","proposals_mut","push","serialize","serialize","serialize_in","serialize_in","serialize_in","serialize_in","serialized_size","signature","to_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vote_end","vote_end","vote_finished","vote_start","vote_start","vote_started","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","proposal","action","action","DecryptedPrivateTally","DecryptedPrivateTallyError","DecryptedPrivateTallyProposal","Private","Private","Public","Public","TallyProof","VoteTally","VoteTallyPayload","arbitrary","arbitrary","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt_shares","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","id","id","init","init","init","init","init","init","inner","into","into","into","into","into","into","iter","new","new_private","new_public","payload","payload_auth_data","payload_data","payload_decrypted","payload_to_certificate_slice","payload_type","serialize","serialize","serialize_in","serialize_in","serialized_size","tally_decrypted","tally_result","tally_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","id","id","signature","signature","inner","Bft","ConsensusEvalContext","Genesis","HeaderContentEvalContext","Praos","PraosNonce","as_ref","base32_len","block_date","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_length","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","consensus_eval_context","content_hash","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","from","from","from","from_output_array","hash_with","init","init","init","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","zero","nonce","pool_creator","Bft","Bft","ChainLength","ConsensusType","ConsensusVersion","GenesisPraos","GenesisPraos","HeaderId","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_payload","from_str","from_str","from_u16","hash","hash","hash","increase","init","init","into","into","next","nth_ancestor","partial_cmp","partial_cmp","tests","to_owned","to_owned","to_payload","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","Block0Date","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BoolInvalid","ConfigParam","ConfigParamVariant","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","ConsensusVersion","Discrimination","Discrimination","EpochStabilityDepth","EpochStabilityDepth","Error","FeesInTreasury","FeesInTreasury","Halving","InvalidTag","KesUpdateSpeed","KesUpdateSpeed","Linear","LinearFee","LinearFee","MAXIMUM_LEN","PerCertificateFees","PerCertificateFees","PerVoteCertificateFees","PerVoteCertificateFees","PoolRewardParticipationCapping","PoolRewardParticipationCapping","ProposalExpiration","ProposalExpiration","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParams","RewardPot","RewardPot","SizeInvalid","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StructureInvalid","Tag","TagIter","TagLen","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UnknownString","VAL_PROD","VAL_TEST","arbitrary","arbitrary","arbitrary","arbitrary","as_ref","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_payload","from_payload","from_payload","from_str","from_str","from_u16","get","get_len","get_tag","idx","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","iter","len","marker","new","next","next_back","nth","par_bridge","partial_cmp","serialize","serialized_size","size_hint","test","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_payload","to_payload","to_payload","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","BadEpochId","BadSlotId","BlockDate","BlockDateParseError","DotMissing","EXPECT_FORMAT_MESSAGE","Epoch","SlotId","epoch","slot_id","tests","DoubleSpend","Error","InputDoesNotResolve","InputWasAlreadySet","InvalidSignature","InvalidTxSignature","NotEnoughSignatures","TransactionSumIsNonZero","ZeroOutput","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","EvmActionType","EvmTransaction","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FeeAlgorithm","LinearFee","PerCertificateFee","PerVoteCertificateFee","arbitrary","arbitrary","arbitrary","baseline","baseline","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate","calculate_tx","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","clone","clone","clone","clone_into","clone_into","clone_into","coefficient","constant","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fees_for_certificate","fees_for_certificate","fees_for_certificate","fees_for_certificate","fees_for_inputs_outputs","fees_for_inputs_outputs","fmt","fmt","fmt","from","from","from","from_payload","from_payload","from_payload","init","init","init","into","into","into","new","new","new","partial_cmp","partial_cmp","partial_cmp","per_certificate_fees","per_certificate_fees","per_vote_certificate_fees","per_vote_certificate_fees","test","to_owned","to_owned","to_owned","to_payload","to_payload","to_payload","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BlockContentHash","BlockContentSize","ConfigParams","Contents","ContentsBuilder","Evm","Evm","EvmMapping","EvmMapping","Fragment","FragmentId","FragmentTag","Initial","Initial","MintToken","MintToken","OldUtxoDeclaration","OldUtxoDeclaration","OwnerStakeDelegation","OwnerStakeDelegation","PoolRegistration","PoolRegistration","PoolRetirement","PoolRetirement","PoolUpdate","PoolUpdate","StakeDelegation","StakeDelegation","Transaction","Transaction","UpdateProposal","UpdateProposal","UpdateVote","UpdateVote","VoteCast","VoteCast","VotePlan","VotePlan","VoteTally","VoteTally","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","content","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fragments","from","from","from_u8","get_tag","hash","hash","hash","id","init","init","into","into","serialize","serialized_size","test","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigParams","arbitrary","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize_from_slice","drop","eq","equivalent","fmt","from","init","into","iter","new","push","serialize","serialized_size","to_owned","try_from","try_into","type_id","vzip","BlockContentHash","BlockContentSize","Contents","ContentsBuilder","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_hash","compute_hash_size","default","deref","deref","deref_mut","deref_mut","drop","drop","empty","eq","equivalent","fmt","fragments","from","from","from","hash","init","init","into","into","is_empty","iter","iter_slice","len","new","push","push_many","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnyBlockVersion","Bft","Bft","BftProof","BftSignature","BlockDate","BlockVersion","ChainLength","Common","Ed25519Signed","Epoch","Genesis","GenesisPraos","GenesisPraos","GenesisPraosProof","Header","HeaderBft","HeaderBftBuilder","HeaderBuilder","HeaderBuilderNew","HeaderDesc","HeaderGenesisPraos","HeaderGenesisPraosBuilder","HeaderId","HeaderSetConsensusData","HeaderSetConsensusSignature","HeaderUnsigned","KesSignature","KesVrfproof","None","Proof","SlotId","Supported","Unsigned","Unsupported","VrfProof","block_content_hash","block_content_size","block_date","block_parent_hash","block_version","builder","chain_length","components","cstruct","date","deconstruct","epoch","header","header_builder","height","id","kes_proof","leader_id","node_id","signature","slot_id","test","version","vrf_proof","HeaderBftBuilder","HeaderBuilder","HeaderBuilderNew","HeaderCommonDone","HeaderGenesisPraosBuilder","HeaderSetConsensusData","HeaderSetConsensusSignature","HeaderSetDate","HeaderSetParenting","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","get_authenticated_data","get_authenticated_data","header_builder","header_builder_raw","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_bft_builder","into_genesis_praos_builder","into_unsigned_header","new","new","new_raw","new_raw","set_consensus_data","set_consensus_data","set_date","set_genesis","set_parent","set_signature","set_signature","sign_using","sign_using","sign_using_keys","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BftSignature","HeaderAuth","KesSignature","VrfProof","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","init","init","init","init","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_vrf_proof","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","BftLeaderId","BftSignature","ContentHash","ContentSize","DateEpoch","DateSlotid","GpKesSignature","GpNodeId","GpVrfProof","HEADER_BFT_AUTHED_SIZE","HEADER_BFT_SIZE","HEADER_COMMON_SIZE","HEADER_GP_AUTHED_SIZE","HEADER_GP_SIZE","HEADER_MAX_KNOWN_SIZE","HEADER_MIN_KNOWN_SIZE","HEADER_OFFSET_BFT_LEADER_ID","HEADER_OFFSET_BFT_SIGNATURE","HEADER_OFFSET_CONTENT_HASH","HEADER_OFFSET_CONTENT_SIZE","HEADER_OFFSET_DATE_EPOCH","HEADER_OFFSET_DATE_SLOTID","HEADER_OFFSET_GP_ID","HEADER_OFFSET_GP_KES_SIG","HEADER_OFFSET_GP_VRF_PROOF","HEADER_OFFSET_HEIGHT","HEADER_OFFSET_PARENT_HASH","HEADER_OFFSET_VERSION","Header","HeaderBft","HeaderError","HeaderGp","HeaderSlice","HeaderUnsigned","Height","InvalidSize","ParentHash","SizeMismatch","UnknownVersion","VERSION_BFT","VERSION_GP","VERSION_UNSIGNED","Version","as_slice","as_slice","as_slice_mut","bft","bft_leader_id","bft_leader_id_ref","bft_signature","bft_signature_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content_hash","content_hash_ref","content_size","date_epoch","date_slotid","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_slice","gp","gp_kes_signature","gp_kes_signature_ref","gp_node_id","gp_node_id_ref","gp_vrf_proof","gp_vrf_proof_ref","height","init","init","init","into","into","into","new","parent_hash","parent_hash_ref","set_bft_leader_id","set_bft_leader_id_slice","set_bft_signature","set_bft_signature_slice","set_content_hash","set_content_size","set_date_epoch","set_date_slotid","set_gp_kes_signature","set_gp_kes_signature_slice","set_gp_node_id","set_gp_node_id_slice","set_gp_vrf_proof","set_gp_vrf_proof_slice","set_height","set_parent_hash","set_version","slice_bft_auth","slice_gp_auth","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsigned","version","version","vzip","vzip","vzip","expected","got","Bft","BftProof","Common","GenesisPraos","GenesisPraosProof","None","Proof","arbitrary","arbitrary","arbitrary","block_content_hash","block_content_size","block_date","block_parent_hash","block_version","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_length","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","kes_proof","leader_id","node_id","signature","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vrf_proof","vzip","vzip","vzip","vzip","Bft","GenesisPraos","Header","HeaderBft","HeaderDesc","HeaderError","HeaderGenesisPraos","HeaderUnsigned","Unsigned","arbitrary","as_auth_slice","as_slice","block_content_hash","block_content_size","block_date","block_parent_hash","block_version","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_length","chain_length","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","common","date","date","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize_from_slice","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_slice","generalize","generalize","generalize","get_bft_leader_id","get_consensus_eval_context","get_content_eval_context","get_cstruct","get_stakepool_id","hash","height","id","id","id","id","id","id","init","init","init","init","init","into","into","into","into","into","parent_id","proof","serialize","serialized_size","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","AnyBlockVersion","BlockVersion","Ed25519Signed","Genesis","KesVrfproof","Supported","Unsupported","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from_u8","get_auth_size","get_size","init","init","into","into","to_consensus_type","to_owned","to_owned","to_u8","try_from","try_from","try_into","try_into","try_into_block_version","type_id","type_id","vzip","vzip","AccountPublicKey","AccountSignature","BftLeaderId","BftVerificationAlg","Ed25519Signature","EitherEd25519SecretKey","Extended","GenesisPraosLeader","Hash","Normal","Signed","SpendingPublicKey","SpendingSignature","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","as_bytes","as_public_key","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_crypto_pub_err","chain_crypto_sig_err","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_public_key","deserialize_signature","digest","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_payload","from_str","from_str","generate","get_hash","hash","hash","hash","hash","hash_bytes","init","init","init","init","init","into","into","into","into","into","kes_public_key","make_signature","new","partial_cmp","phantom","phantom","phantom","serialize","serialize","serialize","serialize_public_key","serialize_signature","serialized_size","serialized_size","serialized_size","sig","sign","sign_slice","signdata","signdata","signdata","signed_new","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_payload","to_public","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify_multi_signature","verify_signature","vrf_public_key","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","zero","zero_hash","Bft","Bft","BftLeader","Error","ErrorKind","Failure","Failure","GenesisLeader","GenesisPraos","GenesisPraos","IncompatibleBlockVersion","IncompatibleLeadershipMode","InvalidBlockMessage","InvalidLeader","InvalidLeaderProof","InvalidLeaderSignature","InvalidStateUpdate","Leader","LeaderOutput","Leadership","LeadershipConsensus","NoLeaderForThisSlot","None","Success","Verification","VrfNonceIsEmptyButNotSupposedTo","bft","bft_leader","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","cause","clone","clone_into","consensus","date_at_slot","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","eq","equivalent","era","era","failure","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","genesis","genesis_leader","hash","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into_error","is_leader","is_leader_for_date","kind","new","new","new_","node_id","sig_key","sig_key","stake_distribution","success","to_owned","to_string","to_string","try_check","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify_leader","verify_version","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BftRoundRobinIndex","LeadershipData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","from","from","get_leader_at","init","init","into","into","leaders","leaders","new","number_of_leaders","offset","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","GenesisError","InvalidEpoch","InvalidProofStructure","InvalidProofValue","LeadershipData","ProofVerificationFailed","Threshold","ThresholdInvalid","ThresholdNotMet","TotalStakeIsZero","VrfError","VrfEvalFailure","Witness","WitnessOutput","active_slots_coeff","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","distribution","distribution","drop","drop","drop","epoch","epoch_nonce","fmt","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","leader","new","nodes","nodes","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vrfeval","vzip","vzip","vzip","actual","expected","bdesc","bdesc","bdesc","pool_stake","poolid","poolid","poolid","threshold","total_stake","vrf_value","stake_threshold","vrf_value","DOMAIN_NONCE","DOMAIN_THRESHOLD","Input","ProofVerificationFailed","Threshold","ThresholdNotMet","VrfEvalFailure","VrfEvaluator","Witness","WitnessOutput","above_stake_threshold","active_slots_coeff","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","evaluate","fmt","from","from","from","from","from_u256","get_nonce","get_threshold","init","init","init","init","into","into","into","into","nonce","partial_cmp","phi","slot_id","stake","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","witness_to_nonce","stake_threshold","vrf_value","EpochRewardsInfo","LeadersParticipationRecord","Pots","RewardsInfoParameters","accounts","check","drawn","fees","fees","governance","info","iter","leaderlog","ledger","log","params","pots","recovery","report_accounts","report_stake_pools","reward_info","rewards","stake_pools","token_distribution","total","treasury","treasury","CHECK_POOL_REG_MAXIMUM_OPERATORS","CHECK_POOL_REG_MAXIMUM_OWNERS","CHECK_TX_MAXIMUM_INPUTS","CHECK_TX_MAXIMUM_OUTPUTS","Err","LedgerCheck","Ok","TooManyOutputs","TxVerifyError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","if_cond_fail_with","init","into","to_owned","to_string","try_from","try_into","type_id","valid_block0_cert_transaction","valid_block0_transaction_no_inputs","valid_output_value","valid_pool_owner_signature","valid_pool_registration_certificate","valid_pool_signature","valid_pool_update_certificate","valid_stake_owner_delegation_transaction","valid_transaction_ios_number","valid_vote_cast_tx_slice","vzip","actual","expected","Governance","GovernanceAcceptanceCriteria","NoOp","NoOp","NoOp","NoOp","ParametersGovernance","ParametersGovernanceAction","ParametersGovernanceActionType","RewardAdd","RewardAdd","TransferToRewards","TransferToRewards","TreasuryGovernance","TreasuryGovernanceAction","TreasuryGovernanceActionType","acceptance_criteria_per_action","acceptance_criteria_per_action","blank","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default_acceptance_criteria","default_acceptance_criteria","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","favorable","fmt","from","from","init","init","into","into","logs","minimum_approval","minimum_stake_participation","options","parameters","parameters","rejection","to_owned","to_owned","treasury","treasury","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","value","value","NoOp","NoOp","ParametersGovernance","ParametersGovernanceAction","ParametersGovernanceActionType","RewardAdd","RewardAdd","acceptance_criteria_for","acceptance_criteria_per_action","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default_acceptance_criteria","default_acceptance_criteria","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","logs","logs","logs_clear","logs_register","new","partial_cmp","serialize_in","set_acceptance_criteria","set_default_acceptance_criteria","to_owned","to_owned","to_owned","to_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","value","NoOp","NoOp","TransferToRewards","TransferToRewards","TreasuryGovernance","TreasuryGovernanceAction","TreasuryGovernanceActionType","acceptance_criteria_for","acceptance_criteria_per_action","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default_acceptance_criteria","default_acceptance_criteria","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","serialize_in","set_acceptance_criteria","set_default_acceptance_criteria","to_owned","to_owned","to_owned","to_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","value","Account","Account","Accounts","ConfigParam","ConfigParam","ConfigParams","Done","Entry","EntryOwned","Globals","Globals","Globals","Initial","IterState","LeaderParticipation","LeaderParticipation","LeaderParticipations","LedgerIterator","MultisigAccount","MultisigAccount","MultisigAccounts","MultisigDeclaration","MultisigDeclaration","MultisigDeclarations","OldUtxo","OldUtxo","OldUtxo","Pot","Pot","Pots","StakePool","StakePool","StakePools","StopEntry","UpdateProposal","UpdateProposal","UpdateProposals","Utxo","Utxo","Utxo","VotePlan","VotePlan","VotePlan","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_length","clone","clone","clone_into","clone_into","date","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","era","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_iter","ledger","next","state","static_params","to_entry","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","LeadersParticipationRecord","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","from","increase_for","init","into","iter","log","nb_participants","new","set_for","to_owned","total","total","try_from","try_into","type_id","vzip","Account","AccountIdentifierInvalid","AccountInvalidSignature","ApplyBlockLedger","Block0","Block0Error","Block0OnlyFragmentReceived","CertTransactionHasInput","CertTransactionHasOutput","CertificateInvalidSignature","Config","Default","Delegation","DisabledEvmTransactions","Error","ExpectingAccountWitness","ExpectingInitialMessage","ExpectingUtxoWitness","FeeCalculationError","FeeDeductionMode","HasEvmMapping","HasOwnerStakeDelegation","HasPoolManagement","HasUpdateProposal","HasUpdateVote","HasVoteCast","HasVoteTally","IncompleteLedger","InitialMessageDuplicateBlock0Date","InitialMessageDuplicateConsensusVersion","InitialMessageDuplicateDiscrimination","InitialMessageDuplicateEpochStabilityDepth","InitialMessageDuplicatePraosActiveSlotsCoeff","InitialMessageDuplicateSlotDuration","InitialMessageMany","InitialMessageMissing","InitialMessageNoConsensusLeaderId","InitialMessageNoConsensusVersion","InitialMessageNoDate","InitialMessageNoDiscrimination","InitialMessageNoKesUpdateSpeed","InitialMessageNoPraosActiveSlotsCoeff","InitialMessageNoSlotDuration","InitialMessageNoSlotsPerEpoch","InvalidContentHash","InvalidContentSize","InvalidDiscrimination","Ledger","LedgerStaticParameters","MatchingIdentifierWitness","MintingPolicyViolation","Multi","Multisig","MultisigInvalidSignature","NoSpendingCounterCheck","NonMonotonicDate","NotBalanced","OldUtxoInvalidPublicKey","OldUtxoInvalidSignature","OutputAddress","OutputGroupInvalid","OutputOldAddress","OwnerStakeDelegationInvalidTransaction","PoolRegistrationHasNoOwner","PoolRegistrationHasTooManyOperators","PoolRegistrationHasTooManyOwners","PoolRegistrationManagementThresholdAbove","PoolRegistrationManagementThresholdZero","PoolRetirementSignatureFailed","PoolUpdateFeesNotAllowedYet","PoolUpdateLastHashDoesntMatch","PoolUpdateNotAllowedYet","PoolUpdateSignatureFailed","PotValueInvalid","PraosActiveSlotsCoeffInvalid","ScriptsAddressNotAllowedYet","Single","StakeDelegationSignatureFailed","TransactionBalanceInvalid","TransactionHasInput","TransactionHasWitnesses","TransactionMalformed","Update","UpdateNotAllowedYet","UpdateProposalSignatureFailed","UpdateVoteSignatureFailed","UtxoError","UtxoInvalidSignature","UtxoTotalValueTooBig","UtxoValueNotMatching","VoteCastInvalidTransaction","VotePlan","VotePlanInvalidGovernanceParameters","VotePlanProofInvalidCommittee","VotePlanProofInvalidSignature","VoteTallyDecryptionFailed","VoteTallyProofFailed","WrongChainLength","ZeroOutput","accounts","accounts","active_vote_plans","add_value_or_create_account","address","address","apply_block","apply_fragment","apply_fragment","apply_input_to_utxo","apply_old_declaration","apply_owner_stake_delegation","apply_pool_registration","apply_pool_registration_signcheck","apply_pool_retirement","apply_pool_update","apply_protocol_changes","apply_stake_delegation","apply_transaction","apply_transaction_for_vote_cast","apply_tx_fee","apply_tx_inputs","apply_tx_outputs","apply_update","apply_update_proposal","apply_update_vote","apply_vote_cast","apply_vote_plan","apply_vote_tally","arbitrary","begin_block","block0_initial_hash","block0_start_time","block_date","block_date","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","can_distribute_reward","chain_length","chain_length","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_version","date","date","delegation","delegation","delegation_mut","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","discrimination","distribute_poolid_rewards","distribute_rewards","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","era","era","execute_apply_transaction","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_stake_distribution","get_static_parameters","get_total_value","governance","info_eq","init","init","init","init","init","init","init","input_multi_account_verify","input_multi_account_witness_verify_with_no_spending_counter_check","input_single_account_verify","input_single_account_witness_verify_with_no_spending_counter_check","into","into","into","into","into","into","into","iter","kes_update_speed","leaders_log","ledger","match_identifier_witness","mint_token","mint_token_unchecked","multi_account_witness_verify","multisig","new","oldutxos","pots","remaining_rewards","serialize","settings","settings","settings","single_account_witness_verify","source","static_params","stats","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token_distribution","token_totals","token_totals","treasury_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates","updates","utxo_out","utxos","utxos","validate_utxo_total_value","value","value","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","account","actual","actual","actual","block_date","chain_date","error","error","expected","expected","expected","inputs","max","multisig","output","output","output","output","output","outputs","utxo","utxo","utxo","value","witness","witness","witness","witness","witness","Done","Entries","Entry","EntryType","Fees","Fees","Fees","IterState","Pots","Rewards","Rewards","Rewards","Treasury","Treasury","Treasury","Values","append_fees","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","draw_reward","draw_treasury","drop","drop","drop","drop","drop","drop","entries","entry_type","eq","eq","equivalent","equivalent","fees","fees_value","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","it","next","next","pots","rewards","rewards_add","set_from_entry","siphon_fees","to_owned","to_owned","to_owned","total_value","treasury","treasury_add","treasury_value","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","values","vzip","vzip","vzip","vzip","vzip","vzip","zero","Account","ConfigParam","EntrySerializeCode","Globals","LeaderParticipation","MultisigAccount","MultisigDeclaration","OldUtxo","Pot","SerializationEnd","StakePool","UpdateProposal","Utxo","VotePlan","borrow","borrow_mut","deref","deref_mut","drop","eq","equivalent","fmt","from","from_u8","init","into","pack_account_identifier","pack_account_state","pack_address","pack_block_date","pack_committee_public_keys","pack_config_param","pack_decl_element","pack_declaration","pack_delegation_ratio","pack_delegation_type","pack_digestof","pack_discrimination","pack_entry","pack_globals","pack_header_id","pack_last_rewards","pack_ledger_static_parameters","pack_multisig_identifier","pack_old_addr","pack_output","pack_payload_type","pack_pool_id","pack_pool_last_rewards","pack_pool_registration","pack_pool_state","pack_pot_entry","pack_spending_strategy","pack_update_proposal","pack_update_proposal_id","pack_update_proposal_state","pack_utxo_entry","pack_vote_plan","pack_vote_proposal","pack_vote_proposals","pack_voting_token","try_from","try_into","type_id","unpack_account_identifier","unpack_account_state","unpack_address","unpack_block_date","unpack_committee_public_keys","unpack_config_param","unpack_decl_element","unpack_declaration","unpack_delegation_ratio","unpack_delegation_type","unpack_digestof","unpack_discrimination","unpack_entries","unpack_entry_owned","unpack_globals","unpack_header_id","unpack_last_rewards","unpack_ledger_static_parameters","unpack_multisig_identifier","unpack_old_addr","unpack_output","unpack_payload_type","unpack_pool_id","unpack_pool_last_rewards","unpack_pool_registration","unpack_pool_state","unpack_pot_entry","unpack_proposal","unpack_proposals","unpack_spending_strategy","unpack_update_proposal","unpack_update_proposal_id","unpack_update_proposal_state","unpack_utxo_entry_owned","unpack_vote_action","unpack_vote_plan","unpack_voting_token","vzip","EpochRewardsInfo","RewardsInfoParameters","accounts","add_to_account","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drawn","drop","drop","fees","fmt","fmt","from","from","init","init","into","into","new","params","report_accounts","report_all","report_stake_pools","set_stake_pool","set_treasury","stake_pools","to_owned","to_owned","total","treasury","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TokenDistribution","TokenTotals","account_ledger","add","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","from","from","get_account","get_total","get_total","init","init","into","into","new","to_owned","to_owned","token","token","token_totals","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","No","OldAddress","OldAddressMatchXPub","UtxoDeclaration","Yes","addrs","arbitrary","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deconstruct","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","hash","identical_with_pubkey_raw","identical_with_xpub","identical_with_xpub_raw","init","init","init","into","into","into","new","oldaddress_from_xpub","partial_cmp","serialize","serialize","serialized_size","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","HALF","MILLI_MULTIPLIER","Milli","ONE","ZERO","arbitrary","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","from","from_millis","from_payload","from_str","init","into","partial_cmp","tests","to_float","to_millis","to_owned","to_payload","to_string","try_from","try_into","type_id","vzip","AccountError","AlreadyExist","D1","D2","DeclElement","Declaration","DeclarationError","DeclarationError","DoesntExist","HasNotEnoughOwners","HasTooManyOwners","Identifier","IdentifierMismatch","Index","Ledger","LedgerError","Owner","ParticipantOutOfBound","Sub","SubNotImplemented","ThresholdInvalid","ThresholdNotMet","TreeIndex","Witness","WitnessBuilder","WitnessMultisigData","accounts","as_ref","base32_len","borrow","borrow_mut","check_base32","declaration","declarations","deref","deref_mut","drop","encode_hex","encode_hex_upper","from","index","init","into","ledger","new","owners","test","threshold","try_from","try_into","type_id","vzip","witness","write_base32","DeclElement","Declaration","DeclarationError","HasNotEnoughOwners","HasTooManyOwners","Identifier","Owner","Pk","Sig","Sub","SubNotImplemented","ThresholdInvalid","WitnessMultisigData","arbitrary","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_publickey","get_path","hash","init","init","init","init","into","into","into","into","is_valid","owners","owners_to_identifier","partial_cmp","phantom","signdata","threshold","threshold","to_hash","to_identifier","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","D1","D2","Index","LEVEL_MAXLIMIT","TREEINDEX_TAG_DEPTH1","TREEINDEX_TAG_DEPTH2","TreeIndex","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","depth","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_u8","indices","init","init","into","into","pack","partial_cmp","partial_cmp","to_owned","to_owned","to_usize","try_from","try_from","try_into","try_into","type_id","type_id","unpack","vzip","vzip","AccountError","AlreadyExist","DeclarationError","DoesntExist","IdentifierMismatch","Ledger","LedgerError","ParticipantOutOfBound","ThresholdNotMet","accounts","add_account","add_value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","declarations","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","get_declaration_by_id","get_total_value","init","init","into","into","iter_accounts","iter_declarations","new","remove_account","restore","set_delegation","source","spend","spend_with_no_counter_check","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Witness","WitnessBuilder","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize_from_slice","deserialize_index","drop","drop","eq","equivalent","finalize","fmt","fmt","from","from","init","init","into","into","new","serialize","serialized_size","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_identifier_threshold","vzip","vzip","Collectable","GcEntry","Multiverse","Ref","Retained","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","gc","get","get","get_ref","hash","id","init","init","init","insert","into","into","into","new","new","nr_states","state","state","state_arc","states_by_chain_length","states_by_hash","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ByStakeAbsolute","CompoundingType","Halvening","Limit","Linear","None","Parameters","Ratio","SystemInformation","TaxDistribution","TaxType","after_tax","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compounding_ratio","compounding_type","declared_stake","denominator","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","epoch_rate","epoch_start","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_payload","from_payload","init","init","init","init","init","init","init","initial_value","into","into","into","into","into","into","into","max_limit","numerator","partial_cmp","pool_participation_capping","ratio","read_frombuf","reward_drawing_limit_max","rewards_contribution_calculation","serialize_in","tax_cut","taxed","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_payload","to_payload","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zero","zero","ActiveSlotsCoeff","ActiveSlotsCoeffError","FeesGoesTo","InvalidValue","Rewards","SLOTS_PERCENTAGE_RANGE","Settings","Treasury","active_slots_coeff","bft_leaders","block_content_max_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committees","config_params","consensus_nonce","consensus_version","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","epoch_stability_depth","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fees_goes_to","fmt","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","linear_fees","new","pool_participation_capping","proposal_expiration","reward_params","reward_params","rewards_limit","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_string","transaction_max_expiry_epochs","treasury_params","treasury_params","try_apply","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AlreadyExists","NotFound","PercentStake","PoolError","PoolLastRewards","PoolStakeDistribution","PoolStakeInformation","PoolState","PoolsState","SplitValueIn","Stake","StakeControl","StakeDistribution","StakeUnit","accounts","assigned","control","controlled","dangling","delegation","distribution","epoch","get_distribution","last_rewards","parts","registration","registration","remaining","stake","stake","stake","stake_pools","to_pools","total","total","unassigned","unassigned","value_for_stakers","value_taxed","StakeControl","add_to","add_unassigned","assigned","assigned","borrow","borrow_mut","by","clone","clone_into","control","default","deref","deref_mut","drop","eq","equivalent","fmt","from","init","into","new","new_with","ratio_by","remove_from","remove_unassigned","to_owned","total","try_from","try_into","type_id","unassigned","unassigned","update_accounts","update_utxos","vzip","AlreadyExists","NotFound","PoolError","PoolLastRewards","PoolState","PoolsState","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_pool_registration_hash","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deregister_stake_pool","drop","drop","drop","drop","epoch","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","last_rewards","lookup","lookup_reg","new","new","register_stake_pool","registration","stake_pool_exists","stake_pool_get","stake_pool_get_state","stake_pool_ids","stake_pool_set_rewards","stake_pool_set_state","stake_pools","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value_for_stakers","value_taxed","vzip","vzip","vzip","vzip","PoolStakeDistribution","PoolStakeInformation","StakeDistribution","accounts","add","add_value","assign_account_value","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dangling","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eligible_stake_pools","empty","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_distribution","get_distribution","get_stake_for","get_total_stake","init","init","init","into","into","into","iter","new","registration","stake","test_new_with_total_value","to_owned","to_owned","to_owned","to_pools","to_total","total","total_stake","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unassigned","vzip","vzip","vzip","PercentStake","SplitValueIn","Stake","StakeUnit","add","add_assign","as_float","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_sub","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_value","hash","init","init","init","init","into","into","into","into","new","partial_cmp","partial_cmp","parts","remaining","scale","scale_value","split_in","stake","sum","to_owned","to_owned","to_owned","to_owned","to_string","total","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wrapping_add","wrapping_sub","zero","ConfigBuilder","KeysDb","LedgerBuilder","TestGen","TestLedger","UtxoDb","VoteTestGen","arbitrary","builders","data","gen","ledger","scenario","serialization","verifiers","AverageValue","NonZeroValue","WalletCollection","address","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config_builder","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","kind_type","ledger_builder","output","random","to_owned","to_owned","transaction","try_from","try_from","try_into","try_into","type_id","type_id","update_proposal","utils","utxo","vzip","vzip","wallet","ArbitraryAddressDataValueVec","ArbitraryAddressDataVec","accounts","arbitrary","arbitrary","as_addresses","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delegations","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","is_empty","iter","make_inputs","make_outputs","to_owned","to_owned","total_value","try_from","try_from","try_into","try_into","type_id","type_id","utxos","values","vzip","vzip","KindTypeWithoutMultisig","KindWithoutMultisig","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","kind_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutputsWithoutMultisig","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","set_discrimination","to_owned","try_from","try_into","type_id","vzip","Random1to10","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","AccountNotFound","AccountStatesVerifier","ArbitraryValidTransactionData","Error","UtxoNotFound","UtxoVerifier","WrongValue","addresses","arbitrary","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_current_account_states","calculate_current_utxo","choose_random_output_subset","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","distribute_values_for_outputs","drop","drop","drop","drop","eq","equivalent","fee","filter_accounts","filter_utxo","find_equal_and_add","find_equal_and_sub","fmt","fmt","fmt","from","from","from","from","init","init","init","init","input_addresses","input_addresses","into","into","into","into","make_inputs","make_outputs","make_outputs_from_all_addresses","make_single_input","new","new","new","output_addresses","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","zip_addresses_and_values","actual","element","element","expected","output","value","UpdateProposalData","arbitrary","block_signing_key","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","gen_votes","init","into","leaders","leaders_ids","leaders_pairs","proposal","proposal_settings","to_owned","try_from","try_into","type_id","voters","vzip","Verify","borrow","borrow_mut","choose_random_indexes","choose_random_item","choose_random_map_subset","choose_random_set_subset","choose_random_vec_subset","default","deref","deref_mut","drop","factorize","from","get_result","init","into","new","split_vec","try_from","try_into","type_id","verify","verify_eq","vzip","ArbitaryLedgerUtxo","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","WalletCollection","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","Account","Default","FaultTolerantTxCertBuilder","InitialFaultTolerantTxBuilder","InitialFaultTolerantTxCertBuilder","None","TestTxCertBuilder","WitnessMode","block0_hash","block_builder","builder","cert","cert","cert_builder","create_initial_mint_token","create_initial_stake_pool_delegation","create_initial_stake_pool_owner_delegation","create_initial_stake_pool_registration","create_initial_stake_pool_update","create_initial_transaction","create_initial_update_proposal","create_initial_update_vote","create_initial_vote_cast","create_initial_vote_plan","create_initial_vote_tally","decrypt_tally","evm_mapping_sign","fee","funder","funder","initial_builder","old_address_builder","plan_sign","pool_owner_sign","pool_owner_signed","reciever","sender","stake_pool_builder","tally_sign","tx_builder","tx_cert_builder","update_proposal_sign","update_vote_sign","valid_until","vote","witness_builder","lane","BftBlockBuilder","GenesisPraosBlockBuilder","borrow","borrow","borrow_mut","borrow_mut","build","build","chain_length","chain_length","contents_builder","contents_builder","date","date","default","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","new","new","parent_id","parent_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_chain_length","with_chain_length","with_date","with_date","with_fragment","with_fragment","with_fragments","with_fragments","with_parent","with_parent","with_parent_id","with_parent_id","build_no_stake_delegation","build_owner_stake_delegation","build_owner_stake_full_delegation","build_stake_delegation_cert","build_stake_pool_registration_cert","build_stake_pool_retirement_cert","build_stake_pool_update_cert","build_update_proposal_cert","build_update_vote_cert","build_vote_tally_cert","InitialFaultTolerantTxBuilder","InitialFaultTolerantTxCertBuilder","borrow","borrow","borrow_mut","borrow_mut","cert","create_initial_mint_token","create_initial_stake_pool_delegation","create_initial_stake_pool_owner_delegation","create_initial_stake_pool_registration","create_initial_stake_pool_update","create_initial_transaction","create_initial_update_proposal","create_initial_update_vote","create_initial_vote_cast","create_initial_vote_plan","create_initial_vote_tally","deref","deref","deref_mut","deref_mut","drop","drop","fragment","from","from","funder","init","init","into","into","new","new","reciever","sender","set_initial_ios","transaction_with_input_only","transaction_with_input_only","transaction_with_input_output","transaction_with_input_output","transaction_with_output_only","transaction_with_witness_only","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OldAddressBuilder","borrow","borrow_mut","build_old_address","build_utxo_declaration","default","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","StakePoolBuilder","alias","borrow","borrow_mut","build","default","deref","deref_mut","drop","from","init","into","new","operators","owners","pool_permissions","reward_account","tax_type","try_from","try_into","type_id","vzip","with_alias","with_operators","with_owners","with_pool_permissions","with_ratio_tax_type","with_reward_account","with_tax_type","TestTx","TestTxBuilder","as_slice","block0_hash","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","from","from","get_fragment","get_fragment_id","get_tx","get_tx_outputs","hash","init","init","into","into","move_all_funds","move_from_faucet","move_funds","move_funds_multiple","move_to_outputs_from_faucet","move_to_outputs_from_faucet_with_validity","new","new","to_owned","try_from","try_from","try_into","try_into","tx","type_id","type_id","vzip","vzip","witness_mode","witness_mode","witnesses","Account","Default","FaultTolerantTxCertBuilder","None","TestTxCertBuilder","WitnessMode","block0_hash","block0_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cert","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","evm_mapping_sign","fee","fee","fmt","fragment","from","from","from","funder","init","init","init","into","into","into","make_transaction","make_transaction_different_signers","new","new","plan_sign","pool_owner_sign","pool_owner_signed","set_initial_ios","tally_sign","to_owned","transaction_input_to_low","transaction_no_witness","transaction_with_input_only","transaction_with_input_output","transaction_with_output_only","transaction_with_witness","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_proposal_sign","update_vote_sign","valid_until","vzip","vzip","vzip","lane","decrypt_tally","Witness","make_witness","make_witness_with_lane","make_witnesses","AccountLedger","AddressData","AddressDataValue","CannotFindSpendingCounter","CommitteeMember","CommitteeMembersManager","Error","KeysDb","LeaderPair","StakePool","Wallet","WrongLaneForSpendingCounter","account","address","address","address_data","alias","alias","crs","ed25519","id","kes","keys","leader","leader_key","members","pool_info","private_key","reward_account","rng","spending_counter","stake_pool","state","tcg","tokens","value","vote","vrf","wallet","AccountLedger","AddressData","AddressDataValue","CannotFindSpendingCounter","Error","WrongLaneForSpendingCounter","account","account","account_with_spending_counter","account_with_spending_counter","account_with_tokens","address","address","address","address_data","address_data","arbitrary","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","confirm_transaction","confirm_transaction","confirm_transaction_at_lane","confirm_transaction_at_lane","delegation","delegation","delegation_for","delegation_for_account","delegation_from","delegation_id","delegation_key","deref","deref","deref","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_discrimination_and_kind_type","from_discrimination_and_kind_type","from_leader_pair","generate_key_pair","init","init","init","into","into","into","is_utxo","kind","kind","make_input","make_input","make_input_with_value","make_output","make_output","make_output_with_value","make_witness","make_witness","make_witness_with_lane","make_witness_with_lane","new","new","new_with_tokens","private_key","private_key","private_key","public_key","public_key","source","spending_counter","spending_counter","spending_counter_at_lane","spending_counter_mut","to_bech32_str","to_id","to_id","to_owned","to_owned","to_string","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utxo","utxo","value","vzip","vzip","vzip","KeysDb","add_key","borrow","borrow_mut","deref","deref_mut","drop","ed25519","empty","find_by_address","find_ed25519_secret_key","from","init","into","new","new_account_address","new_ed25519_public_key","new_ed25519_secret_key","rng","tcg","try_from","try_into","type_id","vzip","LeaderPair","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","init","into","key","leader_key","new","to_owned","try_from","try_into","type_id","vzip","StakePool","alias","alias","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","id","info","info_mut","init","into","kes","kes","new","pool_info","reward_account","reward_account","to_owned","try_from","try_into","type_id","vrf","vrf","vzip","CommitteeMember","CommitteeMembersManager","borrow","borrow","borrow_mut","borrow_mut","crs","crs","deref","deref","deref_mut","deref_mut","drop","drop","election_pk","from","from","init","init","into","into","members","members","members_keys","new","produce_decrypt_shares","public_key","secret_key","state","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Wallet","account","alias","alias","arbitrary","as_account","as_account_data","as_address","borrow","borrow_mut","clone","clone_into","confirm_transaction","confirm_transaction_at_lane","deref","deref_mut","drop","fmt","from","from","from_address_data_value","from_address_data_value_and_alias","from_value","init","into","make_input_with_value","make_output","make_output_with_value","make_witness","make_witness_at_lane","new","new_with_tokens","private_key","public_key","to_owned","try_from","try_into","type_id","value","vzip","TestGen","VoteTestGen","bft_header","borrow","borrow_mut","bytes","chain_length","deref","deref_mut","drop","from","genesis_praos_header","hash","identifier","init","into","leader_pair","leaders_pairs","ledger","mint_token_for_wallet","parent_id","public_key","rand","secret_key","secret_keys","settings","stake_pool","static_parameters","time_era","token_id","token_name","try_from","try_into","type_id","vote","vrf_proof","vzip","VoteTestGen","borrow","borrow_mut","committee_members_manager","deref","deref_mut","drop","external_proposal_id","from","init","into","parameters_governance","private_vote_cast_payload_for","private_vote_plan","private_vote_plan_with_committees_manager","proposal","proposal_with_action","proposals","proposals_with_action","treasury_governance","try_from","try_into","type_id","vote_cast","vote_cast_for","vote_cast_payload","vote_cast_payload_for","vote_plan","vote_plan_with_proposals","vote_tally","vzip","ConfigBuilder","LedgerBuilder","TestLedger","UtxoDb","UtxoDeclaration","accounts","active_slots_coeff","address","apply_block","apply_empty_bft_block","apply_empty_bft_block_with_date","apply_empty_praos_block","apply_fragment","apply_praos_block","apply_protocol_changes","apply_transaction","arbitrary","arbitrary","arbitrary","block0_date","block0_hash","block0_hash","block_content_max_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","can_distribute_reward","certs","certs","cfg","cfg_builder","cfg_params","chain_length","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committees_ids","consensus_version","create_single_bft_leader","date","db","default","delegation","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","distribute_rewards","drop","drop","drop","drop","era","fast_forward_to","faucet","faucet_value","faucets","faucets","faucets","faucets","faucets_wallets","fee","fees_in_treasury","find_fragments","find_utxo_for_address","fire_leadership_event","fmt","fmt","forge_bft_block_with_fragments","forge_empty_block","forge_praos_block_with_fragments","forward_date","fragment","fragments","fragments","from","from","from","from","from_config","get","increase_leader_log","init","init","init","init","initial_fund","initial_funds","into","into","into","into","kes_update_speed","leaders","leaders_log","leaders_log_for","ledger","linear_fee","mint_tokens","new","normalize","per_certificate_fee","per_vote_certificate_fee","pool_capping_ratio","pots","prefill_address","prefill_output","prefill_outputs","reward_params","rewards","set_date","settings","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","total_funds","transaction_max_expiry_epochs","treasury","treasury_params","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","utxo_declaration","utxodb","utxos","utxos","value","vzip","vzip","vzip","vzip","with_active_slots_coeff","with_block0_date","with_block_content_max_size","with_committee_id","with_consensus_version","with_discrimination","with_fee","with_fees_in_treasury","with_kes_update_speed","with_leaders","with_per_certificate_fee","with_per_vote_certificate_fee","with_pool_reward_participation_caping","with_rewards","with_rewards_params","with_slot_duration","with_slots_per_epoch","with_transaction_max_expiry_epochs","with_treasury","with_treasury_params","Controller","FragmentFactory","block0_hash","block0_hash","controller","declared_stake_pools","declared_vote_plans","declared_wallets","fee","fragment_factory","fragment_factory","prepare_scenario","proposal","scenario_builder","stake_pool","template","vote_plan","wallet","witness_mode","Controller","ControllerError","UnknownStakePool","UnknownVotePlan","UnknownVoteProposal","UnknownWallet","block0_hash","borrow","borrow","borrow_mut","borrow_mut","cast_vote","cast_vote_private","cast_vote_public","clone","clone_into","declared_stake_pools","declared_vote_plans","declared_wallets","delegates","delegates_different_funder","delegates_to_many","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","fragment_factory","fragment_factory","from","from","init","init","initial_stake_pools","into","into","mint_token","new","owner_delegates","register","removes_delegation","retire","stake_pool","tally_vote_private","tally_vote_public","to_owned","to_string","transfer_funds","try_from","try_from","try_into","try_into","type_id","type_id","update","update_proposal","update_vote","vote_plan","vzip","vzip","wallet","wallets","alias","alias","alias","id","FragmentFactory","block0_hash","borrow","borrow_mut","clone","clone_into","delegation","delegation_different_funder","delegation_remove","delegation_to_many","deref","deref_mut","drop","fee","fmt","from","from_ledger","init","into","mint_token","new","owner_delegation","stake_pool_registration","stake_pool_retire","stake_pool_update","to_owned","transaction","transaction_with_cert","try_from","try_into","type_id","update_proposal","update_vote","vote_cast","vote_plan","vote_tally","vzip","witness_mode","witness_mode","NoOwnersForStakePool","ScenarioBuilder","ScenarioBuilderError","UndefinedConfig","UndefinedInitials","UndefinedValueForWallet","borrow","borrow","borrow_mut","borrow_mut","build","build_delegation_fragments","build_stake_pool","build_stake_pools","build_stake_pools_fragments","clone","clone_into","config","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","from","from","init","init","initials","into","into","prepare_scenario","proposal","stake_pool","stake_pools","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vote_plan","vote_plans","vzip","vzip","wallet","with_config","with_initials","with_stake_pools","with_vote_plans","alias","alias","ProposalDef","ProposalDefBuilder","StakePoolDef","StakePoolDefBuilder","StakePoolTemplate","StakePoolTemplateBuilder","VotePlanDef","VotePlanDefBuilder","WalletTemplate","WalletTemplateBuilder","action_type","action_type","alias","alias","alias","alias","alias","alias","alias","alias","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builders","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","committee_keys","committee_keys","committee_keys","committee_keys_mut","committee_member","committee_member","delagate_alias","delegates_stake_pool","delegation_map","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","end_tally_date","end_tally_date","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_vote_plan","has_reward_account","hash","id","id","id","id","init","init","init","init","init","initial_tokens","initial_tokens","initial_value","initial_value","into","into","into","into","into","is_committee_member","new","options","options","owner","owner_alias","owner_alias","owners","owners","ownership_alias","ownership_map","owns_stake_pool","payload_type","payload_type","permissions_threshold","permissions_threshold","pool_permission","proposal","proposals","proposals","proposals","reward_account","secret_key","secret_key","secret_key","stake_pool_delegate_alias","stake_pool_owner_alias","tally_date","tally_date","tax_type","tax_type","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vote_date","vote_date","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","ProposalDefBuilder","StakePoolDefBuilder","StakePoolTemplateBuilder","VotePlanDefBuilder","WalletTemplateBuilder","action_off_chain","action_parameters_no_op","action_rewards_add","action_transfer_to_rewards","action_type","alias","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build_delegation_map","build_ownersip_map","build_stake_pool_templates","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committee_keys","committee_keys","committee_member","committee_member","consecutive_epoch_dates","defined_stake_pools_aliases","delagate_alias","delegates_to","delegation_map","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","end_tally_date","fixed_tax","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","initial_tokens","initial_value","into","into","into","into","into","key","new","new","new","new","new","no_tax","options","options","owner","owner_alias","ownership_alias","ownership_map","owns","owns_and_delegates_to","payload_type","payload_type","permissions_threshold","proposals","reward_account","secret_key","tally_date","tax_limit","tax_ratio","tax_type","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vote_date","vote_phases","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","with","with_permissions_threshold","with_proposal","with_reward_account","with_token","serialization_bijection","LedgerStateVerifier","info","ledger","ledger_verifier","AccountVerifier","DelegationVerifier","DistributionVerifier","Info","LedgerStateVerifier","PotsVerifier","StakePoolVerifier","StakePoolsVerifier","VotesVerifier","account","account_has_expected_balance","accounts","accounts_contains","accounts_count_is","address","address_has_expected_balance","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dangling_is","delegation","delegation","delegation_type","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distribution","does_not_exist","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","fmt","for_vote_plan","from","from","from","from","from","from","from","from","from","from_str","gvien_wallet","has_fee_equals_to","has_last_reward","has_remaining_rewards_equals_to","has_treasury_equals_to","has_value","identifier","info","info","info","info","info","info","info","info","info","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_fully_delegated_to","is_not_retired","is_retired","ledger","multisigs_count_is_zero","new","new","new","new","new","new","new","new","owners_eq","pools_distribution_is","pools_total_stake_is","pots","pots","serial_eq","stake_distribution","stake_pool","stake_pool_id","stake_pool_reg","stake_pools","to_owned","to_string","total_value_is","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unassigned_is","utxo_contains","utxo_has_expected_balance","utxos_count_is","vote_plan_id","vote_plans","votes","votes_were_casted_on_proposals","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","identifier","minting_policy","name","policy_hash","EmptyStr","ExpectedTokenName","Hex","ParseError","PolicyHash","TokenIdentifier","TokenName","UnexpectedData","arbitrary","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","hash","init","init","into","into","partial_cmp","policy_hash","source","tests","to_owned","to_string","to_string","token_name","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AdditionalMintingNotAllowed","MintingPolicy","MintingPolicyEntry","MintingPolicyViolation","arbitrary","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","check_minting_tx","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","serialize","serialized_size","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","TOKEN_NAME_MAX_SIZE","TokenName","TokenNameTooLong","actual","arbitrary","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","bytes","check_base32","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","from","from","hash","init","init","into","into","partial_cmp","serialize","serialized_size","tests","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","POLICY_HASH_SIZE","PolicyHash","arbitrary","arbitrary_with","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","cmp","deref","deref_mut","deserialize","deserialize_from_slice","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","from","from","hash","init","into","partial_cmp","tests","to_owned","try_from","try_from","try_into","type_id","vzip","write_base32","Account","Account","AccountBindingSignature","AccountIdentifier","AccountInput","Auth","AuthenticatedTransaction","Balance","BalanceError","CannotReadExpiryDate","CannotReadNbInputs","CannotReadNbOutputs","Error","Forget","HAS_AUTH","HAS_DATA","INPUT_PTR_SIZE","INPUT_SIZE","Input","InputEnum","InputOutput","InputOutputBuilder","InputType","InputsInvalid","InputsIter","InputsSlice","InputsTotalFailed","InputsWitnessesIter","InputsWitnessesSlice","Legacy","MathErr","Multi","Multi","Multisig","Negative","NoExtra","Normal","NotBalanced","OldUtxo","One","Output","OutputPolicy","OutputsInvalid","OutputsIter","OutputsSlice","OutputsTotalFailed","Payload","PayloadAuthData","PayloadAuthInvalid","PayloadAuthMissing","PayloadAuthSlice","PayloadData","PayloadInvalid","PayloadSlice","Positive","SetAuthData","SetIOs","SetPayload","SetTtl","SetWitnesses","Single","Single","SingleAccountBindingSignature","SpuriousTrailingData","Transaction","TransactionAuthData","TransactionBindingAuthData","TransactionBindingAuthDataPhantom","TransactionIndex","TransactionSignData","TransactionSignDataHash","TransactionSlice","TransactionStructError","TxBuilder","TxBuilderState","TxInvalidNoInput","TxInvalidNoOutput","TxNotEnoughTotalInput","TxTooManyInputs","TxTooManyOutputs","TxTooMuchTotalInput","UnspecifiedAccountIdentifier","UnverifiedTransactionSlice","Utxo","Utxo","UtxoInput","UtxoPointer","Witness","WitnessAccountData","WitnessMultisigData","WitnessUtxoData","WitnessUtxoVersion","WitnessesInvalid","WitnessesIter","WitnessesSlice","Zero","address","builder","data","data","data","data","data","data","element","iiter","index","index","index","index_or_account","inner","input","input_ptr","inputs","inputs","io","marker","output_index","outputs","outputs","payload","payload_auth_data","payload_data","payload_to_certificate_slice","phantom","phantom","phantom","phantom","phantom","phantom","slice","slice","slice","test","transaction","transaction_id","transfer","tstruct","tstruct","tstruct","tstruct","tstruct","utxo","value","value","value","witer","witness","inputs","outputs","FRAGMENT_OVERHEAD","SetAuthData","SetIOs","SetPayload","SetTtl","SetWitnesses","TxBuilder","TxBuilderState","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_pos","data","data","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","get_auth_data","get_auth_data_for_witness","init","init","init","init","init","init","into","into","into","into","into","into","new","new","phantom","phantom","set_expiry_date","set_ios","set_nopayload","set_payload","set_payload_auth","set_witnesses","set_witnesses_unchecked","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tstruct","tstruct","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","AccountBindingSignature","Balance","BalanceError","InputsTotalFailed","Multi","Negative","NotBalanced","OutputsTotalFailed","Positive","Single","SingleAccountBindingSignature","TransactionBindingAuthDataPhantom","TransactionSignData","TransactionSignDataHash","Zero","arbitrary","arbitrary","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","inner","into","into","into","into","into","into","marker","new","new_single","serialize_in","serialize_in","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_slice","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","inputs","outputs","Account","AccountIdentifier","AccountInput","INPUT_PTR_SIZE","INPUT_SIZE","Input","InputEnum","InputType","Multi","Single","UnspecifiedAccountIdentifier","Utxo","UtxoInput","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_account","from_account_public_key","from_account_single","from_enum","from_multi_account","from_multisig_account","from_single_account","from_utxo","from_utxo_entry","get_type","hash","hash","hash","index_or_account","init","init","init","init","init","input_ptr","into","into","into","into","into","new","partial_cmp","serialize","serialized_size","to_enum","to_multi_account","to_owned","to_owned","to_owned","to_single_account","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","write_base32","Error","Forget","InputOutput","InputOutputBuilder","MathErr","One","OutputPolicy","TxInvalidNoInput","TxInvalidNoOutput","TxNotEnoughTotalInput","TxTooManyInputs","TxTooManyOutputs","TxTooMuchTotalInput","add_input","add_output","balance","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","empty","estimate_fee","fmt","fmt","fmt","from","from","from","from","get_balance","get_balance_with_placeholders","get_balance_without_fee","init","init","init","init","inputs","inputs","into","into","into","into","new","outputs","outputs","remove_input","remove_output","seal","seal_with_output_policy","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Auth","HAS_AUTH","HAS_DATA","NoExtra","Payload","PayloadAuthData","PayloadAuthSlice","PayloadData","PayloadSlice","arbitrary","as_bytes","as_bytes","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","equivalent","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_certificate_slice","into_payload","into_payload_auth","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","serialize","serialized_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","TransactionSigningKey","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","CannotReadExpiryDate","CannotReadNbInputs","CannotReadNbOutputs","InputsInvalid","InputsIter","InputsSlice","InputsWitnessesIter","InputsWitnessesSlice","OutputsInvalid","OutputsIter","OutputsSlice","PayloadAuthInvalid","PayloadAuthMissing","PayloadInvalid","SpuriousTrailingData","Transaction","TransactionAuthData","TransactionBindingAuthData","TransactionSlice","TransactionStruct","TransactionStructError","UnverifiedTransactionSlice","WitnessesInvalid","WitnessesIter","WitnessesSlice","arbitrary","as_ref","as_slice","balance","base32_len","block0_payload","block0_payload_builder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_spine","hash","hash","iiter","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","inputs","inputs_and_witnesses","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","iter","iter","iter","iter","nb_elements","nb_inputs","nb_inputs","nb_inputs","nb_inputs","nb_outputs","nb_outputs","nb_outputs","nb_outputs","nb_witnesses","nb_witnesses","nb_witnesses","next","next","next","next","outputs","outputs","payload","payload_auth","payload_auth","phantom","phantom","phantom","serialize","serialized_size","slice","slice","slice","sz","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_input","total_input","total_output","total_output","transaction_auth_data","transaction_binding_auth_data","transaction_sign_data_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstruct","tstruct","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_until","valid_until","verify_possibly_balanced","verify_strictly_balanced","verify_strictly_balanced","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witer","witnesses","witnesses","write_base32","Output","address","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","deserialize_from_slice","drop","eq","equivalent","fmt","fmt","fmt","from","from_address","hash","init","into","to_owned","to_string","try_from","try_into","type_id","value","vzip","TransactionIndex","UtxoPointer","arbitrary","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","hash","init","into","new","output_index","partial_cmp","to_owned","to_string","transaction_id","try_from","try_into","type_id","value","vzip","Account","Legacy","Multisig","Normal","OldUtxo","Utxo","WITNESS_TAG_ACCOUNT","WITNESS_TAG_MULTISIG","WITNESS_TAG_OLDUTXO","WITNESS_TAG_UTXO","Witness","WitnessAccountData","WitnessMultisigData","WitnessUtxoData","WitnessUtxoVersion","arbitrary","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new","new","new_account","new_account_data","new_old_utxo","new_old_utxo_data","new_utxo","new_utxo_data","serialize","serialized_size","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","witness_data_common","write_base32","write_base32","Treasury","add","borrow","borrow_mut","clone","clone_into","deref","deref_mut","draw","drop","eq","equivalent","fmt","from","init","initial","into","sub","to_owned","try_from","try_into","type_id","value","vzip","BadBftSlotsRatio","BadConsensusGenesisPraosActiveSlotsCoeff","BadProposalSignature","BadProposer","BadVoteSignature","BadVoter","DuplicateProposal","DuplicateVote","Error","ReadOnlySetting","UpdateProposalState","UpdateState","VoteForMissingProposal","apply_proposal","apply_vote","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","new","process_proposals","proposal","proposal_date","proposals","proposals","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","votes","vzip","vzip","vzip","AlreadyExists","Entry","EntryOwned","Error","IndexNotFound","Iter","Ledger","TransactionNotFound","TransactionUnspents","Values","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fragment_id","fragment_id","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_outputs","get","hamt_iter","hamt_iter","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","iter","new","next","next","output","output","output_index","output_index","remove","remove_input","remove_multiple","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unspents_iter","unspents_iter","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FromSliceTooBig","FromSliceTooSmall","NegativeAmount","Overflow","SplitValueIn","VALUE_SERIALIZED_SIZE","Value","ValueError","add","arbitrary","arbitrary_with","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","checked_add","checked_sub","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_payload","hash","init","init","init","into","into","into","partial_cmp","parts","remaining","saturating_add","scale","serialize","serialized_size","split_in","sub","sum","sum","to_owned","to_owned","to_owned","to_payload","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","zero","AlreadyVoted","BadDecryptShares","CannotTallyVotes","Choice","CommitteeId","Decrypted","Encrypted","EncryptedVote","InvalidChoice","InvalidChoice","InvalidDecryption","InvalidPayloadType","InvalidPrivacy","InvalidTallyCommittee","InvalidValue","InvalidVotePlan","InvalidVoteProposal","NoEncryptedTally","NotCommitteeTime","NotVoteTime","Options","Payload","PayloadType","Private","Private","Private","Private","PrivateTallyError","PrivateTallyState","PrivateVoteInvalidSize","ProofOfCorrectVote","Public","Public","Public","Public","Tally","TallyAlreadyDecrypted","TallyError","TallyResult","TryFromIntError","ValidatedPayload","VoteError","VoteError","VotePlanInsertionError","VotePlanLedger","VotePlanLedgerError","VotePlanManager","VotePlanMissingCommitteeMemberKey","VotePlanStatus","VotePlanVoteEndPassed","VotePlanVoteStartStartedAlready","VoteProposalStatus","VoteVerificationError","Weight","Zero","ZeroVotingPower","choice","committee","committee","committee_end","committee_public_keys","encrypt_vote","id","id","index","ledger","manager","options","options","options_range","payload","payload","plan","plans","privacy","proposal_id","proposal_managers","proposals","results","status","tally","tally","vote_end","vote_start","votes","voting_token","choice","encrypted_vote","proof","encrypted_tally","result","result","state","choice","options","value","actual","choice","end","end","expected","expected","expected","num_proposals","options","received","source","start","start","vote","vote","vote","current_date","current_date","id","id","reason","reason","vote_end","vote_start","Choice","InvalidOptionsLength","NUM_CHOICES_MAX","Options","arbitrary","arbitrary","as_byte","as_byte","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choice_range","clone","clone","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","new_length","num_choices","options_range","partial_cmp","property","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","vzip","vzip","vzip","COMMITTEE_ID_SIZE","CommitteeId","TryFromCommitteeIdError","arbitrary","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize_from_slice","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","expected","fmt","fmt","fmt","fmt","from","from","from","from","from_hex","from_payload","from_str","from_str","hash","init","init","into","into","public_key","received","serialize","serialized_size","tests","to_hex","to_owned","to_payload","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","VoteError","VotePlanInsertionError","VotePlanLedger","VotePlanLedgerError","VotePlanMissingCommitteeMemberKey","VotePlanVoteEndPassed","VotePlanVoteStartStartedAlready","add_vote_plan","apply_committee_result","apply_vote","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","new","plans","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","current_date","current_date","id","id","reason","reason","vote_end","vote_start","AlreadyVoted","CannotTallyVotes","Decrypted","IncrementalTally","InvalidChoice","InvalidPayloadType","InvalidTallyCommittee","InvalidVotePlan","InvalidVoteProposal","NotCommitteeTime","NotVoteTime","Private","Private","Private","PrivateTallyError","PrivateVoteInvalidSize","ProposalManager","ProposalManagers","Public","Public","Public","ValidatedPayload","ValidatedVoteCast","VoteError","VotePlanManager","VoteVerificationError","ZeroVotingPower","action","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_committee","can_vote","check","check_already_voted","check_governance_criteria","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee","committee_set","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalize_private_tally","finalize_private_tally","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","managers","managers_mut","new","new","new_private","new_public","options","payload","plan","plan","private_tally","proposal_index","proposal_managers","public_tally","public_tally","public_tally","source","statuses","tally","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_committee","validate_private_vote","validate_public_vote","validate_vote","vote","vote","vote","vote_plan_elapsed","votes_by_voters","vzip","vzip","vzip","vzip","vzip","vzip","vzip","crs","election_pk","managers","managers","actual","choice","end","end","expected","expected","expected","num_proposals","options","received","source","start","start","vote","vote","vote","EncryptedVote","InvalidValue","Payload","PayloadType","Private","Private","ProofOfCorrectVote","Public","Public","TryFromIntError","Zero","arbitrary","arbitrary","as_inner","as_inner","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_inner","from_inner","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","partial_cmp","payload_type","private","public","read","read","read","serialize","serialize","serialize_in","serialize_in","serialize_in","tests","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","choice","encrypted_vote","proof","value","encrypt_vote","VotePlanStatus","VoteProposalStatus","borrow","borrow","borrow_mut","borrow_mut","committee_end","committee_public_keys","deref","deref","deref_mut","deref_mut","drop","drop","from","from","id","index","init","init","into","into","options","payload","proposal_id","proposals","tally","try_from","try_from","try_into","try_into","type_id","type_id","vote_end","vote_start","votes","voting_token","vzip","vzip","BadDecryptShares","Decrypted","Encrypted","InvalidChoice","InvalidDecryption","InvalidPrivacy","NoEncryptedTally","Private","PrivateTallyState","Public","Tally","TallyAlreadyDecrypted","TallyError","TallyResult","Weight","add_vote","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","init","init","init","init","init","into","into","into","into","into","is_private","is_public","is_zero","new","new_private","new_public","options","options","partial_cmp","participation","private_encrypted","private_set_result","result","results","results","saturating_add","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","encrypted_tally","result","result","state","choice","options"],"q":[[0,"chain_impl_mockchain"],[31,"chain_impl_mockchain::account"],[73,"chain_impl_mockchain::accounting"],[74,"chain_impl_mockchain::accounting::account"],[147,"chain_impl_mockchain::accounting::account::account_state"],[250,"chain_impl_mockchain::accounting::account::last_rewards"],[274,"chain_impl_mockchain::accounting::account::spending"],[363,"chain_impl_mockchain::accounting::account::spending::Error"],[365,"chain_impl_mockchain::block"],[481,"chain_impl_mockchain::block::builder"],[482,"chain_impl_mockchain::certificate"],[737,"chain_impl_mockchain::certificate::PushProposal"],[738,"chain_impl_mockchain::certificate::TallyProof"],[742,"chain_impl_mockchain::certificate::VoteAction"],[744,"chain_impl_mockchain::certificate::VoteTallyPayload"],[745,"chain_impl_mockchain::certificate::delegation"],[810,"chain_impl_mockchain::certificate::evm_mapping"],[861,"chain_impl_mockchain::certificate::mint_token"],[895,"chain_impl_mockchain::certificate::pool"],[1082,"chain_impl_mockchain::certificate::test"],[1083,"chain_impl_mockchain::certificate::update_proposal"],[1118,"chain_impl_mockchain::certificate::update_vote"],[1156,"chain_impl_mockchain::certificate::vote_cast"],[1193,"chain_impl_mockchain::certificate::vote_plan"],[1395,"chain_impl_mockchain::certificate::vote_plan::PushProposal"],[1396,"chain_impl_mockchain::certificate::vote_plan::VoteAction"],[1398,"chain_impl_mockchain::certificate::vote_tally"],[1542,"chain_impl_mockchain::certificate::vote_tally::TallyProof"],[1546,"chain_impl_mockchain::certificate::vote_tally::VoteTallyPayload"],[1547,"chain_impl_mockchain::chaineval"],[1616,"chain_impl_mockchain::chaineval::ConsensusEvalContext"],[1618,"chain_impl_mockchain::chaintypes"],[1686,"chain_impl_mockchain::config"],[1919,"chain_impl_mockchain::config::RewardParams"],[1927,"chain_impl_mockchain::date"],[1938,"chain_impl_mockchain::error"],[1965,"chain_impl_mockchain::evm"],[2006,"chain_impl_mockchain::fee"],[2104,"chain_impl_mockchain::fragment"],[2195,"chain_impl_mockchain::fragment::config"],[2222,"chain_impl_mockchain::fragment::content"],[2274,"chain_impl_mockchain::header"],[2334,"chain_impl_mockchain::header::builder"],[2460,"chain_impl_mockchain::header::components"],[2535,"chain_impl_mockchain::header::cstruct"],[2675,"chain_impl_mockchain::header::cstruct::HeaderError"],[2677,"chain_impl_mockchain::header::deconstruct"],[2764,"chain_impl_mockchain::header::header"],[2900,"chain_impl_mockchain::header::version"],[2954,"chain_impl_mockchain::key"],[3134,"chain_impl_mockchain::leadership"],[3313,"chain_impl_mockchain::leadership::bft"],[3353,"chain_impl_mockchain::leadership::genesis"],[3420,"chain_impl_mockchain::leadership::genesis::GenesisError"],[3422,"chain_impl_mockchain::leadership::genesis::VrfError"],[3432,"chain_impl_mockchain::leadership::genesis::VrfEvalFailure"],[3434,"chain_impl_mockchain::leadership::genesis::vrfeval"],[3514,"chain_impl_mockchain::leadership::genesis::vrfeval::VrfEvalFailure"],[3516,"chain_impl_mockchain::ledger"],[3543,"chain_impl_mockchain::ledger::check"],[3583,"chain_impl_mockchain::ledger::check::TxVerifyError"],[3585,"chain_impl_mockchain::ledger::governance"],[3653,"chain_impl_mockchain::ledger::governance::ParametersGovernanceAction"],[3654,"chain_impl_mockchain::ledger::governance::TreasuryGovernanceAction"],[3655,"chain_impl_mockchain::ledger::governance::parameters"],[3734,"chain_impl_mockchain::ledger::governance::parameters::ParametersGovernanceAction"],[3735,"chain_impl_mockchain::ledger::governance::treasury"],[3811,"chain_impl_mockchain::ledger::governance::treasury::TreasuryGovernanceAction"],[3812,"chain_impl_mockchain::ledger::iter"],[3933,"chain_impl_mockchain::ledger::leaderlog"],[3960,"chain_impl_mockchain::ledger::ledger"],[4285,"chain_impl_mockchain::ledger::ledger::Error"],[4314,"chain_impl_mockchain::ledger::pots"],[4442,"chain_impl_mockchain::ledger::recovery"],[4544,"chain_impl_mockchain::ledger::reward_info"],[4593,"chain_impl_mockchain::ledger::token_distribution"],[4639,"chain_impl_mockchain::legacy"],[4727,"chain_impl_mockchain::milli"],[4764,"chain_impl_mockchain::multisig"],[4818,"chain_impl_mockchain::multisig::declaration"],[4931,"chain_impl_mockchain::multisig::index"],[4984,"chain_impl_mockchain::multisig::ledger"],[5050,"chain_impl_mockchain::multisig::witness"],[5094,"chain_impl_mockchain::multiverse"],[5156,"chain_impl_mockchain::rewards"],[5325,"chain_impl_mockchain::setting"],[5432,"chain_impl_mockchain::stake"],[5471,"chain_impl_mockchain::stake::controlled"],[5507,"chain_impl_mockchain::stake::delegation"],[5608,"chain_impl_mockchain::stake::distribution"],[5687,"chain_impl_mockchain::stake::stake"],[5791,"chain_impl_mockchain::testing"],[5806,"chain_impl_mockchain::testing::arbitrary"],[5854,"chain_impl_mockchain::testing::arbitrary::address"],[5900,"chain_impl_mockchain::testing::arbitrary::kind_type"],[5937,"chain_impl_mockchain::testing::arbitrary::output"],[5956,"chain_impl_mockchain::testing::arbitrary::random"],[5974,"chain_impl_mockchain::testing::arbitrary::transaction"],[6065,"chain_impl_mockchain::testing::arbitrary::transaction::Error"],[6071,"chain_impl_mockchain::testing::arbitrary::update_proposal"],[6097,"chain_impl_mockchain::testing::arbitrary::utils"],[6122,"chain_impl_mockchain::testing::arbitrary::utxo"],[6140,"chain_impl_mockchain::testing::arbitrary::wallet"],[6158,"chain_impl_mockchain::testing::builders"],[6204,"chain_impl_mockchain::testing::builders::WitnessMode"],[6205,"chain_impl_mockchain::testing::builders::block_builder"],[6257,"chain_impl_mockchain::testing::builders::cert_builder"],[6267,"chain_impl_mockchain::testing::builders::initial_builder"],[6318,"chain_impl_mockchain::testing::builders::old_address_builder"],[6334,"chain_impl_mockchain::testing::builders::stake_pool_builder"],[6363,"chain_impl_mockchain::testing::builders::tx_builder"],[6414,"chain_impl_mockchain::testing::builders::tx_cert_builder"],[6488,"chain_impl_mockchain::testing::builders::tx_cert_builder::WitnessMode"],[6489,"chain_impl_mockchain::testing::builders::vote"],[6490,"chain_impl_mockchain::testing::builders::witness_builder"],[6494,"chain_impl_mockchain::testing::data"],[6533,"chain_impl_mockchain::testing::data::address"],[6651,"chain_impl_mockchain::testing::data::keys"],[6675,"chain_impl_mockchain::testing::data::leader"],[6697,"chain_impl_mockchain::testing::data::stake_pool"],[6729,"chain_impl_mockchain::testing::data::vote"],[6766,"chain_impl_mockchain::testing::data::wallet"],[6806,"chain_impl_mockchain::testing::gen"],[6843,"chain_impl_mockchain::testing::gen::vote"],[6874,"chain_impl_mockchain::testing::ledger"],[7054,"chain_impl_mockchain::testing::scenario"],[7073,"chain_impl_mockchain::testing::scenario::controller"],[7140,"chain_impl_mockchain::testing::scenario::controller::ControllerError"],[7144,"chain_impl_mockchain::testing::scenario::fragment_factory"],[7183,"chain_impl_mockchain::testing::scenario::scenario_builder"],[7239,"chain_impl_mockchain::testing::scenario::scenario_builder::ScenarioBuilderError"],[7241,"chain_impl_mockchain::testing::scenario::template"],[7402,"chain_impl_mockchain::testing::scenario::template::builders"],[7545,"chain_impl_mockchain::testing::serialization"],[7546,"chain_impl_mockchain::testing::verifiers"],[7550,"chain_impl_mockchain::testing::verifiers::ledger_verifier"],[7741,"chain_impl_mockchain::tokens"],[7745,"chain_impl_mockchain::tokens::identifier"],[7805,"chain_impl_mockchain::tokens::minting_policy"],[7878,"chain_impl_mockchain::tokens::name"],[7933,"chain_impl_mockchain::tokens::policy_hash"],[7969,"chain_impl_mockchain::transaction"],[8117,"chain_impl_mockchain::transaction::BalanceError"],[8119,"chain_impl_mockchain::transaction::builder"],[8221,"chain_impl_mockchain::transaction::element"],[8353,"chain_impl_mockchain::transaction::element::BalanceError"],[8355,"chain_impl_mockchain::transaction::input"],[8487,"chain_impl_mockchain::transaction::io"],[8577,"chain_impl_mockchain::transaction::payload"],[8695,"chain_impl_mockchain::transaction::test"],[8713,"chain_impl_mockchain::transaction::transaction"],[9035,"chain_impl_mockchain::transaction::transfer"],[9064,"chain_impl_mockchain::transaction::utxo"],[9094,"chain_impl_mockchain::transaction::witness"],[9195,"chain_impl_mockchain::treasury"],[9219,"chain_impl_mockchain::update"],[9301,"chain_impl_mockchain::utxo"],[9457,"chain_impl_mockchain::value"],[9552,"chain_impl_mockchain::vote"],[9638,"chain_impl_mockchain::vote::Payload"],[9641,"chain_impl_mockchain::vote::PrivateTallyState"],[9643,"chain_impl_mockchain::vote::Tally"],[9645,"chain_impl_mockchain::vote::TallyError"],[9647,"chain_impl_mockchain::vote::TryFromIntError"],[9648,"chain_impl_mockchain::vote::VoteError"],[9664,"chain_impl_mockchain::vote::VotePlanLedgerError"],[9672,"chain_impl_mockchain::vote::choice"],[9741,"chain_impl_mockchain::vote::committee"],[9803,"chain_impl_mockchain::vote::ledger"],[9854,"chain_impl_mockchain::vote::ledger::VotePlanLedgerError"],[9862,"chain_impl_mockchain::vote::manager"],[10056,"chain_impl_mockchain::vote::manager::ProposalManagers"],[10060,"chain_impl_mockchain::vote::manager::VoteError"],[10076,"chain_impl_mockchain::vote::payload"],[10200,"chain_impl_mockchain::vote::payload::Payload"],[10203,"chain_impl_mockchain::vote::payload::TryFromIntError"],[10204,"chain_impl_mockchain::vote::privacy"],[10205,"chain_impl_mockchain::vote::status"],[10244,"chain_impl_mockchain::vote::tally"],[10376,"chain_impl_mockchain::vote::tally::PrivateTallyState"],[10378,"chain_impl_mockchain::vote::tally::Tally"],[10380,"chain_impl_mockchain::vote::tally::TallyError"],[10382,"quickcheck::arbitrary"],[10383,"chain_crypto::key"],[10384,"core::cmp"],[10385,"chain_ser::packer"],[10386,"chain_ser::deser"],[10387,"core::result"],[10388,"core::fmt"],[10389,"core::fmt"],[10390,"core::option"],[10391,"chain_ser::deser"],[10392,"alloc::string"],[10393,"core::any"],[10394,"core::clone"],[10395,"core::cmp"],[10396,"imhamt::operation"],[10397,"core::error"],[10398,"alloc::vec"],[10399,"core::ops::function"],[10400,"std::io"],[10401,"chain_time::era"],[10402,"chain_time::era"],[10403,"typed_bytes::builder"],[10404,"chain_crypto::sign"],[10405,"chain_vote::committee"],[10406,"bech32"],[10407,"alloc::alloc"],[10408,"core::iter::traits::collect"],[10409,"core::num::nonzero"],[10410,"core::slice::iter"],[10411,"chain_crypto::algorithms::ed25519"],[10412,"chain_crypto::key"],[10413,"chain_crypto::sign"],[10414,"core::num::nonzero"],[10415,"chain_crypto::key"],[10416,"chain_crypto::digest"],[10417,"rand_core"],[10418,"rand_core"],[10419,"core::marker"],[10420,"core::marker"],[10421,"chain_crypto::algorithms::vrf"],[10422,"chain_addr"],[10423,"imhamt::hamt"],[10424,"chain_crypto::digest"],[10425,"cbor_event::de"],[10426,"cbor_event::error"],[10427,"std::io"],[10428,"cbor_event::se"],[10429,"imhamt::operation"],[10430,"chain_addr"],[10431,"std::collections::hash::map"],[10432,"chain_crypto::key"],[10433,"chain_vote::tally"],[10434,"chain_vote::committee"],[10435,"quickcheck::arbitrary"],[10436,"core::convert"],[10437,"core::ops::range"],[10438,"chain_vote::encrypted_vote"]],"d":["","","Representation of the block in the mockchain.","","","Shared Types between ledger and chain","","","Errors taht may happen in the ledger and mockchain.","EVM transactions","","","","Module provides cryptographic utilities and types related …","","","","","","Multiverse","","define the Blockchain settings","","","","","","","Unspend Transaction Output (UTXO) ledger","","cover all that relate to the voting part of things (except …","","","","Account Identifier (also used as Public Key)","The public ledger of all accounts associated with their …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Generic account like accounting","","","The public ledger of all accounts associated with their …","","","","","","","","","Add a new account into this ledger.","Add rewards to an existing account.","Add value to an existing account.","Add value to an existing account.","","","","","","","","","","","","","","","","","","","","check if an account already exist","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Get account state","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new empty account ledger","Remove an account from this ledger","Set the delegation of an account in this ledger","","Spend value from an existing account.","Spend value from an existing account without spending …","Spending strategies","","","","","","","","","","","","","","","The maximum number of pools","Delegation Ratio type express a number of parts and a list …","Set the choice of delegation:","","","","","Add a value to an account state","Add Rewards to the account value but also as the …","Same as add() except use a ValueError","","","","","","","","","","","","","","","","","","","Get referencet to delegation setting","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new account state with a specific start value","","","","","","","Set delegation","Spends value from an account state, and returns the new …","Spends value from an account state, and returns the new …","","","","","Add a value to a token in an account state","","","","","","","","","","","","","","","","","","","","Last rewards associated with a state","Add some value to the last reward, if the epoch is the …","","","","","","Create an initial value of epoch=0 reward=0","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","number of parallel lanes of increasing counters, equals to …","","Spending counter associated to an account.","Simple strategy to spend from multiple increasing counters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Increment the counter within it own lane. the lane of …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Increases the spending counter on the given lane.","try to match the lane of the counter in argument, if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Block</code> is an element of the blockchain it contains multiple …","","","Non unique identifier of the transaction position in the …","","","","","","","","","","","","","","","","","","","","","","","","Create a block from a block version, content and a header …","","","","","","","","","","","Date of the block.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Identifier of the block, currently the hash of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Does not validate that the block is consistent","Get the slot following this one.","","Id of the parent block.","","","","","","","","","","","","","","","","","","","","","","","","","Create a block from a block version, content and a header …","","","","","","","","","","","","","abstract tag type to represent an external document, …","the identifier of the external proposal is the Blake2b 256 …","","Hash of keys used for pool","signatures with indices","","","","","","the action if off chain or not relevant to the blockchain","","A self delegation to a specific StakePoolId.","","","","","","control the parameters","Pool ID","","Permission system related to the pool","Pool information","","","","","Pool Registration Cryptographic Hash","Retirement info for a pool","","","","","","Updating info for a pool","","","","","","","a proposal with the associated external proposal identifier","a collection of proposals","","","","","","","","","","","","control the treasury","","","","","","","","","","","","","","this is the action that will result of the vote","","","","","a vote plan for the voting system","","","","","the vote plan identifier on the blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","the committee duration is the time allocated to the …","encrypting votes public keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Genesis Praos keys","","","","","","","","","","","","Operators of this pool","","Owners of this pool","","","vote payload type","Permission system for this pool","","","","","","","the proposals to vote for","","","","Reward account","Rewarding","A random value, for user purpose similar to a UUID. it may …","","","Beginning of validity for this pool, this is used to keep …","","","","","","","","","","","","","","","","","","","","","","","the duration within which it is possible to vote for one …","","","the vote start validity","","","voting token used for weigthing the votes for any proposal …","","","","","","","","","","","","","A self delegation to a specific StakePoolId.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Hash of keys used for pool","signatures with indices","","","","","Pool ID","Representant of a structure signed by a pool’s owners","","Permission system related to the pool","Pool information","Pool Registration Cryptographic Hash","Retirement info for a pool","","Updating info for a pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Genesis Praos keys","","","","","","","","","","Operators of this pool","Owners of this pool","","","","","","","","","","Permission system for this pool","","","","Reward account","Rewarding","A random value, for user purpose similar to a UUID. it may …","","","","","","","","","","","","","","","","","Beginning of validity for this pool, this is used to keep …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","abstract tag type to represent an external document, …","the identifier of the external proposal is the Blake2b 256 …","","the maximum number of proposals to push in <code>Proposals</code>","the action if off chain or not relevant to the blockchain","control the parameters","a proposal with the associated external proposal identifier","a collection of proposals","","","control the treasury","this is the action that will result of the vote","a vote plan for the voting system","the vote plan identifier on the blockchain","","","","","","","","","","","","","","","","","","","","","","","tells if it is possible to vote at the given date","","","","","","","","","","","","","","","","the committee duration is the time allocated to the …","","","encrypting votes public keys","","","tells if it is possible to do the committee operations at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","vote payload type","access the proposals associated to this voting plan","","the proposals to vote for","","","attempt to add a new proposal in the proposal collection","","","","","","","","","build the identifier of the vote plan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the duration within which it is possible to vote for one …","","","the vote start validity","","","voting token used for weigthing the votes for any proposal …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus related data extract from the header","","This is the data extracted from a header related to …","","PraosNonce gathered per block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Change the nonce to be the result of the hash of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Seconds elapsed since 1-Jan-1970 (unix time)","","","","","","","","","","","","","","","","Possible errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Non unique identifier of the transaction position in the …","","","","","","","","","if the Ledger finds that the input has already been used …","","If the Ledger could not find the given input in the UTxO …","This error will happen if the input was already set and is …","error occurs if the signature is invalid: either does not …","error occurs when one of the witness does not sing entire …","Transaction does not have enough signatures. First value …","Transaction sum is not equal to zero, this means that we …","Transaction output has a value of zero.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Variants of supported EVM action types","Variants of supported EVM transactions","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Linear fee using the basic affine formula …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block Contents","","","","","","All possible messages recordable in the content","","Tag enumeration of all known fragment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Return the tag associated with the Message","The ID of a message is a hash of its serialization <em>without</em> …","","","The ID of a fragment is a hash of its serialization <em>without</em>…","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Block Contents","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set multiple messages in the block to build","","","","","","","","","","","","","","","","Non unique identifier of the transaction position in the …","","","","","","","","","","","Finalized BFT Header","Header Builder (finalize BFT part)","Finalized BFT Header","","Header description","Finalized Genesis-Praos Header","Header Builder (finalize Genesis-Praos part)","","","","Finalized Unsigned Header","","","In case there is no need for consensus layer and no need …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Header Builder (finalize BFT part)","Finalized BFT Header","","","Header Builder (finalize Genesis-Praos part)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the authenticated data of a BFT header being built","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tentatively transition to a BFT Header builder","Tentatively transition to a Genesis-Praos Header builder","Finalized to an unsigned header","Create a new Header builder starting from the full content.","Create a new Header builder starting from the full content.","recommended to use new(), this is only for test","recommended to use new(), this is only for test","","","Set the date of this block","Set the header as a genesis header:","Set the header as a general block, with a specific depth …","Set the signature in the BFT header and return the …","Set the signature in the Genesis-Praos header and return a …","","Just a helper to set the signature directly from what the …","Method introduced for negative testing. It does not derive …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In case there is no need for consensus layer and no need …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalized BFT Header","Header description","","Finalized Genesis-Praos Header","Finalized Unsigned Header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Praos Leader consisting of the KES public key and VRF …","Hash that is used as an address of the various components.","","A serializable type T with a signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All 0 hash used as a special hash","","","","","","","","","","","","","","","","","","","","Leadership represent a given epoch and their associated …","","","","","Verification type for when validating a block","","","","","","","","","","","","","","","","","","","","","","","","","","get the consensus associated with the <code>Leadership</code>","Create a Block date given a leadership and a relative …","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the epoch associated to the <code>Leadership</code>","","","","get the TimeEra associated to the <code>Leadership</code>","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Test that the given leader object is able to create a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify whether this header has been produced by a leader …","","","","","","","","","","","","","","The BFT Leader selection is based on a round robin of the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new BFT leadership","","","","","","","","","","","","","","","","","Genesis Praos leadership data for a specific epoch","","Threshold between 0.0 and 1.0","","","","","","Witness","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","previous epoch nonce and the slotid encoded in big endian","","Threshold between 0.0 and 1.0","","","","Witness","","","","","","","","","","","","","","","","Create an Input from previous epoch nonce and the current …","","","","","","","","","","","","","","Evaluate if the threshold is above for a given input for …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","verify that the witness pass the threshold for this …","","","","","","","","The epoch reward information.","Count how many blocks have been created by a specific Pool","Special pots of money","Control what information will be extracted from the …","Amount added to each account. structure can be empty.","","Total Drawn from reward escrow pot for this epoch","","Fees contributed into the pot this epoch","define how to rule over the blockchain","","","","Mockchain ledger. Ledger exists in order to update the …","","Params used","","This module holds all the necessary methods to be able to …","","","","","Amount added to each pool id. structure can be empty.","","","","Value added to the treasury","","","","","Contains the error value","","Contains the success value","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Check that the output value is valid","","check that the pool registration certificate is valid","","","check that the transaction input/outputs/witnesses is …","","check that the transaction input/outputs/witnesses is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the default acceptance criteria","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","register a new action","","","","","set the new default acceptance criteria","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the default acceptance criteria","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","set the new default acceptance criteria","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Count how many blocks have been created by a specific Pool","","","","","","","","","","","Returns the argument unchanged.","Add one count to a pool. if the pool doesn’t exist, then …","","Calls <code>U::from(self)</code>.","Iterate over all known pool record","","","new empty leader log","Set a pool id to a specific value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Overall ledger structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to apply messages to a State, and return the new State …","Try to apply a message to the State, and return the new …","","","","","","","","","","","Applies transaction to the account ledger by validating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This need to be called before the <em>first</em> block of a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","access the ledger static parameters","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special pots of money","","","","","","","","Append some fees in the pots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw rewards from the pot","Draw rewards from the pot","","","","","","","","","","","","","","Get the value in the treasury","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Add to treasury","","Siphon all the fees","","","","Sum the total values in the pots","","Add to treasury","Get the value in the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new empty set of pots","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The epoch reward information.","Control what information will be extracted from the …","Amount added to each account. structure can be empty.","","","","","","","","","","","","","","","Total Drawn from reward escrow pot for this epoch","","","Fees contributed into the pot this epoch","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Params used","","","","","","Amount added to each pool id. structure can be empty.","","","","Value added to the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A valid cardano Address that is displayed in base58","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","mostly helper of the previous function, so not to have to …","Check if the Addr can be reconstructed with a specific xpub","mostly helper of the previous function, so not to have to …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Declaration of a multisig account parameters which is:","","","","","","Account Identifier (also used as Public Key)","","The Index is really just 3 bits and has a hardbound linked …","","","","","","","","","","Witness for multisig","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Declaration of a multisig account parameters which is:","","","","Account Identifier (also used as Public Key)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Get the identifier associated with a declaration","","","","","","","","","","","","","","","","","","","","","","","","","","","The Index is really just 3 bits and has a hardbound linked …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Add a new multisig declaration into the ledger.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Gets the <code>&amp;Declaration</code> for the given <code>&amp;Identifier</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new empty account ledger","Remove a declaration from this ledger","","Set the delegation of an account in this ledger","","Spend value from an existing account.","Spend value from an existing account without spending …","","","","","","","","","","","","Witness for multisig","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Verify that the declaration and the witnesses in …","","","","","","A RAII wrapper around a block identifier and the state …","","Add a state to the multiverse. Return a <code>Ref</code> object that …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Once the state are old in the timeline, they are less and …","","","","","","","","","Add a state to the multiverse. Return a Ref object that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return the number of states stored in memory.","","","","","","","","","","","","","","","","","","","The drawn value will be limited by the absoluted stake in …","","","","","the drawn value will not be limited","Parameters for rewards calculation. This controls:","","","A value distributed between tax and remaining","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is the ratio used by either the linear or the …","The type of compounding","","","","","","","","","","","","","","","","","","","","","","","","Number of epoch between reduction phase, cannot be 0","When to start","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","This is an initial_value for the linear or halvening …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Pool Capping This doesn’t really make sense","","","Max Drawing limit","Calculate the reward contribution from the parameters","","Tax some value into the tax value and what is remaining","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Active slots coefficient used for calculating minimum …","","Fees nSettings","","Move the fees to the rewards; this is the common mode of …","","","Move the fees directly to treasury. this is not a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The number of epochs that a proposal remains valid. To be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A structure that keeps track of stake keys and stake pools.","","","","Stake distribution at a given time.","","","","","","","","","","Calculate the Stake Distribution where the source of stake …","","","","","","","","","","For each stake pool, the total stake value, and the value …","","","","","","","","add the given amount of stake to the given identifier","","","","","","get the total stake controlled by the given account","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","get the ratio controlled by the given account","add the given amount of stake to the given identifier","","","","","","","","","","","","","","","","","A structure that keeps track of stake keys and stake pools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stake distribution at a given time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of stake pools with non-zero stake.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculate the Stake Distribution where the source of stake …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","For each stake pool, the total stake value, and the value …","","","Return the total stake held by the eligible stake pools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Apply this ratio to a value","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TestGen is a clone of abritrary architecture. There is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Struct helps gather all verifications and then decide if …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","this struct can create any transaction including not valid …","","","","","","","","","","","","","","","","Below method should be used only for negative testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Below method should be used only for negative testing","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","this struct can create any transaction including not valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct is responsible for adding some code which makes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct is responsible for adding some code which makes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to get the associated secret key for a given public key","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new keys DB","","same as new_ed25519_secret_key but instead return the …","Create a new Ed25519 and record it","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","TestGen is a clone of abritrary architecture. There is a …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test that any arbitrary given object can serialize and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error during parsing the identifier string.","","The unique identifier of a token.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","A minting policy consists of multiple entries defining …","An entry of a minting policy. Currently there are no …","Error while checking a minting transaction against the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A sequence of bytes serving as a token name. Tokens that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","blake2b_224 hash of a serialized minting policy","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Amount of the balance in the transaction.","","","","","Possible error for the builder.","Forget everything, do not try to return money.","","","","","Generalized input which have a specific input value, and …","","Inputs &amp; Outputs for a built transaction","Inputs &amp; Outputs for a transaction being built","","","","","","","","","","","","","Balance is negative, such transaction can’t be valid.","","","","","Send all extra balance to the given address.","Information how tokens are spent. A value of tokens is …","Output policy to be used in transaction. This policy is …","","","","","","Owned binary representation of a payload auth","","","Borrowed binary representation of a payload auth","Owned binary representation of a payload","","Borrowed binary representation of a payload","Balance is positive.","","","","","","","","","","","","","","","","","","","","A Transaction builder with an associated state machine","","","","","","","This is either an single account or a multisig account …","","","","","Unspent transaction pointer.","Structure that proofs that certain user agrees with some …","","","","","","","","Balance is zero.","","","","","","","","","","","","","","","","","","","","","","the output index within the pointed transaction’s outputs","","","","","","","","","","","","","","","","","","the transaction identifier where the unspent output is","","","","","","","","","","the value we expect to read from this output","","","","","","","","","","","","A Transaction builder with an associated state machine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the authenticated data related to possible overall …","Get the authenticated data consisting of the payload and …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Tx builder","Create a new Tx builder","","","","Set the inputs and outputs of this transaction","","Set the payload of this transaction","Set the authenticated data","Set the witnesses of the transaction. There’s need to be …","Set the witnesses of the transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of the balance in the transaction.","","","","Balance is negative, such transaction can’t be valid.","","","Balance is positive.","","","","","","Balance is zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generalized input which have a specific input value, and …","","","","","This is either an single account or a multisig account …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Possible error for the builder.","Forget everything, do not try to return money.","Inputs &amp; Outputs for a built transaction","Inputs &amp; Outputs for a transaction being built","","Send all extra balance to the given address.","Output policy to be used in transaction. This policy is …","","","","","","","Add additional input.","Add additional output.","","","","","","","","","","Build the InputOutput from the Builder","","","","","","","","","","","","","","","","","Create a new empty builder","Calculate the fees on a given fee algorithm for the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get balance including current fee.","Get balance including current fee.","Get transaction balance without fee included.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a builder from a given sequence of inputs and …","","","Remove input at the index specified starting from the …","Remove output at the index specified starting from the …","Seal the transaction checking that the transaction fits …","Seal the transaction by passing fee rule and the output …","","","","","","","","","","","","","","","","","","","","","","","","","","Owned binary representation of a payload auth","Borrowed binary representation of a payload auth","Owned binary representation of a payload","Borrowed binary representation of a payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a specific block0 payload transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Verify the structure of the transaction and return all the …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information how tokens are spent. A value of tokens is …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Unspent transaction pointer.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","the output index within the pointed transaction’s outputs","","","","the transaction identifier where the unspent output is","","","","the value we expect to read from this output","","","","","","","","","","","","Structure that proofs that certain user agrees with some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Creates new <code>Witness</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","An amount of value owned by the treasury.","Add some value in the treasury","","","","","","","","","","","","Returns the argument unchanged.","","Create a treasury with an initial value","Calls <code>U::from(self)</code>.","remove some values from the treasury","","","","","Get value in the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","structure used by the iterator or the getter of the UTxO …","structure used by the iterator or the getter of the UTxO …","","","","Ledger of UTXO","","Hold all the individual outputs that remain unspent","","Add new outputs associated with a specific transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new empty UTXO Ledger","","","","","","","Spend a specific index from the transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unspent transaction value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","a choice","committee identifier","","","","","","","","","","","","","","","","options for the vote","","the <code>PayloadType</code> to use for a vote plan","","","","","","","","","","","","","","","","the tally results","","","","","","","","Manage the vote plan and the associated votes in the ledger","","","","","","","weight of a vote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a choice","error that may occur when creating a new <code>Options</code> using the …","","options for the vote","","","get the byte representation of the <code>Options</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create a new <code>Options</code> with the given number of available …","","","","","","","","","","","","","","","","","validate the given <code>Choice</code> against the available <code>Options</code>","","","","","committee identifier","error that can be received when converting a slice into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","read the identifier from the hexadecimal string","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","returns the identifier encoded in hexadecimal string","","","","","","","","","","","","","","","","","","","","","","add the vote plan in a new <code>VotePlanLedger</code>","apply the committee result for the associated vote plan","attempt to apply the vote to the appropriate Vote Proposal","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manage the vote plan and the associated votes in the ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","construct a <code>ProposalManager</code> to track down the votes …","construct a <code>ProposalManager</code> to track down the votes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","validate the vote against the proposal: verify that the …","attempt to apply the vote to one of the proposals","Attempt to apply the vote to one of the proposals.","apply the given vote cast to the proposal","return true if the vote plan has elapsed i.e. the vote is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the <code>PayloadType</code> to use for a vote plan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the tally results","weight of a vote","add a vote and its weight on the tally","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,278,1,1,278,0,1,1,1,1,1,1,0,24,0,0,0,24,24,0,24,0,24,0,22,22,22,22,24,22,24,22,24,22,24,22,22,24,22,24,22,24,22,24,22,24,22,22,24,24,22,24,24,24,24,24,22,22,22,22,24,22,24,22,22,0,22,22,22,24,22,22,0,0,24,22,24,22,24,22,24,22,24,22,24,22,0,0,0,0,38,0,38,38,36,36,36,38,36,38,42,37,38,42,36,37,38,42,36,38,42,36,38,42,36,36,36,37,38,42,36,37,38,42,36,37,38,42,36,38,42,36,38,42,36,36,38,42,36,37,38,42,36,37,38,42,36,37,38,42,36,37,42,36,42,36,36,37,42,42,42,42,36,36,36,36,38,42,36,36,36,37,38,42,36,37,38,42,36,37,38,42,36,36,36,37,38,42,36,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,33,33,40,46,0,0,0,33,40,0,46,40,40,33,46,40,33,46,40,33,46,40,33,46,40,46,33,46,40,33,46,40,33,46,40,33,46,40,33,46,40,33,33,46,46,40,33,46,40,40,40,46,46,40,40,33,46,40,33,46,40,40,40,46,46,46,46,46,40,33,46,40,33,46,33,46,40,33,46,40,33,46,40,40,33,46,40,40,494,494,54,54,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0,0,0,0,0,0,49,50,49,50,54,49,50,54,0,0,49,49,50,54,49,50,54,50,49,49,49,49,50,54,49,50,54,49,49,49,50,54,50,49,50,54,49,50,54,50,49,50,50,54,54,49,49,49,50,50,54,50,50,50,50,0,49,49,49,49,49,50,54,49,50,54,49,50,50,49,50,49,49,50,54,0,49,50,54,50,54,49,50,54,49,50,54,49,50,54,49,49,50,54,0,0,0,0,0,0,0,0,0,64,63,62,65,0,0,104,0,0,0,0,64,63,62,100,86,0,64,63,62,65,86,100,0,0,0,0,64,63,62,65,0,0,64,63,62,65,0,0,64,63,62,65,112,111,0,0,112,111,0,0,0,64,63,62,65,104,0,100,0,64,63,62,65,0,0,0,64,63,62,65,0,0,0,64,63,62,0,64,63,62,65,0,0,0,64,63,62,65,0,73,99,62,63,64,63,62,65,64,63,62,65,495,75,63,62,65,63,62,65,71,71,113,0,69,73,64,63,62,65,64,63,62,65,64,63,62,65,0,99,62,65,64,64,64,64,64,64,64,64,64,64,64,64,64,63,63,62,62,62,62,62,62,62,62,62,62,62,62,62,65,95,101,76,64,63,62,65,43,329,496,106,98,92,64,63,62,65,64,66,77,495,43,329,496,106,98,0,70,62,77,66,99,66,68,76,71,66,70,0,77,74,78,68,71,102,75,74,66,66,66,101,84,66,113,0,70,63,62,65,64,63,62,65,64,63,62,65,64,63,62,65,0,0,70,0,71,0,68,71,0,78,71,64,63,62,65,497,498,499,498,499,500,501,502,0,0,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,0,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,73,69,69,73,73,0,69,73,69,73,69,73,69,73,69,73,69,73,69,73,0,0,72,72,83,72,83,72,83,72,83,72,83,72,83,72,72,83,72,83,72,83,83,72,83,72,83,72,83,72,83,72,72,72,0,83,72,72,72,72,83,72,83,72,83,72,83,72,83,72,83,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,70,70,70,70,70,70,70,0,0,0,0,0,86,86,0,0,0,0,0,0,0,0,0,84,66,85,77,74,86,66,85,66,85,77,74,86,87,66,85,77,74,86,87,495,66,85,77,74,86,87,66,85,77,74,86,87,66,85,77,74,86,87,66,85,77,74,86,87,74,84,66,77,74,86,66,85,77,74,86,87,66,85,77,74,66,85,77,74,66,85,77,74,86,87,66,85,77,74,86,87,85,66,85,77,74,86,87,43,329,496,66,85,77,74,86,87,66,77,495,66,85,43,329,496,85,77,66,66,66,77,74,66,77,74,66,77,74,66,77,74,74,66,66,66,66,66,77,77,74,74,66,77,74,86,87,66,77,74,84,87,66,66,66,85,77,74,86,87,66,85,77,74,86,87,66,85,77,74,86,87,66,85,77,74,86,87,86,87,66,85,77,74,86,87,0,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,95,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,104,102,100,100,0,0,0,104,100,0,0,0,0,99,99,71,101,100,102,99,503,71,101,100,102,99,104,503,71,101,100,102,99,104,71,71,99,71,101,100,102,99,104,71,101,100,102,99,104,71,71,71,71,71,71,71,71,102,503,71,101,100,102,102,99,104,503,71,101,100,102,99,104,100,71,101,100,503,71,101,100,102,99,104,71,100,102,99,104,71,100,102,99,104,99,99,71,101,100,102,99,104,503,71,71,101,100,102,99,99,104,102,101,503,71,101,100,102,99,104,106,98,503,71,101,100,102,99,104,71,106,98,71,102,99,99,99,71,71,71,71,71,71,102,71,102,71,102,71,71,71,101,100,99,71,101,71,71,101,100,102,99,104,503,71,101,100,102,99,104,503,71,101,100,102,99,104,503,71,101,100,102,99,104,101,71,71,71,71,71,71,71,71,503,71,101,100,102,99,104,497,500,501,0,0,0,112,111,112,111,0,0,0,76,111,76,112,111,114,92,113,76,112,111,114,92,113,76,112,111,92,113,76,112,111,92,113,113,76,112,111,114,92,113,76,112,111,114,92,113,76,111,76,112,111,114,92,113,76,112,92,113,76,112,92,113,76,112,111,114,114,92,113,76,112,111,114,92,113,76,112,92,113,76,76,76,112,111,114,92,113,92,76,112,111,114,92,113,92,92,76,76,76,76,76,112,76,112,76,76,76,111,76,76,113,76,76,112,111,92,113,114,76,112,111,114,92,113,76,112,111,114,92,113,76,112,111,114,92,113,111,76,112,111,114,92,113,498,499,498,499,502,118,0,118,0,118,0,115,115,119,115,118,119,115,118,119,119,115,115,118,119,115,118,119,119,119,115,118,119,115,118,119,115,118,119,115,115,115,115,115,118,119,115,118,119,115,115,115,118,119,115,118,119,115,118,119,115,118,119,115,118,119,115,118,119,115,118,119,115,115,504,504,505,123,0,0,0,505,123,0,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,124,123,123,124,124,123,124,124,123,123,123,123,123,124,163,124,123,124,123,124,124,124,123,124,0,123,124,123,123,124,123,123,124,123,124,123,124,123,124,128,130,128,130,0,128,130,128,130,126,0,0,128,130,128,130,128,130,128,130,0,128,130,129,126,128,130,129,128,130,0,128,130,128,130,128,130,128,130,128,130,128,130,128,130,128,130,0,128,130,128,130,126,128,130,128,130,126,0,0,0,128,130,128,130,128,130,126,0,0,128,129,130,131,130,132,126,128,129,130,132,131,133,126,128,129,130,132,131,133,126,128,129,130,132,131,133,126,128,129,130,132,131,133,133,126,128,129,130,132,131,133,126,128,129,130,132,131,133,128,126,128,129,130,132,131,133,126,128,129,130,131,133,126,128,129,130,131,133,126,126,128,129,130,131,133,126,126,128,129,130,130,132,131,133,506,129,131,130,130,130,132,133,133,132,126,128,129,130,132,131,133,126,128,129,130,132,131,133,132,130,132,132,133,132,132,132,132,133,128,128,132,0,126,128,129,130,132,131,133,506,129,131,126,126,128,129,130,130,132,131,133,126,128,129,130,132,131,133,126,128,129,130,132,131,133,126,128,129,130,132,131,133,507,508,507,508,507,508,507,508,54,54,0,0,54,0,0,0,50,50,0,135,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,136,137,136,137,136,137,136,137,136,137,136,137,137,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,137,136,137,136,137,136,137,136,137,136,137,0,0,0,0,138,139,140,449,138,138,139,140,138,139,140,449,449,138,139,139,139,140,140,138,139,140,138,139,140,138,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,449,138,139,140,449,138,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,138,138,138,0,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,0,0,0,0,0,144,145,144,145,0,0,0,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,145,144,144,145,144,145,144,145,144,145,0,0,144,145,144,145,144,144,144,145,144,145,144,145,144,145,148,144,145,145,144,144,149,146,144,144,145,144,145,144,144,0,144,145,144,145,144,145,144,145,144,145,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,52,52,148,52,148,52,148,52,148,52,52,148,52,148,52,148,52,148,52,52,52,52,148,52,52,148,149,52,148,52,148,52,52,52,52,148,148,148,52,148,52,148,52,148,52,148,52,148,0,180,60,0,0,0,0,0,0,51,0,51,180,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,180,0,0,184,60,184,0,177,177,177,177,177,0,177,0,0,181,0,50,0,0,181,181,179,178,179,178,50,0,0,179,0,0,0,0,0,0,0,0,0,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,154,155,0,0,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,152,152,152,159,152,159,154,155,152,152,152,154,155,154,155,154,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,152,154,155,162,151,156,157,153,0,0,0,0,171,166,164,161,171,166,164,161,171,166,164,161,171,166,164,161,171,166,164,161,171,166,164,161,171,166,164,161,171,166,164,161,171,166,166,166,164,164,164,161,161,171,166,164,161,171,166,164,161,171,166,164,161,161,171,166,164,161,171,166,164,161,171,166,164,161,166,171,166,164,161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,0,176,176,0,0,0,0,174,175,174,174,175,175,175,175,174,175,176,174,175,176,174,176,174,176,175,175,175,175,175,174,175,176,174,175,176,174,175,176,174,176,174,176,176,176,174,175,176,175,174,175,175,175,175,175,175,175,174,175,176,174,175,176,174,175,175,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,175,175,174,175,176,176,174,175,176,174,175,176,174,175,176,174,174,175,174,175,176,509,509,180,0,0,180,0,180,0,177,178,179,177,177,177,177,177,177,180,178,179,177,180,178,179,177,177,180,178,179,177,180,178,179,177,180,178,179,177,180,178,179,177,180,178,179,177,177,177,180,178,179,177,180,178,179,177,180,178,179,177,180,178,179,179,178,179,178,177,180,178,179,177,180,178,179,177,180,178,179,177,180,178,179,179,177,180,178,179,60,60,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,158,167,165,60,181,158,167,165,60,181,60,60,158,167,165,60,181,158,167,165,60,181,60,60,181,158,167,165,60,181,158,167,165,60,181,60,60,60,158,167,165,60,181,158,167,165,60,158,167,165,60,60,181,181,158,167,165,60,181,60,158,167,165,60,60,60,60,60,60,181,158,167,165,60,60,181,158,167,165,60,181,158,167,165,60,181,60,60,60,60,60,158,167,165,60,181,60,181,158,167,165,60,181,158,167,165,60,181,158,167,165,60,181,60,158,167,165,60,181,0,0,51,51,51,184,184,184,51,184,51,184,51,184,51,184,51,184,51,184,51,184,51,184,184,51,184,51,184,51,184,184,184,51,51,51,51,184,51,184,51,51,184,51,51,184,51,184,51,184,184,51,184,51,0,0,0,0,0,0,185,0,0,185,0,0,0,185,186,160,187,186,160,187,186,160,186,160,186,160,191,185,186,160,187,191,185,186,160,187,0,0,186,160,191,185,186,160,187,191,185,186,160,187,186,191,191,185,186,160,187,191,185,186,160,187,186,191,186,160,187,0,0,187,191,185,186,160,187,186,160,186,160,191,186,160,187,191,186,160,187,191,186,186,160,187,191,185,186,186,186,160,160,160,187,186,160,186,186,185,186,186,160,187,186,186,191,185,186,160,187,191,185,186,160,187,187,0,186,186,510,511,512,191,186,160,0,0,191,186,160,191,185,185,510,511,512,0,0,191,185,186,160,187,160,185,186,191,185,186,160,187,191,185,186,160,187,191,185,186,160,187,0,0,187,191,185,186,160,187,186,160,186,186,209,206,0,0,0,204,207,0,209,206,204,204,204,204,204,204,204,0,0,0,0,204,209,207,0,204,0,208,513,514,208,209,206,205,204,203,207,513,514,208,209,206,205,204,203,207,203,203,204,204,205,205,513,514,208,209,206,205,204,203,207,513,514,208,209,206,205,204,203,207,513,514,208,209,206,205,204,203,207,205,205,204,204,205,205,207,204,204,203,203,207,513,514,208,208,209,206,205,204,203,207,0,208,204,513,514,208,209,206,205,204,203,207,205,513,514,208,209,206,205,204,203,207,207,206,205,203,205,203,203,514,513,514,205,207,204,204,203,0,513,514,208,209,206,205,204,203,207,513,514,208,209,206,205,204,203,207,513,514,208,209,206,205,204,203,207,205,206,206,514,513,514,208,209,206,205,204,203,207,0,0,214,215,214,215,214,214,214,215,214,215,214,215,214,214,214,215,214,215,215,214,215,214,215,215,215,215,215,215,214,214,215,214,215,214,215,215,214,215,0,218,219,219,0,226,0,219,226,218,0,0,0,0,217,217,218,219,217,218,219,217,218,219,217,218,219,217,217,217,218,219,217,217,218,218,219,219,217,218,219,217,218,219,217,218,219,217,217,217,217,218,219,217,218,219,217,218,219,217,218,219,217,0,217,218,219,515,515,516,517,518,518,516,517,518,518,518,518,519,519,0,0,0,226,0,226,0,0,0,0,0,228,227,228,224,226,227,228,224,226,224,226,224,226,227,227,228,224,226,227,228,224,226,227,228,224,226,224,228,226,227,228,224,226,224,0,0,227,228,224,226,227,228,224,226,228,224,0,228,228,224,226,227,228,224,226,227,228,224,226,227,228,224,226,228,227,228,224,226,0,519,519,0,0,0,0,262,0,262,266,262,0,0,0,0,0,245,262,0,0,264,264,0,266,262,0,245,266,262,0,0,0,0,520,0,520,230,0,230,230,230,230,230,230,230,230,230,230,230,230,0,230,230,230,230,230,230,230,0,0,0,0,0,0,0,0,0,0,230,521,521,0,0,237,236,240,239,0,0,0,237,236,240,239,0,0,0,235,238,234,103,234,103,234,103,234,103,234,103,234,235,238,103,234,103,234,103,234,103,234,103,234,234,234,103,234,103,234,103,234,235,234,234,234,0,103,234,103,234,0,103,103,234,103,234,103,234,103,234,522,523,237,236,0,0,0,237,236,235,235,237,236,235,237,236,235,237,236,235,237,236,235,236,235,235,235,237,236,235,237,236,235,237,237,237,236,235,237,236,235,237,236,235,237,236,237,236,235,236,237,236,235,237,236,235,235,235,235,235,235,236,237,235,235,237,236,235,237,237,236,235,237,236,235,237,236,235,237,236,235,522,240,239,240,239,0,0,0,238,238,240,240,239,238,240,239,238,240,239,238,240,239,238,239,238,238,238,240,239,238,240,239,238,240,240,240,239,238,240,239,238,240,239,238,240,239,240,239,238,239,240,239,238,240,239,238,238,239,240,238,238,240,239,238,240,240,239,238,240,239,238,240,239,238,240,239,238,523,244,241,524,244,241,524,524,0,0,0,244,241,524,0,244,241,524,0,244,241,524,244,241,524,244,524,241,244,241,524,244,241,524,241,244,241,524,244,524,241,244,524,241,244,524,243,241,242,244,524,243,241,242,242,241,242,241,242,242,244,524,243,241,242,244,524,243,241,242,244,524,243,241,242,242,242,242,242,244,524,243,241,242,244,524,243,241,242,244,524,243,241,242,243,243,243,243,242,241,241,242,244,524,243,241,242,244,524,243,241,242,244,524,243,241,242,244,524,243,241,242,0,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,231,231,231,0,231,0,231,261,261,231,231,257,231,231,0,231,231,231,231,0,261,261,261,261,261,261,261,231,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,231,231,231,0,0,0,231,279,231,231,257,231,231,231,231,0,231,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,279,231,231,261,261,231,231,231,231,231,231,231,261,231,231,231,231,231,231,231,231,231,231,210,210,210,210,525,367,210,210,249,210,0,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,260,260,249,249,257,279,260,210,249,261,231,257,279,260,210,249,261,231,0,210,210,210,260,210,249,261,231,260,210,249,261,231,210,210,210,210,210,210,257,279,260,210,249,261,231,257,279,260,210,249,261,231,210,260,210,210,257,279,260,210,249,261,231,210,260,210,261,231,260,210,261,231,210,210,210,249,260,210,249,261,261,231,231,257,279,260,210,210,249,261,231,231,231,231,231,231,231,231,231,231,231,231,231,210,210,210,210,210,257,279,260,210,249,261,231,0,0,0,0,257,279,260,210,249,261,231,210,260,210,249,0,210,210,0,210,210,210,210,210,210,210,249,210,0,231,210,210,260,210,249,261,231,261,231,210,210,210,210,257,279,260,210,249,261,231,257,279,260,210,249,261,231,257,279,260,210,249,261,231,210,210,210,210,210,210,525,367,210,257,279,260,210,249,261,231,526,527,528,529,530,530,531,532,533,527,529,534,528,535,536,537,538,539,540,534,536,537,538,533,536,537,538,526,535,541,0,0,0,541,285,286,0,0,541,285,286,541,285,286,0,266,541,287,288,266,285,286,541,287,288,266,285,286,266,285,286,266,285,286,541,287,288,266,285,286,541,287,288,266,285,286,266,266,541,287,288,266,285,286,266,285,266,285,266,285,266,266,266,285,286,541,287,288,266,285,286,541,287,288,266,285,286,541,287,288,266,285,286,287,288,287,287,288,287,266,266,266,266,266,285,286,266,266,266,266,541,287,288,266,285,286,541,287,288,266,285,286,541,287,288,266,285,286,285,266,541,287,288,266,285,286,266,289,289,0,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,289,289,289,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,289,0,0,262,262,264,262,264,262,264,262,264,262,264,264,262,264,262,262,264,262,262,264,262,264,262,264,262,264,262,262,262,264,264,264,262,262,262,264,262,262,262,264,262,264,262,264,262,264,262,0,0,280,281,280,281,280,281,280,281,280,281,281,280,281,280,281,280,281,280,281,280,281,280,281,280,280,281,280,281,280,281,280,280,281,280,280,280,280,281,280,281,280,281,280,281,300,0,0,0,300,255,255,253,253,253,300,255,253,300,255,253,253,300,255,253,300,255,253,253,253,300,255,253,300,255,253,255,253,300,255,253,253,253,300,255,253,300,255,253,253,300,255,253,253,300,255,253,253,253,253,253,253,253,300,255,253,300,255,253,0,253,253,255,255,0,253,300,255,253,253,253,300,255,253,300,255,253,300,255,253,300,255,253,307,0,0,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,0,307,307,307,307,307,307,307,307,307,268,268,311,311,0,0,0,268,268,310,310,0,268,0,0,0,290,268,290,310,310,268,0,0,0,0,275,309,309,309,309,309,0,275,309,309,309,309,309,309,0,309,309,0,309,291,0,291,309,309,309,309,0,309,0,0,0,310,310,0,290,0,0,290,310,310,0,276,276,276,276,276,310,291,290,276,310,291,290,276,276,310,291,290,276,310,291,290,276,276,310,291,290,276,310,291,290,276,310,291,290,276,276,276,310,291,290,276,310,291,290,276,276,310,310,291,290,276,276,310,291,290,290,291,276,276,310,291,290,276,310,291,290,291,291,0,276,542,542,291,291,290,291,276,310,291,290,276,310,291,276,310,291,290,276,310,291,290,276,310,291,290,276,310,291,290,276,311,311,0,0,0,0,0,312,311,312,311,312,311,312,311,312,311,311,312,311,312,311,312,311,312,311,312,311,312,311,312,311,312,311,312,311,312,311,311,312,311,312,311,312,312,311,312,311,312,311,311,312,311,268,268,268,268,268,0,0,268,268,275,275,275,275,268,275,268,275,268,275,268,275,275,275,268,275,268,275,268,275,268,275,268,268,268,275,268,268,268,268,268,275,275,275,268,275,268,275,275,275,275,275,275,268,275,275,275,268,268,275,268,275,268,275,268,275,268,0,0,314,277,314,277,314,277,277,314,277,314,277,314,277,0,277,314,277,277,314,277,277,277,314,277,314,277,314,314,277,277,277,277,277,314,277,314,277,314,277,0,277,314,317,0,0,0,317,315,315,317,316,315,317,316,316,316,317,315,315,317,316,315,317,316,315,317,316,315,317,316,315,315,317,315,316,316,315,317,316,315,315,317,316,315,316,315,316,316,316,315,315,316,315,317,316,315,317,316,315,317,316,315,317,316,321,0,318,0,318,321,0,0,0,0,0,323,318,319,320,321,322,319,320,318,319,320,321,322,323,324,318,319,320,321,322,323,324,318,319,320,321,322,323,324,318,319,320,321,322,323,324,319,322,322,324,319,318,319,320,321,322,323,324,318,319,320,321,322,323,324,318,319,320,321,322,323,324,322,322,318,319,320,321,322,318,319,320,321,322,320,318,319,320,321,322,323,324,318,319,320,321,322,323,324,319,320,318,319,320,321,322,323,324,322,318,319,320,321,322,323,324,320,319,319,322,320,320,322,0,320,0,323,0,318,319,320,321,322,323,324,319,320,318,319,320,321,322,323,324,318,319,320,321,322,323,324,318,319,320,321,322,323,324,318,319,320,321,322,323,324,319,320,322,0,0,0,325,326,0,0,326,265,265,265,265,325,223,326,265,325,223,326,265,325,223,326,265,325,223,326,265,265,265,265,265,326,265,325,223,326,265,325,223,326,265,325,223,326,265,265,325,223,326,265,325,223,326,265,265,325,325,223,326,265,325,223,326,265,325,223,326,265,325,223,326,265,265,265,265,265,265,265,265,265,265,325,223,326,325,265,265,265,265,265,325,223,223,326,265,325,223,326,265,325,223,326,265,325,223,326,270,270,0,0,0,0,0,0,0,0,0,0,0,0,330,327,327,0,213,0,0,295,0,296,333,296,263,333,0,263,225,222,213,330,225,327,213,295,295,0,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,270,270,0,0,0,0,222,270,295,296,222,270,295,296,222,270,295,296,222,270,295,296,296,222,295,222,270,295,296,222,270,295,296,222,222,270,295,296,295,222,270,295,296,222,270,295,296,222,270,270,295,296,222,270,295,296,222,270,295,296,222,270,295,296,296,222,222,222,296,222,296,222,222,222,222,222,222,222,222,270,295,296,270,222,270,295,296,222,270,295,296,222,270,295,296,295,295,222,270,295,296,0,0,0,330,330,263,0,213,263,330,213,263,330,213,263,330,213,263,330,213,330,213,263,330,213,263,330,213,263,330,213,213,213,263,330,213,263,330,213,263,330,213,263,330,0,213,213,213,213,263,330,213,263,330,330,330,263,263,330,213,263,330,213,330,330,213,213,263,330,213,263,330,213,263,330,213,213,263,330,0,0,0,0,328,328,225,328,328,332,225,333,328,332,225,333,328,328,328,332,225,333,328,332,225,333,328,332,328,328,332,225,333,328,332,225,333,328,332,225,333,328,332,225,333,328,332,225,333,328,328,332,225,333,328,328,332,225,333,328,328,328,332,225,333,328,332,225,333,225,328,332,333,333,332,225,328,225,328,328,332,225,333,328,225,328,332,225,333,328,332,225,333,328,332,225,333,328,332,225,333,328,328,328,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,334,335,334,335,334,335,334,335,334,335,0,334,335,334,335,334,335,334,335,334,335,334,335,334,335,0,0,0,0,334,335,0,334,335,334,335,334,335,0,0,0,334,335,0,0,0,336,338,336,336,338,336,338,336,338,336,338,336,336,338,336,338,336,338,336,338,336,338,336,338,336,338,336,336,336,336,336,338,336,336,338,336,338,336,338,336,336,336,338,336,0,0,341,342,341,342,341,342,341,342,341,342,341,342,341,342,341,342,341,342,341,342,341,342,341,342,341,341,342,341,342,341,342,341,342,341,342,0,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,0,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,349,0,0,0,349,0,349,346,346,347,348,346,349,347,348,346,349,347,348,346,346,349,346,349,347,348,346,349,347,348,346,349,346,347,348,346,349,349,349,346,0,0,0,0,346,349,349,347,348,346,349,347,348,346,349,346,346,347,348,346,349,346,346,346,346,347,348,346,346,346,349,349,347,348,346,349,347,348,346,349,347,348,346,349,347,348,347,348,346,349,346,543,544,543,543,545,545,0,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,0,355,355,0,0,0,0,0,355,355,355,355,0,355,355,355,355,355,0,355,355,355,355,355,355,0,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,0,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,377,377,0,0,0,377,0,0,379,0,380,368,380,0,0,0,0,0,0,0,0,0,0,0,0,0,0,379,368,380,0,0,0,0,0,369,369,0,0,0,0,0,0,380,0,0,546,0,0,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,365,366,0,0,0,0,0,0,0,0,0,0,0,0,368,369,368,369,368,0,0,0,0,0,0,0,0,0,0,0,368,369,368,369,368,369,0,368,369,368,368,369,368,369,368,369,369,369,0,368,369,368,369,368,369,368,369,368,369,368,369,368,369,0,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,0,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,0,0,373,376,376,373,376,373,373,373,376,373,376,373,376,373,373,373,373,376,373,373,373,373,373,373,376,373,376,373,376,376,376,376,376,376,376,373,373,376,373,376,373,373,376,373,376,373,376,376,373,377,377,0,377,0,0,379,379,379,380,377,379,380,377,380,380,377,377,377,379,380,377,379,380,377,379,380,377,0,379,379,377,379,379,380,377,380,379,380,377,379,380,377,379,379,379,380,0,0,0,379,0,377,380,380,380,380,380,380,379,380,377,379,380,377,379,380,377,0,0,380,379,380,377,546,0,0,0,0,0,382,0,0,382,0,0,0,0,0,0,0,382,360,0,339,337,359,360,361,387,359,359,0,0,351,361,359,339,359,387,339,0,391,387,337,337,0,359,0,382,0,0,382,0,382,339,337,339,337,337,339,337,339,337,337,339,337,339,337,382,339,337,382,339,337,339,337,339,337,339,337,339,337,339,339,339,339,339,339,337,382,339,337,382,339,339,337,382,339,337,339,337,382,382,339,339,337,382,382,339,337,339,339,339,337,382,339,337,382,337,339,337,339,337,337,339,337,337,339,337,339,337,339,337,337,339,337,339,339,337,382,339,339,339,339,339,339,337,339,337,382,337,339,337,382,339,337,382,339,337,382,339,337,337,339,337,382,0,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,0,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,0,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,0,0,361,391,361,391,361,361,361,391,361,391,361,391,361,361,391,361,391,361,391,361,361,361,361,391,391,391,391,361,391,361,391,361,391,361,391,0,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,0,0,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,0,547,547,0,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,0,0,0,0,0,267,398,401,267,267,267,267,267,267,267,267,398,399,267,398,267,267,398,398,399,400,267,398,399,400,267,398,399,267,399,399,267,399,399,267,398,399,400,267,398,399,400,267,398,398,398,267,400,398,267,398,399,400,267,398,399,400,267,398,267,398,399,400,267,267,267,399,399,399,267,399,267,399,267,398,400,267,267,400,267,267,267,267,267,399,399,399,398,399,400,267,399,400,267,398,399,400,267,399,399,398,399,400,267,398,398,267,267,267,398,399,398,398,398,398,398,267,399,399,399,398,398,267,267,398,398,398,399,400,267,267,398,398,398,398,399,400,267,398,399,400,267,398,399,400,267,399,267,399,267,401,398,399,400,267,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,0,0,408,410,0,408,408,408,410,0,408,0,0,0,0,0,0,0,410,0,0,409,409,409,409,408,408,409,408,409,408,408,408,409,409,408,408,408,408,408,408,408,409,408,409,408,409,409,409,409,409,408,408,408,409,408,409,408,408,409,408,408,408,408,408,408,408,408,408,409,409,408,408,409,408,409,408,409,408,408,408,408,408,409,408,408,549,550,551,552,0,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,411,0,0,411,411,411,403,411,403,411,403,403,403,403,403,411,411,403,403,411,403,411,403,411,411,411,411,411,403,411,403,411,403,403,411,0,0,0,403,411,411,403,411,403,411,403,411,0,403,403,411,0,403,403,403,403,553,554,0,0,0,0,0,0,0,0,0,0,404,108,394,412,107,407,405,406,394,412,413,107,394,412,413,107,108,394,412,413,107,108,0,394,412,413,107,108,394,412,413,107,108,107,406,107,107,407,394,407,394,414,394,412,413,107,108,394,412,413,107,108,394,412,413,107,108,406,107,394,394,412,413,107,108,394,412,413,107,108,107,413,394,107,108,404,108,394,412,413,107,108,407,394,407,394,394,412,413,107,108,394,394,404,108,107,406,107,412,412,407,414,394,406,107,405,413,413,107,107,406,107,405,394,407,394,394,394,406,107,405,413,394,412,413,107,108,394,412,413,107,108,394,412,413,107,108,394,412,413,107,108,406,107,406,107,394,412,413,107,108,0,0,0,0,0,404,404,404,404,404,407,405,406,414,407,405,406,404,414,407,405,406,404,407,405,406,404,414,414,414,407,405,406,404,407,405,406,404,406,406,407,407,406,414,407,407,414,414,407,405,406,404,414,407,405,406,404,414,407,405,406,404,406,405,405,406,404,414,407,405,406,404,404,414,407,405,406,404,407,407,414,407,405,406,404,407,414,407,405,406,404,405,404,404,406,406,407,414,407,407,406,406,405,406,405,407,406,405,405,405,407,405,406,404,414,407,405,406,404,414,407,405,406,404,414,407,405,406,404,406,406,406,406,414,407,405,406,404,407,405,406,405,407,0,0,417,417,0,0,0,0,0,0,0,0,0,0,417,417,418,417,417,418,417,417,418,419,420,417,423,418,422,419,424,425,420,421,417,423,418,422,419,424,425,420,421,421,421,420,418,424,422,417,423,418,422,419,424,425,420,421,417,423,418,422,419,424,425,420,421,417,418,417,423,418,422,419,424,425,420,421,421,421,423,417,423,418,422,419,424,425,420,421,421,423,419,418,419,419,418,423,417,417,418,422,419,424,425,420,421,417,423,418,422,419,424,425,420,421,417,423,418,422,419,424,425,420,421,422,424,424,417,417,417,423,418,422,419,424,425,420,425,420,420,417,419,425,420,417,425,425,417,421,421,417,417,423,418,422,419,424,425,420,421,417,423,418,422,419,424,425,420,421,417,423,418,422,419,424,425,420,421,420,417,417,417,423,423,417,423,417,423,418,422,419,424,425,420,421,0,0,0,0,427,427,427,0,427,0,427,427,41,41,41,427,41,427,41,41,41,41,41,427,41,427,41,41,41,427,41,41,41,41,427,427,41,427,427,427,427,41,41,41,41,427,41,427,41,41,427,0,41,41,427,41,41,427,41,427,41,427,41,427,269,0,0,0,430,430,430,431,269,430,431,269,430,430,430,431,269,430,431,269,430,430,431,269,430,431,269,430,430,430,431,269,430,430,431,269,430,431,269,430,431,269,269,430,431,269,430,430,431,269,430,431,269,430,430,430,0,430,431,269,269,430,431,269,430,431,269,430,431,269,430,431,269,0,0,0,428,381,381,381,381,381,428,381,428,381,381,381,381,381,381,428,381,428,381,381,381,428,381,381,381,381,381,428,428,381,428,381,381,428,381,428,381,381,381,0,381,428,381,381,428,381,428,381,428,381,428,381,0,0,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,0,432,432,432,432,432,432,432,443,252,0,0,442,142,0,0,0,453,453,453,0,448,142,142,0,0,0,0,0,0,0,453,0,0,271,0,0,463,445,437,440,252,446,0,463,271,252,448,0,0,453,0,0,271,0,0,453,453,0,0,453,0,446,0,0,0,0,0,437,440,0,453,0,0,0,0,0,0,0,0,0,0,0,445,445,445,445,445,445,0,0,443,252,442,0,0,0,0,0,0,453,0,0,446,233,0,363,433,375,141,452,555,0,460,457,458,459,340,250,0,340,444,447,0,250,251,444,447,0,142,142,142,363,433,375,141,452,555,457,458,459,0,0,251,0,363,433,375,141,555,0,340,233,251,460,0,556,556,0,0,0,0,0,0,0,0,363,435,370,436,434,362,363,435,370,436,434,362,363,363,363,363,433,433,363,435,370,436,434,362,363,435,370,436,434,362,363,435,370,436,434,362,363,435,370,436,434,362,363,363,363,435,370,436,434,362,363,435,370,436,434,362,363,433,363,433,363,363,363,363,363,363,363,363,363,435,370,436,434,362,363,435,370,436,434,362,363,433,363,435,370,436,434,362,363,435,370,436,434,362,0,0,0,271,437,446,271,271,446,437,0,0,0,0,446,364,437,438,364,438,364,438,446,439,364,437,271,438,446,439,364,437,271,438,364,439,364,437,271,439,364,437,271,438,446,439,364,437,271,438,446,439,364,437,271,364,437,438,446,439,364,437,271,438,364,438,364,271,271,439,364,437,271,271,438,438,446,439,364,437,271,438,446,439,364,437,271,250,438,446,439,364,437,271,250,364,437,364,437,271,439,364,437,271,271,438,446,439,364,437,271,438,446,439,364,437,271,438,446,439,364,437,271,364,438,446,439,364,437,271,438,364,556,556,443,0,442,0,0,0,0,0,440,440,0,443,442,256,440,340,256,440,256,256,443,442,256,440,340,443,442,256,440,340,340,256,256,440,340,256,440,340,340,443,442,256,440,340,443,442,256,440,340,340,340,443,442,256,440,340,256,256,256,440,340,256,440,340,256,440,340,443,442,256,256,440,340,340,340,340,340,340,256,340,256,340,340,340,256,440,340,340,443,442,256,440,340,340,443,442,256,440,340,340,340,340,340,340,256,256,440,340,256,443,442,256,440,340,443,442,256,440,340,443,442,256,440,340,340,340,443,442,256,440,340,256,0,448,0,0,445,448,0,445,445,445,445,445,445,444,444,444,444,447,445,448,444,447,445,448,444,445,448,445,448,444,447,445,448,444,447,445,448,444,447,445,448,444,444,445,445,448,444,447,445,448,444,444,444,444,447,445,448,444,447,444,447,445,448,444,444,447,444,444,444,444,445,445,448,445,444,447,445,448,444,447,445,448,444,447,445,448,444,447,445,448,142,142,142,0,0,0,0,0,0,374,67,450,80,79,80,79,80,80,79,79,67,450,374,80,79,67,450,374,80,79,80,79,67,450,374,80,79,67,450,374,80,79,67,450,374,80,79,67,450,374,374,80,79,67,450,374,80,79,80,79,374,374,374,80,79,67,450,374,80,79,67,450,374,80,79,67,450,374,67,67,450,142,374,142,374,142,374,374,374,80,79,67,67,450,450,374,80,79,67,450,374,80,79,67,450,374,80,79,67,450,374,80,79,67,450,374,80,79,0,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,453,453,453,453,0,0,0,0,453,0,0,453,453,453,453,0,0,0,0,0,0,0,453,0,0,375,375,375,375,375,375,375,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,452,375,375,386,90,454,258,378,455,453,456,375,386,90,454,258,378,455,453,456,375,141,452,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,375,375,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,375,375,375,375,375,453,453,375,141,452,452,457,458,459,460,386,90,454,258,378,455,453,456,0,375,386,460,457,458,459,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,141,456,141,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,457,458,459,460,454,258,378,455,455,375,141,454,456,375,141,258,456,375,141,378,457,458,459,460,141,456,141,141,456,375,141,452,375,375,457,458,459,456,375,141,386,90,454,258,378,455,453,456,453,375,141,375,141,141,141,141,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,375,141,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,141,456,375,375,141,375,141,452,457,458,459,460,386,90,454,258,378,455,453,456,460,141,456,375,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,0,0,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,252,463,252,463,252,252,0,0,0,0,0,0,0,0,0,252,461,462,461,462,461,462,252,463,461,462,252,463,461,462,252,463,252,463,461,462,252,463,461,462,252,463,252,461,462,252,463,461,462,461,462,252,252,252,252,463,461,462,252,463,461,462,252,463,461,462,252,463,461,462,252,252,252,252,252,252,252,252,252,252,463,252,461,462,252,463,461,462,252,463,461,462,252,463,461,462,252,463,0,461,462,0,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,273,273,273,273,273,273,273,273,0,273,0,0,273,282,282,297,282,297,273,282,297,273,282,297,273,282,297,273,282,282,297,273,282,297,273,282,297,273,282,297,273,282,297,273,282,297,273,273,282,297,273,273,282,297,273,282,297,273,282,282,297,297,282,282,0,282,297,273,273,282,297,273,282,297,273,282,297,273,297,282,297,273,274,0,0,0,274,0,0,274,0,0,254,284,468,274,465,254,298,299,284,468,274,465,254,298,299,274,465,254,298,299,274,465,254,298,299,254,284,468,274,465,254,298,299,284,468,274,465,254,298,299,284,468,274,465,254,298,299,274,465,254,298,299,274,465,254,298,299,274,274,465,254,298,299,298,299,284,468,274,274,274,274,274,465,254,298,299,254,465,254,284,468,284,468,274,465,254,298,299,284,468,274,465,254,298,299,284,468,254,254,254,284,468,298,299,298,299,254,465,254,274,465,254,298,299,274,284,468,274,465,254,298,299,284,468,274,465,254,298,299,284,468,274,465,254,298,299,284,468,254,284,468,274,465,254,298,299,29,29,29,29,0,0,0,0,23,23,23,23,23,469,29,23,469,29,23,23,23,23,469,29,23,469,29,23,23,23,469,29,23,469,29,23,23,23,469,29,23,469,29,23,469,29,23,23,469,29,29,23,23,23,469,29,23,23,23,469,29,23,469,29,23,469,469,23,23,23,23,23,23,23,23,23,469,29,23,23,29,23,23,469,29,23,469,29,23,469,29,23,469,29,23,480,485,480,0,0,492,492,0,480,485,485,480,485,480,489,480,480,485,480,480,0,0,0,481,109,97,491,480,0,480,0,481,109,97,491,0,485,0,0,0,0,0,272,272,0,0,0,272,0,272,272,0,480,0,489,480,0,0,477,248,248,0,248,477,557,0,0,557,479,110,0,248,477,476,0,557,477,248,479,0,0,557,248,248,557,248,558,559,559,560,561,562,563,564,564,565,566,567,568,569,570,571,566,572,567,571,573,568,569,570,568,572,574,575,576,577,576,577,574,575,0,0,110,0,110,397,110,397,474,110,397,474,110,397,110,110,397,110,397,397,474,110,397,474,110,397,474,110,397,110,397,110,397,474,474,110,397,474,110,397,397,474,110,397,474,110,397,397,110,474,110,397,0,110,397,474,474,110,397,474,110,397,474,110,397,110,474,110,397,402,0,0,402,402,402,402,475,402,475,402,402,402,402,475,402,475,402,402,475,402,402,402,402,475,402,402,475,475,402,402,402,475,402,402,402,402,402,402,475,402,475,402,475,402,402,0,402,402,402,402,475,402,402,475,402,475,402,475,402,475,402,272,272,0,0,272,272,272,476,476,476,476,272,476,272,476,272,476,272,476,476,272,476,272,476,272,476,272,476,272,272,272,476,272,476,272,476,272,476,476,272,476,272,272,476,272,476,272,476,272,476,272,574,575,576,577,576,577,574,575,480,480,484,0,480,480,480,480,480,480,480,481,483,484,480,480,0,0,481,483,484,0,0,0,0,480,480,478,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,477,478,478,478,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,477,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,481,482,483,478,484,480,483,478,481,482,484,480,480,477,481,482,483,478,484,480,480,480,477,477,477,481,482,483,478,484,480,477,481,482,483,478,484,480,483,483,477,483,478,478,478,482,477,477,477,482,477,477,483,478,480,477,478,477,481,482,483,478,484,480,480,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,481,482,483,478,484,480,477,478,478,483,477,483,478,477,478,477,481,482,483,478,484,480,578,578,579,578,566,567,568,569,570,571,566,572,567,571,573,568,569,570,568,572,0,489,0,0,109,97,0,109,97,0,489,109,97,472,471,109,97,472,471,489,109,97,472,471,489,109,97,472,471,109,97,472,471,109,109,109,97,472,471,489,109,97,472,471,489,109,97,472,471,489,109,97,472,471,109,97,472,471,109,97,472,471,489,489,109,97,472,471,489,472,471,109,97,472,471,109,97,472,471,489,109,97,472,471,489,109,97,97,97,97,472,471,472,471,97,472,471,0,109,97,472,471,489,109,109,97,472,471,489,109,97,472,471,489,109,97,472,471,489,109,97,472,471,489,558,559,559,565,0,0,0,248,557,248,557,248,248,248,557,248,557,248,557,248,557,248,557,248,557,248,557,557,248,557,248,557,248,557,248,557,248,557,248,248,557,248,248,557,485,492,492,485,485,485,485,491,0,491,0,485,0,0,0,479,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,490,490,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,490,490,479,491,492,485,485,490,490,490,490,479,491,492,485,490,490,479,491,492,485,490,479,491,492,485,491,491,490,479,491,491,479,479,490,479,491,491,491,479,479,490,490,479,491,492,485,490,485,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,490,479,491,492,485,560,561,562,563,564,564],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,2],[[]],[1,[[4,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],5,[],[]],[[1,1],6],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[1,11]]]],[7,5],[[1,1],13],[[-1,-2],13,[],[]],[[1,14],15],[[1,14],15],[-1,-1,[]],[[[4,[3]]],1],[[1,-1],5,16],[[],7],[-1,-2,[],[]],[[1,1],[[17,[6]]]],0,[[1,[10,[-1]]],[[12,[5,18]]],19],[1,7],0,0,[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[22,[-1,-2]],-1,23,-2],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],[[[22,[-1,-2]],-1,28,23,-2],[[12,[[22,[-1,-2]],29]]],[25,26,27],25],[[[22,[-1,-2]],-1,23],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],[[[22,[-1,-2]],-1,23,-2],[[12,[[22,[-1,-2]],29]]],[25,26,27],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[[[22,[-1,-2]]],[[22,[-1,-2]]],[25,27,26],25],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],[[22,[-1,-2]]],[25,26,27],25],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[24,24],13],[[[22,[-1,-2]],[22,[-1,-2]]],13,[30,27,26],30],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[22,[-1,-2]],-1],13,[25,26,27],25],[[24,14],15],[[24,14],15],[[[22,[-1,-2]],14],15,[25,26,27,31],[25,31]],[-1,-1,[]],[[[32,[24]]],24],[29,24],[33,24],[34,24],[-1,-1,[]],[-1,[[22,[-2,-3]]],35,[25,26,27],25],[[[22,[-1,-2]],-1],[[12,[[36,[-2]],24]]],[25,26,27],25],[[[22,[-1,-2]]],[[12,[23,29]]],[25,26,27],25],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1,-2]]],[[37,[-1,-2]]],[25,26,27],25],0,[[],[[22,[-1,-2]]],[25,26,27],25],[[[22,[-1,-2]],-1],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],[[[22,[-1,-2]],-1,38],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],[24,[[17,[39]]]],[[[22,[-1,-2]],-1,40,23],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],[[[22,[-1,-2]],-1,40,23],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[[[22,[-1,-2]],-1,41,23],[[12,[[22,[-1,-2]],24]]],[25,26,27],25],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[36,[-1]],23],[[12,[[36,[-1]],24]]],25],[[[36,[-1]],28,23],[[12,[[36,[-1]],29]]],25],[[[36,[-1]],23],[[12,[[36,[-1]],29]]],25],[-1,38,2],[-1,[[36,[5]]],2],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[42,42],[[[36,[-1]]],[[36,[-1]]],25],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[[36,[-1]]],38,[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[[38,38],13],[[42,42],13],[[[36,[-1]],[36,[-1]]],13,30],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[38,14],15],[[42,14],15],[[[36,[-1]],14],15,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,13],0,[[8,[44,[[5,[43,8]]]]],[[17,[42]]]],[[23,-1],[[36,[-1]]],[]],[[28,23,-1],[[36,[-1]]],[]],[[[37,[-1,-2]]],17,[],[]],[42,8],0,[42,[[9,[[5,[43,8]]]]]],0,[[[36,[-1]],38],[[36,[-1]]],25],[[[36,[-1]],40,23],[[12,[[17,[[36,[-1]]]],24]]],25],[[[36,[-1]],40,23],[[12,[[17,[[36,[-1]]]],24]]],25],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]],41,23],[[12,[[36,[-1]],24]]],25],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[36,[-1]]],23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[45,28,23],5],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[-1,-2],5,[],[]],[[],45],[7,-1,[]],[7,-1,[]],[7,5],0,[[45,45],13],[[-1,-2],13,[],[]],[[45,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,46,2],[-1,40,2],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[46,46],[40,40],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],46],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[[33,33],13],[[46,46],13],[[40,40],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[33,14],15],[[33,14],15],[[46,14],15],[[46,14],15],[[40,14],15],[-1,-1,[]],[-1,-1,[]],[47,40],[-1,-1,[]],[[[48,[8]]],40],[46,40],[46,[[48,[40]]]],[40,40],[[40,47],40],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,7],[[7,47],[[12,[40,33]]]],[40,46],[[[48,[40]]],[[12,[46,33]]]],[[46,40],5],[[46,40],[[12,[5,33]]]],0,[40,[[48,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[40,47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,49,2],[-1,50,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[51,52,-1],[[12,[49,-2]]],53,[]],[49],[49,49],[50,50],[54,54],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[50,50],6],[49,52],0,[49],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[49,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],0,[[49,49],13],[[50,50],13],[[54,54],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],50],[[49,14],15],[[50,14],15],[[50,14],15],[[54,14],15],[[54,14],15],[49],[49,[[0,[56]]]],[-1,-1,[]],[57,50],[-1,-1,[]],[-1,-1,[]],[[28,58],50],[59,[[12,[-1]]],[]],[59,[[12,[50,54]]]],[[50,-1],5,16],0,[49],[49,60],0,[49],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[60,52],49],[[50,61],50],[50,50],[49],[[50,50],[[17,[6]]]],[[49,[10,[-1]]],[[12,[5,18]]],19],[49,7],0,[54,[[17,[39]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,52,-1],[[12,[49,-2]]],53,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,62,2],[63,64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[63,63],[62,62],[65,65],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],0,0,[[62,14],15],[[65,14],15],[[[67,[66]]],64],[[[67,[68]]],64],[[[67,[69]]],64],[[[67,[70]]],64],[[[67,[71]]],64],[[[67,[72]]],64],[[[67,[73]]],64],[-1,-1,[]],[[[67,[74]]],64],[[[67,[75]]],64],[[[67,[76]]],64],[[[67,[77]]],64],[[[67,[78]]],64],[-1,-1,[]],[62,63],[71,62],[69,62],[66,62],[74,62],[70,62],[72,62],[68,62],[77,62],[-1,-1,[]],[78,62],[76,62],[75,62],[73,62],[-1,-1,[]],0,0,0,[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,62],0,0,0,0,0,0,0,0,0,0,[62,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,69,2],[-1,73,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,69],[73,73],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[69,11]]],55],[[[10,[-1]]],[[12,[73,11]]],55],[[[10,[-1]]],[[12,[38,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[[69,69],13],[[73,73],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[69,14],15],[[73,14],15],[-1,-1,[]],[-1,-1,[]],[69,38],[73,38],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[79,[69]]]],[[],[[79,[73]]]],[69,[[80,[69]]]],[73,[[80,[73]]]],[[[67,[69]]],[[17,[64]]]],[[[67,[73]]],[[17,[64]]]],[69,[[81,[69]]]],[[69,[10,[-1]]],[[12,[5,18]]],19],[[73,[10,[-1]]],[[12,[5,18]]],19],[73,[[81,[73]]]],[[38,[82,[38]]],[[82,[38]]]],[[69,[82,[69]]],[[82,[69]]]],[[73,[82,[73]]],[[82,[73]]]],[69,7],[73,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[83,83],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[72,11]]]],[7,5],[7,5],[[72,72],13],[[83,83],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[72,14],15],[[83,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[79,[72]]]],[72,[[80,[72]]]],[[[67,[72]]],[[17,[64]]]],0,0,[[72,[10,[-1]]],[[12,[5,18]]],19],[72,[[81,[72]]]],[[72,[82,[72]]],[[82,[72]]]],[72,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,70,2],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,70],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[70,11]]]],[7,5],[[70,70],13],[[-1,-2],13,[],[]],[[70,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],0,[[],[[79,[70]]]],[70,[[80,[70]]]],[[[67,[70]]],[[17,[64]]]],0,[[70,[10,[-1]]],[[12,[5,18]]],19],[70,[[81,[70]]]],[[70,[82,[70]]],[[82,[70]]]],[70,7],0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,84,2],[-1,66,2],[-1,85,2],[-1,77,2],[-1,74,2],[-1,86,2],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[66,66],[85,85],[77,77],[74,74],[86,86],[87,87],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[74,11]]],55],[[[10,[[9,[8]]]]],[[12,[84,11]]]],[[[10,[[9,[8]]]]],[[12,[66,11]]]],[[[10,[[9,[8]]]]],[[12,[77,11]]]],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[[[10,[[9,[8]]]]],[[12,[86,11]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[66,66],13],[[85,85],13],[[77,77],13],[[74,74],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[66,14],15],[[85,14],15],[[77,14],15],[[74,14],15],[[86,14],15],[[87,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[88,[[17,[85]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[66,8],[85,89],0,0,0,[8,85],0,0,0,[[],[[79,[66]]]],[[],[[79,[77]]]],[[],[[79,[74]]]],[66,[[80,[66]]]],[77,[[80,[77]]]],[74,[[80,[74]]]],[[[67,[66]]],[[17,[64]]]],[[[67,[77]]],[[17,[64]]]],[[[67,[74]]],[[17,[64]]]],0,0,0,0,0,0,0,[66,[[81,[66]]]],[[66,[10,[-1]]],[[12,[5,18]]],19],[77,[[81,[77]]]],[[77,[10,[-1]]],[[12,[5,18]]],19],[[74,[10,[-1]]],[[12,[5,18]]],19],[74,[[81,[74]]]],[[66,[82,[66]]],[[82,[66]]]],[[77,[82,[77]]],[[82,[77]]]],[[74,[82,[74]]],[[82,[74]]]],[[86,[82,[86]]],[[82,[86]]]],[[87,[82,[87]]],[[82,[87]]]],[66,7],[77,7],[74,7],0,0,0,[66,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[86,66,90],91],[[87,66,90],91],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,92,2],0,0,0,[-1,75,2],[-1,-2,[],[]],[-1,-2,[],[]],[75,93],0,[75,75],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[75,11]]]],[7,5],[[75,75],13],[[-1,-2],13,[],[]],[[75,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[93,94],75],[[],[[79,[75]]]],[75,[[80,[75]]]],[[[67,[75]]],[[17,[64]]]],[75,94],0,[75,[[81,[75]]]],[[75,[10,[-1]]],[[12,[5,18]]],19],[[75,[82,[75]]],[[82,[75]]]],[75,7],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,[-1,78,2],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,78],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[78,11]]]],[7,5],[[78,78],13],[[-1,-2],13,[],[]],[[78,14],15],[-1,-1,[]],[[78,-1],5,16],0,[[],7],[-1,-2,[],[]],[[95,96],78],[[],[[79,[78]]]],[78,[[80,[78]]]],[[[67,[78]]],[[17,[64]]]],[78,95],0,[[78,[10,[-1]]],[[12,[5,18]]],19],[78,[[81,[78]]]],[[78,[82,[78]]],[[82,[78]]]],[78,7],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[78,96],0,[-1,-2,[],[]],0,[-1,68,2],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[68,11]]]],[7,5],[[68,68],13],[[-1,-2],13,[],[]],[[68,14],15],[-1,-1,[]],[[68,-1],5,16],[[],7],[-1,-2,[],[]],[68,97],[[98,8,97],68],[68,97],0,[[],[[79,[68]]]],[68,[[80,[68]]]],[[[67,[68]]],[[17,[64]]]],[68,8],0,[68,[[81,[68]]]],[[68,[10,[-1]]],[[12,[5,18]]],19],[[68,[82,[68]]],[[82,[68]]]],[68,7],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[68,98],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,100],0,[-1,71,2],[-1,101,2],[-1,100,2],[-1,102,2],[-1,99,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[71,50],13],[[71,103],13],[[99,103],13],[71,71],[101,101],[100,100],[102,102],[99,99],[104,104],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[71,50],0,[[71,50],13],[71,[[9,[105]]]],0,[71,50],[[71,50],13],[[71,50],13],[[],102],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[102],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[100,11]]],55],[[[10,[[9,[8]]]]],[[12,[71,11]]]],[[[10,[[9,[8]]]]],[[12,[101,11]]]],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[71,71],13],[[100,100],13],[[102,102],13],[[99,99],13],[[104,104],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[99,106],0,[[71,14],15],[[101,14],15],[[100,14],15],[[102,14],15],[[99,14],15],[[104,14],15],[-1,-1,[]],[-1,-1,[]],[107,71],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[108,99],[-1,-1,[]],[-1,-1,[]],[102,13],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,13],0,0,[[50,50,50,102,109,[44,[105]],41],71],[[],102],[[106,110,100],99],[99,110],0,[[],[[79,[71]]]],[71,[[80,[71]]]],[[[67,[71]]],[[17,[64]]]],[71,109],0,[71,102],[102,[[44,[99]]]],0,0,[71,102],[[102,99],104],[71,[[81,[71]]]],[[71,[10,[-1]]],[[12,[5,18]]],19],[[71,[82,[71]]],[[82,[71]]]],[[101,[82,[101]]],[[82,[101]]]],[[100,[82,[71]]],[[82,[71]]]],[[99,[82,[71]]],[[82,[71]]]],[71,7],0,[71,98],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[101,90],91],[71,50],0,[[71,50],13],[71,50],0,[[71,50],13],[71,41],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,76,2],[-1,111,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[112,112],[111,111],[92,92],[113,113],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[76,11]]]],[[[10,[[9,[8]]]]],[[12,[111,11]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[76,76],13],[[112,112],13],[[92,92],13],[[113,113],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[76,14],15],[[112,14],15],[[111,14],15],[[114,14],15],[[114,14],15],[[92,14],15],[[113,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[76,-1],5,16],[[112,-1],5,16],[[92,-1],5,16],[[113,-1],5,16],[76,98],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,[[0,[56]]]],[[[44,[113]]],[[12,[92,114]]]],[[98,92],76],[98,76],0,[[],[[79,[76]]]],[76,[[80,[76]]]],[112,[[17,[92]]]],[[[67,[76]]],[[17,[64]]]],[112,109],[76,[[81,[76]]]],[[76,[10,[-1]]],[[12,[5,18]]],19],[[76,[82,[76]]],[[82,[76]]]],[[111,[82,[111]]],[[82,[111]]]],[76,7],[76,[[17,[92]]]],0,[76,109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[111,109,90],91],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[115,[[9,[8]]]],[-1,7,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[[44,[116,117]]]]],[]],[115,115],[118,118],[119,119],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[115,115],13],[[-1,-2],13,[],[]],[[115,14],15],[[118,14],15],[[119,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[48,[8]]],115],[[115,115],5],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],[[],115],0,0,0,0,0,0,0,0,0,0,[-1,123,2],[-1,124,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[123,123],[124,124],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[123,123],6],[[124,124],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[123,123],13],[[124,124],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[123,14],[[12,[5,125]]]],[[123,14],15],[[124,14],15],[[124,14],15],[-1,-1,[]],[-1,-1,[]],[47,124],[[[9,[8]]],[[12,[123,126]]]],[59,[[12,[123]]]],[59,[[12,[-1]]],[]],[127,[[17,[123]]]],[[123,-1],5,16],[[124,-1],5,16],0,[124,124],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[[124,47],[[17,[124]]]],[[123,123],[[17,[6]]]],[[124,124],[[17,[6]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[123,[[44,[8]]]],[-1,20,[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[59,[[12,[123]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,128,2],[-1,129,2],[-1,130,2],[-1,131,2],[130,59],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[126,126],[128,128],[129,129],[130,130],[132,132],[131,131],[133,133],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[133,133],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[128,11]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[126,126],13],[[128,128],13],[[129,129],13],[[130,130],13],[[131,131],13],[[133,133],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[126,14],15],[[126,14],15],[[128,14],15],[[129,14],15],[[130,14],15],[[131,14],15],[[133,14],15],[11,126],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[128,130],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[-1,126]]],[]],[[[9,[8]]],[[12,[129,126]]]],[[[9,[8]]],[[12,[131,126]]]],[59,[[12,[130]]]],[59,[[12,[-1]]],[]],[127,[[17,[130]]]],[[132,7],[[17,[130]]]],[133,7],[133,[[12,[130,126]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],132],[132,7],0,[[130,7],[[17,[133]]]],[132,17],[132,17],[[132,7],17],[-1,[[134,[-2]]],[],[]],[[133,133],[[17,[6]]]],[[128,[10,[-1]]],[[12,[5,18]]],19],[128,7],[132,[[5,[7,[17,[7]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[44,[8]]],[]],[129,[[44,[8]]]],[131,[[44,[8]]]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[59,[[12,[130]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[135,135],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[135,14],15],[[135,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[136,136],[137,137],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[137,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[[136,136],13],[[137,137],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[136,14],15],[[137,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[137,[10,[-1]]],[[12,[5,18]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,138,2],[-1,139,2],[-1,140,2],[-1,23,[]],[138,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[17,[64]],8,8],23,[]],[[-1,[141,[-2]]],23,[],142],0,0,0,0,0,0,[138,138],[139,139],[140,140],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[],139],[[],140],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[[138,138],13],[[139,139],13],[[140,140],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,64],23,[]],[[138,64],23],[[139,64],[[17,[23]]]],[[140,64],[[17,[23]]]],[[-1,8,8],23,[]],[[138,8,8],23],[[138,14],15],[[139,14],15],[[140,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[138,126]]]],[[[9,[8]]],[[12,[139,126]]]],[[[9,[8]]],[[12,[140,126]]]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[88,88,88],138],[[[17,[143]],[17,[143]],[17,[143]]],139],[[[17,[143]],[17,[143]]],140],[[138,138],[[17,[6]]]],[[139,139],[[17,[6]]]],[[140,140],[[17,[6]]]],[[138,139],5],0,[[138,140],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[138,[[44,[8]]]],[139,[[44,[8]]]],[140,[[44,[8]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,144,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[144,144],[145,145],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[144,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[[144,144],13],[[145,145],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[144,14],15],[[145,14],15],0,[-1,-1,[]],[-1,-1,[]],[8,[[17,[145]]]],[144,145],[144,146],0,0,[144],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[144,[10,[-1]]],[[12,[5,18]]],19],[144,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,93,2],[-1,-2,[],[]],[-1,-2,[],[]],[93,93],[[-1,-2],5,[],[]],[[],93],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[93,11]]]],[7,5],[[93,93],13],[[-1,-2],13,[],[]],[[93,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[93,[[147,[128]]]],[[],93],[[93,128],5],[[93,[10,[-1]]],[[12,[5,18]]],19],[93,7],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,[-1,52,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[148,148],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[52,149],[52,[[5,[149,150]]]],[[],148],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[],52],[[52,52],13],[[-1,-2],13,[],[]],[[52,14],15],0,[148,52],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[52,13],[52,[[0,[56]]]],[52,[[147,[144]]]],[52,7],[[],148],[[148,144],5],[[148,-1],148,35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,52],[[152,[151]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[154,[153]]],[[9,[8]]]],[[[155,[153]]],[[9,[8]]]],[[51,52],[[152,[151]]]],[[51,149,150],[[152,[151]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[152,[156]]],[[17,[[154,[157]]]]]],[[[152,[156]]],[[17,[[155,[157]]]]]],[[[152,[156]]],[[17,[158]]]],[[51,52],[[152,[151]]]],[[51,52],159],[[51,149,150],[[152,[151]]]],[[51,149,150],159],[[[154,[157]],160],[[154,[153]]]],[[[155,[157]],43,161],[[155,[153]]]],[[[152,[162]],50],[[152,[156]]]],[[[152,[151]]],[[152,[162]]]],[[[152,[151]],163,124],[[152,[162]]]],[[[154,[153]],164],165],[[[155,[153]],166],167],[[[154,[157]],[169,[168]]],165],[[[155,[153]],[169,[170]]],167],[[[154,[157]],[169,[168]],[4,[168]]],165],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,171],[166,166],[164,164],[161,161],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[[171,14],15],[[166,14],15],[[164,14],15],[[161,14],15],[-1,-1,[]],[-1,-1,[]],[[[48,[8]]],166],[[[172,[171,170]]],166],[-1,-1,[]],[[[172,[171,168]]],164],[[[48,[8]]],164],[173,161],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[161,[[17,[173]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[166,[4,[170]],[9,[8]]],91],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[174,175],[175,[[9,[8]]]],[174,[[9,[8]]]],0,[175,[[48,[8]]]],[175,[[9,[8]]]],[175,[[48,[8]]]],[175,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[174,174],[176,176],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[175,[[48,[8]]]],[175,[[9,[8]]]],[175,47],[175,47],[175,47],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[[174,174],13],[[176,176],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[176,14],15],[[176,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[175,176]]]],0,[175,[[48,[8]]]],[175,[[9,[8]]]],[175,[[48,[8]]]],[175,[[9,[8]]]],[175,[[48,[8]]]],[175,[[9,[8]]]],[175,47],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,174],[175,[[48,[8]]]],[175,[[9,[8]]]],[[174,[48,[8]]],5],[[174,[9,[8]]],5],[[174,[48,[8]]],5],[[174,[9,[8]]],5],[[174,[48,[8]]],5],[[174,47],5],[[174,47],5],[[174,47],5],[[174,[48,[8]]],5],[[174,[9,[8]]],5],[[174,[48,[8]]],5],[[174,[9,[8]]],5],[[174,[48,[8]]],5],[[174,[9,[8]]],5],[[174,47],5],[[174,[48,[8]]],5],[[174,8],5],[175,[[9,[8]]]],[175,[[9,[8]]]],[-1,-2,[],[]],[175,174],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[174,8],[175,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,177,2],[-1,178,2],[-1,179,2],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[177,177],[180,180],[178,178],[179,179],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[[177,177],13],[[-1,-2],13,[],[]],[[177,14],15],[[180,14],15],[[178,14],15],[[179,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,60,2],[60,[[9,[8]]]],[60,[[9,[8]]]],[60,149],[60,150],[60,50],[60,163],[60,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,124],[60],[158,158],[167,167],[165,165],[60,60],[181,181],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[60,177],[60],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[60,181],[[[10,[-1]]],[[12,[60,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[7,5],[7,5],[[158,158],13],[[167,167],13],[[165,165],13],[[60,60],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[60,14],15],[[181,14],15],[[181,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[60,176]]]],[158,60],[167,60],[165,60],[60,[[17,[160]]]],[60,118],[60,119],[60,175],[60,[[17,[43]]]],[60,163],0,[158,163],[167,163],[165,163],[60],[60,163],0,[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60],[60,180],[[60,[10,[-1]]],[[12,[5,18]]],19],[60,7],[60,182],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,[[183,[[9,[8]]]]]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[60],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,184,2],[-1,51,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[184,184],[51,51],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[184,51],13],[[184,184],13],[[51,51],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[184,14],15],[[51,14],15],[-1,-1,[]],[8,184],[51,184],[-1,-1,[]],[8,[[17,[51]]]],[51,182],[51,182],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[51,[[17,[123]]]],[-1,-2,[],[]],[-1,-2,[],[]],[51,8],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[184,[[17,[51]]]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,185,2],[-1,186,2],[-1,160,2],[-1,187,2],[[]],[[]],[[]],[186,[[9,[8]]]],[160,[[4,[188]]]],[186,[[9,[8]]]],[160,[[9,[8]]]],[-1,7,[]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[189,11],[190,11],[-1,[[12,[[44,[116,117]]]]],[]],[-1,[[12,[[44,[116,117]]]]],[]],[[[191,[-1,-2]]],[[191,[-1,-2]]],25,192],[185,185],[186,186],[160,160],[187,187],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[186,186],6],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[186,11]]],55],[[[10,[[9,[8]]]]],[[12,[[191,[-1,-2]],11]]],193,192],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[[[10,[[9,[8]]]]],[[12,[160,11]]]],[[[10,[[9,[8]]]]],[[12,[187,11]]]],[[[10,[[9,[8]]]]],[[12,[[4,[-1]],11]]],194],[[[10,[[9,[8]]]]],[[12,[[172,[-1,-2]],11]]],[],192],[187,[[196,[195,187]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[[191,[-1,-2]],[191,[-1,-2]]],13,30,192],[[186,186],13],[[160,160],13],[[187,187],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[191,[-1,-2]],14],15,31,192],[[186,14],15],[[186,14],15],[[160,14],15],[[187,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[48,[8]]],186],[195,186],[[[48,[8]]],160],[-1,-1,[]],[[[4,[188]]],160],[-1,-1,[]],[[[48,[8]]],186],[[[9,[8]]],[[12,[160,126]]]],[59,[[12,[-1]]],[]],[59,[[12,[186]]]],[-1,185,[197,198]],[186,195],[[186,-1],5,16],[[160,-1],5,16],[[187,-1],5,16],0,[[[9,[8]]],186],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[169,[-1]],-2],[[172,[-2]]],199,200],[195,186],[[186,186],[[17,[6]]]],0,0,0,[[[191,[-1,-2]],[10,[-3]]],[[12,[5,18]]],200,192,19],[[186,[10,[-1]]],[[12,[5,18]]],19],[[160,[10,[-1]]],[[12,[5,18]]],19],[[[4,[-1]],[10,[-2]]],[[12,[5,18]]],194,19],[[[172,[-1,-2]],[10,[-3]]],[[12,[5,18]]],[],192,19],[[[191,[-1,-2]]],7,200,192],[186,7],[160,7],0,[[185,-1],[[172,[-1,168]]],[[201,[[9,[8]]]]]],[[185,[9,[8]]],[[172,[-1,168]]],202],0,0,0,[[[169,[-1]],-2],[[191,[-2]]],199,200],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[160,[[44,[8]]]],[185,[[4,[168]]]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[172,[-1,-2]],[9,[[4,[-2]]]],-1],91,200,192],[[[172,[-1,-2]],[4,[-2]],-1],91,200,192],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],[[-1,-2],[[12,[5]]],[],122],[[],186],[[],186],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[203,[[17,[39]]]],0,[204,204],[[-1,-2],5,[],[]],[205,206],[[205,47],50],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[205,28],0,[[204,204],13],[[-1,-2],13,[],[]],[205,61],0,[207,13],[[204,14],15],[[204,14],15],[[203,14],15],[[203,14],15],[[207,14],15],[-1,-1,[]],[-1,-1,[]],[[[169,[168]]],208],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[204,-1],5,16],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,[[12,[5,203]]]],[[206,208,50],209],[[205,208,50],209],0,[[28,210],205],[204,203],[[204,-1],203,[39,211,212]],0,0,0,[205,[[17,[213]]]],[207,13],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[205,60],207],[[206,60],207],[[206,51],207],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[214,214],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[214,214],13],[[-1,-2],13,[],[]],[[214,14],15],[[215,14],15],[-1,-1,[]],[-1,-1,[]],[[215,50],160],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[215,[[9,[160]]]],0,[[[216,[[9,[160]]]]],[[17,[215]]]],[215,7],[[215,88],214],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[215,60],207],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[217,213],0,[7,5],[7,5],[7,5],0,0,[[218,14],15],[[218,14],15],[[219,14],15],[[219,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[217,43,[169,[220]],50],[[12,[[17,[221]],203]]]],[[28,213,222,115,223],217],[217,222],0,[-1,20,[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[217,60],207],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[224,225,223],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[224,224],[226,226],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[115,58],227],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[[224,224],13],[[228,[169,[220]]],[[17,[221]]]],[[226,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],224],[229,115],[[227,229],224],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[224,224],[[17,[6]]]],[[223,225],224],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[228,[4,[220]],221],[[12,[115,226]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[221,115],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[230,230],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[230,230],13],[[-1,-2],13,[],[]],[[230,14],15],[[230,14],15],[-1,-1,[]],0,[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[[[141,[-1]]],[[12,[5,231]]],[]],[[[141,[-1]]],[[12,[5,231]]],[]],[[[233,[232]]],[[12,[5,231]]]],[84,[[12,[5,231]]]],[66,[[12,[5,231]]]],[86,[[12,[5,231]]]],[77,[[12,[5,231]]]],[[[141,[69]]],[[12,[5,231]]]],[[[141,[-1]]],[[12,[5,230]]],[]],[[[141,[68]]],[[12,[5,231]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[103,103],[234,234],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],103],[[],234],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[103,103],13],[[234,234],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[234,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[235,236],234],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[237,237],[236,236],[235,235],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[236,236],6],[[],235],[235,234],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[237,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[[237,237],13],[[236,236],13],[[235,235],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[237,14],15],[[236,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[236,-1],5,16],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[235,[[0,[56]]]],0,[235,5],[[235,237],5],[[],235],[[236,236],[[17,[6]]]],[[237,[82,[237]]],[[82,[237]]]],[[235,236,234],5],[[235,234],234],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[237,236],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[238,239],234],0,[-1,240,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[240,240],[239,239],[238,238],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[239,239],6],[[],238],[238,234],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[240,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[[240,240],13],[[239,239],13],[[238,238],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[240,14],15],[[239,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[239,-1],5,16],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],238],[[239,239],[[17,[6]]]],[[240,[82,[240]]],[[82,[240]]]],[[238,239,234],5],[[238,234],234],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[240,239],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[241,241],[242,242],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[[242,242],13],[[-1,-2],13,[],[]],0,[[242,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[243,17],0,0,[241,[[17,[244]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[245,245],[[-1,-2],5,[],[]],[[],245],[7,-1,[]],[7,-1,[]],[7,5],[[245,245],13],[[-1,-2],13,[],[]],[-1,-1,[]],[[245,43],5],[[],7],[-1,-2,[],[]],[245,[[246,[43,47]]]],0,[245,7],[[],245],[[245,43,47],[[12,[5,34]]]],[-1,-2,[],[]],[245,47],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[210,247],0,[210,[[44,[248]]]],[[210,1,23],[[12,[5,231]]]],0,0,[[210,52,119],[[12,[210,231]]]],[[210,144,50],[[12,[210,231]]]],[[249,144],[[12,[249,231]]]],[[210,250,251,252],[[12,[210,231]]]],[[146,[254,[253]],255],[[12,[[254,[253]],231]]]],[[210,256,252,69],[[12,[210,231]]]],[[210,66],[[12,[210,231]]]],[[210,66,90,86],[[12,[210,231]]]],[[210,74,90,86],[[12,[210,231]]]],[[210,77,90,86],[[12,[210,231]]]],[210,[[12,[210,231]]]],[[210,73],[[12,[210,231]]]],[[210,146,[141,[-1]]],[[12,[[5,[210,23]],231]]],142],[[210,146,[141,[-1]]],[[12,[[5,[210,23]],231]]],142],[[210,23],[[12,[210,231]]]],[[210,[141,[-1]],257],[[12,[210,231]]],142],[[210,146,258],[[12,[210,231]]]],[[210,75],[[12,[210,231]]]],[[210,95,75,90,259,50],[[12,[210,231]]]],[[210,78,90,259],[[12,[210,231]]]],[[210,1,68],[[12,[210,231]]]],[[210,[141,[71]],50,71,101],[[12,[210,231]]]],[[210,76,90,111],[[12,[210,231]]]],[-1,210,2],[[210,124,50],[[12,[249,231]]]],0,0,[249,50],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1]],138],23,142],[210,13],[210,124],0,[260,260],[210,210],[249,249],[261,261],[231,231],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[210,123],[210,50],0,[210,222],0,[210,222],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[210,11]]]],0,[[210,262,28,43,23,263],[[12,[5,231]]]],[[210,213,264],[[12,[[5,[210,262]],231]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[265,260,61,266],210],[[260,260],13],[[210,210],13],[[261,261],13],[[231,231],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[210,61],0,[[210,146,[141,[-1]],257],[[12,[[5,[210,23]],231]]],142],[[249,118],210],[[260,14],15],[[210,14],15],[[249,14],15],[[261,14],15],[[261,14],15],[[231,14],15],[[231,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[267,210],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[261,231],[29,231],[24,231],[230,231],[268,231],[269,231],[270,231],[126,231],[-1,-1,[]],[271,231],[272,231],[273,231],[274,231],[210,213],[210,260],[210,[[12,[23,231]]]],0,[[210,210],[[44,[20]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[275,163,250,276,277,40,23],[[12,[275,231]]]],[[275,163,250,276,277,40,23],[[12,[275,231]]]],[[247,163,250,1,278,40,23],[[12,[247,231]]]],[[247,163,250,1,278,40,23],[[12,[247,231]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[210,243],0,0,0,[[256,252],[[12,[279,231]]]],[[210,70],[[12,[210,231]]]],[[210,70],[[12,[210,231]]]],[[275,163,250,276,277,40],[[12,[275,231]]]],0,[[163,-1],[[12,[210,231]]],35],0,0,[210,23],[[210,[10,[-1]]],[[12,[5,18]]],19],[210,265],[249,265],0,[[247,163,250,1,278,40],[[12,[247,231]]]],[231,[[17,[39]]]],0,[210,[[44,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[210,[[280,[5]]]],[210,281],0,[210,23],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[210,282],0,[[210,146,283],[[17,[[233,[232]]]]]],[210,[[284,[232]]]],0,[210,[[12,[5,231]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[266,23],[[12,[5,231]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[266,266],[285,285],[286,286],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[266,23],23],[[266,23],23],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[266,287],[285,286],[[266,266],13],[[285,285],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[266,23],[[266,14],15],[[285,14],15],[[286,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[287,17],[288,17],0,0,[[266,23],[[12,[5,231]]]],[[266,285],5],[266,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[266,[[12,[23,29]]]],0,[[266,23],[[12,[5,231]]]],[266,23],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[285,23],[266,288],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],266],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[289,289],13],[[-1,-2],13,[],[]],[[289,14],15],[-1,-1,[]],[8,[[17,[289]]]],[[],7],[-1,-2,[],[]],[[1,[10,[-1]]],[[12,[5,18]]],19],[[[36,[5]],[10,[-1]]],[[12,[5,18]]],19],[[232,[10,[-1]]],[[12,[5,18]]],19],[[50,[10,[-1]]],[[12,[5,18]]],19],[[[9,[105]],[10,[-1]]],[[12,[5,18]]],19],[[128,[10,[-1]]],[[12,[5,18]]],19],[[290,[10,[-1]]],[[12,[5,18]]],19],[[291,[10,[-1]]],[[12,[5,18]]],19],[[42,[10,[-1]]],[[12,[5,18]]],19],[[38,[10,[-1]]],[[12,[5,18]]],19],[[[196,[-1,-2]],[10,[-3]]],[[12,[5,18]]],292,[],19],[[293,[10,[-1]]],[[12,[5,18]]],19],[[244,[10,[-1]]],[[12,[5,18]]],19],[[242,[10,[-1]]],[[12,[5,18]]],19],[[163,[10,[-1]]],[[12,[5,18]]],19],[[45,[10,[-1]]],[[12,[5,18]]],19],[[260,[10,[-1]]],[[12,[5,18]]],19],[[276,[10,[-1]]],[[12,[5,18]]],19],[[253,[10,[-1]]],[[12,[5,18]]],19],[[[233,[-1]],-2,[10,[-3]]],[[12,[5,18]]],[],294,19],[[109,[10,[-1]]],[[12,[5,18]]],19],[[43,[10,[-1]]],[[12,[5,18]]],19],[[295,[10,[-1]]],[[12,[5,18]]],19],[[66,[10,[-1]]],[[12,[5,18]]],19],[[296,[10,[-1]]],[[12,[5,18]]],19],[[285,[10,[-1]]],[[12,[5,18]]],19],[[46,[10,[-1]]],[[12,[5,18]]],19],[[75,[10,[-1]]],[[12,[5,18]]],19],[[95,[10,[-1]]],[[12,[5,18]]],19],[[297,[10,[-1]]],[[12,[5,18]]],19],[[[298,[-1]],-2,[10,[-3]]],[[12,[5,18]]],[],294,19],[[71,[10,[-1]]],[[12,[5,18]]],19],[[99,[10,[-1]]],[[12,[5,18]]],19],[[102,[10,[-1]]],[[12,[5,18]]],19],[[41,[10,[-1]]],[[12,[5,18]]],19],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[[[10,[[9,[8]]]]],[[12,[1,11]]]],[[[10,[[9,[8]]]]],[[12,[[36,[5]],11]]]],[[[10,[[9,[8]]]]],[[12,[232,11]]]],[[[10,[[9,[8]]]]],[[12,[50,11]]]],[[[10,[[9,[8]]]]],[[12,[[44,[105]],11]]]],[[[10,[[9,[8]]]]],[[12,[128,11]]]],[[[10,[[9,[8]]]]],[[12,[290,11]]]],[[[10,[[9,[8]]]]],[[12,[291,11]]]],[[[10,[[9,[8]]]]],[[12,[42,11]]]],[[[10,[[9,[8]]]]],[[12,[38,11]]]],[[[10,[[9,[8]]]]],[[12,[[196,[-1,-2]],11]]],292,[]],[[[10,[[9,[8]]]]],[[12,[293,11]]]],[[[10,[[9,[8]]]]],[[12,[[44,[241]],11]]]],[[[10,[[9,[8]]]]],[[12,[241,11]]]],[[[10,[[9,[8]]]]],[[12,[242,11]]]],[[[10,[[9,[8]]]]],[[12,[163,11]]]],[[[10,[[9,[8]]]]],[[12,[45,11]]]],[[[10,[[9,[8]]]]],[[12,[260,11]]]],[[[10,[[9,[8]]]]],[[12,[276,11]]]],[[[10,[[9,[8]]]]],[[12,[253,11]]]],[[-1,[10,[[9,[8]]]]],[[12,[[233,[-2]],11]]],294,[]],[[[10,[[9,[8]]]]],[[12,[109,11]]]],[[[10,[[9,[8]]]]],[[12,[43,11]]]],[[[10,[[9,[8]]]]],[[12,[295,11]]]],[[[10,[[9,[8]]]]],[[12,[66,11]]]],[[[10,[[9,[8]]]]],[[12,[296,11]]]],[[[10,[[9,[8]]]]],[[12,[285,11]]]],[[[10,[[9,[8]]]]],[[12,[99,11]]]],[[[10,[[9,[8]]]]],[[12,[102,11]]]],[[[10,[[9,[8]]]]],[[12,[46,11]]]],[[[10,[[9,[8]]]]],[[12,[75,11]]]],[[[10,[[9,[8]]]]],[[12,[95,11]]]],[[[10,[[9,[8]]]]],[[12,[297,11]]]],[[-1,[10,[[9,[8]]]]],[[12,[[299,[-2]],11]]],294,[]],[[[10,[[9,[8]]]]],[[12,[100,11]]]],[[[10,[[9,[8]]]]],[[12,[71,11]]]],[[[10,[[9,[8]]]]],[[12,[41,11]]]],[-1,-2,[],[]],0,0,0,[[262,1,23],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[264,264],[262,262],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],264],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],0,[7,5],[7,5],0,[[264,14],15],[[262,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[264,262],0,0,[[],264],0,[[262,43,23,23],5],[[262,23],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[262,23],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[281,41,23],[[12,[281,231]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[280,[5]]],[[280,[5]]]],[281,281],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],281],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[[280,[-1]],[280,[-1]]],13,[30,25,30,26]],[[281,281],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[-1,-1,[]],[-1,-1,[]],[[[280,[41]],1],[[12,[[17,[23]],24]]]],[[[280,[41]]],23],[[281,41],[[17,[23]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[281,247],[[280,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[280,[5]],41],[[280,[41]]]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,255,2],[253,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[253,253],[300,300],[255,255],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[253,253],6],[253,301],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[302,[-1]]],[[12,[253,303]]],304],[[[10,[[9,[8]]]]],[[12,[255,11]]]],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[253,253],13],[[300,300],13],[[255,255],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[253,14],[[12,[5,125]]]],[[253,14],[[12,[5,125]]]],[[300,14],[[12,[5,125]]]],[[255,14],15],[-1,-1,[]],[301,253],[-1,-1,[]],[-1,-1,[]],[59,[[12,[253]]]],[59,[[12,[-1]]],[]],[[253,-1],5,16],[[253,[48,[8]],[48,[8]]],300],[[253,305],300],[[253,[9,[8]]],300],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[8,117]]],253],[[253,[4,[168]],[48,[8]]],300],[[253,253],[[17,[6]]]],[[253,[306,[-1]]],[[12,[[306,[-1]],303]]],19],[[255,[10,[-1]]],[[12,[5,18]]],19],[255,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[[[9,[8]]],[[12,[253]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,[-1,307,2],[-1,-2,[],[]],[-1,-2,[],[]],[307,307],[[-1,-2],5,[],[]],[[307,307],6],[[],307],[7,-1,[]],[7,-1,[]],[7,5],[[307,307],13],[[-1,-2],13,[],[]],[[307,14],[[12,[5,125]]]],[[307,14],15],[223,307],[-1,-1,[]],[88,307],[[[9,[8]]],[[12,[307,126]]]],[59,[[12,[307]]]],[[],7],[-1,-2,[],[]],[[307,307],[[17,[6]]]],0,[307,308],[307,88],[-1,-2,[],[]],[307,[[44,[8]]]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[309,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],0,0,[7,-1,[]],[7,-1,[]],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-1,[]],0,[[],7],[-1,-2,[],[]],0,[[163,250,40],309],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,276,2],[[]],[276,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[276,276],[310,310],[291,291],[290,290],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[276,276],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[276,276],13],[[310,310],13],[[291,291],13],[[290,290],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[276,14],15],[[276,14],15],[[310,14],15],[[310,14],15],[[291,14],15],[[290,14],15],[-1,-1,[]],[[[48,[8]]],276],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[4,[3]]],290],[[291,311],[[17,[[5,[291,312]]]]]],[[276,-1],5,16],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[291,[[12,[5,310]]]],0,[[8,[9,[290]]],276],[[276,276],[[17,[6]]]],0,0,[291,7],0,[290,186],[291,276],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[291,7],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[312,312],[311,311],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[312,312],6],[[311,311],6],[311,7],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[312,312],13],[[311,311],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[312,14],15],[[311,14],15],[-1,-1,[]],[-1,-1,[]],[8,[[17,[312]]]],[311,[[44,[312]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[311,127],[[312,312],[[17,[6]]]],[[311,311],[[17,[6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[312,7],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[127,[[17,[311]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[275,291],[[12,[275,268]]]],[[275,276,23],[[12,[275,268]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[275,275],[268,268],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[],275],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[275,275],13],[[268,268],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[268,14],15],[[268,14],15],[-1,-1,[]],[310,268],[34,268],[313,268],[24,268],[-1,-1,[]],[[275,276],[[12,[291,268]]]],[275,[[12,[23,29]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[275,[[37,[276,5]]]],[275,[[246,[276,291]]]],[[],275],[[275,276],[[12,[275,268]]]],[[[44,[[5,[276,[36,[5]]]]]],[44,[[5,[276,291]]]]],275],[[275,276,38],[[12,[275,268]]]],[268,[[17,[39]]]],[[275,276,40,23],[[12,[275,268]]]],[[275,276,40,23],[[12,[275,268]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[314,311,[4,[3]],[172,[309,3]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[277,277],[[-1,-2],5,[],[]],[[],314],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[277,11]]]],[[[10,[-1]]],[[12,[311,11]]],304],[7,5],[7,5],[[277,277],13],[[-1,-2],13,[],[]],[314,277],[[277,14],15],[[277,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[],314],[[277,[10,[-1]]],[[12,[5,18]]],19],[277,7],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[277,291,309],13],[[291,[9,[[5,[312,[4,[168]]]]]]],[[12,[5,268]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[315,[210]],163,210],[[316,[210]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[316,[-1]]],[[316,[-1]]],25],[[-1,-2],5,[],[]],[[[317,[-1]]],13,[]],[[],[[315,[-1]]],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[315,[-1]],47],5,[]],[[[315,[-1]],163],[[17,[[216,[-1]]]]],[]],[[[317,[-1]]],[[17,[[216,[-1]]]]],[]],[[[315,[-1]],163],[[17,[[316,[-1]]]]],[]],0,[[[316,[-1]]],163,[]],[[],7],[[],7],[[],7],[[[315,[-1]],124,163,-1],[[316,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[315,[-1]]],[]],[[163,[216,[-1]]],[[316,[-1]]],[]],[[[315,[-1]]],7,[]],[[[316,[-1]]],-1,[]],0,[[[316,[-1]]],[[216,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,318,2],[-1,319,2],[-1,320,2],[-1,321,2],[-1,322,2],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[319,319],6],0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],0,0,[[318,318],13],[[319,319],13],[[320,320],13],[[321,321],13],[[322,322],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[318,14],15],[[319,14],15],[[320,14],15],[[321,14],15],[[322,14],15],[[323,14],15],[[324,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[319,126]]]],[[[9,[8]]],[[12,[320,126]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[319,319],[[17,[6]]]],0,0,[[[10,[-1]]],[[12,[320,11]]],304],0,[[28,322,324],23],[[320,[82,[320]]],[[82,[320]]]],[[23,320],[[12,[323,29]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[319,[[44,[8]]]],[320,[[44,[8]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],319],[[],320],[[],322],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[265,265],[325,325],[223,223],[326,326],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[265,93],0,0,[[],265],[[],326],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],0,[[265,265],13],[[325,325],13],[[223,223],13],[[326,326],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[265,14],15],[[325,14],15],[[325,14],15],[[223,14],15],[[326,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],265],0,0,[265,322],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],0,[265,320],0,[[265,93],[[12,[265,273]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[307,[[12,[223]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[247,222,[254,[232]]],213],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[327,1,328],327],[[327,328],327],[327,328],0,[-1,-2,[],[]],[-1,-2,[],[]],[[327,1],[[17,[328]]]],[327,327],[[-1,-2],5,[],[]],0,[[],327],[7,-1,[]],[7,-1,[]],[7,5],[[327,327],13],[[-1,-2],13,[],[]],[[327,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[],327],[[247,[254,[232]]],327],[[327,1],319],[[327,1,328],327],[[327,328],327],[-1,-2,[],[]],[327,328],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[327,328],0,[[327,247],327],[[327,[254,[232]]],327],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[222,222],[270,270],[295,295],[296,296],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[296,329],[[],222],[[],295],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[222,43],[[12,[222,270]]]],[7,5],[7,5],[7,5],[7,5],0,[[222,222],13],[[270,270],13],[[295,295],13],[[296,296],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[222,14],15],[[270,14],15],[[270,14],15],[[295,14],15],[[296,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[222,43],[[17,[296]]]],[[222,43],[[17,[66]]]],[[],222],[66,296],[[222,66],[[12,[222,270]]]],0,[[222,43],13],[[222,43],[[12,[66,270]]]],[[222,43],[[12,[296,270]]]],[222,[[0,[56]]]],[[222,43,28,23,23],[[12,[5,270]]]],[[222,43,296],[[12,[5,270]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[330,1,328],5],[[263,1,328],5],[[213,1,38,328],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[213,213],[263,263],[330,330],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[],330],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[213,7],[[],213],[[213,213],13],[[263,263],13],[[330,330],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[213,14],15],[[263,14],15],[[330,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[247,222,[254,[232]]],213],[[213,43],[[17,[263]]]],[[213,43],[[17,[328]]]],[213,328],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[330,[[331,[1,328]]]],[[],330],0,0,[328,330],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[330,328],0,[213,328],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[328,328],328],[[328,328],5],[225,308],[328,88],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[328,328],[[17,[328]]]],[[328,328],[[17,[328]]]],[328,328],[332,332],[225,225],[333,333],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[328,328],6],[[332,332],6],[[],328],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[[328,328],13],[[332,332],13],[[225,225],13],[[333,333],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[328,14],15],[[328,14],15],[[332,14],15],[[225,14],15],[[333,14],15],[-1,-1,[]],[23,328],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,328],[[328,-1],5,16],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[328,328],225],[[328,328],[[17,[6]]]],[[332,332],[[17,[6]]]],0,0,[[332,47],328],[[225,23],23],[[328,47],333],0,[-1,328,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[328,328],328],[[328,328],328],[[],328],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,334,2],[-1,335,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[334,334],[335,335],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[334,14],15],[[335,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[336,[[44,[337]]]],[-1,338,2],[-1,336,2],[336,[[44,[339]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[338,338],[336,336],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[336,[[44,[337]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[338,14],15],[[336,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[336,13],[336,[[147,[337]]]],[[336,267],[[44,[340]]]],[336,[[44,[[233,[232]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[336,23],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[336,[[44,[337]]]],[336,[[44,[337]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,341,2],[-1,342,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[341,341],[342,342],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[341,14],15],[[342,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[341,343],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,344,2],[-1,-2,[],[]],[-1,-2,[],[]],[344,344],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[344,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[344,293],5],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[-1,345,2],[-1,-2,[],[]],[-1,-2,[],[]],[345,345],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[345,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,346,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[347,[[44,[337]]]],[348,[[44,[337]]]],[[[9,[337]],88,-1],[[5,[[44,[337]],138]]],2],[346,346],[349,349],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[44,[339]],88],[[44,[337]]]],[7,5],[7,5],[7,5],[7,5],[[349,349],13],[[-1,-2],13,[],[]],0,[337,13],[337,13],[[337,[9,[337]]],337],[[337,[9,[337]]],337],[[346,14],15],[[349,14],15],[[349,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[346,[[44,[339]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[346,267],[[44,[340]]]],[346,[[44,[[233,[232]]]]]],[346,[[44,[[233,[232]]]]]],[[346,337,267],340],[346,347],[346,348],[[[44,[337]],[44,[337]],[44,[337]],138],346],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[347,247],[[12,[5,349]]]],[[348,267],[[12,[5,349]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[339]],[44,[23]]],[[44,[337]]]],0,0,0,0,0,0,0,[-1,350,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[350,350],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[350,14],15],[-1,-1,[]],[[350,95],[[44,[78]]]],[[],7],[-1,-2,[],[]],0,[350,[[44,[160]]]],[350,[[44,[351]]]],0,[350,93],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,7],[[352,[7]]],2],[[[9,[-1]],-2],-1,25,2],[[[354,[-1,-2,353]],-3],[[354,[-1,-2]]],[25,30,26,27],25,2],[[[352,[-1,353]],-2],[[352,[-1]]],[25,26,27],2],[[[9,[-1]],-2],[[44,[-1]]],25,2],[[],355],[7,-1,[]],[7,-1,[]],[7,5],[[47,-1],[[44,[47]]],2],[-1,-1,[]],[355,356],[[],7],[-1,-2,[],[]],[[],355],[[[9,[-1]],-2,7],[[44,[[44,[-1]]]]],25,2],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[[355,13,59],5],[[355,-1,-1,59],5,[30,31]],[-1,-2,[],[]],0,[-1,357,2],[-1,-2,[],[]],[-1,-2,[],[]],[357,357],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[357,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[-1,358,2],[-1,-2,[],[]],[-1,-2,[],[]],[358,358],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[358,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[70,144],[[359,360],144],[38,144],[[359,[9,[360]]],144],[[77,[9,[360]]],144],[360,144],[[351,[44,[128]]],144],[[351,95],144],[[68,[9,[360]]],144],[[71,[9,[360]]],144],[[76,[9,[360]]],144],[[248,361],[[12,[92,114]]]],[[[9,[185]],[363,[[362,[72]]]]],364],0,0,0,0,0,[[[9,[185]],[363,[[362,[71]]]]],101],[[[9,[185]],[363,[[362,[-1]]]]],86,142],[[[9,[185]],[363,[[362,[-1]]]]],84,142],0,0,0,[[[9,[185]],76,[363,[[362,[76]]]]],111],0,0,[[[9,[185]],[363,[[362,[75]]]]],259],[[[9,[185]],[363,[[362,[78]]]]],259],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[365,359,61],49],[[366,351,61],49],0,0,0,0,0,0,[[],365],[[],366],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[],365],[[],366],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[365,124],365],[[366,124],366],[[365,50],365],[[366,50],366],[[365,144],365],[[366,144],366],[[365,[44,[144]]],365],[[366,[44,[144]]],366],[[365,60],365],[[366,60],366],[[365,186],365],[[366,186],366],[[],62],[38,62],[43,62],[[66,339],62],[66,62],[[43,88],62],[77,62],[[94,[44,[128]]],62],[[95,96],62],[98,62],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[70,144],[[359,360],144],[38,144],[[359,[9,[360]]],144],[[77,[9,[360]]],144],[360,144],[[351,[44,[128]]],144],[[351,95],144],[[68,[9,[360]]],144],[[71,[9,[360]]],144],[[76,[9,[360]]],144],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[62,[44,[185]],[9,[340]],[9,[367]]],144],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[62,360],368],[[360,360],369],0,0,[[[363,[[370,[-1]]]],[9,[340]],[9,[367]]],[[363,[[362,[-1]]]]],142],[368,144],[369,144],[368,144],[369,144],[368,144],[369,144],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[5,[253,23]]]],[[[17,[7]]],255],[[],371],[7,-1,[]],[7,-1,[]],[7,5],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[372,359],[[],372],[7,-1,[]],[7,-1,[]],[7,5],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[],372],0,0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[372,59],372],[[372,[44,[[4,[168]]]]],372],[[372,[44,[[4,[168]]]]],372],[[372,85],372],[[372,88,88,[17,[88]]],372],[[372,13],372],[[372,320],372],0,0,[373,[[141,[374]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[373,373],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[373,373],13],[[-1,-2],13,[],[]],[[373,14],15],[-1,-1,[]],[-1,-1,[]],[373,144],[373,146],[373,[[375,[374]]]],[373,258],[373,250],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[376,267,337,337],373],[[376,267,232,23],373],[[376,267,337,337,23],373],[[376,267,[9,[337]],[9,[337]]],373],[[376,267,[9,[[233,[232]]]]],373],[[376,267,[17,[50]],[9,[[233,[232]]]]],373],[163,376],[[[375,[374]]],373],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[376,377],376],0,[373,378],0,0,0,0,0,0,[379,163],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[377,377],[[-1,-2],5,[],[]],[[],377],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[[[9,[185]],[363,[[362,[72]]]]],364],[[379,62],23],0,[[377,14],15],[[379,50,62,[44,[185]],[9,[340]],[9,[367]],377,360],144],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[379,50,-1,62,377],144,35],[[379,50,360,-1,62,377],144,35],[[163,138],379],[[163,138,62,50,360],380],[[[9,[185]],[363,[[362,[71]]]]],101],[[[9,[185]],[363,[[362,[-1]]]]],86,142],[[[9,[185]],[363,[[362,[-1]]]]],84,142],[[379,50,[363,[[370,[-1]]]],360,[9,[340]],[9,[367]],377],[[363,[[362,[-1]]]]],142],[[[9,[185]],76,[363,[[362,[76]]]]],111],[-1,-2,[],[]],[380,144],[380,144],[380,144],[380,144],[380,144],[380,144],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[9,[185]],[363,[[362,[75]]]]],259],[[[9,[185]],[363,[[362,[78]]]]],259],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[248,361],[[12,[92,114]]]],0,[[163,339,250],252],[[163,339,7,250],252],[[163,[44,[339]],250],[[44,[252]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[293,339],[[293,23],337],[[293,47],339],[[293,47,23],337],[[293,23,[354,[381,23]]],337],[339,232],[337,232],0,[337,339],0,[-1,339,2],[-1,337,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[339,339],[337,337],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[339,[[12,[5,382]]]],[337,[[12,[5,382]]]],[[339,7],[[12,[5,382]]]],[[337,7],[[12,[5,382]]]],[293,339],[[293,23],337],[339,339],[[339,[4,[168]]],339],[[339,339],339],[339,1],[339,[[4,[168]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[339,293],[7,5],[7,5],[7,5],[[339,339],13],[[337,337],13],[[339,14],15],[[337,14],15],[[382,14],15],[[382,14],15],[-1,-1,[]],[337,339],[-1,-1,[]],[24,382],[-1,-1,[]],[[293,343],339],[[293,343,23],337],[[351,293],339],[[],[[383,[-1]]],384],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[337,13],[339,385],[337,385],[[339,23,[17,[[298,[232]]]]],340],[[337,[17,[[298,[232]]]]],340],[[337,[17,[[298,[232]]]],23],340],[[339,23],[[233,[232]]]],[337,[[233,[232]]]],[[337,23],[[233,[232]]]],[[339,163,386],252],[[337,163,386],252],[[339,163,7,386],252],[[337,163,7,386],252],[[185,46,232],339],[[339,23],337],[[339,23,[354,[381,23]]],337],[339,185],[337,185],0,[339,[[4,[168]]]],[337,[[4,[168]]]],[382,[[17,[39]]]],[339,46],0,[[339,7],[[12,[40,382]]]],[339,46],[339,20],[339,1],[337,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[293,339],[[293,23],337],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[387,185],5],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,5],0,[[],387],[[387,232],[[17,[185]]]],[[387,[4,[168]]],[[17,[185]]]],[-1,-1,[]],[[],7],[-1,-2,[],[]],[388,387],[387,232],[387,[[4,[168]]]],[387,[[169,[168]]]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[-1,351,2],[-1,-2,[],[]],[-1,-2,[],[]],[351,351],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[351,14],15],[-1,-1,[]],[351,160],[[],7],[-1,-2,[],[]],[351,[[169,[168]]]],0,[[[169,[168]]],351],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[359,20],0,[-1,359,2],[-1,-2,[],[]],[-1,-2,[],[]],[359,359],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[359,14],15],[-1,-1,[]],[359,43],0,[359,66],[359,66],[[],7],[-1,-2,[],[]],[359,[[383,[170]]]],0,[[59,43,[383,[220]],[383,[170]],66,[17,[339]]],359],0,[359,[[17,[339]]]],0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[359,[[383,[220]]]],0,[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[361,389],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[361,390],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[361,[[9,[391]]]],0,[361,[[44,[105]]]],[[-1,[9,[8]],7,7],361,[197,198]],[[391,248],[[44,[392]]]],[391,105],[391,393],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[360,59],0,[-1,360,2],[360,337],[360,339],[360,232],[-1,-2,[],[]],[-1,-2,[],[]],[360,360],[[-1,-2],5,[],[]],[360,5],[[360,7],5],[7,-1,[]],[7,-1,[]],[7,5],[[360,14],15],[394,360],[-1,-1,[]],[337,360],[[-1,337],360,[[395,[20]]]],[23,360],[[],7],[-1,-2,[],[]],[[360,23],340],[360,[[233,[232]]]],[[360,23],[[233,[232]]]],[[360,163,386],252],[[360,163,7,386],252],[[59,23],360],[[59,23,[354,[381,23]]],360],[360,185],[360,[[4,[168]]]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[360,23],[-1,-2,[],[]],0,0,[[],60],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[48,[8]]]],[[],124],[7,-1,[]],[7,-1,[]],[7,5],[-1,-1,[]],[[],60],[[],186],[[],1],[[],7],[-1,-2,[],[]],[[],351],[[],[[0,[56]]]],[[],210],[1,70],[[],163],[[],[[4,[168]]]],[[],396],[[],[[169,[168]]]],[[],[[0,[56]]]],[[[44,[351]]],265],[[],359],[[],260],[[],61],[[],41],[[],381],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],0,[359,161],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[7,7],361],[7,-1,[]],[7,-1,[]],[7,5],[[],106],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[],235],[[71,99,397,-1],97,[197,198]],[[],71],[361,71],[[],99],[100,99],[7,102],[[100,7],102],[[],238],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[[],68],[71,68],[[],97],[397,97],[[],71],[7,71],[[],76],[-1,-2,[],[]],0,0,0,0,0,[267,247],0,0,[[267,49],[[12,[5,231]]]],[[267,351],[[12,[5,231]]]],[[267,351,50],[[12,[5,231]]]],[[267,359],[[12,[5,231]]]],[[267,144,50],[[12,[5,231]]]],[[267,359,[44,[144]]],[[12,[5,231]]]],[267,[[12,[5,231]]]],[[267,144],[[12,[5,231]]]],[-1,398,2],[-1,399,2],[-1,267,2],0,[267,163],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[398,93],[399,[[12,[267,231]]]],[267,13],[[399,[9,[144]]],399],0,0,0,0,[267,124],[398,398],[399,399],[400,400],[267,267],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[],160],[267,50],0,[[],398],[267,222],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],0,[267,[[12,[5,231]]]],[7,5],[7,5],[7,5],[7,5],[267,61],[[267,50],5],[[399,337],399],[[399,23],399],[[399,[9,[337]]],399],[267,[[44,[337]]]],0,0,[[399,[44,[360]]],399],[267,138],0,[[400,401],[[44,[[5,[146,8]]]]]],[[267,339],[[17,[[298,[232]]]]]],[[267,[44,[359]],[44,[144]]],[[12,[13,231]]]],[[400,14],15],[[267,14],15],[[267,351,50,[44,[144]]],49],[[267,359],49],[[267,359,[44,[144]]],49],[267,5],[[399,144],399],[[399,[9,[144]]],399],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[398,399],[[400,[5,[146,8]]],[[17,[401]]]],[[267,43],5],[[],7],[[],7],[[],7],[[],7],[[399,337],399],[[399,[9,[337]]],399],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[267,245],[[267,43],47],0,0,[399,399],[[],398],[398,5],0,0,0,[267,266],[[399,232,23],399],[[399,[233,[232]]],399],[[399,[9,[[233,[232]]]]],399],0,0,[[267,50],5],[267,265],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[267,23],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[[399,[9,[401]]],399],[267,[[284,[232]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[398,307],398],[[398,131],398],[[398,47],398],[[398,402],398],[[398,123],398],[[398,293],398],[[398,138],398],[398,398],[[398,47],398],[[398,[9,[160]]],398],[[398,139],398],[[398,140],398],[[398,88,88],398],[[398,23],398],[[398,129],398],[[398,8],398],[[398,47],398],[[398,8],398],[[398,23],398],[[398,320],398],0,0,0,0,0,0,0,0,0,0,0,[[],403],[106,404],0,[59,405],0,[59,406],[59,407],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[408,360,107,106,267,-1],[[12,[5,231]]],294],[[408,360,107,106,397,267,-1],[[12,[5,231]]],[197,198]],[[408,360,107,106,397,267],[[12,[5,231]]]],[409,409],[[-1,-2],5,[],[]],0,0,0,[[408,360,359,267],[[12,[5,231]]]],[[408,360,360,359,267],[[12,[5,231]]]],[[408,360,[9,[[5,[359,8]]]],267],[[12,[5,231]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[409,409],13],[[-1,-2],13,[],[]],[[409,14],15],[[409,14],15],[408,410],0,[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[408,[[44,[359]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[408,360,70,267],[[12,[5,231]]]],[[186,138,[44,[360]],[44,[359]],[44,[107]]],408],[[408,360,359,267],[[12,[5,231]]]],[[408,360,359,267],[[12,[5,231]]]],[[408,360,267],[[12,[5,231]]]],[[408,-1,359,267],[[12,[5,231]]],35],[[408,59],[[12,[359,409]]]],[[408,360,107,92,267],[[12,[5,231]]]],[[408,360,107,267],[[12,[5,231]]]],[-1,-2,[],[]],[-1,20,[]],[[408,360,360,267,88],[[12,[5,231]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[408,359,359,-1,267],[[12,[5,231]]],35],[[408,360,75,267],[[12,[146,231]]]],[[408,360,78,267],[[12,[5,231]]]],[[408,59],[[12,[107,409]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[408,59],[[12,[360,409]]]],[408,[[44,[360]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[410,410],[[-1,-2],5,[],[]],[[410,50,360,359],144],[[410,50,360,360,359],144],[[410,50,360],144],[[410,50,360,[9,[[5,[359,8]]]]],144],[7,-1,[]],[7,-1,[]],[7,5],0,[[410,14],15],[-1,-1,[]],[267,410],[[],7],[-1,-2,[],[]],[[410,50,360,70],144],[[186,138],410],[[410,50,360,359],144],[[410,50,360,359],144],[[410,50,-1,359],144,35],[[410,50,-1,359,359],144,35],[-1,-2,[],[]],[[410,360,360,267,88],144],[[410,50,-1,62],144,35],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[[410,50,360,360,75],144],[[410,50,360,360,78],144],[[410,50,360,68],144],[[410,50,360,71],144],[[410,50,360,76],144],[-1,-2,[],[]],[[410,377],410],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[403,[[12,[[5,[267,408]],411]]]],[[403,[9,[394]],[9,[359]],[9,[360]]],[[44,[144]]]],[[403,412],359],[[403,[44,[412]]],[[44,[359]]]],[[403,[9,[359]],[9,[360]]],[[44,[144]]]],[411,411],[[-1,-2],5,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[411,411],13],[[-1,-2],13,[],[]],[[411,14],15],[[411,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],403],[106,404],[59,405],0,[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[59,406],0,[-1,-2,[],[]],[-1,-2,[],[]],[59,407],[[403,398],403],[[403,[44,[407]]],403],[[403,[44,[405]]],403],[[403,[44,[406]]],403],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[394,20],[412,20],[107,20],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[394,394],[412,412],[413,413],[107,107],[108,108],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[107,[[44,[105]]]],0,0,[107,[[44,[105]]]],0,0,0,[394,[[17,[20]]]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],0,0,[[394,394],13],[[-1,-2],13,[],[]],[[412,14],15],[[413,14],15],[[107,14],15],[[108,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,[17,[-1]],71],107,[[395,[20]]]],0,[[394,-1],5,16],[107,20],[108,106],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[394,13],[[59,23,[354,[381,23]]],394],0,0,[107,20],0,0,[412,[[44,[[4,[168]]]]]],0,0,0,[394,[[17,[20]]]],0,0,0,0,[413,[[17,[85]]]],[[107,7],108],[107,[[44,[108]]]],0,0,0,[394,[[17,[185]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[404,404],[404,404],[[404,88],404],[[404,88],404],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[407,[[12,[394,411]]]],[405,413],[406,107],[404,108],[[[9,[394]]],[[354,[20,[352,[394]]]]]],[[[9,[394]]],[[354,[20,[352,[394]]]]]],[[414,[44,[360]]],[[12,[[44,[412]],411]]]],[407,407],[405,405],[406,406],[404,404],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[406,[44,[105]]],406],0,[407,407],0,[406,406],[414,[[352,[20]]]],0,[[407,59],407],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],0,[[405,88],405],[[405,14],15],[[406,14],15],[[404,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[407,185],407],[[[9,[394]]],414],[59,407],[59,405],[59,406],[106,404],[405,405],[[404,8],404],0,[[406,59],406],0,0,0,[[407,59],407],[[407,59],407],[[406,109],406],0,0,0,0,0,0,[[405,88],405],[[405,88,88],405],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[[406,47,47,47],406],[[406,41],406],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[407,88],407],[[405,8],405],[[406,404],406],[[405,13],405],[[407,381,88],407],[-1,356,[415,200,416,26]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[417,339],418],[[417,339,23],417],0,[[417,1,[36,[5]]],417],[[417,7],417],0,[[417,339,23],417],[417,417],[418,418],[419,419],[420,420],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[421,421],[[-1,-2],5,[],[]],[[420,328],420],[418,422],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[417,420],[418,418],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[],421],[[421,14],15],[[423,107],423],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,421,[[395,[20]]]],[[423,360],423],[[419,23],419],[[418,23],418],[[419,23],419],[[419,23],419],[[418,23],418],0,[[417,-1],417,[[395,[20]]]],0,0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[422,43],422],[[424,359],5],[[424,359],5],0,[417,417],[210,417],[[[44,[248]]],423],[[247,339,421],418],[[38,421],422],[[266,421],419],[[222,421],424],[[43,66,421],425],[[213,421],420],[[425,[44,[[4,[168]]]]],425],[[420,[44,[[5,[43,23]]]]],420],[[420,328],420],[417,419],0,[[425,426],425],0,[[417,43],425],0,0,[417,424],[-1,-2,[],[]],[-1,20,[]],[[417,23],417],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[420,328],420],[[417,[298,[232]]],417],[[417,339,23],417],[[417,7],417],0,0,[417,423],[[423,[44,[8]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,41,2],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,[[44,[8]]]],[41,41],[[-1,-2],5,[],[]],[[41,41],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[41,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[[41,41],13],[[-1,-2],13,[],[]],[[41,14],15],[[41,14],15],[[427,14],15],[[427,14],15],[-1,-1,[]],[428,427],[11,427],[429,427],[-1,-1,[]],[59,[[12,[41]]]],[59,[[12,[-1]]],[]],[[41,-1],5,16],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[41,41],[[17,[6]]]],0,[427,[[17,[39]]]],0,[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,430,2],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[430,[[44,[8]]]],[430,[[12,[5,269]]]],[430,430],[431,431],[269,269],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],430],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[430,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[430,[[9,[431]]]],[[430,430],13],[[431,431],13],[[269,269],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[430,14],15],[[431,14],15],[[269,14],15],[[269,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[430,432],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],430],[[430,[10,[-1]]],[[12,[5,18]]],19],[430,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,381,2],[[]],[381,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[381,[[44,[8]]]],[-1,[[12,[[44,[116,117]]]]],[]],[381,381],[[-1,-2],5,[],[]],[[381,381],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[381,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[381,381],13],[[-1,-2],13,[],[]],[[381,14],15],[[428,14],15],[[428,14],15],[-1,-1,[]],[-1,-1,[]],[[381,-1],5,16],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[381,381],[[17,[6]]]],[[381,[10,[-1]]],[[12,[5,18]]],19],[381,7],0,[-1,-2,[],[]],[-1,20,[]],[[[44,[8]]],[[12,[381]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],0,0,[-1,432,2],[[]],[432,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[432,432],[[-1,-2],5,[],[]],[[432,432],6],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[432,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[432,432],13],[[-1,-2],13,[],[]],[[432,14],15],[[[48,[8]]],432],[-1,-1,[]],[[432,-1],5,16],[[],7],[-1,-2,[],[]],[[432,432],[[17,[6]]]],0,[-1,-2,[],[]],[[[9,[8]]],[[12,[432]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[79,[-1]]],[]],[-1,[[80,[-1]]],[]],[[[67,[-1]]],[[17,[64]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[363,[-1]]],[[363,[-1]]],[]],[[-1,-2],5,[],[]],[[[363,[-1]]],7,[]],0,0,[[],433],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[363,[[362,[-1]]]]],90,142],[[[363,[[434,[-1]]]]],386,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[363,[435]]]],[[],433],0,0,[[[363,[[370,[-1]]]],50],[[363,[[436,[-1]]]]],[]],[[[363,[[436,[-1]]]],[9,[340]],[9,[[233,[232]]]]],[[363,[[434,[-1]]]]],[]],[[[363,[435]]],[[363,[[370,[374]]]]]],[[[363,[435]],-1],[[363,[[370,[-1]]]]],142],[[[363,[[362,[-1]]]]],[[375,[-1]]],142],[[[363,[[434,[-1]]]],[9,[252]]],[[363,[[362,[-1]]]]],142],[[[363,[[434,[-1]]]],[9,[252]]],[[363,[[362,[-1]]]]],142],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,0,[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,364,2],[-1,437,2],[438,[[9,[8]]]],[364,[[9,[8]]]],[-1,7,[]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[-1,[[12,[[44,[116,117]]]]],[]],[439,439],[364,364],[437,437],[271,271],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[364,11]]]],[[[10,[[9,[8]]]]],[[12,[437,11]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[271,271],13],[[-1,-2],13,[],[]],[[439,14],15],[[364,14],15],[[437,14],15],[[271,14],15],[[271,14],15],[[[44,[8]]],438],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[90,-1],364,53],[[90,-1],437,53],[[364,[82,[364]]],[[82,[364]]]],[[437,[82,[437]]],[[82,[437]]]],[271,[[17,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[364,[4,[168]],90],91],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,256,2],[-1,440,2],[-1,340,2],[[]],[[]],[256,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[340,[[48,[8]]]],[-1,[[12,[[44,[116,117]]]]],[]],[256,256],[440,440],[340,340],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[340,340],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[340,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[256,256],13],[[440,440],13],[[340,340],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[256,14],15],[[440,14],15],[[340,14],15],[-1,-1,[]],[-1,-1,[]],[[[48,[8]]],256],[-1,-1,[]],[-1,-1,[]],[[[48,[8]]],340],[-1,-1,[]],[[256,23],340],[[441,23],340],[[1,23],340],[442,340],[276,256],[[276,23],340],[1,256],[251,340],[[[298,[232]]],340],[340,443],[[256,-1],5,16],[[440,-1],5,16],[[340,-1],5,16],0,[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,23,[48,[8]]],340],[[340,340],[[17,[6]]]],[[340,[10,[-1]]],[[12,[5,18]]],19],[340,7],[340,442],[256,276],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[256,[[17,[1]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[340,23],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,0,0,0,0,0,0,0,0,[[444,340],[[12,[5,445]]]],[[444,232,23],[[12,[5,445]]]],[[444,23],[[12,[446,29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[444,447],[445,445],[448,448],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[[],444],[[444,[67,[-1]],-2],23,142,449],[[445,14],15],[[445,14],15],[[448,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[444,[67,[-1]],-2],[[12,[446,29]]],142,449],[[444,[67,[-1]],-2,8,8],[[12,[446,445]]],142,449],[444,[[12,[446,29]]]],[[],7],[[],7],[[],7],[[],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[444,445]]],56,56],0,0,[[444,7],5],[[444,7],5],[[444,[67,[-1]],-2],[[12,[447,445]]],142,449],[[444,[67,[-1]],-2,448],[[12,[[5,[446,[44,[[233,[232]]]],447]],445]]],142,449],[445,[[17,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,374,2],[[[67,[-1]]],[[9,[8]]],202],[[[450,[-1]]],[[9,[8]]],202],[[[80,[-1]]],[[9,[8]]],202],[[[79,[-1]]],[[9,[8]]],202],[-1,7,[]],[-1,7,[]],[[[80,[-1]]],[[67,[-1]]],202],[-1,-2,[],[]],[-1,-2,[],[]],[[[79,[-1]]],[[450,[-1]]],202],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[-1,[[12,[[44,[116,117]]]]],[]],[[[80,[-1]]],[[80,[-1]]],202],[[[79,[-1]]],[[79,[-1]]],202],[[[67,[-1]]],[[67,[-1]]],202],[[[450,[-1]]],[[450,[-1]]],202],[374,374],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[374,11]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[374,374],13],[[-1,-2],13,[],[]],[[374,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1]]],[[17,[64]]],142],[[[67,[-1]]],-1,142],[[[450,[-1]]],[],142],[[],[[79,[-1]]],[]],[[],[[79,[374]]]],[-1,[[80,[-1]]],[]],[374,[[80,[374]]]],[[[67,[-1]]],[[17,[64]]],[]],[[[67,[374]]],[[17,[64]]]],[[374,[10,[-1]]],[[12,[5,18]]],19],[374,7],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1]]],[[80,[-1]]],142],[-1,-2,[],[]],[-1,-2,[],[]],[[[450,[-1]]],[[79,[-1]]],142],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],[[-1,-2],[[12,[5]]],[],122],0,[-1,451,2],[-1,-2,[],[]],[-1,-2,[],[]],[451,451],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[451,14],15],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[375,[-2]]],2,[415,142]],[[[375,[-1]]],[[9,[8]]],[]],[[[375,[-1]]],[[141,[-1]]],[]],[[[375,[-1]],23],[[12,[446,29]]],[]],[-1,7,[]],[-1,[[375,[-1]]],142],[-1,[[363,[[362,[-1]]]]],142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[452,[-1]]],[[12,[[141,[-1]],453]]],142],[-1,[[12,[[44,[116,117]]]]],[]],[[[375,[-1]]],[[375,[-1]]],[]],[386,386],[90,90],[454,454],[258,258],[378,378],[455,455],[453,453],[456,456],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[[375,[-2]],11]]],55,142],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[[375,[-1]],[375,[-1]]],13,[]],[[-1,-2],13,[],[]],[[[375,[-1]],14],15,[]],[[453,14],15],[[453,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[452,[-1]]],142],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[456,453]]]],[[[375,[-1]]],250,[]],[386,250],0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[141,[-1]]],454,[]],0,[[[141,[-1]]],455,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[454,457],[258,458],[378,459],[455,460],[455,8],[[[375,[-1]]],8,[]],[[[141,[-1]]],8,[]],[454,8],0,[[[375,[-1]]],8,[]],[[[141,[-1]]],8,[]],[258,8],0,[[[375,[-1]]],8,[]],[[[141,[-1]]],8,[]],[378,8],[457,17],[458,17],[459,17],[460,17],[[[141,[-1]]],258,[]],0,[[[141,[-1]]],[[67,[-1]]],[]],[[[141,[-1]]],[[450,[-1]]],142],0,0,0,0,[[[375,[-1]],[10,[-2]]],[[12,[5,18]]],142,19],[[[375,[-1]]],7,142],0,0,0,0,[-1,-2,[],[]],[[[141,[-1]]],[[375,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[[[375,[-1]]],[[12,[23,29]]],[]],[[[141,[-1]]],[[12,[23,29]]],[]],[[[375,[-1]]],[[12,[23,29]]],[]],[[[141,[-1]]],[[12,[23,29]]],[]],[[[141,[-1]]],386,[]],[[[141,[-1]]],90,[]],[[[141,[-1]]],250,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,0,[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[141,[-1]]],50,[]],0,[[[375,[-1]]],[[12,[5,271]]],[]],[[[375,[-1]],23],[[12,[5,271]]],[]],[[[141,[-1]],23],[[12,[5,271]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[141,[-1]]],378,[]],0,[[-1,-2],[[12,[5]]],[],122],0,0,[-1,[[233,[232]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[[[233,[-1]]],[[233,[-1]]],25],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[[233,[-2]],11]]],55,193],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[[[233,[-1]],[233,[-1]]],13,30],[[-1,-2],13,[],[]],[[[233,[253]],14],15],[[[233,[232]],14],15],[[[233,[-1]],14],15,31],[-1,-1,[]],[[-1,23],[[233,[-1]]],[]],[[[233,[-1]],-2],5,27,16],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,0,[-1,251,2],[-1,-2,[],[]],[-1,-2,[],[]],[251,251],[[-1,-2],5,[],[]],[[251,251],6],[7,-1,[]],[7,-1,[]],[7,5],[[251,251],13],[[-1,-2],13,[],[]],[[251,14],15],[[251,14],15],[-1,-1,[]],[[251,-1],5,16],[[],7],[-1,-2,[],[]],[[146,283,23],251],0,[[251,251],[[17,[6]]]],[-1,-2,[],[]],[-1,20,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,252,2],[461,[[9,[8]]]],[462,[[9,[8]]]],[-1,7,[]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[-1,[[12,[[44,[116,117]]]]],[]],[252,252],[463,463],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[252,11]]]],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[252,252],13],[[-1,-2],13,[],[]],[[252,14],15],[[252,14],15],[[463,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[163,250,463],461],[[163,250,40],462],[[163,250,40,-1],252,53],[[163,250,40],462],[[163,250,-1,[48,[8]]],252,53],[[163,250],461],[[163,250,-1],252,53],[[163,250],461],[[252,[10,[-1]]],[[12,[5,18]]],19],[252,7],[252,[[44,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[8]],8,163,250],5],[[-1,-2],[[12,[5]]],[],122],[[-1,-2],[[12,[5]]],[],122],0,[[464,23],[[12,[5,231]]]],[-1,-2,[],[]],[-1,-2,[],[]],[464,464],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[[464,23],23],[7,5],[[464,464],13],[[-1,-2],13,[],[]],[[464,14],15],[-1,-1,[]],[[],7],[23,464],[-1,-2,[],[]],[[464,23],[[12,[5,231]]]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[464,23],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[282,95,75,265,50],[[12,[282,273]]]],[[282,78,265],[[12,[282,273]]]],[-1,297,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[282,282],[297,297],[273,273],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],282],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[[282,282],13],[[297,297],13],[[273,273],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[282,14],15],[[297,14],15],[[273,14],15],[[273,14],15],[-1,-1,[]],[-1,-1,[]],[325,273],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],282],[[282,265,50,50],[[5,[282,265]]]],0,0,[282,[[354,[95,297]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[[254,[-1]],146,[9,[[5,[283,[233,[-1]]]]]]],[[12,[[254,[-1]],274]]],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[274,274],[[[465,[-1]]],[[465,[-1]]],25],[[[254,[-1]]],[[254,[-1]]],25],[[[298,[-1]]],[[298,[-1]]],25],[[[299,[-1]]],[[299,[-1]]],25],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],[[254,[-1]]],25],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[274,274],13],[[[465,[-1]],[465,[-1]]],13,30],[[[254,[-1]],[254,[-1]]],13,30],[[[298,[-1]],[298,[-1]]],13,30],[[[299,[-1]],[299,[-1]]],13,30],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[274,14],15],[[274,14],15],[[[465,[-1]],14],15,31],[[[254,[232]],14],15],[[[298,[-1]],14],15,31],[[[299,[-1]],14],15,31],0,0,[-1,-1,[]],[-1,-1,[]],[313,274],[-1,-1,[]],[[[32,[466]]],274],[34,274],[467,274],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[254,[-2]]],35,25],[[[9,[[5,[283,[233,[-1]]]]]]],[[465,[-1]]],25],[[[254,[-1]],146,283],[[17,[[298,[-1]]]]],[]],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[254,[-1]]],13,[]],[[[254,[-1]]],[[284,[-1]]],[]],[[],[[254,[-1]]],25],[[[284,[-1]]],17,[]],[[[468,[-1]]],17,[]],0,0,0,0,[[[254,[-1]],146,283],[[12,[[5,[[254,[-1]],[233,[-1]]]],274]]],25],[[[465,[-1]],283],[[12,[[5,[[465,[-1]],[233,[-1]]]],274]]],25],[[[254,[-1]],146,[9,[283]]],[[12,[[5,[[254,[-1]],[44,[[233,[-1]]]]]],274]]],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[[[254,[-1]]],[[468,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[23,23]],[-1,23,2],[[]],[23,88],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[48,[8]]]],[[23,23],[[12,[23,29]]]],[[23,23],[[12,[23,29]]]],[23,23],[469,469],[29,29],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[23,23],6],[[],23],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[-1]]],[[12,[23,11]]],55],[[[10,[[9,[8]]]]],[[12,[-1,11]]],[]],[7,5],[7,5],[7,5],[[23,23],13],[[469,469],13],[[29,29],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[23,14],15],[[23,14],15],[[469,14],15],[[29,14],15],[[29,14],15],[334,23],[335,23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[9,[8]]],[[12,[23,126]]]],[[23,-1],5,16],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,23],[[17,[6]]]],0,0,[[23,23],23],[[23,47],[[12,[23,29]]]],[[23,[10,[-1]]],[[12,[5,18]]],19],[23,7],[[23,47],469],[[23,23]],[-1,[[12,[23,29]]],56],[-1,23,56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[44,[8]]]],[-1,20,[]],[-1,20,[]],[[[9,[8]]],[[12,[23,29]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,389,390,470],[[5,[471,472]]],[197,198]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,110,2],[-1,397,2],[110,8],[397,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[110,[[473,[8]]]],[110,110],[397,397],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[397,397],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[[110,110],13],[[397,397],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[474,14],15],[[474,14],15],[[110,14],15],[[397,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[397,-1],5,16],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,397],[8,[[12,[110,474]]]],0,0,[[397,397],[[17,[6]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[110,397],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,402,2],[402,[[9,[8]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[44,[116,117]]]]],[]],[402,402],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[10,[[9,[8]]]]],[[12,[402,11]]]],[7,5],[7,5],[-1,-2,[],[[121,[120]]]],[-1,-2,[],[[121,[120]]]],[[402,402],13],[[-1,-2],13,[],[]],0,[[402,14],15],[[402,14],15],[[475,14],15],[[475,14],15],[-1,-1,[]],[[[48,[8]]],402],[[[4,[168]]],402],[-1,-1,[]],[59,[[12,[402,429]]]],[[[9,[8]]],[[12,[402,126]]]],[59,[[12,[-1]]],[]],[59,[[12,[402]]]],[[402,-1],5,16],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[402,[[4,[168]]]],0,[[402,[10,[-1]]],[[12,[5,18]]],19],[402,7],0,[402,20],[-1,-2,[],[]],[402,[[44,[8]]]],[-1,20,[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[[[9,[8]]],[[12,[402]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[5]]],[],122],0,0,0,0,0,0,0,[[476,50,71,[352,[402]]],[[12,[476,272]]]],[[476,50,103,76,111,[280,[5]],-1],[[12,[476,272]]],294],[[476,50,1,68,[280,[5]]],[[12,[476,272]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[476,476],[272,272],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],476],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[[476,476],13],[[272,272],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[272,14],15],[[272,14],15],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[],476],0,[272,[[17,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[477,50],13],[[477,50],13],[[478,328,103,479],13],[[478,1],[[12,[5,480]]]],[[478,328,234,479],13],[477,477],[481,481],[482,482],[483,483],[478,478],[484,484],[480,480],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[477,[[352,[402]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[477,477],13],[[481,481],13],[[482,482],13],[[483,483],13],[[478,478],13],[[484,484],13],[[480,480],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[483,[9,[105]],92,103,[280,[41]],-1],[[12,[483,480]]],294],[[478,[9,[105]],113,103,[280,[41]],-1],[[12,[478,485]]],294],[[481,14],15],[[482,14],15],[[484,14],15],[[480,14],15],[[480,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[485,480],[486,480],[477,98],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[483,[[9,[478]]]],[483,[[9,[478]]]],[[71,[352,[402]]],477],[71,483],[[99,390,389],478],[99,478],0,0,[477,71],0,[[477,50,92,103,402,[280,[5]],-1],[[12,[477,480]]],294],0,0,[[477,50,103,402,[280,[5]],-1],[[12,[477,480]]],294],[[483,[280,[41]],103,-1],[[12,[483,485]]],294],[[478,[280,[41]],103,-1],[[12,[478,485]]],294],[480,[[17,[39]]]],[477,248],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[477,402],13],[[478,1,68,389,390],[[12,[481,480]]]],[[478,1,68],[[12,[481,480]]]],[[483,1,68],[[12,[482,480]]]],[[477,50,1,68,[280,[5]]],[[12,[477,480]]]],[[483,1,482,[280,[41]]],[[12,[483,480]]]],[[478,1,481,[280,[41]]],[[12,[478,480]]]],[[477,50],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,109,2],[-1,97,2],[472,487],[471,488],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,109],[97,97],[472,472],[471,471],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[109,109],6],[[],109],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[[109,109],13],[[97,97],13],[[472,472],13],[[471,471],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[109,14],15],[[97,14],15],[[472,14],15],[[471,14],15],[[489,14],15],[[489,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[487,472],[488,471],[[109,-1],5,16],[[97,-1],5,16],[[472,-1],5,16],[[471,-1],5,16],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[109,109],[[17,[6]]]],[97,109],[[471,472],97],[397,97],[[[10,[[9,[8]]]]],[[12,[97,11]]]],[[[10,[[9,[8]]]]],[[12,[472,11]]]],[[[10,[[9,[8]]]]],[[12,[471,11]]]],[472,[[81,[472]]]],[471,[[81,[471]]]],[[97,[82,[-1]]],[[82,[-1]]],[]],[[472,[82,[472]]],[[82,[472]]]],[[471,[82,[471]]],[[82,[471]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[8,[[12,[109]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,389,390,470],[[5,[471,472]]],[197,198]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[-1,-1,[]],[-1,-1,[]],0,0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[479,397,-1],[[12,[5,480]]],[[395,[490]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[490,490],[479,479],[491,491],[492,492],[485,485],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[490,490],6],[[],490],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,5],[7,5],[7,5],[7,5],[7,5],[[490,490],13],[[479,479],13],[[491,491],13],[[492,492],13],[[485,485],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[490,14],15],[[490,14],15],[[479,14],15],[[491,14],15],[[492,14],15],[[485,14],15],[[485,14],15],[88,490],[23,490],[328,490],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[490,-1],5,16],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[491,13],[491,13],[490,13],[110,479],[493,491],[479,491],[479,110],0,[[490,490],[[17,[6]]]],[479,328],[491,[[12,[493,485]]]],[[491,479],[[12,[491,485]]]],[491,[[17,[479]]]],[479,[[9,[490]]]],0,[[490,490],490],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,20,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0],"c":[],"p":[[3,"Identifier",31],[8,"Gen",10382],[6,"AccountAlg",31],[3,"PublicKey",10383],[15,"tuple"],[4,"Ordering",10384],[15,"usize"],[15,"u8"],[15,"slice"],[3,"Codec",10385],[4,"ReadError",10386],[4,"Result",10387],[15,"bool"],[3,"Formatter",10388],[6,"Result",10388],[8,"Hasher",10389],[4,"Option",10390],[4,"WriteError",10386],[8,"Write",10391],[3,"String",10392],[3,"TypeId",10393],[3,"Ledger",74],[3,"Value",9457],[4,"LedgerError",74],[8,"Clone",10394],[8,"Eq",10384],[8,"Hash",10389],[6,"Epoch",365],[4,"ValueError",9457],[8,"PartialEq",10384],[8,"Debug",10388],[4,"UpdateError",10395],[4,"Error",274],[4,"InsertError",10395],[8,"IntoIterator",10396],[3,"AccountState",147],[3,"Iter",147],[4,"DelegationType",147],[8,"Error",10397],[3,"SpendingCounter",274],[3,"TokenIdentifier",7745],[3,"DelegationRatio",147],[6,"PoolId",895],[3,"Vec",10398],[3,"LastRewards",250],[3,"SpendingCounterIncreasing",274],[15,"u32"],[15,"array"],[3,"Block",365],[3,"BlockDate",365],[4,"BlockVersion",2900],[3,"Contents",2222],[8,"FnOnce",10399],[4,"BlockDateParseError",365],[8,"Read",10391],[8,"Iterator",10400],[3,"EpochPosition",10401],[6,"SlotId",365],[15,"str"],[4,"Header",2764],[3,"TimeEra",10401],[4,"Certificate",482],[4,"CertificatePayload",482],[4,"CertificateSlice",482],[4,"SignedCertificate",482],[3,"PoolRegistration",895],[3,"PayloadSlice",8577],[3,"VoteCast",1156],[3,"OwnerStakeDelegation",745],[3,"MintToken",861],[3,"VotePlan",1193],[3,"EvmMapping",810],[3,"StakeDelegation",745],[3,"PoolRetirement",895],[3,"UpdateProposal",1083],[3,"VoteTally",1398],[3,"PoolUpdate",895],[3,"UpdateVote",1118],[3,"PayloadAuthData",8577],[3,"PayloadData",8577],[3,"ByteArray",10402],[3,"ByteBuilder",10403],[3,"EvmMappingSigned",810],[6,"PoolOwnersSigned",895],[3,"PoolPermissions",895],[4,"PoolSignature",895],[3,"PoolOwnersSignature",895],[15,"u64"],[6,"ManagementThreshold",895],[3,"TransactionBindingAuthData",8713],[4,"Verification",10404],[3,"DecryptedPrivateTally",1398],[3,"ConfigParams",2195],[6,"UpdateProposerId",1083],[6,"UpdateProposalId",1118],[6,"UpdateVoterId",1118],[4,"Payload",10076],[6,"VotePlanId",1193],[3,"Proposal",1193],[4,"VoteAction",1193],[3,"VotePlanProof",1193],[3,"Proposals",1193],[3,"Governance",3585],[4,"PushProposal",1193],[3,"MemberPublicKey",10405],[6,"ExternalProposalId",1193],[3,"VotePlanDef",7241],[3,"ProposalDef",7241],[4,"PayloadType",10076],[3,"Options",9672],[4,"TallyProof",1398],[4,"VoteTallyPayload",1398],[3,"DecryptedPrivateTallyProposal",1398],[3,"DecryptedPrivateTallyError",1398],[3,"PraosNonce",1547],[3,"u5",10406],[3,"Global",10407],[4,"ConsensusEvalContext",1547],[3,"HeaderContentEvalContext",1547],[15,"char"],[8,"FromIterator",10396],[8,"WriteBase32",10406],[4,"ConsensusType",1618],[3,"ChainLength",1618],[3,"Error",10388],[4,"Error",1686],[15,"u16"],[4,"ConfigParam",1686],[4,"RewardParams",1686],[4,"Tag",1686],[3,"Block0Date",1686],[3,"TagIter",1686],[3,"TagLen",1686],[3,"IterBridge",10408],[4,"Error",1938],[4,"EvmActionType",1965],[3,"EvmTransaction",1965],[3,"LinearFee",2006],[3,"PerCertificateFee",2006],[3,"PerVoteCertificateFee",2006],[3,"TransactionSlice",8713],[8,"Payload",8577],[3,"NonZeroU64",10409],[4,"Fragment",2104],[4,"FragmentTag",2104],[6,"FragmentId",2104],[3,"Iter",10410],[3,"ContentsBuilder",2222],[6,"BlockContentHash",2222],[6,"BlockContentSize",2222],[4,"HeaderSetParenting",2334],[3,"HeaderBuilder",2334],[4,"HeaderSetConsensusSignature",2334],[3,"HeaderBftBuilder",2334],[3,"HeaderGenesisPraosBuilder",2334],[4,"HeaderCommonDone",2334],[4,"HeaderSetConsensusData",2334],[3,"HeaderUnsigned",2764],[6,"HeaderBuilderNew",2334],[3,"BftLeaderId",2954],[3,"VrfProof",2460],[4,"HeaderSetDate",2334],[6,"HeaderId",1618],[3,"BftSignature",2460],[3,"HeaderBft",2764],[3,"KesSignature",2460],[3,"HeaderGenesisPraos",2764],[3,"Ed25519",10411],[3,"SecretKey",10383],[3,"SumEd25519_12",10412],[3,"HeaderAuth",2460],[3,"Signature",10404],[3,"ProvenOutputSeed",10413],[19,"Header",2535],[3,"HeaderSlice",2535],[4,"HeaderError",2535],[3,"Common",2677],[3,"BftProof",2677],[3,"GenesisPraosProof",2677],[4,"Proof",2677],[3,"HeaderDesc",2764],[3,"NonZeroUsize",10409],[3,"Box",10414],[4,"AnyBlockVersion",2900],[4,"EitherEd25519SecretKey",2954],[3,"Hash",2954],[3,"GenesisPraosLeader",2954],[6,"BftVerificationAlg",2954],[4,"PublicKeyError",10383],[4,"SignatureError",10404],[3,"Signed",2954],[8,"VerificationAlgorithm",10404],[8,"Deserialize",10386],[8,"AsymmetricPublicKey",10383],[3,"Blake2b256",10415],[3,"DigestOf",10416],[8,"RngCore",10417],[8,"CryptoRng",10417],[8,"SigningAlgorithm",10404],[8,"Serialize",10386],[8,"AsRef",10418],[8,"Sized",10419],[3,"Error",3134],[4,"ErrorKind",3134],[3,"Leadership",3134],[4,"LeadershipConsensus",3134],[4,"Verification",3134],[3,"Leader",3134],[4,"LeaderOutput",3134],[3,"Ledger",3960],[8,"Send",10419],[8,"Sync",10419],[3,"StakeDistribution",5608],[3,"BftRoundRobinIndex",3313],[3,"LeadershipData",3313],[3,"Arc",10420],[3,"LeadershipData",3353],[4,"GenesisError",3353],[4,"VrfError",3353],[3,"RistrettoGroup2HashDh",10421],[6,"Witness",3434],[3,"PoolsState",5507],[3,"ActiveSlotsCoeff",5325],[3,"Threshold",3434],[3,"PercentStake",5687],[4,"VrfEvalFailure",3434],[3,"Input",3434],[3,"VrfEvaluator",3434],[6,"WitnessOutput",3434],[4,"TxVerifyError",3543],[4,"Error",3960],[3,"Address",10422],[3,"Output",9035],[3,"GovernanceAcceptanceCriteria",3585],[3,"ParametersGovernance",3655],[4,"ParametersGovernanceActionType",3655],[4,"ParametersGovernanceAction",3655],[3,"TreasuryGovernance",3735],[4,"TreasuryGovernanceActionType",3735],[4,"TreasuryGovernanceAction",3735],[4,"EntryOwned",3812],[3,"Globals",3812],[3,"LedgerIterator",3812],[4,"Entry",3812],[3,"LeadersParticipationRecord",3933],[3,"HamtIter",10423],[6,"Ledger",31],[3,"VotePlanStatus",10205],[3,"ApplyBlockLedger",3960],[6,"TransactionSignDataHash",8221],[3,"UtxoPointer",9064],[4,"Witness",9094],[3,"OldAddress",4639],[3,"Ledger",9301],[3,"UtxoDeclaration",4639],[3,"UnspecifiedAccountIdentifier",8355],[4,"FeeDeductionMode",3960],[3,"OutputsSlice",8713],[6,"BftLeaderBindingSignature",1083],[3,"LedgerStaticParameters",3960],[4,"Block0Error",3960],[3,"EpochRewardsInfo",4544],[3,"PoolStakeInformation",5608],[3,"RewardsInfoParameters",4544],[3,"Settings",5325],[3,"Pots",4314],[3,"TestLedger",6874],[4,"LedgerError",4984],[4,"MintingPolicyViolation",7805],[4,"PoolError",5507],[4,"BalanceError",8221],[4,"VotePlanLedgerError",9803],[4,"Error",9219],[4,"Error",9301],[3,"Ledger",4984],[3,"Identifier",4818],[3,"Witness",5050],[6,"Witness",31],[4,"MatchingIdentifierWitness",3960],[3,"TokenDistribution",4593],[3,"TokenTotals",4593],[3,"UpdateState",9219],[6,"TransactionIndex",9064],[3,"Iter",9301],[4,"Entry",4314],[4,"EntryType",4314],[3,"Entries",4314],[3,"Values",4314],[4,"EntrySerializeCode",4442],[4,"DeclElement",4818],[3,"Declaration",4818],[8,"DigestAlg",10416],[4,"Discrimination",10422],[8,"FnMut",10399],[3,"PoolLastRewards",5507],[3,"PoolState",5507],[3,"UpdateProposalState",9219],[3,"Entry",9301],[3,"EntryOwned",9301],[4,"OldAddressMatchXPub",4639],[3,"ExtendedAddr",10424],[3,"Deserializer",10425],[4,"Error",10426],[8,"BufRead",10391],[3,"XPub",10427],[3,"Serializer",10428],[3,"Milli",4727],[15,"f64"],[3,"WitnessMultisigData",4764],[4,"DeclarationError",4818],[4,"TreeIndex",4931],[3,"Index",4931],[4,"RemoveError",10395],[3,"WitnessBuilder",5050],[3,"Multiverse",5094],[3,"Ref",5094],[4,"GcEntry",5094],[4,"CompoundingType",5156],[3,"Ratio",5156],[3,"TaxType",5156],[4,"Limit",5156],[3,"Parameters",5156],[3,"TaxDistribution",5156],[3,"SystemInformation",5156],[4,"ActiveSlotsCoeffError",5325],[4,"FeesGoesTo",5325],[3,"StakeControl",5471],[3,"Stake",5687],[6,"PoolRegistrationHash",895],[3,"PoolStakeDistribution",5608],[3,"Iter",10429],[3,"StakeUnit",5687],[3,"SplitValueIn",5687],[3,"NonZeroValue",5806],[3,"AverageValue",5806],[3,"ArbitraryAddressDataValueVec",5854],[3,"AddressDataValue",6533],[3,"ArbitraryAddressDataVec",5854],[3,"AddressData",6533],[3,"Input",8355],[3,"KindTypeWithoutMultisig",5900],[3,"KindWithoutMultisig",5900],[4,"KindType",10422],[3,"OutputsWithoutMultisig",5937],[3,"Random1to10",5956],[3,"ArbitraryValidTransactionData",5974],[3,"AccountStatesVerifier",5974],[3,"UtxoVerifier",5974],[4,"Error",5974],[3,"UpdateProposalData",6071],[3,"LeaderPair",6675],[3,"HashSet",10430],[3,"RandomState",10429],[3,"HashMap",10429],[3,"Verify",6097],[3,"TestResult",10431],[3,"ArbitaryLedgerUtxo",6122],[3,"WalletCollection",6140],[3,"StakePool",6697],[3,"Wallet",6766],[3,"CommitteeMembersManager",6729],[3,"SetAuthData",8119],[3,"TxBuilderState",8119],[3,"SingleAccountBindingSignature",8221],[3,"GenesisPraosBlockBuilder",6205],[3,"BftBlockBuilder",6205],[6,"OutputAddress",3960],[3,"InitialFaultTolerantTxCertBuilder",6267],[3,"InitialFaultTolerantTxBuilder",6267],[3,"SetTtl",8119],[3,"OldAddressBuilder",6318],[3,"StakePoolBuilder",6334],[3,"TestTx",6363],[3,"NoExtra",8577],[3,"Transaction",8713],[3,"TestTxBuilder",6363],[4,"WitnessMode",6414],[3,"WitnessesSlice",8713],[3,"TestTxCertBuilder",6414],[3,"FaultTolerantTxCertBuilder",6414],[3,"TokenName",7878],[4,"Error",6533],[3,"KeyPair",10383],[8,"AsymmetricKey",10383],[4,"Kind",10422],[3,"TransactionAuthData",8713],[3,"KeysDb",6651],[3,"TestCryptoGen",10432],[6,"Crs",10433],[3,"ElectionPublicKey",10405],[3,"CommitteeMember",6729],[3,"TallyDecryptShare",10433],[3,"MemberSecretKey",10405],[3,"WalletTemplate",7241],[8,"Into",10418],[3,"ChaCha20Rng",10434],[3,"Choice",9672],[3,"ConfigBuilder",6874],[3,"LedgerBuilder",6874],[3,"UtxoDb",6874],[6,"UtxoDeclaration",6874],[3,"CommitteeId",9741],[3,"ScenarioBuilder",7183],[3,"ProposalDefBuilder",7402],[3,"StakePoolDefBuilder",7402],[3,"VotePlanDefBuilder",7402],[3,"WalletTemplateBuilder",7402],[3,"Controller",7073],[4,"ControllerError",7073],[3,"FragmentFactory",7144],[4,"ScenarioBuilderError",7183],[3,"StakePoolTemplate",7241],[3,"StakePoolDef",7241],[3,"StakePoolTemplateBuilder",7402],[8,"Arbitrary",10382],[8,"DeserializeFromSlice",10386],[3,"LedgerStateVerifier",7550],[3,"AccountVerifier",7550],[3,"PotsVerifier",7550],[3,"DistributionVerifier",7550],[3,"Info",7550],[3,"DelegationVerifier",7550],[3,"VotesVerifier",7550],[3,"StakePoolsVerifier",7550],[3,"StakePoolVerifier",7550],[15,"u128"],[4,"ParseError",7745],[3,"TokenNameTooLong",7878],[4,"FromHexError",10435],[3,"MintingPolicy",7805],[4,"MintingPolicyEntry",7805],[3,"PolicyHash",7933],[6,"TxBuilder",8119],[3,"SetWitnesses",8119],[4,"SetPayload",8119],[3,"SetIOs",8119],[4,"AccountBindingSignature",8221],[3,"TransactionSignData",8221],[3,"TransactionBindingAuthDataPhantom",8221],[4,"AccountIdentifier",8355],[6,"SpendingPublicKey",2954],[4,"InputEnum",8355],[4,"InputType",8355],[3,"InputOutputBuilder",8487],[4,"Error",8487],[4,"Balance",8221],[3,"InputOutput",8487],[4,"OutputPolicy",8487],[8,"FeeAlgorithm",2006],[3,"PayloadAuthSlice",8577],[3,"TransactionSigningKey",8695],[3,"UnverifiedTransactionSlice",8713],[4,"TransactionStructError",8713],[3,"InputsSlice",8713],[3,"InputsWitnessesSlice",8713],[3,"TransactionStruct",8713],[3,"InputsIter",8713],[3,"OutputsIter",8713],[3,"WitnessesIter",8713],[3,"InputsWitnessesIter",8713],[3,"WitnessUtxoData",9094],[3,"WitnessAccountData",9094],[4,"WitnessUtxoVersion",9094],[3,"Treasury",9195],[3,"TransactionUnspents",9301],[4,"Infallible",10418],[4,"ReplaceError",10395],[3,"Values",9301],[3,"SplitValueIn",9457],[6,"Vote",10436],[3,"EncryptedVote",10076],[3,"ProofOfCorrectVote",10076],[3,"Range",10437],[3,"InvalidOptionsLength",9672],[3,"TryFromCommitteeIdError",9741],[3,"VotePlanLedger",9803],[3,"VotePlanManager",9862],[3,"ProposalManager",9862],[3,"TallyResult",10244],[4,"VoteError",9862],[4,"ValidatedPayload",9862],[3,"ValidatedVoteCast",9862],[4,"ProposalManagers",9862],[4,"IncrementalTally",9862],[4,"TallyError",10244],[3,"BallotVerificationError",10436],[6,"ProofOfCorrectVote",10436],[6,"EncryptedVote",10436],[4,"TryFromIntError",10076],[3,"Weight",10244],[4,"Tally",10244],[4,"PrivateTallyState",10244],[3,"EncryptedTally",10433],[13,"SpendingCredentialInvalid",363],[6,"IndexSignatures",895],[6,"GenesisPraosLeaderHash",895],[13,"Full",1395],[13,"Public",1542],[13,"Private",1542],[13,"Treasury",1396],[13,"Parameters",1396],[13,"Private",1546],[3,"ExternalProposalDocument",1193],[13,"Praos",1616],[6,"ConsensusVersion",1618],[8,"ConfigParamVariant",1686],[13,"Linear",1919],[13,"Halving",1919],[13,"SizeMismatch",2675],[6,"SpendingSignature",2954],[6,"AccountSignature",2954],[6,"Ed25519Signature",2954],[3,"BftLeader",3134],[3,"GenesisLeader",3134],[13,"InvalidEpoch",3420],[13,"InvalidProofStructure",3422],[13,"InvalidProofValue",3422],[13,"ThresholdInvalid",3422],[13,"ThresholdNotMet",3514],[6,"LedgerCheck",3543],[13,"TooManyOutputs",3583],[13,"RewardAdd",3734],[13,"TransferToRewards",3811],[4,"IterState",3812],[6,"OutputOldAddress",3960],[13,"AccountInvalidSignature",4285],[13,"WrongChainLength",4285],[13,"InvalidContentSize",4285],[13,"InvalidContentHash",4285],[13,"NonMonotonicDate",4285],[13,"PraosActiveSlotsCoeffInvalid",4285],[13,"PotValueInvalid",4285],[13,"UtxoValueNotMatching",4285],[13,"NotBalanced",4285],[13,"MultisigInvalidSignature",4285],[13,"UtxoInvalidSignature",4285],[13,"OldUtxoInvalidSignature",4285],[13,"OldUtxoInvalidPublicKey",4285],[13,"ZeroOutput",4285],[13,"OutputGroupInvalid",4285],[4,"IterState",4314],[6,"Sig",4818],[13,"WrongValue",6065],[13,"AccountNotFound",6065],[13,"UtxoNotFound",6065],[13,"Account",6488],[3,"TestGen",6806],[3,"VoteTestGen",6843],[13,"UnknownWallet",7140],[13,"UnknownStakePool",7140],[13,"UnknownVotePlan",7140],[13,"UnknownVoteProposal",7140],[13,"NoOwnersForStakePool",7239],[13,"UndefinedValueForWallet",7239],[6,"AuthenticatedTransaction",7969],[13,"NotBalanced",8353],[3,"VoteProposalStatus",10205],[13,"Public",10200],[13,"Private",10200],[13,"Encrypted",10376],[13,"Decrypted",10376],[13,"Public",10378],[13,"Private",10378],[13,"InvalidChoice",10380],[13,"InvalidValue",10203],[13,"PrivateVoteInvalidSize",10060],[13,"InvalidChoice",10060],[13,"NotVoteTime",10060],[13,"NotCommitteeTime",10060],[13,"InvalidVotePlan",10060],[13,"InvalidPayloadType",10060],[13,"InvalidVoteProposal",10060],[13,"CannotTallyVotes",10060],[13,"VotePlanVoteEndPassed",9854],[13,"VotePlanVoteStartStartedAlready",9854],[13,"VotePlanInsertionError",9854],[13,"VoteError",9854],[13,"Private",10056],[13,"Public",10056]]},\
"chain_network":{"doc":"","t":"RAAAAAAIQIQQQQIQIQQQGQQQAKKKAKKKKKAKKKAKKKKAKKKIQQQQQQKKKKKKKKKIQQKKIQKKQQQIKKKKKGAQQQIKKKCCCCCCCCCDCCCCMAMAAAMANDEDGDDNNAMAAAMFDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLRDGLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLNEDNNLLLLLLLLMLLLLLLMLLLLLLLLDDGAAFDLLLLLLLLLLLLLLLLLLLLLLLRDGLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLDDGAMDDGLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDMMLLLLLMLLLLDDDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLNNEDNENNNNNNNNNNNLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLCCCAAAAAAAGDDGGMMMLLLLLLLLLLLLLLLLLLLLMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLIIQFFKFKDRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADDDDDDDDDDDDDDDMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMMAMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLNENNLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLQQQQQQIDQQQDMKLLLLLLKLLLLLLKLLKKKKKMLLLLLKLLKKKKMKLLLLLLLLKLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLAADLLLLLLLLLMLLLLLLLLLLLLQQQIDDMKLLLLLLLLLLLLLLMLLLLLLLMKKLLLLLLLLLLLDDGMLLLLLLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLFMLLLLLLLLLLLCAADMLLLMLLLLLLLLLLLLDDLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLCCAAGDGGMMMLLLLLMMMMLLLLLLLLGDMLLLLLMMLLLMLLLLLL","n":["PROTOCOL_VERSION","core","data","error","grpc","server","watch","BlockService","BlockService","FragmentService","FragmentService","GetBlocksStream","GetFragmentsStream","GetHeadersStream","GossipService","GossipService","Node","PullBlocksStream","PullBlocksToTipStream","PullHeadersStream","PushStream","SubscriptionStream","SubscriptionStream","SubscriptionStream","block","block_service","block_subscription","client_auth","fragment","fragment_service","fragment_subscription","get_blocks","get_fragments","get_headers","gossip","gossip_service","gossip_subscription","handshake","node","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push","push_headers","tip","upload_blocks","BlockService","GetBlocksStream","GetHeadersStream","PullBlocksStream","PullBlocksToTipStream","PullHeadersStream","SubscriptionStream","block_subscription","get_blocks","get_headers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","tip","upload_blocks","FragmentService","GetFragmentsStream","SubscriptionStream","fragment_subscription","get_fragments","GossipService","SubscriptionStream","gossip_subscription","peers","BlockService","FragmentService","GossipService","Node","block_service","client_auth","fragment_service","gossip_service","handshake","PushStream","server","BlockSubscriptionStream","SyncMultiverseStream","TipSubscriptionStream","Watch","block_subscription","sync_multiverse","tip_subscription","AuthenticatedNodeId","Block","BlockEvent","BlockId","BlockIds","Fragment","FragmentId","FragmentIds","Gossip","HandshakeResponse","Header","NodeId","NodeKeyPair","Peer","auth","block","block0_id","fragment","gossip","handshake","nonce","p2p","Announce","Block","BlockEvent","BlockId","BlockIds","ChainPullRequest","Header","Missing","Solicit","block","from","header","id","subscription","to","try_ids_from_iter","Block","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","from","from_bytes","from_message","into","into_bytes","into_message","into_request","to_owned","try_from","try_into","type_id","vzip","write_base32","Header","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","fmt","from","from_bytes","from_message","into","into_bytes","into_message","into_request","to_owned","try_from","try_into","type_id","vzip","write_base32","BLOCK_ID_LEN","BlockId","BlockIds","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","into","into_request","to_owned","try_from","try_from","try_ids_from_iter","try_ids_from_iter_desugared","try_into","type_id","vzip","write_base32","Announce","BlockEvent","ChainPullRequest","Missing","Solicit","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from_message","into","into","into_message","into_request","into_request","to","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Fragment","FragmentId","FragmentIds","fragment","id","try_ids_from_iter","Fragment","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","from","from_bytes","from_message","into","into_bytes","into_message","into_request","to_owned","try_from","try_into","type_id","vzip","write_base32","FRAGMENT_ID_LEN","FragmentId","FragmentIds","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","into","into_request","to_owned","try_from","try_from","try_ids_from_iter","try_ids_from_iter_desugared","try_into","type_id","vzip","write_base32","Gossip","Node","Nodes","node","nodes","Gossip","Node","Nodes","as_bytes","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","from","from","from_bytes","from_message","from_message","into","into","into_bytes","into_message","into_request","into_request","nodes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","HandshakeResponse","auth","block0_id","borrow","borrow_mut","from","into","into_request","nonce","try_from","try_into","type_id","vzip","AuthenticatedNodeId","NodeId","NodeKeyPair","Peer","addr","addr","as_bytes","authenticated","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate","get_hash","get_hash","hash","hash","id","id","into","into","into","into","into_request","into_request","into_request","into_request","sign","signature","signature","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Aborted","Canceled","Code","Error","FailedPrecondition","HandshakeError","Internal","InvalidArgument","InvalidBlock0","InvalidNodeId","MalformedSignature","NotFound","Rpc","Unavailable","Unimplemented","Unknown","UnsupportedVersion","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","code","code","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into_request","into_request","into_request","new","source","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unimplemented","vzip","vzip","vzip","Client","NodeService","Server","client","convert","legacy","proto","server","streaming","watch","BlockSubscription","Builder","Client","FragmentSubscription","GossipSubscription","_phantom","_phantom","_phantom","block_subscription","borrow","borrow","borrow_mut","borrow_mut","build","client_auth","clone","clone_into","connect","connect","default","fragment_subscription","from","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","inner","inner","inner","inner","into","into","into_request","into_request","legacy_node_id","legacy_node_id","legacy_node_id","new","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","subscription_request","tip","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upload_blocks","vzip","vzip","FromProtobuf","IntoProtobuf","Message","error_from_grpc","error_into_grpc","from_message","ids_into_repeated_bytes","into_message","HexWrap","NODE_ID_LEN","NodeId","TryFromBytesError","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","encode","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","generate","get_hash","hash","into","into","into","into_request","into_request","into_request","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","node","types","watch","BlockEvent","ClientAuthRequest","ClientAuthResponse","Gossip","HandshakeRequest","HandshakeResponse","PeersRequest","PeersResponse","PullBlocksRequest","PullBlocksToTipRequest","PullHeadersRequest","PushHeadersResponse","TipRequest","TipResponse","UploadBlocksResponse","block0","block_event","block_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","item","limit","node_client","node_id","node_id","node_server","nodes","nonce","nonce","peers","signature","signature","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Announce","Item","Missing","Solicit","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","NodeClient","accept_gzip","block_subscription","borrow","borrow_mut","client_auth","clone","clone_into","connect","fmt","fragment_subscription","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","inner","into","into_request","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_gzip","tip","to_owned","try_from","try_into","type_id","upload_blocks","vzip","with_interceptor","BlockSubscriptionStream","FragmentSubscriptionStream","GetBlocksStream","GetFragmentsStream","GetHeadersStream","GossipSubscriptionStream","Node","NodeServer","PullBlocksStream","PullBlocksToTipStream","PullHeadersStream","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow_mut","borrow_mut","call","call","client_auth","clone","clone","clone_into","clone_into","fmt","fmt","fragment_subscription","from","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","inner","into","into","into_request","into_request","new","peers","poll_ready","poll_ready","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_compression_encodings","tip","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upload_blocks","vzip","vzip","with_interceptor","Block","BlockIds","Fragment","FragmentIds","Header","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","content","content","content","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","ids","ids","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BlockSubscriptionRequest","MempoolSubscriptionRequest","SyncMultiverseRequest","TipSubscriptionRequest","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","watch_client","watch_server","WatchClient","accept_gzip","block_subscription","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","sync_multiverse","tip_subscription","to_owned","try_from","try_into","type_id","vzip","with_interceptor","BlockSubscriptionStream","SyncMultiverseStream","TipSubscriptionStream","Watch","WatchServer","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","sync_multiverse","tip_subscription","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","Builder","NodeService","Server","accept_compression_encodings","block_service","block_subscription","borrow","borrow","borrow_mut","borrow_mut","build","client_auth","default","fmt","fragment_service","fragment_subscription","from","from","get_blocks","get_fragments","get_headers","gossip_service","gossip_subscription","handshake","inner","inner","into","into","into_request","into_request","legacy_node_id","legacy_node_id","legacy_node_id","new","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","remote_addr_to_peer","send_compression_encodings","subscription_response","tip","try_from","try_from","try_into","try_into","type_id","type_id","upload_blocks","vzip","vzip","InboundStream","inbound","outbound","InboundStream","_phantom","borrow","borrow_mut","from","inner","into","into_request","into_streaming_request","new","poll_next","project","project_ref","try_from","try_into","try_poll_next","type_id","vzip","OutboundStream","OutboundTryStream","borrow","borrow","borrow_mut","borrow_mut","from","from","inner","inner","into","into","into_request","into_request","into_streaming_request","into_streaming_request","new","new","poll_discover","poll_discover","poll_next","poll_next","project","project","project_ref","project_ref","try_from","try_from","try_into","try_into","try_poll_next","try_poll_next","type_id","type_id","vzip","vzip","Client","Server","client","server","BlockSubscription","Client","SyncMultiverseStream","TipSubscription","_phantom","_phantom","_phantom","block_subscription","borrow","borrow_mut","connect","from","inner","inner","inner","inner","into","into_request","sync_multiverse","tip_subscription","try_from","try_into","type_id","vzip","Server","WatchService","accept_compression_encodings","block_subscription","borrow","borrow_mut","fmt","from","inner","inner","into","into_request","new","send_compression_encodings","sync_multiverse","tip_subscription","try_from","try_into","type_id","vzip"],"q":[[0,"chain_network"],[5,"chain_network::core"],[7,"chain_network::core::server"],[47,"chain_network::core::server::block"],[63,"chain_network::core::server::fragment"],[68,"chain_network::core::server::gossip"],[72,"chain_network::core::server::node"],[81,"chain_network::core::server::push"],[82,"chain_network::core::watch"],[83,"chain_network::core::watch::server"],[90,"chain_network::data"],[112,"chain_network::data::block"],[128,"chain_network::data::block::block"],[152,"chain_network::data::block::header"],[177,"chain_network::data::block::id"],[210,"chain_network::data::block::subscription"],[239,"chain_network::data::fragment"],[245,"chain_network::data::fragment::fragment"],[269,"chain_network::data::fragment::id"],[302,"chain_network::data::gossip"],[307,"chain_network::data::gossip::node"],[344,"chain_network::data::handshake"],[357,"chain_network::data::p2p"],[440,"chain_network::error"],[507,"chain_network::grpc"],[517,"chain_network::grpc::client"],[575,"chain_network::grpc::convert"],[583,"chain_network::grpc::legacy"],[634,"chain_network::grpc::proto"],[637,"chain_network::grpc::proto::node"],[928,"chain_network::grpc::proto::node::block_event"],[949,"chain_network::grpc::proto::node::node_client"],[984,"chain_network::grpc::proto::node::node_server"],[1046,"chain_network::grpc::proto::types"],[1141,"chain_network::grpc::proto::watch"],[1216,"chain_network::grpc::proto::watch::watch_client"],[1239,"chain_network::grpc::proto::watch::watch_server"],[1283,"chain_network::grpc::server"],[1336,"chain_network::grpc::streaming"],[1339,"chain_network::grpc::streaming::inbound"],[1357,"chain_network::grpc::streaming::outbound"],[1393,"chain_network::grpc::watch"],[1397,"chain_network::grpc::watch::client"],[1421,"chain_network::grpc::watch::server"],[1441,"core::option"],[1442,"core::future::future"],[1443,"alloc::boxed"],[1444,"core::pin"],[1445,"core::result"],[1446,"core::iter::traits::collect"],[1447,"bech32"],[1448,"alloc::alloc"],[1449,"alloc::vec"],[1450,"core::iter::traits::collect"],[1451,"tonic::request"],[1452,"core::any"],[1453,"bech32"],[1454,"core::fmt"],[1455,"core::marker"],[1456,"core::hash"],[1457,"core::net::socket_addr"],[1458,"chain_crypto::algorithms::ed25519"],[1459,"chain_crypto::key"],[1460,"rand_core"],[1461,"rand_core"],[1462,"tonic::status"],[1463,"core::error"],[1464,"tonic::body"],[1465,"tonic::client::service"],[1466,"futures_core::stream"],[1467,"core::marker"],[1468,"tonic::transport::channel"],[1469,"tonic::transport::error"],[1470,"tonic::transport::channel::endpoint"],[1471,"core::convert"],[1472,"rand_core::error"],[1473,"bytes::buf::buf_mut"],[1474,"prost::encoding"],[1475,"prost::encoding"],[1476,"bytes::buf::buf_impl"],[1477,"tonic::codec::decode"],[1478,"tonic::response"],[1479,"tonic::request"],[1480,"http::request"],[1481,"tower_service"],[1482,"tonic::service::interceptor"],[1483,"core::task::wake"],[1484,"core::task::poll"],[1485,"futures_core::stream"]],"d":["Version of the protocol implemented by this crate.","","","","","","","Interface for the blockchain node service implementation …","The implementation of the block service.","Interface for the blockchain node service implementation …","The implementation of the fragment service.","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","Interface for the blockchain node service implementation …","The implementation of the gossip service.","Interface to application logic of the blockchain node …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","Type alias for inbound stream objects passed to the …","The type of outbound asynchronous streams returned by the …","The type of outbound asynchronous streams returned by the …","The type of outbound asynchronous streams returned by the …","","Instantiates the block service, if supported by this node.","Called by the protocol implementation to establish a …","Handles client ID authentication.","","Instantiates the fragment service, if supported by this …","Called by the protocol implementation to establish a …","Serves a request to retrieve blocks identified by the list …","Serves a request to retrieve blocks identified by the list …","Serves a request to retrieve block headers identified by …","","Instantiates the gossip service, if supported by this node.","Called by the protocol implementation to establish a …","Implements node handshake. The server returns the ID of …","","","Stream all blocks from the given range.","Stream blocks from the first of the given starting points …","Get blocks, walking forward in a range between either of …","","Called by the protocol implementation to handle a stream …","Serves a request for the current blockchain tip. Resolves …","Called by the protocol implementation to handle a stream …","Interface for the blockchain node service implementation …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","The type of outbound asynchronous streams returned by the …","Called by the protocol implementation to establish a …","Serves a request to retrieve blocks identified by the list …","Serves a request to retrieve block headers identified by …","Stream all blocks from the given range.","Stream blocks from the first of the given starting points …","Get blocks, walking forward in a range between either of …","Called by the protocol implementation to handle a stream …","Serves a request for the current blockchain tip. Resolves …","Called by the protocol implementation to handle a stream …","Interface for the blockchain node service implementation …","The type of an asynchronous stream that provides blocks in …","The type of outbound asynchronous streams returned by the …","Called by the protocol implementation to establish a …","Serves a request to retrieve blocks identified by the list …","Interface for the blockchain node service implementation …","The type of outbound asynchronous streams returned by the …","Called by the protocol implementation to establish a …","","The implementation of the block service.","The implementation of the fragment service.","The implementation of the gossip service.","Interface to application logic of the blockchain node …","Instantiates the block service, if supported by this node.","Handles client ID authentication.","Instantiates the fragment service, if supported by this …","Instantiates the gossip service, if supported by this node.","Implements node handshake. The server returns the ID of …","Type alias for inbound stream objects passed to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Announcement of a new block in the chain.","A block in the byte array representation.","An event sent from client to server over the block …","Network representation of a block ID.","","A request to send headers in the block chain sequence.","A block header in the byte array representation.","Request to push a chain of headers.","Request to upload the identified blocks.","","A list of starting points known by the requester. The …","","","","The identifier of the last block to send the header for.","","A block in the byte array representation.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","A block header in the byte array representation.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Network representation of a block ID.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Announcement of a new block in the chain.","An event sent from client to server over the block …","A request to send headers in the block chain sequence.","Request to push a chain of headers.","Request to upload the identified blocks.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A list of starting points known by the requester. The …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The identifier of the last block to send the header for.","","","","","","","","","A block fragment in the byte array representation.","Network representation of a fragment ID.","","","","","A block fragment in the byte array representation.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Network representation of a fragment ID.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A gossip node in an opaque byte array representation.","","","","","A gossip node in an opaque byte array representation.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A node ID accompanied with a signature.","Identifier of a network peer.","The key pair used to authenticate a network node, …","","","","","Adds a signature given as a byte slice to produce an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Generates a key pair using the provided random number …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Produces the node ID (i.e. the public key), authenticated …","","","","","","","","","","","","","","","","","","","","Verifies that the signature is correct for this node ID and","","","","","","","Common error codes for network protocol requests.","Represents errors that can be returned by the node …","","An error that the future returned by the <code>handshake</code> method …","","","","","","","Error occurred with the protocol request.","","","","The protocol version reported by the server is not …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for legacy features.","","","","","The inbound subscription stream of block events.","Builder to customize the gRPC client.","","The inbound subscription stream of fragments.","The inbound subscription stream of P2P gossip.","","","","Establishes a bidirectional stream of notifications for …","","","","","","","","","","","","Establishes a bidirectional stream for exchanging fragments","Returns the argument unchanged.","Returns the argument unchanged.","Requests the identified blocks in a streamed response.","Requests the identified fragments in a streamed response.","Requests the headers of the identified blocks in a …","Establishes a bidirectional stream for exchanging network …","Requests the identifier of the genesis block from the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Make the client add “node-id-bin” metadata with the …","","","","","One-off request for a list of peers known to the remote …","Stream blocks from the provided range.","Stream blocks from the first of the given starting points …","Requests headers of blocks in the blockchain’s …","The outbound counterpart of <code>pull_headers</code>, called in …","","Requests the header of the tip block in the node’s chain.","","","","","","","","Uploads blocks to the service in response to …","","","","","","","","","","","","","Represents a randomly generated node ID such as was …","","Get the node ID as a byte slice.","","","","","","","","","Get the wire format representation that was used (sigh) by …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Element of the subscription stream returned by …","Request message for method ClientAuth.","Response message for method ClientAuth.","Gossip message with information on nodes in the network.","Request message for method Handshake.","Response message for method Handshake.","Request for peers","Responses as a bunch of peers, similar to Gossip","Request message for method PullBlocks","Request message for method PullBlocksToTip.","Request message for method PullHeaders. This message can …","Response message for method PushHeaders.","Request message for method Tip.","Response message for method Tip.","Response message for method UploadBlocks.","The identifier of the genesis block. This can be used by …","Nested message and enum types in <code>BlockEvent</code>.","Serialized content of the tip block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Generated client implementations.","Node ID of the server, the public key of a key pair.","Node ID of the client, the public key of a key pair.","Generated server implementations.","Serialized descriptions of nodes.","Nonce for the server to authenticate its node ID with.","Nonce for the client to authenticate its node ID with.","","Signature of the client’s nonce using the private key in …","Signature of the server’s nonce sent in …","The identifier of the end block.","The identifier of the end block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the protocol implemented by the server.","","","","","","","","","","","","","","","","Announcement of a new block, carrying the block’s header.","","Solicitation to push the chain of block headers with a …","Solicitation to upload identified blocks with an …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","Establishes a bidirectional stream to exchange information …","","","Optional authentication of the client node. Called after …","","","Attempt to create a new client by connecting to a given …","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","Calls <code>U::from(self)</code>.","","","Requests for some peers","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","Compress requests with <code>gzip</code>.","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","Server streaming response type for the BlockSubscription …","Server streaming response type for the …","Server streaming response type for the GetBlocks method.","Server streaming response type for the GetFragments method.","Server streaming response type for the GetHeaders method.","Server streaming response type for the GossipSubscription …","Generated trait containing gRPC methods that should be …","","Server streaming response type for the PullBlocks method.","Server streaming response type for the PullBlocksToTip …","Server streaming response type for the PullHeaders method.","","","Establishes a bidirectional stream to exchange information …","","","","","","","Optional authentication of the client node. Called after …","","","","","","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Requests for some peers","","","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","","","","","","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","","Representation of a block.","A sequence of block identifiers used in fetch requests and …","Representation of a block fragment, that is, a transaction …","A sequence of fragment identifiers used in fetch requests.","Representation of a block header.","","","","","","","","","","","","","","","","","","","","","","","","","","The serialized content of the block.","The serialized content of the block header.","The serialized content of the fragment.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks for loading.","The identifiers of fragments.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Block IDs to start synchronization from.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","Enable decompressing responses with <code>gzip</code>.","get a stream of blocks succesfully processed by the node, …","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","Server streaming response type for the BlockSubscription …","Server streaming response type for the SyncMultiverse …","Server streaming response type for the TipSubscription …","Generated trait containing gRPC methods that should be …","","","","get a stream of blocks succesfully processed by the node, …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","","","","","","Builder to customize the gRPC server.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Make the server add “node-id-bin” metadata with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The inbound subscription stream of block events.","","The inbound stream of blocks sent in response to a …","The inbound subscription stream of blockchain tip headers.","","","","Establishes a subscription for blocks that have been …","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","Establishes a subscription for tip change announcements by …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,130,0,130,143,144,143,0,130,0,143,143,143,0,143,144,145,0,130,143,130,0,130,144,143,144,143,0,130,145,130,0,145,143,143,143,0,143,143,143,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,144,144,144,144,0,145,145,145,130,130,130,0,130,130,130,130,130,0,0,142,142,142,0,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,0,79,0,0,0,79,0,43,0,0,0,0,0,0,43,43,0,44,0,0,0,44,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,16,16,16,16,43,0,0,43,43,43,44,43,44,43,44,43,44,44,43,43,44,43,43,44,44,43,44,43,44,43,44,43,44,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,46,46,46,46,0,0,0,0,12,0,0,0,48,48,48,12,48,12,48,48,48,48,48,48,12,48,48,12,12,12,48,48,12,12,48,12,48,12,48,12,48,12,48,12,48,48,0,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,2,2,52,52,8,2,53,52,8,2,53,52,2,53,52,2,53,52,2,52,2,2,2,2,52,52,52,52,2,2,53,52,8,2,2,53,53,52,52,53,2,52,2,52,8,8,8,2,53,52,8,2,53,52,53,8,8,2,53,52,2,8,2,53,52,52,8,2,53,52,8,2,53,52,8,8,2,53,52,59,59,0,0,59,0,59,59,60,60,60,59,60,59,59,59,60,59,18,60,59,18,60,59,59,18,18,59,59,59,59,59,59,18,18,60,60,59,18,18,60,59,18,60,59,18,60,18,18,60,18,59,18,60,59,18,60,59,18,60,59,18,60,18,59,18,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,76,78,63,70,63,70,63,70,63,63,63,70,63,70,63,70,63,63,63,63,63,63,64,76,78,63,70,63,70,63,70,70,63,70,63,63,63,63,63,63,63,63,63,70,63,70,63,70,63,63,70,63,0,0,146,0,0,134,0,146,0,0,0,0,80,81,80,82,81,80,82,80,80,80,80,80,80,80,80,81,80,82,82,81,80,82,82,80,80,80,81,80,82,81,80,82,80,82,81,80,80,82,81,80,82,81,80,82,81,80,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,90,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,92,93,94,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,45,91,0,86,87,0,49,85,86,50,86,87,92,94,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,86,85,86,87,88,89,90,91,50,92,93,94,95,96,49,45,97,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,116,116,116,116,116,116,0,0,116,116,116,0,115,116,118,115,118,115,115,115,116,118,115,118,115,118,115,116,118,115,116,116,116,116,116,115,118,115,118,115,115,116,115,115,116,116,116,116,115,116,118,115,118,115,118,115,118,115,116,118,115,115,0,0,0,0,0,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,29,35,47,109,110,0,0,0,0,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,0,0,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,127,127,127,0,0,0,126,127,128,126,128,126,126,126,128,126,128,126,128,126,128,126,126,128,126,128,126,126,126,126,126,127,127,128,126,128,126,128,126,128,126,128,126,126,0,0,0,132,129,129,131,129,131,129,131,129,131,129,129,129,131,129,129,129,129,129,129,129,132,129,131,129,131,129,131,131,129,131,129,129,129,129,129,129,0,132,129,129,131,129,131,129,131,129,129,131,129,0,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,135,133,0,0,0,0,0,0,0,0,138,140,139,137,137,137,137,137,137,138,140,139,137,137,137,137,137,137,137,137,0,0,147,141,141,141,141,141,147,141,141,141,141,147,141,141,141,141,141,141],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[[-1,2,[4,[3]]],[[7,[[6,[5]]]]],[]],[[-1,2,8],[[7,[[6,[5]]]]],[]],0,[-1,1,[]],[[-1,2,[4,[9]]],[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],[[-1,11],[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],0,[-1,1,[]],[[-1,2,[4,[12]]],[[7,[[6,[5]]]]],[]],[[-1,2,[14,[13]]],[[7,[[6,[5]]]]],[]],0,[[-1,15],[[7,[[6,[5]]]]],[]],[[-1,10,16],[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],[[-1,10,16],[[7,[[6,[5]]]]],[]],0,[[-1,[4,[3]]],[[7,[[6,[5]]]]],[]],[-1,[[7,[[6,[5]]]]],[]],[[-1,[4,[17]]],[[7,[[6,[5]]]]],[]],0,0,0,0,0,0,0,[[-1,2,[4,[3]]],[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],[[-1,10,16],[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],[[-1,10,16],[[7,[[6,[5]]]]],[]],[[-1,[4,[3]]],[[7,[[6,[5]]]]],[]],[-1,[[7,[[6,[5]]]]],[]],[[-1,[4,[17]]],[[7,[[6,[5]]]]],[]],0,0,0,[[-1,2,[4,[9]]],[[7,[[6,[5]]]]],[]],[[-1,11],[[7,[[6,[5]]]]],[]],0,0,[[-1,2,[4,[12]]],[[7,[[6,[5]]]]],[]],[[-1,15],[[7,[[6,[5]]]]],[]],0,0,0,0,[-1,1,[]],[[-1,2,8],[[7,[[6,[5]]]]],[]],[-1,1,[]],[-1,1,[]],[[-1,2,[14,[13]]],[[7,[[6,[5]]]]],[]],0,0,0,0,0,0,[-1,[[7,[[6,[5]]]]],[]],[[-1,10],[[7,[[6,[5]]]]],[]],[-1,[[7,[[6,[5]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[19,[10,18]]],20],0,[17,[[14,[13]]]],[17,[[14,[13]]]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[24,[22,23]]]]],[]],[17,17],[[-1,-2],25,[],[]],[-1,-2,[],[[27,[26]]]],[-1,-2,[],[[27,[26]]]],[-1,-1,[]],[-1,17,[[28,[[6,[[14,[13]]]]]]]],[29,[[19,[17,18]]]],[-1,-2,[],[]],[17,[[24,[13]]]],[17,29],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[[-1,-2],[[19,[25]]],[],32],0,[3,[[14,[13]]]],[3,[[14,[13]]]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[24,[22,23]]]]],[]],[3,3],[[-1,-2],25,[],[]],[-1,-2,[],[[27,[26]]]],[-1,-2,[],[[27,[26]]]],[[3,33],34],[-1,-1,[]],[-1,3,[[28,[[6,[[14,[13]]]]]]]],[35,[[19,[3,18]]]],[-1,-2,[],[]],[3,[[24,[13]]]],[3,35],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[[-1,-2],[[19,[25]]],[],32],0,0,0,[16,[[14,[13]]]],[16,[[14,[13]]]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[24,[22,23]]]]],[]],[16,16],[[-1,-2],25,[],[]],[-1,-2,[],[[27,[26]]]],[-1,-2,[],[[27,[26]]]],[[16,16],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[16,33],34],[-1,-1,[]],[[-1,-2],37,[38,39],40],[[16,-1],25,41],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[[[14,[13]]],[[19,[16,18]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[10,18]]],20],[-1,[[19,[10,18]]],42],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[[-1,-2],[[19,[25]]],[],32],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,33],34],[[44,33],34],[-1,-1,[]],[-1,-1,[]],0,[45,[[19,[43,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[43,45],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[19,[[6,[[14,[46]]]],18]]],20],0,[9,[[14,[13]]]],[9,[[14,[13]]]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[24,[22,23]]]]],[]],[9,9],[[-1,-2],25,[],[]],[-1,-2,[],[[27,[26]]]],[-1,-2,[],[[27,[26]]]],[-1,-1,[]],[-1,9,[[28,[[6,[[14,[13]]]]]]]],[47,[[19,[9,18]]]],[-1,-2,[],[]],[9,[[24,[13]]]],[9,47],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[[-1,-2],[[19,[25]]],[],32],0,0,0,[46,[[14,[13]]]],[46,[[14,[13]]]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[24,[22,23]]]]],[]],[46,46],[[-1,-2],25,[],[]],[-1,-2,[],[[27,[26]]]],[-1,-2,[],[[27,[26]]]],[[46,46],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[46,33],34],[-1,-1,[]],[[-1,-2],37,[38,39],40],[[46,-1],25,41],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[[[14,[13]]],[[19,[46,18]]]],[-1,[[19,[[6,[[14,[46]]]],18]]],20],[-1,[[19,[11,18]]],42],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[[-1,-2],[[19,[25]]],[],32],0,0,0,0,0,0,0,0,[48,[[14,[13]]]],[48,[[14,[13]]]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[24,[22,23]]]]],[]],[48,48],[[-1,-2],25,[],[]],[-1,-2,[],[[27,[26]]]],[-1,-2,[],[[27,[26]]]],[-1,-1,[]],[-1,-1,[]],[-1,48,[[28,[[6,[[14,[13]]]]]]]],[49,[[19,[12,18]]]],[50,[[19,[12,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[48,[[24,[13]]]],[12,49],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[19,[25]]],[],32],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,[2,51],0,[52,[[14,[13]]]],[[52,[14,[13]]],[[19,[8,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[53,53],[52,52],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[2,2],36],[[52,52],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[2,33],34],[[2,33],34],[[53,33],34],[[52,33],34],[-1,-1,[]],[-1,-1,[]],[51,2],[-1,-1,[]],[[[55,[54]]],53],[-1,-1,[]],[8,52],[-1,53,[56,57]],[[-1,-2],37,[38,39],40],[[-1,-2],37,[38,39],40],[[2,-1],25,41],[[52,-1],25,41],[8,52],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[53,[14,[13]]],8],[8,[[14,[13]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,58,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[14,[13]]],[[19,[52,18]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[8,[14,[13]]],[[19,[25,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[-1,-2],25,[],[]],[18,59],0,[[59,59],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[59,33],34],[[18,33],34],[[18,33],34],[[60,33],34],[[60,33],34],[-1,-1,[]],[-1,-1,[]],[61,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[59,-1],18,[[28,[[6,[62]]]]]],[18,[[1,[62]]]],[60,[[1,[62]]]],0,[-1,-2,[],[]],[-1,58,[]],[-1,58,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[63,[-1]],-2],[[19,[64,18]]],[[66,[65]]],[67,68,69]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[70,-1],[[63,[-1]]],[[66,[65]]]],[[[63,[-1]],8],[[19,[25,18]]],[[66,[65]]]],[[[63,[-1]]],[[63,[-1]]],71],[[-1,-2],25,[],[]],[[70,-1],[[19,[[63,[72]],73]]],[[75,[74]]]],[-1,[[19,[[63,[72]],73]]],[[75,[74]]]],[[],70],[[[63,[-1]],-2],[[19,[76,18]]],[[66,[65]]],[67,68,69]],[-1,-1,[]],[-1,-1,[]],[[[63,[-1]],10],[[19,[[77,[29,17]],18]]],[[66,[65]]]],[[[63,[-1]],11],[[19,[[77,[47,9]],18]]],[[66,[65]]]],[[[63,[-1]],10],[[19,[[77,[35,3]],18]]],[[66,[65]]]],[[[63,[-1]],-2],[[19,[78,18]]],[[66,[65]]],[67,68,69]],[[[63,[-1]],[14,[13]]],[[19,[79,60]]],[[66,[65]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[70,80],70],0,0,[[],70],[-1,[[63,[-1]]],[[66,[65]]]],[[[63,[-1]],15],[[19,[12,18]]],[[66,[65]]]],[[[63,[-1]],10,16],[[19,[[77,[29,17]],18]]],[[66,[65]]]],[[[63,[-1]],10],[[19,[[77,[29,17]],18]]],[[66,[65]]]],[[[63,[-1]],10,16],[[19,[[77,[35,3]],18]]],[[66,[65]]]],[[[63,[-1]],-2],[[19,[25,18]]],[[66,[65]]],[67,68,69]],[[[63,[-1]],-2],[[30,[-2]]],[[66,[65]]],[]],[[[63,[-1]]],[[19,[3,18]]],[[66,[65]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[[63,[-1]],-2],[[19,[25,18]]],[[66,[65]]],[67,68,69]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[61,18],[18,61],[-1,[[19,[-2,18]]],[],[]],[-1,[[24,[[24,[13]]]]],20],[-1,[],[]],0,0,0,0,[80,[[14,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[[-1,-2],25,[],[]],[80,[[24,[13]]]],[[80,80],36],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[-1,-2],36,[],[]],[[81,33],34],[[80,33],34],[[82,33],34],[[82,33],34],[-1,-1,[]],[-1,-1,[]],[83,82],[-1,-1,[]],[-1,[[19,[80,84]]],56],[[-1,-2],37,[38,39],40],[[80,-1],25,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,58,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[14,[13]]],[[19,[80,82]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,25],[86,25],[87,25],[88,25],[89,25],[90,25],[91,25],[50,25],[92,25],[93,25],[94,25],[95,25],[96,25],[49,25],[45,25],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[50,50],[92,92],[93,93],[94,94],[95,95],[96,96],[49,49],[45,45],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[],85],[[],86],[[],87],[[],88],[[],89],[[],90],[[],91],[[],50],[[],92],[[],93],[[],94],[[],95],[[],96],[[],49],[[],45],[85,21],[86,21],[87,21],[88,21],[89,21],[90,21],[91,21],[50,21],[92,21],[93,21],[94,21],[95,21],[96,21],[49,21],[45,21],[[85,85],36],[[86,86],36],[[87,87],36],[[88,88],36],[[89,89],36],[[90,90],36],[[91,91],36],[[50,50],36],[[92,92],36],[[93,93],36],[[94,94],36],[[95,95],36],[[96,96],36],[[49,49],36],[[45,45],36],[[85,33],34],[[86,33],34],[[87,33],34],[[88,33],34],[[89,33],34],[[90,33],34],[[91,33],34],[[50,33],34],[[92,33],34],[[93,33],34],[[94,33],34],[[95,33],34],[[96,33],34],[[49,33],34],[[45,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[97,97],[[-1,-2],25,[],[]],[[97,-1],25,98],[97,21],[[97,97],36],[[97,33],34],[-1,-1,[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[[[1,[97]],15,99,-1,100],[[19,[25,101]]],102],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,[[[103,[-1]]],[[103,[-1]]],[[66,[65]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[45]]]],61]]],[[66,[65]]],106],[-1,-2,[],[]],[-1,-2,[],[]],[[[103,[-1]],-2],[[19,[[105,[88]],61]]],[[66,[65]]],[[107,[87]]]],[[[103,[-1]]],[[103,[-1]]],71],[[-1,-2],25,[],[]],[-1,[[19,[[103,[72]],73]]],[[75,[74]]]],[[[103,[-1]],33],34,108],[[[103,[-1]],-2],[[19,[[105,[[104,[47]]]],61]]],[[66,[65]]],106],[-1,-1,[]],[[[103,[-1]],-2],[[19,[[105,[[104,[29]]]],61]]],[[66,[65]]],[[107,[109]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[47]]]],61]]],[[66,[65]]],[[107,[110]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[35]]]],61]]],[[66,[65]]],[[107,[109]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[49]]]],61]]],[[66,[65]]],106],[[[103,[-1]],-2],[[19,[[105,[86]],61]]],[[66,[65]]],[[107,[85]]]],0,[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[103,[-1]]],[[66,[65]]]],[[[103,[-1]],-2],[[19,[[105,[50]],61]]],[[66,[65]]],[[107,[91]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[29]]]],61]]],[[66,[65]]],[[107,[94]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[29]]]],61]]],[[66,[65]]],[[107,[93]]]],[[[103,[-1]],-2],[[19,[[105,[[104,[35]]]],61]]],[[66,[65]]],[[107,[92]]]],[[[103,[-1]],-2],[[19,[[105,[95]],61]]],[[66,[65]]],106],[[[103,[-1]]],[[103,[-1]]],[[66,[65]]]],[[[103,[-1]],-2],[[19,[[105,[90]],61]]],[[66,[65]]],[[107,[89]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[[[103,[-1]],-2],[[19,[[105,[96]],61]]],[[66,[65]]],106],[-1,-2,[],[]],[[-1,-2],[[103,[[111,[-1,-2]]]]],[[113,[[112,[65]]]],[66,[65]]],114],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,[30,[[104,[35]]]]],[[7,[[6,[5]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[115,[-1]],[112,[-2]]],[],116,[117,68]],[[-1,[112,[-2]]],[],[],[]],[[-1,[30,[87]]],[[7,[[6,[5]]]]],[]],[[[118,[-1]]],[[118,[-1]]],116],[[[115,[-1]]],[[115,[-1]]],116],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[[118,[-1]],33],34,108],[[[115,[-1]],33],34,[108,116]],[[-1,[30,[[104,[47]]]]],[[7,[[6,[5]]]]],[]],[-1,-1,[]],[-1,-1,[]],[[-1,[30,[109]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[110]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[109]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[[104,[49]]]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[85]]],[[7,[[6,[5]]]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[115,[-1]]],116],[[-1,[30,[91]]],[[7,[[6,[5]]]]],[]],[[[115,[-1]],119],[[120,[[19,[25]]]]],116],[[-1,119],[[120,[[19,[25]]]]],[]],[[-1,[30,[94]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[93]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[92]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[[104,[35]]]]],[[7,[[6,[5]]]]],[]],0,[[-1,[30,[89]]],[[7,[[6,[5]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[-1,[30,[[104,[29]]]]],[[7,[[6,[5]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[111,[[115,[-1]],-2]]],116,114],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,25],[35,25],[47,25],[109,25],[110,25],[29,29],[35,35],[47,47],[109,109],[110,110],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],0,0,0,[[],29],[[],35],[[],47],[[],109],[[],110],[29,21],[35,21],[47,21],[109,21],[110,21],[[29,29],36],[[35,35],36],[[47,47],36],[[109,109],36],[[110,110],36],[[29,33],34],[[35,33],34],[[47,33],34],[[109,33],34],[[110,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[121,25],[122,25],[123,25],[124,25],[121,121],[122,122],[123,123],[124,124],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[],121],[[],122],[[],123],[[],124],[121,21],[122,21],[123,21],[124,21],[[121,121],36],[[122,122],36],[[123,123],36],[[124,124],36],[[121,33],34],[[122,33],34],[[123,33],34],[[124,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[125,[-1]]],[[125,[-1]]],[[66,[65]]]],[[[125,[-1]],-2],[[19,[[105,[[104,[29]]]],61]]],[[66,[65]]],[[107,[121]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[125,[-1]]],[[125,[-1]]],71],[[-1,-2],25,[],[]],[-1,[[19,[[125,[72]],73]]],[[75,[74]]]],[[[125,[-1]],33],34,108],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[125,[-1]]],[[66,[65]]]],[[[125,[-1]]],[[125,[-1]]],[[66,[65]]]],[[[125,[-1]],-2],[[19,[[105,[[104,[29]]]],61]]],[[66,[65]]],[[107,[124]]]],[[[125,[-1]],-2],[[19,[[105,[[104,[35]]]],61]]],[[66,[65]]],[[107,[122]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],[[-1,-2],[[125,[[111,[-1,-2]]]]],[[113,[[112,[65]]]],[66,[65]]],114],0,0,0,0,0,0,0,[[-1,[30,[121]]],[[7,[[6,[5]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[112,[-2]]],[],[],[]],[[[126,[-1]],[112,[-2]]],[],127,[117,68]],[[[128,[-1]]],[[128,[-1]]],127],[[[126,[-1]]],[[126,[-1]]],127],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[[128,[-1]],33],34,108],[[[126,[-1]],33],34,[108,127]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[126,[-1]]],127],[[[126,[-1]],119],[[120,[[19,[25]]]]],127],[[-1,119],[[120,[[19,[25]]]]],[]],0,[[-1,[30,[124]]],[[7,[[6,[5]]]]],[]],[[-1,[30,[122]]],[[7,[[6,[5]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[111,[[126,[-1]],-2]]],127,114],0,0,0,0,[[[129,[-1]]],[[19,[61]]],130],[[[129,[-1]],[30,[[104,[35]]]]],[[7,[[6,[5]]]]],130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[131,-1],[[132,[-1]]],130],[[[129,[-1]],[30,[87]]],[[7,[[6,[5]]]]],130],[[],131],[[[129,[-1]],33],34,108],[[[129,[-1]]],[[19,[61]]],130],[[[129,[-1]],[30,[[104,[47]]]]],[[7,[[6,[5]]]]],130],[-1,-1,[]],[-1,-1,[]],[[[129,[-1]],[30,[109]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[110]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[109]]],[[7,[[6,[5]]]]],130],[[[129,[-1]]],[[19,[61]]],130],[[[129,[-1]],[30,[[104,[49]]]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[85]]],[[7,[[6,[5]]]]],130],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[131,80],131],0,0,[[],131],[-1,[[129,[-1]]],130],[[[129,[-1]],[30,[91]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[94]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[93]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[92]]],[[7,[[6,[5]]]]],130],[[[129,[-1]],[30,[[104,[35]]]]],[[7,[[6,[5]]]]],130],[[[1,[51]]],[[19,[2,61]]]],0,[[[129,[-1]],-2],[[105,[[133,[-2]]]]],130,[]],[[[129,[-1]],[30,[89]]],[[7,[[6,[5]]]]],130],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[[129,[-1]],[30,[[104,[29]]]]],[[7,[[6,[5]]]]],130],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[[104,[-1]]],[[77,[-1,-2]]],[],[]],[[[7,[[77,[-1,-2]]]],119],[[120,[1]]],[],[[134,[-1]]]],[[[7,[[77,[-1,-2]]]]],[[0,[-1,-2]]],[],[]],[[[7,[[77,[-1,-2]]]]],[[0,[-1,-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[7,[-1]],119],[[120,[[1,[19]]]]],[]],[-1,31,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[135,[-1]]],[]],[-1,[[133,[-1]]],[]],[[[7,[-1]],119],[[120,[[1,[19]]]]],[]],[[[7,[-1]],119],[[120,[[1,[19]]]]],[]],[[[7,[[135,[-1]]]],119],[[120,[1]]],67],[[[7,[[133,[-1]]]],119],[[120,[1]]],136],[[[7,[[135,[-1]]]]],[[0,[-1]]],[]],[[[7,[[133,[-1]]]]],[[0,[-1]]],[]],[[[7,[[135,[-1]]]]],[[0,[-1]]],[]],[[[7,[[133,[-1]]]]],[[0,[-1]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[7,[-1]],119],[[120,[[1,[19]]]]],[]],[[[7,[-1]],119],[[120,[[1,[19]]]]],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[[137,[-1]]],[[19,[138,18]]],[[66,[65]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[137,[72]],73]]],[[75,[74]]]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[[[137,[-1]],-2],[[19,[139,18]]],[[66,[65]]],20],[[[137,[-1]]],[[19,[140,18]]],[[66,[65]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,[[[141,[-1]],[30,[121]]],[[7,[[6,[5]]]]],142],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1]],33],34,108],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[141,[-1]]],[]],0,[[[141,[-1]],[30,[124]]],[[7,[[6,[5]]]]],142],[[[141,[-1]],[30,[122]]],[[7,[[6,[5]]]]],142],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]]],"c":[],"p":[[4,"Option",1441],[3,"Peer",357],[3,"Header",152],[6,"PushStream",81],[8,"Future",1442],[3,"Box",1443],[3,"Pin",1444],[3,"AuthenticatedNodeId",357],[3,"Fragment",245],[6,"BlockIds",177],[6,"FragmentIds",269],[3,"Gossip",307],[15,"u8"],[15,"slice"],[15,"u32"],[3,"BlockId",177],[3,"Block",128],[3,"Error",440],[4,"Result",1445],[8,"IntoIterator",1446],[15,"usize"],[3,"u5",1447],[3,"Global",1448],[3,"Vec",1449],[15,"tuple"],[15,"char"],[8,"FromIterator",1446],[8,"Into",1450],[3,"Block",1046],[3,"Request",1451],[3,"TypeId",1452],[8,"WriteBase32",1447],[3,"Formatter",1453],[6,"Result",1453],[3,"Header",1046],[15,"bool"],[15,"u64"],[8,"Hash",1454],[8,"Sized",1455],[8,"BuildHasher",1454],[8,"Hasher",1454],[8,"Iterator",1456],[4,"BlockEvent",210],[3,"ChainPullRequest",210],[3,"BlockEvent",637],[3,"FragmentId",269],[3,"Fragment",1046],[3,"Node",307],[3,"Gossip",637],[3,"PeersResponse",637],[4,"SocketAddr",1457],[3,"NodeId",357],[3,"NodeKeyPair",357],[3,"Ed25519",1458],[3,"SecretKey",1459],[8,"RngCore",1460],[8,"CryptoRng",1460],[3,"String",1461],[4,"Code",440],[4,"HandshakeError",440],[3,"Status",1462],[8,"Error",1463],[3,"Client",517],[6,"BlockSubscription",517],[6,"BoxBody",1464],[8,"GrpcService",1465],[8,"Stream",1466],[8,"Send",1455],[8,"Sync",1455],[3,"Builder",517],[8,"Clone",1467],[3,"Channel",1468],[3,"Error",1469],[3,"Endpoint",1470],[8,"TryInto",1450],[6,"FragmentSubscription",517],[3,"InboundStream",1339],[6,"GossipSubscription",517],[3,"HandshakeResponse",344],[3,"NodeId",583],[3,"HexWrap",583],[3,"TryFromBytesError",583],[3,"TryFromSliceError",1471],[3,"Error",1472],[3,"HandshakeRequest",637],[3,"HandshakeResponse",637],[3,"ClientAuthRequest",637],[3,"ClientAuthResponse",637],[3,"TipRequest",637],[3,"TipResponse",637],[3,"PeersRequest",637],[3,"PullHeadersRequest",637],[3,"PullBlocksToTipRequest",637],[3,"PullBlocksRequest",637],[3,"PushHeadersResponse",637],[3,"UploadBlocksResponse",637],[4,"Item",928],[8,"BufMut",1473],[4,"WireType",1474],[3,"DecodeContext",1474],[3,"DecodeError",1475],[8,"Buf",1476],[3,"NodeClient",949],[3,"Streaming",1477],[3,"Response",1478],[8,"IntoStreamingRequest",1451],[8,"IntoRequest",1451],[8,"Debug",1453],[3,"BlockIds",1046],[3,"FragmentIds",1046],[3,"InterceptedService",1479],[3,"Request",1480],[8,"Service",1481],[8,"Interceptor",1479],[3,"NodeServer",984],[8,"Node",984],[8,"Body",1482],[3,"_Inner",984],[3,"Context",1483],[4,"Poll",1484],[3,"BlockSubscriptionRequest",1141],[3,"TipSubscriptionRequest",1141],[3,"MempoolSubscriptionRequest",1141],[3,"SyncMultiverseRequest",1141],[3,"WatchClient",1216],[3,"WatchServer",1239],[8,"Watch",1239],[3,"_Inner",1239],[3,"NodeService",1283],[8,"Node",72],[3,"Builder",1283],[6,"Server",1283],[3,"OutboundTryStream",1357],[8,"FromProtobuf",575],[3,"OutboundStream",1357],[8,"TryStream",1466],[3,"Client",1397],[6,"BlockSubscription",1397],[6,"SyncMultiverseStream",1397],[6,"TipSubscription",1397],[3,"WatchService",1421],[8,"Watch",83],[8,"BlockService",47],[8,"FragmentService",63],[8,"GossipService",68],[8,"IntoProtobuf",575],[6,"Server",1421]]},\
"chain_path_derivation":{"doc":"BIP44 addressing","t":"DDEDDDDDNNNNNNNEEDDMAAAMMMMMAMMMMMDDDDDRRRRRRRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDNNNNERDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDDDSSNNNEMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLMLLLLLLLLLLLLLLLLLLLMMMMDDRRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOFLLLLLLLLLLLLLLLLLLLL","n":["AnyScheme","Derivation","DerivationError","DerivationPath","DerivationPathRange","DerivationRange","HardDerivation","HardDerivationRange","InvalidDerivation","InvalidHardDerivation","InvalidNumberOfDerivations","InvalidSoftDerivation","NaN","NotValidDerivation","NotValidRoot","ParseDerivationError","ParseDerivationPathError","SoftDerivation","SoftDerivationRange","_marker","bip44","derivation","derivation_path","path","range","range","range","range","rindex","root","actual","expected","index","source","Account","Address","Bip44","Change","CoinType","INDEX_ACCOUNT","INDEX_ADDRESS","INDEX_CHANGE","INDEX_COIN_TYPE","INDEX_PURPOSE","PURPOSE_BIP44","PURPOSE_CHIMERIC","Purpose","Root","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","mk_from_str_dp_bip44","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Derivation","DerivationError","DerivationRange","HardDerivation","HardDerivationRange","InvalidDerivation","InvalidHardDerivation","InvalidSoftDerivation","NaN","ParseDerivationError","SOFT_DERIVATION_UPPER_BOUND","SoftDerivation","SoftDerivationRange","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add","checked_add","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","deref","deref","deref","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_hard_derivation","is_soft_derivation","len","len","len","max_value","max_value","max_value","min_value","min_value","min_value","new","new","new","new","new","new","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","overflowing_add","overflowing_add","overflowing_add","partial_cmp","partial_cmp","partial_cmp","range","range","range","saturating_add","saturating_add","saturating_add","saturating_sub","saturating_sub","saturating_sub","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wrapping_add","wrapping_add","wrapping_add","ACCOUNT","AnyScheme","DerivationPath","DerivationPathRange","EXTERNAL","INTERNAL","InvalidNumberOfDerivations","NotValidDerivation","NotValidRoot","ParseDerivationPathError","_marker","account","account","account","account","account","account","address","address","address","address","addresses","append_unchecked","bip44","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change","change","change","chimeric","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","coerce_unchecked","coin_type","coin_type","coin_type","coin_type","coin_type","default","default","deref","eq","eq","eq","equivalent","equivalent","equivalent","external","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_unchecked","hash","hash","hash","internal","into","into","into","into","into_iter","into_iter","into_iter","iter","len","new","new_empty","next","next_back","partial_cmp","partial_cmp","partial_cmp","path","purpose","purpose","purpose","purpose","purpose","push","range","reward_account","root","source","sub_range","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","actual","expected","index","source","Account","Address","INDEX_ACCOUNT","INDEX_ADDRESS","Rindex","Root","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hash","into","into","into","into","mk_from_str_dp_rindex","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"chain_path_derivation"],[30,"chain_path_derivation::ParseDerivationPathError"],[34,"chain_path_derivation::bip44"],[162,"chain_path_derivation::derivation"],[344,"chain_path_derivation::derivation_path"],[476,"chain_path_derivation::derivation_path::ParseDerivationPathError"],[480,"chain_path_derivation::rindex"],[552,"core::clone"],[553,"core::cmp"],[554,"core::cmp"],[555,"core::fmt"],[556,"core::hash"],[557,"core::cmp"],[558,"core::any"],[559,"core::num::error"],[560,"core::convert"],[561,"core::marker"],[562,"core::ops::range"],[563,"core::convert"],[564,"alloc::string"],[565,"core::iter::traits::iterator"],[566,"core::iter::traits::collect"],[567,"core::slice::iter"],[568,"core::iter::traits::exact_size"],[569,"core::iter::traits::double_ended"]],"d":["any derivation path scheme","a derivation value that can be used to derive keys","","a derivation path with a tagged scheme (for example <code>Bip44</code>).","","iterator to create derivation values","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","","","","","","","","","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","Bip44 derivation scheme","","","","","","","","Random Index scheme","","","","","","","","scheme for the Bip44 chain path derivation","","","","","","","","the BIP44 purpose (’44). This is the first item of the …","the Chimeric BIP44 purpose (’1852). This is the first …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create a Bip44 chain path derivation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a derivation value that can be used to derive keys","","iterator to create derivation values","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","","","","","the soft derivation is upper bounded, this is the value","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","","","","","","","","","","","","","","","","checked integer addition. Computes <code>self + rhs</code>, returning …","checked integer addition. Computes <code>self + rhs</code>, returning …","checked integer addition. Computes <code>self + rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","test if the given derivation is a hard derivation","test if the given derivation is a soft derivation","","","","returns the max derivation index value","returns the max derivation index value","returns the max derivation index value","returns the min derivation index value","returns the min derivation index value","returns the min derivation index value","create a new derivation with the given index","build a soft derivation from the given <code>Derivation</code>. If the …","build a hard derivation from the given <code>Derivation</code>. If the …","create a derivation range from the given range","create a SoftDerivation range from the given range","create a HardDerivation range from the given range","construct a soft derivation from the given derivation …","construct a hard derivation from the given derivation …","","","","","","","calculate <code>derivation + rhs</code>","calculate <code>self + rhs</code>","calculate <code>self + rhs</code>","","","","","","","saturating integer addition. Computes <code>self + rhs</code>, …","saturating integer addition. Computes <code>self + rhs</code>, …","saturating integer addition. Computes <code>self + rhs</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","","any derivation path scheme","a derivation path with a tagged scheme (for example <code>Bip44</code>).","","","","","","","","","","","See module documentation for more details","","","","","","","See module documentation for more details","build a range of addresses","create a new derivation path with appending the new …","","","","","","","","","","See module documentation for more details","","","use the same “model” of 5 derivation level but instead …","","","","","","","","","","","add the next derivation level for the Bip44 chain path …","","","","","","","","","","","","","","See module documentation for more details","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","See module documentation for more details","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Iterate through every derivation indices of the given …","","","","","","","","","","","","","","","","","See module documentation for more details","","","create a range of derivation path with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,32,31,49,31,32,49,49,0,0,0,0,19,0,0,0,19,30,28,29,46,0,46,54,54,55,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,0,0,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,1,3,4,5,6,7,8,0,0,0,0,0,32,31,31,32,0,0,0,0,24,26,27,30,28,29,31,32,24,26,27,30,28,29,31,32,24,26,27,24,26,27,28,29,24,26,27,28,29,24,26,27,24,26,27,24,26,27,24,26,27,24,26,27,24,24,26,26,27,27,30,28,29,31,31,32,32,24,24,24,24,26,27,30,28,29,31,32,32,32,24,26,27,24,26,27,24,26,27,30,28,29,31,32,30,28,29,24,24,30,28,29,24,26,27,24,26,27,24,26,27,30,28,29,26,27,30,28,29,30,28,29,24,26,27,24,26,27,30,28,29,24,26,27,24,26,27,32,24,26,27,28,29,24,26,27,31,32,24,26,26,26,27,27,27,30,28,29,31,32,24,26,27,30,28,29,31,32,24,26,27,30,28,29,31,32,24,26,27,19,0,0,0,19,19,49,49,49,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,47,19,46,49,47,19,46,49,19,19,19,19,47,19,46,47,19,46,47,19,46,19,19,19,19,19,19,47,19,19,47,19,46,47,19,46,19,47,19,19,46,49,49,47,19,46,49,19,19,19,19,19,19,19,19,19,19,19,19,47,19,46,19,47,19,46,49,19,19,46,19,46,19,19,46,46,47,19,46,19,19,19,19,19,19,19,46,19,46,49,19,47,19,46,19,49,47,19,46,49,47,19,46,49,47,19,46,49,54,54,55,55,0,0,0,0,0,0,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,0,0,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45,43,42,44,45],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[[1,[-1]],[1,[-1]]],10,11],[[3,3],10],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],[[[1,[-1]],[1,[-1]]],12,13],[[3,3],12],[[4,4],12],[[5,5],12],[[6,6],12],[[7,7],12],[[8,8],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[[1,[-1]],14],15,16],[[3,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[7,14],15],[[8,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[1,[-1]],-2],9,17,18],[[3,-1],9,18],[[4,-1],9,18],[[5,-1],9,18],[[6,-1],9,18],[[7,-1],9,18],[[8,-1],9,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[19,[[1,[3]]]]]],[[[1,[-1]],[1,[-1]]],[[20,[10]]],21],[[3,3],[[20,[10]]]],[[4,4],[[20,[10]]]],[[5,5],[[20,[10]]]],[[6,6],[[20,[10]]]],[[7,7],[[20,[10]]]],[[8,8],[[20,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,25],[[20,[24]]]],[[26,25],[[20,[26]]]],[[27,25],[[20,[27]]]],[24,24],[26,26],[27,27],[28,28],[29,29],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[24,24],10],[[26,26],10],[[27,27],10],[[],24],[[],26],[[],27],[24],[26],[27],[[24,24],12],[[26,26],12],[[27,27],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[24,14],15],[[24,14],15],[[26,14],15],[[26,14],15],[[27,14],15],[[27,14],15],[[30,14],15],[[28,14],15],[[29,14],15],[[31,14],15],[[31,14],15],[[32,14],15],[[32,14],15],[-1,-1,[]],[25,24],[27,24],[26,24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[31,32],[33,32],[34,[[22,[24]]]],[34,[[22,[26]]]],[34,[[22,[27]]]],[[24,-1],9,18],[[26,-1],9,18],[[27,-1],9,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,12],[24,12],[30,35],[28,35],[29,35],[[],24],[[],26],[[],27],[[],24],[[],26],[[],27],[25,24],[24,[[22,[26,31]]]],[24,[[22,[27,31]]]],[-2,30,[[36,[24]],37],[[38,[-1]]]],[-2,28,[[39,[26]],37],[[38,[-1]]]],[-2,29,[[39,[27]],37],[[38,[-1]]]],[24,26],[24,27],[30,20],[28,20],[29,20],[30,20],[28,20],[29,20],[[24,25],[[9,[24,12]]]],[[26,25],[[9,[26,12]]]],[[27,25],[[9,[27,12]]]],[[24,24],[[20,[10]]]],[[26,26],[[20,[10]]]],[[27,27],[[20,[10]]]],0,0,0,[[24,25],24],[[26,25],26],[[27,25],27],[[24,25],24],[[26,25],26],[[27,25],27],[32,[[20,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,[[22,[-2]]],[],[]],[25,[[22,[26]]]],[-1,[[22,[-2]]],[],[]],[24,[[22,[26]]]],[25,[[22,[27]]]],[-1,[[22,[-2]]],[],[]],[24,[[22,[27]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[24,25],24],[[26,25],26],[[27,25],27],0,0,0,0,0,0,0,0,0,0,0,[[[19,[[1,[8]]]]],27],[[[19,[[43,[42]]]],24],[[19,[[43,[44]]]]]],[[[19,[[1,[5]]]],27],[[19,[[1,[6]]]]]],[[[19,[[1,[7]]]]],27],[[[19,[[43,[45]]]]],24],[[[19,[[1,[6]]]]],27],[[[19,[[43,[45]]]]],24],[[[19,[[43,[44]]]],24],[[19,[[43,[45]]]]]],[[[19,[[1,[8]]]]],26],[[[19,[[1,[7]]]],26],[[19,[[1,[8]]]]]],[[[19,[[1,[7]]]],-2],[[46,[[19,[[1,[8]]]],28,26]]],[[39,[26]],37],[[38,[-1]]]],[[[19,[-1]],24],[[19,[-1]]],[]],[[[19,[[1,[3]]]]],[[19,[[1,[4]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[[1,[6]]]],26],[[19,[[1,[7]]]]]],[[[19,[[1,[8]]]]],26],[[[19,[[1,[7]]]]],26],[[[19,[[1,[3]]]]],[[19,[[1,[4]]]]]],[47,47],[[[19,[-1]]],[[19,[-1]]],[]],[[[46,[-1,-2,-3]]],[[46,[-1,-2,-3]]],2,[48,2],[[36,[24]],2]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[47,47],10],[[[19,[-1]],[19,[-1]]],10,[]],[[[46,[-1,-2,-3]],[46,[-1,-2,-3]]],10,11,[48,11],[[36,[24]],11]],[[[19,[-1]]],[[19,[-2]]],[],[]],[[[19,[[1,[4]]]],27],[[19,[[1,[5]]]]]],[[[19,[[1,[8]]]]],27],[[[19,[[1,[7]]]]],27],[[[19,[[1,[6]]]]],27],[[[19,[[1,[5]]]]],27],[[],47],[[],[[19,[47]]]],[[[19,[-1]]],[],[]],[[47,47],12],[[[19,[-1]],[19,[-2]]],12,[],[]],[[[46,[-1,-2,-3]],[46,[-1,-2,-3]]],12,13,[48,13],[[36,[24]],13]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[[19,[[1,[6]]]]],[[19,[[1,[7]]]]]],[[47,14],15],[[[19,[-1]],14],15,[]],[[[19,[-1]],14],15,16],[[[46,[-1,-2,-3]],14],15,16,[48,16],[[36,[24]],16]],[[49,14],15],[[49,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[19,[47]]],50],[34,[[22,[[19,[47]]]]]],[34,[[22,[[19,[[1,[8]]]]]]]],[34,[[22,[[19,[[1,[5]]]]]]]],[34,[[22,[[19,[[1,[4]]]]]]]],[34,[[22,[[19,[[43,[44]]]]]]]],[34,[[22,[[19,[[1,[7]]]]]]]],[34,[[22,[[19,[[43,[45]]]]]]]],[34,[[22,[[19,[[1,[3]]]]]]]],[34,[[22,[[19,[[1,[6]]]]]]]],[34,[[22,[[19,[[43,[42]]]]]]]],[[[19,[-1]],35],24,[]],[[47,-1],9,18],[[[19,[-1]],-2],9,[],18],[[[46,[-1,-2,-3]],-4],9,17,[48,17],[[36,[24]],17],18],[[[19,[[1,[6]]]]],[[19,[[1,[7]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],[],[]],[[[19,[-1]]],[],[]],[-1,-2,[],[]],[[[19,[-1]]],[[51,[24]]],[]],[[[46,[-1,-2,-3]]],35,[],[48,52],[[36,[24]]]],[[],[[19,[47]]]],[[],[[19,[-1]]],[]],[[[46,[-1,-2,-3]]],20,[],48,[[36,[24]]]],[[[46,[-1,-2,-3]]],20,[],[48,53],[[36,[24]]]],[[47,47],[[20,[10]]]],[[[19,[-1]],[19,[-2]]],[[20,[10]]],[],[]],[[[46,[-1,-2,-3]],[46,[-1,-2,-3]]],[[20,[10]]],21,[48,21],[[36,[24]],21]],0,[[[19,[[1,[7]]]]],27],[[[19,[[1,[4]]]]],27],[[[19,[[1,[8]]]]],27],[[[19,[[1,[6]]]]],27],[[[19,[[1,[5]]]]],27],[[[19,[-1]],24],9,[]],0,[[[19,[[1,[6]]]]],[[19,[[1,[7]]]]]],0,[49,[[20,[40]]]],[[[19,[-1]],-2],[[46,[-1,-2,-3]]],[],48,[[36,[24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,41,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],[[43,[-1]]],2],[42,42],[44,44],[45,45],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[[43,[-1]],[43,[-1]]],10,11],[[42,42],10],[[44,44],10],[[45,45],10],[[[43,[-1]],[43,[-1]]],12,13],[[42,42],12],[[44,44],12],[[45,45],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[[43,[-1]],14],15,16],[[42,14],15],[[44,14],15],[[45,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[43,[-1]],-2],9,17,18],[[42,-1],9,18],[[44,-1],9,18],[[45,-1],9,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[19,[[43,[42]]]]]],[[[43,[-1]],[43,[-1]]],[[20,[10]]],21],[[42,42],[[20,[10]]]],[[44,44],[[20,[10]]]],[[45,45],[[20,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]]],"c":[],"p":[[3,"Bip44",34],[8,"Clone",552],[3,"Root",34],[3,"Purpose",34],[3,"CoinType",34],[3,"Account",34],[3,"Change",34],[3,"Address",34],[15,"tuple"],[4,"Ordering",553],[8,"Ord",553],[15,"bool"],[8,"PartialEq",553],[3,"Formatter",554],[6,"Result",554],[8,"Debug",554],[8,"Hash",555],[8,"Hasher",555],[3,"DerivationPath",344],[4,"Option",556],[8,"PartialOrd",553],[4,"Result",557],[3,"TypeId",558],[3,"Derivation",162],[15,"u32"],[3,"SoftDerivation",162],[3,"HardDerivation",162],[3,"SoftDerivationRange",162],[3,"HardDerivationRange",162],[3,"DerivationRange",162],[4,"DerivationError",162],[4,"ParseDerivationError",162],[3,"ParseIntError",559],[15,"str"],[15,"usize"],[8,"Into",560],[8,"Copy",561],[8,"RangeBounds",562],[8,"TryInto",560],[8,"Error",563],[3,"String",564],[3,"Root",480],[3,"Rindex",480],[3,"Account",480],[3,"Address",480],[3,"DerivationPathRange",344],[3,"AnyScheme",344],[8,"Iterator",565],[4,"ParseDerivationPathError",344],[8,"IntoIterator",566],[3,"Iter",567],[8,"ExactSizeIterator",568],[8,"DoubleEndedIterator",569],[13,"InvalidNumberOfDerivations",476],[13,"NotValidDerivation",476]]},\
"chain_ser":{"doc":"","t":"AAANNEDDNNNENNNNNNNLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMIINNNNEINNNNELLLLKKLLLLLLLLLLLLKLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLL","n":["abor","deser","packer","Array","Bytes","DecodeError","Decoder","Encoder","EndOfStream","StreamPending","StreamTooSmall","Tag","TypeMismatch","TypeUnknown","U128","U16","U32","U64","U8","array","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone_into","clone_into","current_element","data","default","end","eq","equivalent","expect_size","expect_tag","expect_tag_size","finalize","fmt","fmt","from","from","from","from","from_u8","hole","incr","into","into","into","into","new","new","pop","push_byte","push_slice","push_tag","slice","struct_end","struct_start","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","expected","got","has","left","want","Deserialize","DeserializeFromSlice","InvalidData","IoError","IoError","NotEnoughBytes","ReadError","Serialize","SizeTooBig","StructureInvalid","UnconsumedData","UnknownTag","WriteError","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize_from_slice","deserialize_validate","deserialize_validate_from_slice","fmt","fmt","fmt","fmt","from","from","from","from","into","into","serialize","serialize_as_vec","serialized_size","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Codec","borrow","borrow_mut","bytes_left","copy_to_slice","from","get_be_u128","get_be_u16","get_be_u32","get_be_u64","get_bytes","get_le_u128","get_le_u16","get_le_u32","get_le_u64","get_nz_u32","get_nz_u64","get_slice","get_u8","has_bytes_left","i128_size","i16_size","i32_size","i64_size","i8_size","inner","into","into_inner","new","position","put_be_u128","put_be_u16","put_be_u32","put_be_u64","put_bytes","put_le_u128","put_le_u16","put_le_u32","put_le_u64","put_u8","read_to_end","set_position","skip_bytes","try_from","try_into","type_id","u128_size","u16_size","u32_size","u64_size","u8_size"],"q":[[0,"chain_ser"],[3,"chain_ser::abor"],[90,"chain_ser::abor::DecodeError"],[95,"chain_ser::deser"],[139,"chain_ser::packer"],[190,"core::result"],[191,"alloc::boxed"],[192,"core::fmt"],[193,"core::fmt"],[194,"core::any"],[195,"std::io"],[196,"std::io::error"],[197,"std::io"],[198,"core::error"],[199,"alloc::string"],[200,"core::num::nonzero"],[201,"core::num::nonzero"]],"d":["","","Tooling for packing and unpacking from streams","","","","Create a decoder on some data","ABOR Encoder","","","","ABOR Types","","","","","","","","","","","","","","","","","","cannot serialize more than 256 bytes of contiguous data","","","","","","","","","","","","","","Finalize the encoder into an immutable array of data","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Terminate an array","Array cannot contain more than 256 elements","","","","","","","","","","","","","","","","Add a 128-bit unsigned value in little endian format","","Add a 16-bit unsigned value in little endian format","","Add a 32-bit unsigned value in little endian format","","Add a 64-bit unsigned value in little endian format","","Add an unsigned byte","","","","","","Define that an object that can be read from an …","Define that an object can be read from a byte slice. This …","","","","","","Define that an object can be written to an <code>std::io::Write</code> …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convenience method to serialize into a byte vector.","Default implementation, not efficient, not recommended to …","","","","","","","","","","","The structure to support (de)serialization of binary data …","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,9,9,0,0,0,3,3,3,0,3,3,9,9,9,9,9,1,1,8,9,3,1,8,9,3,1,8,9,3,9,3,8,8,8,1,9,9,1,1,1,8,9,3,1,8,9,3,9,8,8,1,8,9,3,1,8,1,8,8,8,1,8,8,9,3,1,8,9,3,1,8,9,3,1,8,9,3,1,8,1,8,1,8,1,8,1,8,32,32,33,34,33,0,0,21,21,23,21,0,0,21,21,21,21,0,21,23,21,23,35,36,35,36,21,21,23,23,21,21,23,23,21,23,37,37,37,21,23,21,23,21,23,21,23,21,23,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[[7,[[6,[5]]]],3]]]],[[8,[6,[5]]],8],[9,9],[3,3],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,0,[[],8],[1,[[4,[10,3]]]],[[9,9],11],[[-1,-2],11,[],[]],[[1,2],[[4,[10,3]]]],[[1,9],[[4,[10,3]]]],[[1,9,2],[[4,[10,3]]]],[8,[[7,[[6,[5]]]]]],[[9,12],13],[[3,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[14,[9]]]],0,[8,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[5]]],1],[[],8],[1,[[4,[5,3]]]],[[8,5],8],[[8,[6,[5]]],8],[[8,9],8],0,[8,8],[8,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[1,[[4,[16,3]]]],[[8,16],8],[1,[[4,[17,3]]]],[[8,17],8],[1,[[4,[18,3]]]],[[8,18],8],[1,[[4,[19,3]]]],[[8,19],8],[1,[[4,[5,3]]]],[[8,5],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[4,[-2,21]]],22,[]],[[[20,[[6,[5]]]]],[[4,[-1,21]]],[]],[[[20,[-1]]],[[4,[10,21]]],22],[[[20,[[6,[5]]]]],[[4,[10,21]]]],[[21,12],13],[[21,12],13],[[23,12],13],[[23,12],13],[-1,-1,[]],[24,21],[-1,-1,[]],[24,23],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[20,[-2]]],[[4,[10,23]]],[],25],[-1,[[4,[[26,[5]],23]]],[]],[-1,2,[]],[21,[[14,[27]]]],[23,[[14,[27]]]],[-1,28,[]],[-1,28,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[[6,[5]]]]],2],[[[20,[-1]],[6,[5]]],[[4,[10,21]]],22],[-1,-1,[]],[[[20,[-1]]],[[4,[16,21]]],22],[[[20,[-1]]],[[4,[17,21]]],22],[[[20,[-1]]],[[4,[18,21]]],22],[[[20,[-1]]],[[4,[19,21]]],22],[[[20,[-1]],2],[[4,[[26,[5]],21]]],22],[[[20,[-1]]],[[4,[16,21]]],22],[[[20,[-1]]],[[4,[17,21]]],22],[[[20,[-1]]],[[4,[18,21]]],22],[[[20,[-1]]],[[4,[19,21]]],22],[[[20,[-1]]],[[4,[29,21]]],22],[[[20,[-1]]],[[4,[30,21]]],22],[[[20,[[6,[5]]]],2],[[4,[[6,[5]],21]]]],[[[20,[-1]]],[[4,[5,21]]],22],[[[20,[[6,[5]]]]],11],[[],2],[[],2],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[[[20,[-1]]],-1,[]],[-1,[[20,[-1]]],[]],[[[20,[[31,[-1]]]]],2,[]],[[[20,[-1]],16],[[4,[10,23]]],25],[[[20,[-1]],17],[[4,[10,23]]],25],[[[20,[-1]],18],[[4,[10,23]]],25],[[[20,[-1]],19],[[4,[10,23]]],25],[[[20,[-1]],[6,[5]]],[[4,[10,23]]],25],[[[20,[-1]],16],[[4,[10,23]]],25],[[[20,[-1]],17],[[4,[10,23]]],25],[[[20,[-1]],18],[[4,[10,23]]],25],[[[20,[-1]],19],[[4,[10,23]]],25],[[[20,[-1]],5],[[4,[10,23]]],25],[[[20,[-1]],[26,[5]]],[[4,[2,21]]],22],[[[20,[[31,[-1]]]],2],10,[]],[[[20,[[6,[5]]]],2],10],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,15,[]],[[],2],[[],2],[[],2],[[],2],[[],2]],"c":[],"p":[[3,"Decoder",3],[15,"usize"],[4,"DecodeError",3],[4,"Result",190],[15,"u8"],[15,"slice"],[3,"Box",191],[3,"Encoder",3],[4,"Tag",3],[15,"tuple"],[15,"bool"],[3,"Formatter",192],[6,"Result",192],[4,"Option",193],[3,"TypeId",194],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"Codec",139],[4,"ReadError",95],[8,"Read",195],[4,"WriteError",95],[3,"Error",196],[8,"Write",195],[3,"Vec",197],[8,"Error",198],[3,"String",199],[3,"NonZeroU32",200],[3,"NonZeroU64",200],[3,"Cursor",201],[13,"TypeMismatch",90],[13,"StreamTooSmall",90],[13,"StreamPending",90],[8,"Deserialize",95],[8,"DeserializeFromSlice",95],[8,"Serialize",95]]},\
"chain_storage":{"doc":"Block storage crate.","t":"NDNNNNDNNNEENNNNNNDNDNMAMAMMMMMAMMMMAMMMAMMMMAMADLLLLLMLLLLLLLLMLLLLMLMLLLLMLLLLDNNNEMLLFMLLLLMFFMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLFLFFMMLALLLLLLMMRRRRRRNNNNNNNNEENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENDNMMLLLLLLLLLLLLFLLLLLLLMMLLLLLLMMMMDLMMLLMLLLLLLLLLLLLLLLLLLMLLLLDDHLLLLMLLLLLMLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLNNDENLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLL","n":["BlockAlreadyPresent","BlockInfo","BlockInfo","BlockInfoDeserialize","BlockInfoSerialize","BlockNotFound","BlockStore","BranchNotFound","CannotIterate","ChainLength","ConsistencyFailure","Error","Inconsistent","MissingParent","MissingParentBlock","MissingPermanentBlock","Open","PermanentBackendError","StorageIterator","TaggedBlock","Value","VolatileBackendError","_db","block_info","block_info","block_store","blocks","blocks_tree","branches_tips_tree","chain_length","chain_length_index_tree","error","id","id_length","info_tree","inner","iterator","parent_id","parent_ref_count","permanent","permanent_store","root_id","state","tags_ref_count","tags_tree","test_utils","to","value","BlockInfo","add_parent_ref","add_tag_ref","borrow","borrow_mut","chain_length","chain_length","clone","clone_into","deref","deref_mut","deserialize","drop","from","id","id","init","into","new","parent_id","parent_id","parent_ref_count","parent_ref_count","ref_count","remove_parent_ref","remove_tag_ref","serialize","tags_ref_count","to_owned","try_from","try_into","type_id","BlockStore","Done","HitPermanentStore","NextTip","RemoveTipResult","_db","block_exists","block_exists_volatile","block_id_from_chain_length_index","blocks_tree","borrow","borrow","borrow_mut","borrow_mut","branches_tips_tree","build_chain_length_index","build_chain_length_index_prefix","chain_length_index_tree","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","file","find_lowest_common_ancestor","flush_to_permanent_store","from","from","get_block","get_block_info","get_block_info_volatile","get_blocks_by_chain_length","get_nth_ancestor","get_tag","get_tips_ids","id_length","info_tree","init","init","into","into","is_ancestor","iter","memory","new","permanent","prune_branch","put_block","put_block_impl","put_tag","put_tag_impl","remove_tip_impl","root_id","tags_tree","to_owned","tree","try_from","try_from","try_into","try_into","type_id","type_id","id","id","BLOCKS","BRANCHES_TIPS","CHAIN_LENGTH_INDEX","INFO","PERMANENT_STORE_BLOCKS","TAGS","BlockAlreadyPresent","BlockInfo","BlockInfoDeserialize","BlockInfoSerialize","BlockNotFound","BranchNotFound","CannotIterate","ChainLength","ConsistencyFailure","Error","Inconsistent","MissingParent","MissingParentBlock","MissingPermanentBlock","Open","PermanentBackendError","TaggedBlock","VolatileBackendError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","IteratorState","Permanent","StorageIterator","Volatile","block_info","blocks","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","gather_blocks_ids","init","init","into","into","into_iter","new","next","state","to","try_from","try_from","try_into","try_into","type_id","type_id","current_length","ids","iter","stop_at_length","PermanentStore","block_id_index","block_id_index","blocks","borrow","borrow_mut","chain_length_index","clone","clone_into","contains_key","deref","deref_mut","drop","file","from","get_block","get_block_by_chain_length","get_block_info","get_block_info_by_chain_length","get_chain_length","init","into","iter","memory","put_blocks","root_id","to_owned","try_from","try_into","type_id","Block","BlockId","GLOBAL_ID_COUNTER","borrow","borrow","borrow_mut","borrow_mut","chain_length","clone","clone","clone_into","clone_into","cmp","data","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","generate","genesis","hash","id","init","init","into","into","make_child","parent","partial_cmp","serialize","serialize","serialize_as_value","serialize_as_value","serialize_as_vec","serialize_as_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Owned","Permanent","Value","ValueImpl","Volatile","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from","hash","init","init","inner","into","into","owned","permanent","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","volatile"],"q":[[0,"chain_storage"],[48,"chain_storage::block_info"],[80,"chain_storage::block_store"],[145,"chain_storage::block_store::RemoveTipResult"],[147,"chain_storage::block_store::tree"],[153,"chain_storage::error"],[204,"chain_storage::iterator"],[238,"chain_storage::iterator::IteratorState"],[242,"chain_storage::permanent_store"],[272,"chain_storage::test_utils"],[325,"chain_storage::value"],[370,"core::result"],[371,"std::io"],[372,"core::convert"],[373,"alloc::vec"],[374,"core::any"],[375,"std::path"],[376,"core::convert"],[377,"core::option"],[378,"core::iter::traits::iterator"],[379,"sled::db"],[380,"sled::transaction"],[381,"sled::transaction"],[382,"core::fmt"],[383,"sled::transaction"],[384,"core::error"],[385,"alloc::string"],[386,"sled::tree"],[387,"data_pile::seqno_iter"],[388,"core::cmp"],[389,"alloc::boxed"],[390,"core::hash"],[391,"std::io::error"],[392,"std::io"],[393,"sled::ivec"]],"d":["","A structure that holds the information about a blocks, …","","","","","","","","","","","","","","","","","Iterator over blocks. Starts from n-th ancestor of the …","","Wrapper for data held by the database. This wrapper holds …","","","","","","","","","","","","","","","","","","","","","","","","","Utilities for testing the storage.","","","A structure that holds the information about a blocks, …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Check if the block with the given id exists.","","","","","","","","","","","","","","","","","","","","Create a new storage handle. The path must not exist or …","Find the lowest common ancestor block (commonly referred …","Move all blocks up to the provided block ID to the …","Returns the argument unchanged.","Returns the argument unchanged.","Get a block from the storage.","Get the <code>BlockInfo</code> instance for the requested block.","","Get multiple serialized blocks from the given chain …","Get n-th (n = <code>distance</code>) ancestor of the block, identified …","Get the block ID for the given tag.","Get identifier of all branches tips.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determine whether block identified by <code>ancestor_id</code> is an …","Iterate to the given block starting from the block at the …","Open a temporary in-memory database.","","","Prune a branch with the given tip id from the storage.","Write a block to the store. The parent of the block must …","","Add a tag for a given block. The block id can be later …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Iterator over blocks. Starts from n-th ancestor of the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Used to generate block ids","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Wrapper for data held by the database. This wrapper holds …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[5,0,29,5,5,5,0,5,5,29,0,0,5,5,29,29,5,5,0,29,0,5,13,0,36,0,36,13,13,1,13,0,1,13,13,8,0,1,1,13,0,13,36,1,13,0,36,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,26,26,26,0,13,13,13,0,13,26,13,26,13,13,0,0,13,13,13,26,13,26,13,26,13,13,13,13,26,13,13,13,13,13,13,13,13,13,13,26,13,26,13,13,13,13,13,13,13,13,0,13,0,0,13,13,13,0,26,13,26,13,26,13,48,49,0,0,0,0,0,0,5,29,5,5,5,5,5,29,0,0,5,5,29,29,5,5,29,5,5,29,5,29,5,29,5,29,5,29,5,5,29,29,5,5,5,5,5,29,5,29,5,29,5,5,29,5,29,5,29,5,29,0,50,0,50,36,36,36,50,36,50,36,50,36,50,36,50,36,50,0,36,50,36,50,36,36,36,36,36,36,50,36,50,36,50,51,52,51,51,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,38,39,38,39,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,39,39,38,38,39,38,39,38,39,38,39,38,39,38,39,38,39,45,45,0,0,45,8,45,8,45,8,45,8,45,8,45,8,45,8,45,8,8,8,45,8,45,8,8,8,8,45,8,8,45,8,8,8,45,8,45,8,45,8,45,8,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[1,3],0,[1,1],[[-1,-2],2,[],[]],[4,-1,[]],[4,-1,[]],[[-1,4,-2],[[6,[1,5]]],7,[[9,[8]]]],[4,2],[-1,-1,[]],[1,8],0,[[],4],[-1,-2,[],[]],[[-1,-2,3],1,[[9,[8]]],[[9,[8]]]],[1,8],0,[1,3],0,[1,3],[1,2],[1,2],[1,[[6,[[11,[10]],5]]]],0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,[[13,[14,[10]]],[[6,[15,5]]]],[[13,[14,[10]]],[[6,[15,5]]]],[[[14,[10]]],[[14,[10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[3,[14,[10]]],[[11,[10]]]],[3,[[11,[10]]]],0,[13,13],[[-1,-2],2,[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[[-1,-2],[[6,[13,5]]],[[17,[16]]],[[9,[8]],18]],[[13,[14,[10]],[14,[10]]],[[6,[[19,[1]],5]]]],[[13,[14,[10]],4],[[6,[4,5]]]],[-1,-1,[]],[-1,-1,[]],[[13,[14,[10]]],[[6,[8,5]]]],[[13,[14,[10]]],[[6,[1,5]]]],[[13,[14,[10]]],[[6,[1,5]]]],[[13,3],[[6,[[11,[8]],5]]]],[[13,[14,[10]],3],[[6,[1,5]]]],[[13,20],[[6,[[19,[8]],5]]]],[13,[[6,[[11,[8]],5]]]],0,0,[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[[13,[14,[10]],[14,[10]]],[[6,[[19,[3]],5]]]],[[13,[14,[10]],3],[[6,[[0,[21]],5]]]],[-1,[[6,[13,5]]],[[9,[8]],18]],[[-1,22,23],[[6,[13,5]]],[[9,[8]]]],0,[[13,[14,[10]]],[[6,[2,5]]]],[[13,[14,[10]],1],[[6,[2,5]]]],[[24,24,24,24,[14,[10]],1,[14,[10]],4,15],[[6,[2,[25,[5]]]]]],[[13,20,[14,[10]]],[[6,[2,5]]]],[[24,24,24,20,[14,[10]],4],[[6,[2,[25,[5]]]]]],[[24,24,24,24,24,[14,[10]],[14,[10]],4],[[6,[26,[25,[5]]]]]],0,0,[-1,-2,[],[]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[[5,27],28],[[5,27],28],[[29,27],28],[[29,27],28],[30,5],[29,5],[[[31,[5]]],5],[-1,-1,[]],[32,5],[-1,-1,[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[19,[33]]]],[-1,34,[]],[-1,34,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[[8,35,3],[[6,[[11,[8]],5]]]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,3,23,35,35],[[6,[36,5]]]],[36,19],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,0,0,[23,35],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[23,23],[[-1,-2],2,[],[]],[[23,[14,[10]]],[[6,[15,5]]]],[4,-1,[]],[4,-1,[]],[4,2],[[-1,35,-2],[[6,[23,5]]],[[17,[16]]],[[9,[8]]]],[-1,-1,[]],[[23,[14,[10]]],[[6,[[19,[8]],5]]]],[[23,3],[[19,[8]]]],[[23,[14,[10]]],[[6,[[19,[1]],5]]]],[[23,3],[[6,[[19,[1]],5]]]],[[23,[14,[10]]],[[6,[[19,[3]],5]]]],[[],4],[-1,-2,[],[]],[[23,3],[[6,[37,5]]]],[[35,-1],[[6,[23,5]]],[[9,[8]]]],[[23,3,[14,[[14,[10]]]],[14,[[14,[10]]]]],[[6,[2,5]]]],0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[38,38],[39,39],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[38,38],40],0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[[38,38],15],[[39,39],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[38,27],28],[[39,27],28],[-1,-1,[]],[-1,-1,[]],[[],38],[[[19,[[41,[[14,[10]]]]]]],39],[[38,-1],2,42],0,[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[[39,[19,[[41,[[14,[10]]]]]]],39],0,[[38,38],[[19,[40]]]],[[38,-1],[[6,[2,43]]],44],[[39,-1],[[6,[2,43]]],44],[38,8],[39,8],[38,[[11,[10]]]],[39,[[11,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,0,0,[8,[[14,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[8,8],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[[8,8],15],[[-1,-2],15,[],[]],[[45,27],28],[[8,27],28],[-1,-1,[]],[-1,-1,[]],[[[11,[10]]],8],[[[41,[[14,[10]]]]],8],[[8,-1],2,42],[[],4],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[[14,[10]]]]],8],[46,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[47,8]],"c":[],"p":[[3,"BlockInfo",48],[15,"tuple"],[15,"u32"],[15,"usize"],[4,"Error",153],[4,"Result",370],[8,"Read",371],[3,"Value",325],[8,"Into",372],[15,"u8"],[3,"Vec",373],[3,"TypeId",374],[3,"BlockStore",80],[15,"slice"],[15,"bool"],[3,"Path",375],[8,"AsRef",372],[8,"Clone",376],[4,"Option",377],[15,"str"],[8,"Iterator",378],[3,"Db",379],[3,"PermanentStore",242],[3,"TransactionalTree",380],[4,"ConflictableTransactionError",380],[4,"RemoveTipResult",80],[3,"Formatter",381],[6,"Result",381],[4,"ConsistencyFailure",153],[4,"Error",382],[4,"TransactionError",380],[4,"Error",383],[8,"Error",384],[3,"String",385],[3,"Tree",386],[3,"StorageIterator",204],[3,"SeqNoIter",387],[3,"BlockId",272],[3,"Block",272],[4,"Ordering",388],[3,"Box",389],[8,"Hasher",390],[3,"Error",391],[8,"Write",371],[4,"ValueImpl",325],[3,"SharedMmap",392],[3,"IVec",393],[13,"NextTip",145],[13,"HitPermanentStore",145],[4,"IteratorState",204],[13,"Permanent",238],[13,"Volatile",238]]},\
"chain_time":{"doc":"Chain-time","t":"CCCCCCCCCCAAAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLFLLLMLMLMLLLLLLLLLLLLLLLLLFLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLMMLMLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLL","n":["DurationSeconds","Epoch","EpochPosition","EpochSlotOffset","Slot","SlotDuration","TimeEra","TimeFrame","TimeOffsetSeconds","Timeline","era","timeframe","timeline","units","Epoch","EpochPosition","EpochSlotOffset","TimeEra","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","epoch","epoch_start","epoch_start","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_era_to_slot","from_slot_to_era","into","into","into","into","new","pack_time_era","partial_cmp","partial_cmp","partial_cmp","slot","slot_start","slot_start","slots_per_epoch","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unpack_time_era","vzip","vzip","vzip","vzip","Slot","SlotAndDuration","SlotDuration","TimeFrame","arbitrary","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_frame","clone","clone","clone","clone_into","clone_into","clone_into","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_secs","into","into","into","into","new","offset","partial_cmp","slot","slot0","slot_at","slot_at_precise","slot_duration","slot_duration","slot_offset","slot_to_systemtime","timeline","to_duration","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","TimeOffset","TimeOffsetSeconds","Timeline","advance","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","differential","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","new","partial_cmp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DurationSeconds","arbitrary_with","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"chain_time"],[14,"chain_time::era"],[102,"chain_time::timeframe"],[174,"chain_time::timeline"],[225,"chain_time::units"],[245,"quickcheck::arbitrary"],[246,"core::cmp"],[247,"core::fmt"],[248,"core::fmt"],[249,"chain_ser::packer"],[250,"chain_ser::deser"],[251,"core::result"],[252,"std::io"],[253,"alloc::string"],[254,"core::any"],[255,"chain_ser::deser"],[256,"core::time"],[257,"core::hash"]],"d":["","","","","","","","","","","Split timeframe in eras","Timeframes","Timeline","Units used for time calculations","Epoch number","Epoch position: this is an epoch and a slot offset","Slot Offset <em>in</em> a given epoch","Describe a new era, which start at epoch_start and is …","","","","","","","","","","","","","","","","","","","","","","","","","","","The base epoch","retrieve the epoch start during a given Era","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert an epoch position into a flat slot","Try to return the epoch/inner-epoch-slot associated.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set a new era to start on slot_start at epoch_start for a …","Write a <code>TimeEra</code> into a <code>Codec</code>","","","","The offset from <code>epoch</code>","retrieve the slot start of an epoch during a given Era","","retrieve the number of slots in an epoch during a given Era","","","","","","","","","","","","","","","","","","","Read a <code>TimeEra</code> from a <code>Codec</code>","","","","","Identify a slot in a <em>specific</em> timeframe","Identify a slot in a specific timeframe and a leftover …","Duration of a slot","Time frame which is a timeline that is configured to be …","","","","","","","","","","","Change time frame at a specific slot","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>SlotDuration</code> from a number of seconds","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new time frame with a specific slot size","The offset of a specific time frame in","","The slot","The current slot offset","Get the slot associated with the given system time.","Given a system time get the slot and associated duration …","Returns slot duration value.","","","Get the system time associated with a slot on a specific …","","Convert this <code>SlotDuration</code> to a <code>core::time::Duration</code>","","","","","","","","","","","","","","","","","","","","Represent an offset in time units in the timeline","Represent an offset in seconds in the timeline","Represent a timeline with a specific start point rooted on …","Advance a timeline, and create a new timeline starting at …","","","","","","","","","","","","","","","Return the duration since the creation of the timeline","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new timeline, which is a time starting point","","","","","","","","","","","","","","","","","Represent a Duration where the maximum precision is in the …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,4,1,5,3,4,1,5,3,4,1,5,3,4,1,5,3,4,1,5,3,4,1,5,3,3,4,4,1,5,3,4,1,5,3,4,1,5,3,3,4,1,5,3,4,4,4,1,5,3,4,4,0,1,5,3,3,4,4,4,4,1,5,3,4,3,1,5,3,4,1,5,3,4,1,5,3,4,0,1,5,3,4,0,0,0,0,11,11,11,24,22,23,11,24,22,23,22,11,22,23,11,22,23,11,11,23,11,23,11,24,22,23,11,11,24,22,23,23,11,24,22,23,22,24,11,24,22,22,22,22,22,22,22,22,23,11,22,23,11,24,22,23,11,24,22,23,11,24,22,23,11,24,22,23,0,0,0,26,30,26,29,30,26,29,30,26,29,30,26,29,30,30,26,30,30,26,29,30,26,26,29,29,30,30,30,26,29,30,26,30,26,29,30,26,29,30,26,29,30,26,29,30,26,29,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,2],[-1,3,2],[-1,4,2],[[]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[5,5],[3,3],[4,4],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[1,1],7],[[5,5],7],[[3,3],7],0,[4,1],0,[[1,1],8],[[5,5],8],[[3,3],8],[[4,4],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[1,9],10],[[5,9],10],[[3,9],10],[[3,9],10],[[4,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,3],11],[[4,11],[[12,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[11,1,13],4],[[4,[14,[-1]]],[[16,[6,15]]],17],[[1,1],[[12,[7]]]],[[5,5],[[12,[7]]]],[[3,3],[[12,[7]]]],0,[4,11],0,[4,13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,18,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[[14,[-1]]],[[16,[4,20]]],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,11,2],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,11,23],22],[11,11],[22,22],[23,23],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[11,11],7],[[11,11],8],[[23,23],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[11,9],10],[[24,9],10],[[22,9],10],[[23,9],10],[-1,-1,[]],[25,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,23],22],0,[[11,11],[[12,[7]]]],0,[22,11],[[22,27],[[12,[11]]]],[[22,27],[[12,[24]]]],[22,25],0,0,[[22,11],[[12,[27]]]],0,[23,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[26,28],26],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[29,29],[30,30],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[30,30],7],[[26,27],[[12,[29]]]],[[30,30],8],[[-1,-2],8,[],[]],[[26,9],10],[[29,9],10],[[30,9],10],[-1,-1,[]],[27,26],[-1,-1,[]],[30,29],[31,30],[-1,-1,[]],[[30,-1],6,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,26],[[30,30],[[12,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],6,[],[]],[[31,31],7],[[31,31],8],[[-1,-2],8,[],[]],[[31,9],10],[-1,-1,[]],[25,31],[[31,-1],6,32],[-1,-2,[],[]],[[31,31],[[12,[7]]]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Epoch",14],[8,"Gen",245],[3,"EpochPosition",14],[3,"TimeEra",14],[3,"EpochSlotOffset",14],[15,"tuple"],[4,"Ordering",246],[15,"bool"],[3,"Formatter",247],[6,"Result",247],[3,"Slot",102],[4,"Option",248],[15,"u32"],[3,"Codec",249],[4,"WriteError",250],[4,"Result",251],[8,"Write",252],[3,"String",253],[3,"TypeId",254],[4,"ReadError",250],[8,"BufRead",252],[3,"TimeFrame",102],[3,"SlotDuration",102],[3,"SlotAndDuration",102],[15,"u64"],[3,"Timeline",174],[3,"SystemTime",255],[3,"Duration",256],[3,"TimeOffset",174],[3,"TimeOffsetSeconds",174],[3,"DurationSeconds",225],[8,"Hasher",257]]},\
"chain_vote":{"doc":"","t":"DDRDCCCGCCCGCCDDGMMAAMMMAMMMMMAAMMMAMMSDDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCAAADDLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLSSSDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCAAAAACASDLLLLLLMLLLLLLLLLLLLLLLLLLCASDLLLLLLLLLLLLLLMLLLLLLLLLLCASDLLLLLLLLLLLLLLLLLLLLLLMLLCAADLLLLLLLLLLLLLLSDLLMLLLLLLLLLLLLLLMLLLLLLLLCAAADLLLLLLLLLLLLLLLDSSDDMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLFLLMLLLLLLLLLLLLLLLLLLLMLLLMMDDLMLLLLMLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLFFLMLLLLLLLLLLLLLMLMDDGGDDDDGLLFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMLLLMLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMOAADRDFMLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLSDGDDDDSGDSDDDDLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLL","n":["Ballot","BallotVerificationError","CURVE_HRP","Ciphertext","Crs","ElectionPublicKey","EncryptedTally","EncryptedVote","MemberCommunicationKey","MemberPublicKey","MemberState","ProofOfCorrectVote","Tally","TallyDecryptShare","TallyOptimizationTable","UnitVectorInitializationError","Vote","baby_step_size","buf","committee","cryptography","ds","e1","e2","encrypted_vote","fingerprint","giant_step","ibas","ith","len","macros","math","r","size","table","tally","vote","zwvs","BYTES_LEN","ElectionPublicKey","MemberCommunicationKey","MemberCommunicationPublicKey","MemberPublicKey","MemberSecretKey","MemberState","apubs","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encrypt_and_prove_vote","encrypt_vote","encrypted","eq","eq","equivalent","equivalent","es","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_participants","init","init","init","init","init","init","into","into","into","into","into","into","member_secret_key","new","new","owner_index","prove_encrypted_vote","public_key","secret_key","sk","to_bech32_str","to_bech32_str","to_bech32_str","to_bech32_str","to_bech32_str","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public","to_public","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bech32_str","try_from_bech32_str","try_from_bech32_str","try_from_bech32_str","try_from_bech32_str","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Ciphertext","commitment","elgamal","zkps","CommitmentKey","Open","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit_bool","commit_with_open","commit_with_random","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from","h","init","init","into","into","m","r","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","BYTES_LEN","BYTES_LEN","BYTES_LEN","Ciphertext","HybridCiphertext","Keypair","PublicKey","SecretKey","SymmetricKey","add","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt_point","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","e1","e1","e2","e2","elements","encrypt","encrypt_point","encrypt_point_return_r","encrypt_point_with_r","encrypt_return_r","encrypt_with_r","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_secretkey","generate","generate","group_repr","hash","hybrid_decrypt","hybrid_encrypt","init","init","init","init","init","init","initialise_encryption","into","into","into","into","into","into","mul","mul","mul","mul","mul","new","pk","process","public_key","recover_symmetric_key","secret_key","sk","sub","sub","sub","sub","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","zero","CorrectElGamalDecrZkp","CorrectHybridDecrKeyZkp","CorrectShareGenerationZkp","UnitVectorZkp","correct_decryption","correct_hybrid_decryption_key","correct_share_generation","dl_equality","unit_vector","CorrectElGamalDecrZkp","zkp","PROOF_SIZE","Zkp","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dleq_proof","drop","eq","equivalent","fmt","from","from_bytes","generate","hash","init","into","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","CorrectHybridDecrKeyZkp","zkp","PROOF_SIZE","Zkp","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","from_bytes","generate","hash","hybrid_dec_key_proof","init","into","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","CorrectShareGenerationZkp","zkp","PROOF_SIZE","Zkp","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","from_bytes","generate","hash","init","into","to_bytes","to_owned","try_from","try_into","type_id","verify","vshare_proof","vzip","write_to_bytes","DleqZkp","challenge_context","zkp","ChallengeContext","borrow","borrow_mut","deref","deref_mut","drop","first_challenge","from","init","into","new","try_from","try_into","type_id","vzip","BYTES_LEN","Zkp","borrow","borrow_mut","challenge","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","from_bytes","generate","hash","init","into","response","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","UnitVectorZkp","challenge_context","messages","zkp","ChallengeContext","borrow","borrow_mut","deref","deref_mut","drop","first_challenge","from","init","into","new","second_challenge","try_from","try_into","type_id","vzip","Announcement","BYTES_LEN","BYTES_LEN","BlindingRandomness","ResponseRandomness","a","alpha","b","beta","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delta","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_bytes","from_bytes","gamma","gen_and_commit","gen_response","generate_polys","hash","hash","i","init","init","init","into","into","into","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","v","vzip","vzip","vzip","w","z","ZPowExp","Zkp","announcments_group_elements","bit_size","borrow","borrow","borrow_mut","borrow_mut","challenge_x","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","ds","ds","eq","equivalent","fmt","from","from","from_buffer","from_parts","generate","hash","ibas","ibas","index","init","init","into","into","into_iter","len","next","par_bridge","powers_z_encs","powers_z_encs_iter","r","r","response_randomness_group_elements","size_hint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_statements","vzip","vzip","z","zwvs","zwvs","Ballot","BallotVerificationError","EncryptedVote","ProofOfCorrectVote","Ptp","UnitVector","UnitVectorInitializationError","UnitVectorIter","Vote","as_ref","base32_len","binrep","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","check_base32","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","ds","elements","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","fingerprint","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","ibas","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","is_jth","iter","iter","ith","ith","ith","jth","len","len","len","new","new","next","orig_len","par_bridge","r","size","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_vote_and_proof","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vote","vote","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","zwvs","std_ops_gen","babystep","polynomial","BabyStepsTable","DEFAULT_BALANCE","MaxLogExceeded","baby_step_giant_step","baby_step_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","generate","generate_with_balance","giant_step","init","init","into","into","table","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Polynomial","add","at_zero","borrow","borrow_mut","clone","clone_into","degree","deref","deref_mut","drop","elements","evaluate","fmt","from","from_vec","get_coefficient_at","get_coefficients","init","into","mul","new","random","set2","to_owned","to_string","try_from","try_into","type_id","vzip","BYTES_LEN","Base64DecodeError","Crs","DecryptionError","ElectionFingerprint","EncryptedTally","EncryptedTallyError","MAX_STAKE_BYTES_LEN","OpeningVoteKey","ProvenDecryptShare","SIZE","Tally","TallyDecryptShare","TallyError","ValidatedTally","add","add","batch_decrypt","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_len","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt","decrypt_shares","decrypt_tally","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elements","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_base_64","from_bytes","from_bytes","from_bytes","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","is_empty","len","max_stake","max_stake","new","options","partial_decrypt","pi","r","r","r1","to_base64","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trivial_convert","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_partial_decryptions","verify","verify","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"chain_vote"],[38,"chain_vote::committee"],[179,"chain_vote::cryptography"],[183,"chain_vote::cryptography::commitment"],[225,"chain_vote::cryptography::elgamal"],[375,"chain_vote::cryptography::zkps"],[384,"chain_vote::cryptography::zkps::correct_decryption"],[386,"chain_vote::cryptography::zkps::correct_decryption::zkp"],[413,"chain_vote::cryptography::zkps::correct_hybrid_decryption_key"],[415,"chain_vote::cryptography::zkps::correct_hybrid_decryption_key::zkp"],[442,"chain_vote::cryptography::zkps::correct_share_generation"],[444,"chain_vote::cryptography::zkps::correct_share_generation::zkp"],[471,"chain_vote::cryptography::zkps::dl_equality"],[474,"chain_vote::cryptography::zkps::dl_equality::challenge_context"],[489,"chain_vote::cryptography::zkps::dl_equality::zkp"],[517,"chain_vote::cryptography::zkps::unit_vector"],[521,"chain_vote::cryptography::zkps::unit_vector::challenge_context"],[537,"chain_vote::cryptography::zkps::unit_vector::messages"],[609,"chain_vote::cryptography::zkps::unit_vector::zkp"],[668,"chain_vote::encrypted_vote"],[820,"chain_vote::macros"],[821,"chain_vote::math"],[823,"chain_vote::math::babystep"],[861,"chain_vote::math::polynomial"],[891,"chain_vote::tally"],[1111,"rand_core"],[1112,"rand_core"],[1113,"alloc::vec"],[1114,"core::fmt"],[1115,"core::fmt"],[1116,"alloc::string"],[1117,"core::result"],[1118,"chain_crypto::bech32"],[1119,"core::any"],[1120,"chain_crypto::ec::ristretto255"],[1121,"cryptoxide::chacha20"],[1122,"core::iter::traits::iterator"],[1123,"chain_ser::packer"],[1124,"chain_ser::deser"],[1125,"rayon::iter::par_bridge"],[1126,"core::clone"],[1127,"bech32"],[1128,"alloc::alloc"],[1129,"core::iter::traits::collect"],[1130,"core::slice::iter"],[1131,"core::ops::function"],[1132,"bech32"],[1133,"core::convert"],[1134,"core::error"],[1135,"alloc::boxed"]],"d":["Submitted ballot, which contains an always verified vote. …","","","ElGamal ciphertext. Given a message M represented by a …","","","","Encrypted vote is a unit vector where each element is an …","","","","A proof of correct vote encryption consists of a unit …","","","Holds precomputed baby steps for the baby-stap giant-step …","","A vote is represented by a standard basis unit vector of …","","","","","Encryption to the polynomial coefficients used in the proof","","","","","","Commitment to the proof randomness and bits of binary …","","","Internal macros","","Final response","","","","","Response related to the randomness committed in <code>ibas</code>","","The overall committee public key used for everyone to …","","Committee Member communication public key (with other …","Committee member election public key","Committee member election secret key","Initial state generated by a Member, which include keys …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take a vote and encrypt it + provide a proof of correct …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Create an election public key from all the participants of …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Generate a new member state from random, where the number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of the different encryption/decryption …","","Pedersen Commitment key","","","","","","","","","","Return a commitment, and the used randomness, <code>r</code>, where the …","Return a commitment of a boolean value, and the used …","Return a commitment with the given opening, <code>o</code>","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Verify that a given <code>commitment</code> opens to <code>o</code> under commitment …","","","","","Size of the byte representation of <code>Ciphertext</code>.","ElGamal ciphertext. Given a message M represented by a …","Hybrid Ciphertext (which can be found in section 2.1.3 of …","ElGamal keypair","ElGamal public key. pk = sk * G, where sk is the <code>SecretKey</code> …","ElGamal secret key","The hybrid encryption scheme uses a group element as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrypt ElGamal <code>Ciphertext</code> = (<code>cipher</code>.e1, <code>cipher</code>.e2), by …","","","","","","","","","","","","","","","","","","","","","","","","Given a <code>message</code> represented as a <code>Scalar</code>, return a …","Given a <code>message</code> represented as a group element, return a …","","","Given a <code>message</code> represented as a <code>Scalar</code>, return a …","Given a <code>message</code> represented as a <code>Scalar</code>, and some value …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate a keypair for encryption","","","Decrypt a message using hybrid decryption","Given a <code>message</code> passed as bytes, encrypt it using hybrid …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Generate a new random symmetric key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the zero ciphertext","","","","","","","","","","","Non-interactive Zero Knowledge proof for correct ElGamal …","","Proof of correct decryption.","","","","","","","","","","","","Returns the argument unchanged.","","Generate a decryption zero knowledge proof.","","","Calls <code>U::from(self)</code>.","","","","","","Verify a decryption zero knowledge proof","","","","Non-interactive Zero Knowledge proof for correct Hybrid …","","Proof of correct decryption.","","","","","","","","","","","Returns the argument unchanged.","","Generate a decryption zero knowledge proof.","","","","Calls <code>U::from(self)</code>.","","","","","","Verify a decryption zero knowledge proof","","","","Non-interactive Zero Knowledge proof for correct decryption","","Proof of correct decryption.","","","","","","","","","","","Returns the argument unchanged.","","Generate a valid share zero knowledge proof.","","","Calls <code>U::from(self)</code>.","","","","","","Verify a valid share zero knowledge proof","","","","","","Non-interactive Zero Knowledge proof of Discrete Logarithm …","Challenge context for Discrete Logarithm Equality proof. …","","","","","","Generation of the <code>first_challenge</code>. This challenge is …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Initialise the challenge context, by including the common …","","","","","","Proof of correct decryption. Note: if the goal is to …","","","","","","","","","","","","Returns the argument unchanged.","","Generate a DLEQ proof","","","Calls <code>U::from(self)</code>.","","","","","","","Verify a DLEQ proof","","","","","Structures used by the prover of <code>unit_vector_zkp</code> during …","Implementation of the Unit Vector ZK argument presented by …","Challenge context for the Unit Vector Zero Knowledge …","","","","","","Generation of the <code>first_challenge</code>. This challenge is …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Initialise the challenge context, by including the common …","Generation of the <code>second_challenge</code>. This challenge is …","","","","","First announcement, formed by I, B, A group elements. …","","","Randomness generated in the proof, used for the hiding …","Response encoding the bits of the private vector, and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Given a commitment key <code>ck</code> and an <code>index</code>, compute random <code>beta</code>…","Generate a <code>ResponseRandomness</code> from the <code>BlindingRandomness</code>, …","Generate the polynomials used in Step 5, of the proof …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Provides an iterator over the encryptions of the product …","","Return announcement commitments group elements","","","","","","","","","","","","","","","Return an iterator of the encryptions of the polynomial …","Encryption to the polynomial coefficients used in the proof","","","","Returns the argument unchanged.","Returns the argument unchanged.","Try to generate a <code>Proof</code> from a buffer","Constructs the proof structure from constituent parts.","Generate a unit vector proof. In this proof, a prover …","","Return an iterator of the announcement commitments","Commitment to the proof randomness and bits of binary …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the length of the size of the witness vector","","","","","Return R","Final response","Return an iterator of the response related to the …","","","","","","","","","Verify a unit vector proof. The verifier checks that the …","Final verification of the proof, that we compute in a …","","","","Return an iterator of the response related to the …","Response related to the randomness committed in <code>ibas</code>","Submitted ballot, which contains an always verified vote. …","","Encrypted vote is a unit vector where each element is an …","A proof of correct vote encryption consists of a unit …","To achieve logarithmic communication complexity in the …","Represents a Unit vector which size is @size and the @ith …","","","A vote is represented by a standard basis unit vector of …","","","","Returns the bit size of the extended vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encryption to the polynomial coefficients used in the proof","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Commitment to the proof randomness and bits of binary …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterates over the elements","","","","","","Returns the size of the extended vector","","","Generates a new <code>Ptp</code> by extending the received <code>vec</code> to the …","Create a new <code>ith</code> unit vector, with <code>size</code> greater than zero, …","","","","Final response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Response related to the randomness committed in <code>ibas</code>","","Implementation of baby steps giant step algorithm to solve …","","Holds precomputed baby steps for the baby-stap giant-step …","","","Solve the discrete log on ECC using baby step giant step …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate the table with asymmetrical steps, optimized for …","Generate the table with the given balance. Balance is used …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A polynomial of specific degree d","","Evaluate the polynomial at x=0","","","","","Return the degree of the polynomial","","","","","get the value of a polynomial a0 + a1 * x^1 + a2 * x^2 + …","","Returns the argument unchanged.","Initialize from a vector, where each element represent the …","","","","Calls <code>U::from(self)</code>.","","Generate a new 0 polynomial of specific degree","generate a new polynomial of specific degree","","","","","","","","","Base64 decode error","Submitted vote, which constists of an <code>EncryptedVote</code> and a `","","An encrypted vote is only valid for specific values of the …","<code>EncryptedTally</code> is formed by one ciphertext per existing …","","","Secret key for opening vote","<code>ProvenDecryptShare</code> consists of a group element (the …","","<code>Tally</code> represents the decrypted tally, with one <code>u64</code> result …","<code>TallyDecryptShare</code> contains one decryption share per …","","<code>ValidatedTally</code> can only be constructed by valid …","Add a submitted <code>ballot</code>, with a specific <code>weight</code> to the …","","Decrypt a slice of <code>ValidatedTally</code>s, using a single …","","","","","","","","","","","","","","","","","","","","","Size of the byte representation for a tally decrypt share …","","","","","","","","","","","","","","","Given the <code>decrypt_shares</code> of all committee members, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate <code>EncryptedTally</code> type from base64 representation","Tries to generate an <code>EncryptedTally</code> out of an array of …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Initialise a new tally with N different options. The …","Number of voting options this tally decrypt share …","Given a single committee member’s <code>secret_key</code>, returns a …","","","","","Returns base64 representation of <code>EncryptedTally</code>","Returns a byte array with every ciphertext in the …","","","","","","","","","","","","","Convert from <code>ValidatedTally</code> to a <code>Tally</code> when there are no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given the members <code>pks</code>, and their corresponding …","Given the member’s public key <code>MemberPublicKey</code>, and the …","Verifies that <code>TallyDecryptShare</code> are correct decryptions of …","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,11,0,0,12,33,33,0,62,72,12,10,11,0,0,12,10,72,0,62,12,2,0,0,0,0,0,0,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,5,5,6,2,5,2,5,6,2,5,1,2,2,3,4,4,5,6,1,2,3,4,5,5,1,2,3,4,5,6,1,2,3,4,5,6,6,3,6,6,5,6,6,6,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,6,1,3,1,2,3,4,5,6,1,2,3,4,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,0,0,0,0,0,0,30,31,30,31,30,31,30,31,30,30,30,30,30,31,30,31,30,31,30,30,31,30,30,31,30,31,31,31,30,30,31,30,31,30,31,30,31,30,30,31,20,34,33,0,0,0,0,0,0,33,33,33,33,38,20,34,35,33,36,38,20,34,35,33,36,20,34,35,33,36,20,34,35,33,36,34,38,20,34,35,33,36,38,20,34,35,33,36,38,20,34,35,33,36,33,36,33,36,33,20,20,20,20,20,20,20,33,20,33,20,33,38,20,34,35,33,36,20,34,33,36,35,34,35,38,33,34,20,38,20,34,35,33,36,38,38,20,34,35,33,36,33,33,33,33,33,38,20,38,35,34,35,34,33,33,33,33,20,33,36,20,34,35,33,36,38,20,34,35,33,36,38,20,34,35,33,36,38,20,34,35,33,36,38,20,34,35,33,36,33,0,0,0,0,0,0,0,0,0,0,0,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,48,0,0,47,49,47,49,49,47,48,49,47,48,47,48,47,48,49,49,47,48,49,47,48,49,47,48,47,48,47,48,47,48,49,47,48,47,48,49,49,49,0,47,48,47,49,47,48,49,47,48,47,48,47,48,49,47,48,49,47,48,49,47,48,48,49,47,48,48,48,0,0,50,55,55,50,55,50,55,50,50,55,50,55,50,55,50,50,50,50,50,50,55,50,50,50,50,50,50,50,55,55,50,55,50,55,50,55,55,0,0,50,50,50,55,50,55,50,55,50,55,50,50,50,55,50,55,50,50,0,0,0,0,0,0,0,0,0,58,58,0,58,62,63,58,64,54,65,62,63,58,64,54,65,11,58,62,63,58,64,54,65,62,63,58,64,54,65,62,63,58,64,54,65,62,63,58,64,54,65,62,63,58,64,54,65,12,58,58,58,62,63,64,62,63,64,62,62,62,63,63,64,64,54,54,62,63,58,64,54,65,12,62,63,58,64,54,65,62,63,58,64,54,65,65,54,58,54,54,10,54,54,58,54,11,58,54,65,58,65,12,10,54,62,63,58,64,54,65,63,64,54,62,63,58,64,54,65,62,62,63,58,64,54,65,62,63,58,64,54,65,62,62,62,63,58,64,54,65,58,12,0,0,0,0,0,0,0,72,72,73,72,73,72,72,72,73,72,73,72,73,72,73,72,73,72,72,72,72,73,72,73,72,72,72,73,72,73,72,73,72,73,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,68,0,0,0,0,0,0,76,0,0,82,0,0,0,0,76,76,0,68,76,81,79,82,77,78,83,84,85,68,76,81,79,82,77,78,83,84,85,81,68,76,81,79,82,77,68,76,81,79,82,77,79,79,79,68,76,81,79,82,77,78,83,84,85,68,76,81,79,82,77,78,83,84,85,68,76,81,79,82,77,78,83,84,85,81,68,76,81,79,82,77,68,76,81,79,82,77,76,68,76,81,79,82,77,78,78,83,83,84,84,85,85,68,68,76,81,79,82,77,78,83,84,85,76,76,81,82,81,79,82,68,76,81,79,82,77,78,83,84,85,68,76,81,79,82,77,78,83,84,85,79,79,76,79,76,81,76,82,76,79,82,76,76,81,82,68,76,81,79,82,77,78,83,84,85,0,68,76,81,79,82,77,78,83,84,85,68,76,81,79,82,77,78,83,84,85,68,76,81,79,82,77,78,83,84,85,76,81,77,77,68,76,81,79,82,77,78,83,84,85],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[[5,-1,9,10],[[7,[11,12]]],[13,14]],[[5,-1,10],[[7,[11,[16,[15]]]]],[13,14]],0,[[2,2],17],[[5,5],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,[[2,18],19],[[5,18],19],[-1,-1,[]],[-1,-1,[]],[20,2],[-1,-1,[]],[-1,-1,[]],[20,4],[-1,-1,[]],[-1,-1,[]],[[[22,[21]]],[[23,[1]]]],[[[22,[21]]],[[23,[2]]]],[[[22,[21]]],[[23,[3]]]],[[[22,[21]]],[[23,[4]]]],[[[22,[21]]],[[23,[5]]]],[[[22,[2]]],5],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[-1,3,[13,14]],[[-1,8,9,[22,[4]],8],6,[13,14]],0,[[5,-1,9,10,11,[22,[15]]],12,[13,14]],[6,2],[6,1],0,[1,24],[2,24],[3,24],[4,24],[5,24],[1,[[25,[21]]]],[2,[[16,[21]]]],[3,[[25,[21]]]],[4,[[16,[21]]]],[5,[[16,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,4],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[27,[[26,[1,28]]]],[27,[[26,[2,28]]]],[27,[[26,[3,28]]]],[27,[[26,[4,28]]]],[27,[[26,[5,28]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[31,31],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[30,15,-1],[[7,[32,15]]],[14,13]],[[30,17,-1],[[7,[32,15]]],[14,13]],[[30,31],32],[[30,15,15],32],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[-1,-1,[]],[9,30],[-1,-1,[]],0,[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[30,[[25,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[[30,32,31],17],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[33,33],33],[[33,33]],[[33,33]],[[33,33]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[34,34],[35,35],[33,33],[36,36],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[34,33],32],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],0,0,0,0,[33,[[7,[32,32]]]],[[20,15,-1],33,[13,14]],[[20,32,-1],33,[13,14]],[[20,32,-1],[[7,[33,15]]],[13,14]],[[20,32,15],33],[[20,15,-1],[[7,[33,15]]],[13,14]],[[20,15,15],33],[[20,20],17],[[33,33],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[20,18],19],[[33,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[22,[21]]],[[23,[20]]]],[[[22,[21]]],[[23,[34]]]],[[[22,[21]]],[[23,[33]]]],[[[22,[21]]],[[23,[36]]]],[34,35],[-1,34,[13,14]],[-1,35,[13,14]],0,[[33,-1],7,37],[[34,36],[[16,[21]]]],[[20,[22,[21]],-1],36,[13,14]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[38,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[33,40]],[[33,15]],[[33,15]],[[33,15]],[[33,15]],[-1,38,[13,14]],0,[[38,[22,[21]]],[[16,[21]]]],0,[[34,36],38],0,0,[[33,33]],[[33,33],33],[[33,33]],[[33,33]],[20,[[16,[21]]]],[33,[[16,[21]]]],[36,[[16,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],0,[8,7],[[41,41],17],[[-1,-2],17,[],[]],[[41,18],19],[-1,-1,[]],[[[22,[21]]],[[23,[41]]]],[[33,20,32,34,-1],41,[14,13]],[[41,-1],7,37],[[],8],[-1,-2,[],[]],[41,[[25,[21]]]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[[41,33,32,20],17],[-1,-2,[],[]],[[41,[22,[21]]],7],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,7],[[42,42],17],[[-1,-2],17,[],[]],[[42,18],19],[-1,-1,[]],[[[22,[21]]],[[23,[42]]]],[[36,20,38,34,-1],42,[14,13]],[[42,-1],7,37],0,[[],8],[-1,-2,[],[]],[42,[[25,[21]]]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[[42,36,38,20],17],[-1,-2,[],[]],[[42,[22,[21]]],7],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,7],[[43,43],17],[[-1,-2],17,[],[]],[[43,18],19],[-1,-1,[]],[[[22,[21]]],[[23,[43]]]],[[33,20,32,34,-1],43,[14,13]],[[43,-1],7,37],[[],8],[-1,-2,[],[]],[43,[[25,[21]]]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[[43,33,32,20],17],0,[-1,-2,[],[]],[[43,[22,[21]]],7],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[8,-1,[]],[8,-1,[]],[8,7],[[44,32,32],15],[-1,-1,[]],[[],8],[-1,-2,[],[]],[[32,32,32,32],44],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[45,45],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,7],[[45,45],17],[[-1,-2],17,[],[]],[[45,18],19],[-1,-1,[]],[[[22,[21]]],[[23,[45]]]],[[32,32,32,32,15,-1],45,[14,13]],[[45,-1],7,37],[[],8],[-1,-2,[],[]],0,[45,[[25,[21]]]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[[45,32,32,32,32],17],[-1,-2,[],[]],[[45,[22,[21]]],7],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[8,-1,[]],[8,-1,[]],[8,7],[[46,[22,[47]]],15],[-1,-1,[]],[[],8],[-1,-2,[],[]],[[30,20,[22,[33]]],46],[[46,[22,[33]]],15],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[48,48],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[8,7],[[47,47],17],[[48,48],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[47,18],19],[[48,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[22,[21]]],[[23,[47]]]],[[[22,[21]]],[[23,[48]]]],0,[[30,17,-1],[[7,[49,47]]],[13,14]],[[49,15,17],48],[[[22,[17]],8,[22,[49]]],[[16,[[16,[15]]]]]],[[47,-1],7,37],[[48,-1],7,37],0,[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,[[16,[21]]]],[48,[[16,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[50,[[16,[32]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[50,50],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[50,[[0,[51]]]],0,[[50,50],17],[[-1,-2],17,[],[]],[[50,18],19],[-1,-1,[]],[-1,-1,[]],[[[52,[[22,[21]]]]],[[26,[50,53]]]],[[[16,[47]],[16,[33]],[16,[48]],15],50],[[-1,9,20,54,[22,[15]],[22,[33]]],50,[13,14]],[[50,-1],7,37],[50,[[0,[51]]]],0,0,[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,8],[55,[[23,[15]]]],[-1,[[56,[-2]]],[],[]],[[[22,[48]],15,8,57],15],[[[22,[48]],15,57],55],[50,15],0,[50,[[16,[15]]]],[55,[[7,[8,[23,[8]]]]]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[[50,9,20,[22,[33]]],17],[[50,20,30,[58,[33]],15,15],17],[-1,-2,[],[]],[-1,-2,[],[]],0,[50,[[0,[51]]]],0,0,0,0,0,0,0,0,0,0,[[[58,[-1]]],[[22,[-1]]],[]],[-1,8,[]],[[8,57],[[16,[17]]]],[[[58,[-1]]],8,59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[26,[[16,[60,61]]]]],[]],[62,62],[63,63],[[[58,[-1]]],[[58,[-1]]],59],[64,64],[54,54],[65,65],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],0,0,[-1,-2,[],[[67,[66]]]],[-1,-2,[],[[67,[66]]]],[[62,62],17],[[63,63],17],[[64,64],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[62,68],0,[[62,18],19],[[63,18],19],[[63,18],19],[[64,18],19],[[64,18],19],[[54,18],19],[[54,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[54,8],17],[[[58,[-1]]],[[69,[-1]]],59],[54,65],[54,8],0,0,[[54,8],15],[[[58,[-1]]],8,59],[54,8],0,[[[16,[-1]],-2],[[58,[-1]]],[59,59],70],[[8,8],[[26,[54,64]]]],[65,23],0,[-1,[[56,[-2]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[[11,12,9,5],[[26,[62,63]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[62,11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[26,[7]]],[],71],0,0,0,0,0,0,0,[[[16,[32]],40,72],[[26,[[16,[40]],73]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[[72,18],19],[[73,18],19],[-1,-1,[]],[-1,-1,[]],[74,72],[[74,74],72],0,[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[75,75]],[75,15],[-1,-2,[],[]],[-1,-2,[],[]],[75,75],[[-1,-2],7,[],[]],[75,8],[8,-1,[]],[8,-1,[]],[8,7],0,[[75,15],15],[[75,18],19],[-1,-1,[]],[[[16,[15]]],75],[[75,8],15],[75,[[69,[15]]]],[[],8],[-1,-2,[],[]],[[75,75]],[8,75],[[-1,8],75,[13,14]],[[75,15,15],75],[-1,-2,[],[]],[-1,24,[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[76,62,40],7],[[76,76]],[-1,[[26,[[16,[77]],78]]],[[80,[[22,[79]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[68,68],[76,76],[81,81],[79,79],[82,82],[77,77],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[79,[[16,[32]]]],0,[[79,72],[[26,[77,78]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],0,[[68,68],17],[[76,76],17],[[81,81],17],[[79,79],17],[[82,82],17],[[77,77],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,[[68,18],19],[[76,18],19],[[81,18],19],[[79,18],19],[[82,18],19],[[77,18],19],[[78,18],19],[[78,18],19],[[83,18],19],[[83,18],19],[[84,18],19],[[84,18],19],[[85,18],19],[[85,18],19],[-1,-1,[]],[[[7,[5,9]]],68],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,[[26,[76,[87,[86]]]]]],[[[22,[21]]],[[23,[76]]]],[[[22,[21]]],[[23,[81]]]],[[[22,[21]]],[[23,[82]]]],[[81,-1],7,37],[[79,-1],7,37],[[82,-1],7,37],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,17],[79,8],0,0,[[8,5,9],76],[81,8],[[76,-1,88],81,[13,14]],0,0,0,0,[76,24],[76,[[16,[21]]]],[81,[[16,[21]]]],[82,[[25,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[79,77],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[[76,[22,[2]],[22,[81]]],[[26,[79,83]]]],[[81,76,2],17],[[77,76,[22,[2]],[22,[81]]],17],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"MemberSecretKey",38],[3,"MemberPublicKey",38],[3,"MemberCommunicationKey",38],[3,"MemberCommunicationPublicKey",38],[3,"ElectionPublicKey",38],[3,"MemberState",38],[15,"tuple"],[15,"usize"],[6,"Crs",891],[6,"Vote",668],[6,"EncryptedVote",668],[6,"ProofOfCorrectVote",668],[8,"RngCore",1111],[8,"CryptoRng",1111],[3,"Scalar",1112],[3,"Vec",1113],[15,"bool"],[3,"Formatter",1114],[6,"Result",1114],[3,"PublicKey",225],[15,"u8"],[15,"slice"],[4,"Option",1115],[3,"String",1116],[15,"array"],[4,"Result",1117],[15,"str"],[4,"Error",1118],[3,"TypeId",1119],[3,"CommitmentKey",183],[3,"Open",183],[3,"GroupElement",1112],[3,"Ciphertext",225],[3,"SecretKey",225],[3,"Keypair",225],[3,"HybridCiphertext",225],[8,"Hasher",1120],[3,"SymmetricKey",225],[6,"ChaCha20",1121],[15,"u64"],[3,"Zkp",386],[3,"Zkp",415],[3,"Zkp",444],[3,"ChallengeContext",474],[3,"Zkp",489],[3,"ChallengeContext",521],[3,"Announcement",537],[3,"ResponseRandomness",537],[3,"BlindingRandomness",537],[3,"Zkp",609],[8,"Iterator",1122],[3,"Codec",1123],[4,"ReadError",1124],[3,"UnitVector",668],[3,"ZPowExp",609],[3,"IterBridge",1125],[15,"u32"],[3,"Ptp",668],[8,"Clone",1126],[3,"u5",1127],[3,"Global",1128],[3,"Ballot",668],[3,"BallotVerificationError",668],[3,"UnitVectorInitializationError",668],[3,"UnitVectorIter",668],[15,"char"],[8,"FromIterator",1129],[3,"ElectionFingerprint",891],[3,"Iter",1130],[8,"Fn",1131],[8,"WriteBase32",1127],[3,"BabyStepsTable",823],[3,"MaxLogExceeded",823],[3,"NonZeroU64",1132],[3,"Polynomial",861],[3,"EncryptedTally",891],[3,"Tally",891],[3,"TallyError",891],[3,"ValidatedTally",891],[8,"AsRef",1133],[3,"TallyDecryptShare",891],[3,"ProvenDecryptShare",891],[3,"DecryptionError",891],[3,"EncryptedTallyError",891],[3,"Base64DecodeError",891],[8,"Error",1134],[3,"Box",1135],[6,"OpeningVoteKey",891]]},\
"event_db":{"doc":"Catalyst Election Database crate","t":"SSSSRRSSSSSSDSSSSSSSSSSSSSSSSSSSSSSLLLLALLAFLLLLLLLLLLLLLLLMAALLLLLALENNNNLLLLLLLLLLLLLLLLLMMIAAAAIAKKAAAIKKKIKIKKIKKIKKIKAIKIKAAAAAAAAADDDDDDDMMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLDDDDDDDNEDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMLLLLLLLLLLMMLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLDDSDSDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMLMLMMLMLLLLLLMLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLMDDDMLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLMMMMMMMMMLLLLLLLLLLLLLLLNNNNNNNNNEDDDDENNELLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAADDLLLLMMLLLLMLLLLLLLLMMMMLLMMMMLLLLLLLLLLDDDDMLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLMMMMMMMMMMMLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLMMMLLLLDLLLLLLLLMMMLLLLLLDLLLLLLLLMMLLMLLLLDLLMMMMMMLLLLLLMMLLMLLLLDLLLLLLLLLMMMLLLLL","n":["BALLOTS_VOTE_OPTIONS_PER_EVENT_QUERY","BALLOTS_VOTE_OPTIONS_PER_OBJECTIVE_QUERY","BALLOT_VOTE_OPTIONS_QUERY","BALLOT_VOTE_PLANS_QUERY","DATABASE_SCHEMA_VERSION","DATABASE_URL_ENVVAR","DELEGATIONS_BY_EVENT_QUERY","DELEGATOR_SNAPSHOT_INFO_BY_EVENT_QUERY","DELEGATOR_SNAPSHOT_INFO_BY_LAST_EVENT_QUERY","EVENTS_QUERY","EVENT_GOALS_QUERY","EVENT_QUERY","EventDB","FUND_CHALLENGES_QUERY","FUND_GOALS_QUERY","FUND_GROUPS_QUERY","FUND_QUERY","FUND_VOTE_PLANS_QUERY","OBJECTIVES_QUERY","PROPOSALS_QUERY","PROPOSAL_QUERY","RATINGS_PER_REVIEW_QUERY","REVIEWS_QUERY","REVIEW_TYPES_QUERY","SEARCH_EVENTS_QUERY","SEARCH_OBJECTIVES_QUERY","SEARCH_PROPOSALS_QUERY","TOTAL_BY_EVENT_VOTING_QUERY","TOTAL_BY_LAST_EVENT_VOTING_QUERY","TOTAL_POWER_BY_EVENT_QUERY","TOTAL_POWER_BY_LAST_EVENT_QUERY","VOTER_BY_EVENT_QUERY","VOTER_BY_LAST_EVENT_QUERY","VOTER_DELEGATORS_LIST_QUERY","VOTING_GROPUS_QEURY","borrow","borrow_mut","build_order_by_clause","build_where_clause","config_table","contruct_count_query","contruct_query","error","establish_connection","from","get_ballot","get_delegator","get_event","get_event_ballots","get_events","get_fund","get_objective_ballots","get_objectives","get_proposal","get_proposals","get_review_types","get_reviews","get_voter","into","pool","queries","schema_check","schema_version_check","search","try_from","try_into","type_id","types","vzip","Error","MismatchedSchema","NotFound","Unknown","VarError","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","expected","was","EventDbQueries","event","registration","search","vit_ss","EventQueries","ballot","get_event","get_events","objective","proposal","review","BallotQueries","get_ballot","get_event_ballots","get_objective_ballots","ObjectiveQueries","get_objectives","ProposalQueries","get_proposal","get_proposals","ReviewQueries","get_review_types","get_reviews","RegistrationQueries","get_delegator","get_voter","SearchQueries","search","fund","VitSSFundQueries","get_fund","SchemaVersion","schema_version_check","ballot","event","objective","proposal","registration","review","search","vit_ss","voting_status","Ballot","BallotType","GroupVotePlans","ObjectiveBallots","ObjectiveChoices","ProposalBallot","VotePlan","ballot","ballot_type","ballots","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","chain_voteplan_id","choices","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","encryption_key","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","group","into","into","into","into","into","into","into","objective_id","proposal_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voteplans","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Event","EventDetails","EventGoal","EventId","EventRegistration","EventSchedule","EventSummary","ThresholdStakedADA","VotingPowerAlgorithm","VotingPowerSettings","alg","assessment_qa_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadline","details","ends","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalize_proposals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","goals","id","idx","insight_sharing","into","into","into","into","into","into","into","into","into","is_final","max_pct","min_ada","name","name","proposal_assessment","proposal_submission","purpose","refine_proposals","reg_checked","registration","schedule","starts","summary","taken","tallying","tallying_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting","voting_power","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Objective","ObjectiveDetails","ObjectiveId","ObjectiveSummary","ObjectiveType","RewardDefintion","VoterGroup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","currency","deleted","description","description","details","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","group","groups","hash","id","id","into","into","into","into","into","into","into","objective_type","reward","summary","supplemental","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Proposal","ProposalDetails","ProposalId","ProposalSummary","ProposerDetails","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deleted","details","email","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","files","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","funds","id","into","into","into","into","into","name","payment_key","proposer","summary","summary","supplemental","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","url","vzip","vzip","vzip","vzip","vzip","Delegation","Delegator","MAINNET_PREFIX","RewardAddress","TESTNET_PREFIX","Voter","VoterGroupId","VoterInfo","as_at","as_at","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardano_address_check","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","delegations","delegations_count","delegations_power","delegator_addresses","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","group","into","into","into","into","into","into","is_final","is_final","last_updated","last_updated","new","raw_power","reward_address","reward_address","reward_address","reward_payable","reward_payable","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_power","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","voter_info","voting_group","voting_key","voting_power","voting_power_saturation","vzip","vzip","vzip","vzip","vzip","vzip","weight","AdvisorReview","Rating","ReviewType","assessor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","description","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","group","id","into","into","into","map","max","min","name","note","note","ratings","review_type","score","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Author","Description","Events","Events","Funds","Objectives","Objectives","Proposals","Proposals","SearchColumn","SearchConstraint","SearchOrderBy","SearchQuery","SearchResult","SearchTable","Title","Type","ValueResults","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","descending","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","order_by","results","search","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","challenge","fund","goal","group","vote_plan","Challenge","ChallengeHighlights","borrow","borrow","borrow_mut","borrow_mut","challenge_type","challenge_url","clone","clone","clone_into","clone_into","description","eq","eq","equivalent","equivalent","fmt","fmt","from","from","fund_id","highlights","id","internal_id","into","into","proposers_rewards","rewards_total","sponsor","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Fund","FundNextInfo","FundStageDates","FundWithNext","assessment_qa_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_vote_plans","challenges","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finalize_proposals_start","fmt","fmt","fmt","fmt","from","from","from","from","fund","fund_end_time","fund_goal","fund_name","fund_name","fund_start_time","goals","groups","id","id","insight_sharing_start","into","into","into","into","next","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","stage_dates","stage_dates","survey_url","tallying_end","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","Goal","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","fund_id","goal_name","id","into","to_owned","try_from","try_into","type_id","vzip","Group","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","fund_id","group_id","into","to_owned","token_identifier","try_from","try_into","type_id","vzip","Voteplan","borrow","borrow_mut","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone_into","eq","equivalent","fmt","from","fund_id","id","into","to_owned","token_identifier","try_from","try_into","type_id","vzip","VotingStatus","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","into","objective_id","open","settings","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"event_db"],[69,"event_db::error"],[91,"event_db::error::Error"],[93,"event_db::queries"],[98,"event_db::queries::event"],[105,"event_db::queries::event::ballot"],[109,"event_db::queries::event::objective"],[111,"event_db::queries::event::proposal"],[114,"event_db::queries::event::review"],[117,"event_db::queries::registration"],[120,"event_db::queries::search"],[122,"event_db::queries::vit_ss"],[123,"event_db::queries::vit_ss::fund"],[125,"event_db::schema_check"],[127,"event_db::types"],[136,"event_db::types::ballot"],[252,"event_db::types::event"],[417,"event_db::types::objective"],[539,"event_db::types::proposal"],[629,"event_db::types::registration"],[746,"event_db::types::review"],[804,"event_db::types::search"],[930,"event_db::types::vit_ss"],[935,"event_db::types::vit_ss::challenge"],[976,"event_db::types::vit_ss::fund"],[1067,"event_db::types::vit_ss::goal"],[1085,"event_db::types::vit_ss::group"],[1103,"event_db::types::vit_ss::vote_plan"],[1127,"event_db::types::voting_status"],[1145,"alloc::string"],[1146,"core::option"],[1147,"core::result"],[1148,"core::future::future"],[1149,"alloc::boxed"],[1150,"core::pin"],[1151,"core::any"],[1152,"core::fmt"],[1153,"core::fmt"],[1154,"bb8::api"],[1155,"std::env"],[1156,"core::error"],[1157,"core::hash"]],"d":["","","","","Database version this crate matches. Must equal the last …","Database URL Environment Variable name. eg: “…","","","","","","","Connection to the Election Database","","","","","","","","","","","","","","","","","","","","","","","","","","","Operations on the config table","","","","Establish a connection to the database, and check the …","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","Check if the schema is up-to-date.","","","","","","","","Event database errors","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait to check the schema version of a connection.","Check the schema version. return the current schema …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[8,8,8,8,0,0,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,8,8,8,8,8,0,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,76,76,0,0,0,0,0,0,0,77,77,0,0,0,0,78,78,78,0,79,0,80,80,0,81,81,0,82,82,0,83,0,0,84,0,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,28,32,26,27,28,29,30,31,32,26,27,28,29,30,31,32,28,28,30,26,27,28,29,30,31,32,26,27,28,29,30,31,32,28,26,27,28,29,30,31,32,26,27,28,29,30,31,32,26,27,28,29,30,31,32,26,27,28,29,30,31,32,28,26,27,28,29,30,31,32,32,31,26,27,28,29,30,31,32,26,27,28,29,30,31,32,26,27,28,29,30,31,32,26,27,28,29,30,31,32,30,26,27,28,29,30,31,32,0,0,0,0,0,0,0,35,0,0,36,39,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,37,41,34,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,39,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,40,34,38,39,11,34,35,36,37,38,39,40,41,34,36,36,34,38,39,39,37,39,34,40,40,34,41,37,39,39,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,11,34,35,36,37,38,39,40,41,39,40,11,34,35,36,37,38,39,40,41,0,0,0,0,0,0,0,12,42,43,44,45,46,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,44,43,42,43,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,45,46,12,42,43,12,42,43,44,45,46,47,43,46,47,46,43,12,42,43,44,45,46,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,12,42,43,44,45,46,47,44,45,12,42,43,44,45,46,47,0,0,0,0,0,13,49,50,51,52,13,49,50,51,52,13,49,50,51,52,13,49,50,51,52,51,52,49,13,49,50,51,52,13,49,50,51,52,50,13,49,50,51,52,13,49,50,51,52,50,51,13,49,50,51,52,49,49,50,51,52,50,51,13,49,50,51,52,13,49,50,51,52,13,49,50,51,52,13,49,50,51,52,49,50,13,49,50,51,52,0,0,57,0,57,0,0,0,55,58,53,54,55,56,57,58,53,54,55,56,57,58,57,53,54,55,56,57,58,53,54,55,56,57,58,58,54,54,54,53,54,55,56,57,58,53,56,57,58,53,54,55,56,57,58,53,54,55,56,57,58,56,53,54,55,56,57,58,55,58,55,58,57,58,57,57,58,57,57,53,54,55,56,57,58,58,53,54,55,56,57,58,53,54,55,56,57,58,53,54,55,56,57,58,56,55,54,56,54,54,53,54,55,56,57,58,56,0,0,0,61,59,60,61,59,60,61,59,60,61,59,60,61,59,59,60,61,59,60,61,59,60,61,59,60,61,59,59,59,60,61,59,59,59,59,59,60,61,60,60,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,63,63,62,64,63,62,64,62,64,0,0,0,0,0,0,63,63,0,62,63,5,2,6,64,65,62,63,5,2,6,64,65,62,63,5,2,6,64,65,62,63,5,2,6,64,65,5,2,2,62,63,5,2,6,64,65,62,63,5,2,6,64,65,6,62,63,5,2,6,64,65,62,63,5,2,6,64,65,62,63,5,2,6,64,65,6,65,5,6,62,63,5,2,6,64,65,63,65,62,63,5,2,6,64,65,62,63,5,2,6,64,65,62,63,5,2,6,64,65,62,63,5,2,6,64,65,0,0,0,0,0,0,0,66,67,66,67,67,67,66,67,66,67,67,66,67,66,67,66,67,66,67,67,67,67,67,66,67,67,67,66,67,66,67,66,67,66,67,66,67,66,67,0,0,0,0,68,68,69,70,71,68,69,70,71,69,69,68,69,70,71,68,69,70,71,68,69,70,71,68,69,70,71,68,68,69,70,71,68,69,70,71,71,69,69,69,70,69,69,69,69,70,68,68,69,70,71,71,69,69,68,68,68,69,69,68,69,70,69,68,68,69,70,71,68,69,70,71,68,69,70,71,68,69,70,71,68,69,68,68,69,70,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[2]]],4],[[1,[3,[5]]],4],0,[6,4],[6,4],0,[[[7,[1]]],[[10,[8,9]]]],[-1,-1,[]],[[8,11,12,13],[[16,[[15,[14]]]]]],[[8,[7,[11]],4],[[16,[[15,[14]]]]]],[[8,11],[[16,[[15,[14]]]]]],[[8,11],[[16,[[15,[14]]]]]],[[8,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]]],[8,[[16,[[15,[14]]]]]],[[8,11,12],[[16,[[15,[14]]]]]],[[8,11,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]]],[[8,11,12,13],[[16,[[15,[14]]]]]],[[8,11,12,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]]],[[8,11,12,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]]],[[8,11,12,13,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]]],[[8,[7,[11]],4,18],[[16,[[15,[14]]]]]],[-1,-2,[],[]],0,0,0,[8,[[16,[[15,[14]]]]]],[[8,6,18,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],0,[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[9,9],18],[[-1,-2],18,[],[]],[[9,20],21],[[9,20],21],[[[23,[22]]],9],[24,9],[-1,-1,[]],[22,9],[-1,-2,[],[]],[9,[[7,[25]]]],[-1,4,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,11],[[16,[[15,[14]]]]],[]],[[-1,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]],[]],0,0,0,0,[[-1,11,12,13],[[16,[[15,[14]]]]],[]],[[-1,11],[[16,[[15,[14]]]]],[]],[[-1,11,12],[[16,[[15,[14]]]]],[]],0,[[-1,11,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]],[]],0,[[-1,11,12,13],[[16,[[15,[14]]]]],[]],[[-1,11,12,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]],[]],0,[[-1,11,12,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]],[]],[[-1,11,12,13,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]],[]],0,[[-1,[7,[11]],4],[[16,[[15,[14]]]]],[]],[[-1,[7,[11]],4,18],[[16,[[15,[14]]]]],[]],0,[[-1,6,18,[7,[17]],[7,[17]]],[[16,[[15,[14]]]]],[]],0,0,[-1,[[16,[[15,[14]]]]],[]],0,[-1,[[16,[[15,[14]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,[[26,26],18],[[27,27],18],[[28,28],18],[[29,29],18],[[30,30],18],[[31,31],18],[[32,32],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[26,20],21],[[27,20],21],[[28,20],21],[[29,20],21],[[30,20],21],[[31,20],21],[[32,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,11],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,0,0,[[11,11],18],[[34,34],18],[[35,35],18],[[36,36],18],[[37,37],18],[[38,38],18],[[39,39],18],[[40,40],18],[[41,41],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[[11,20],21],[[34,20],21],[[35,20],21],[[36,20],21],[[37,20],21],[[38,20],21],[[39,20],21],[[40,20],21],[[41,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,12],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,0,0,0,0,[[12,12],18],[[42,42],18],[[43,43],18],[[44,44],18],[[45,45],18],[[46,46],18],[[47,47],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[12,20],21],[[42,20],21],[[43,20],21],[[44,20],21],[[45,20],21],[[46,20],21],[[47,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[12,-1],33,48],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[49,49],[50,50],[51,51],[52,52],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,0,0,[[13,13],18],[[49,49],18],[[50,50],18],[[51,51],18],[[52,52],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[[13,20],21],[[49,20],21],[[50,20],21],[[51,20],21],[[52,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,18],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,0,0,0,[[53,53],18],[[54,54],18],[[55,55],18],[[56,56],18],[[57,57],18],[[58,58],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[53,20],21],[[54,20],21],[[55,20],21],[[56,20],21],[[57,20],21],[[58,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[4,57],0,[57,1],0,0,[57,18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[60,60],[61,61],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,[[59,59],18],[[60,60],18],[[61,61],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[59,20],21],[[60,20],21],[[61,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,62],[63,63],[5,5],[2,2],[6,6],[64,64],[65,65],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,0,0,[[62,62],18],[[63,63],18],[[5,5],18],[[2,2],18],[[6,6],18],[[64,64],18],[[65,65],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[[62,20],21],[[63,20],21],[[5,20],21],[[2,20],21],[[6,20],21],[[64,20],21],[[65,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,4],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[66,66],[67,67],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,[[66,66],18],[[67,67],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[66,20],21],[[67,20],21],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[68,68],[69,69],[70,70],[71,71],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[68,68],18],[[69,69],18],[[70,70],18],[[71,71],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,[[68,20],21],[[69,20],21],[[70,20],21],[[71,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[-1,-2],33,[],[]],[[72,72],18],[[-1,-2],18,[],[]],[[72,20],21],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[[-1,-2],33,[],[]],[[73,73],18],[[-1,-2],18,[],[]],[[73,20],21],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[74,74],[[-1,-2],33,[],[]],[[74,74],18],[[-1,-2],18,[],[]],[[74,20],21],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[75,75],[[-1,-2],33,[],[]],[[75,75],18],[[-1,-2],18,[],[]],[[75,20],21],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]]],"c":[],"p":[[15,"str"],[3,"SearchOrderBy",804],[15,"slice"],[3,"String",1145],[3,"SearchConstraint",804],[3,"SearchQuery",804],[4,"Option",1146],[3,"EventDB",0],[4,"Error",69],[4,"Result",1147],[3,"EventId",252],[3,"ObjectiveId",417],[3,"ProposalId",539],[8,"Future",1148],[3,"Box",1149],[3,"Pin",1150],[15,"i64"],[15,"bool"],[3,"TypeId",1151],[3,"Formatter",1152],[6,"Result",1152],[3,"Error",1153],[4,"RunError",1154],[4,"VarError",1155],[8,"Error",1156],[3,"ObjectiveChoices",136],[3,"BallotType",136],[3,"VotePlan",136],[3,"GroupVotePlans",136],[3,"Ballot",136],[3,"ProposalBallot",136],[3,"ObjectiveBallots",136],[15,"tuple"],[3,"EventSummary",252],[4,"VotingPowerAlgorithm",252],[3,"VotingPowerSettings",252],[3,"EventRegistration",252],[3,"EventGoal",252],[3,"EventSchedule",252],[3,"EventDetails",252],[3,"Event",252],[3,"ObjectiveType",417],[3,"ObjectiveSummary",417],[3,"RewardDefintion",417],[3,"VoterGroup",417],[3,"ObjectiveDetails",417],[3,"Objective",417],[8,"Hasher",1157],[3,"ProposerDetails",539],[3,"ProposalDetails",539],[3,"ProposalSummary",539],[3,"Proposal",539],[3,"VoterGroupId",629],[3,"VoterInfo",629],[3,"Voter",629],[3,"Delegation",629],[3,"RewardAddress",629],[3,"Delegator",629],[3,"ReviewType",746],[3,"Rating",746],[3,"AdvisorReview",746],[4,"SearchTable",804],[4,"SearchColumn",804],[4,"ValueResults",804],[3,"SearchResult",804],[3,"ChallengeHighlights",935],[3,"Challenge",935],[3,"FundStageDates",976],[3,"Fund",976],[3,"FundNextInfo",976],[3,"FundWithNext",976],[3,"Goal",1067],[3,"Group",1085],[3,"Voteplan",1103],[3,"VotingStatus",1127],[13,"MismatchedSchema",91],[8,"EventQueries",98],[8,"BallotQueries",105],[8,"ObjectiveQueries",109],[8,"ProposalQueries",111],[8,"ReviewQueries",114],[8,"RegistrationQueries",117],[8,"SearchQueries",120],[8,"VitSSFundQueries",123],[8,"SchemaVersion",125]]},\
"explorer":{"doc":"","t":"ENNNNEENNNNNNNAFLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLFFALLLLLLLLLLLLAFFFALLLLLLLLLLLLLLLLLFAFFFDDNDDDDDDEDDNNDNNDDGDDNDDDEDDDDDDDEDDDLLLLMMMLLLLMMLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMALLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMAALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLALFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLMLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLMLMLMLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMALMLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNDNDNDNDNDNDNDNDNDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNDNNDNDNEDNDENDNEDNDNNNDDNNDNDDDNDNDNNDNDNDNDNDNDNEDNDNDNNDNDNDNLLLLLMLMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMLLLLLMLLLMLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLMLMLMLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNDDEDMMLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLMLLLLLENNNNNNLLLLLLLLLLLLLLLLLGDDDDDEGDNNDDDGDDDDGDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDCDDDDMMLFFFFFFFFMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMLAMMLMMMMAMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLNNDNNNNENNNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLGNEGGDGEDDDDDEDDEGNNNNNNNGNGDGGMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMLMMMMLMMMMMMMMMMMLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLMMMMMMDDGLLLLLLLLLLLLLLLLLMLLMLLLLLLLMLMLMLLLLLLLLLDLLLLLLLLLMLLLLLLLLLLMLLLLLLFFNNNNDENLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLENNNNNNEDEDNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMDDDRRENNNDDMMMMLLMMMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLFLLLLLLLLLLLALLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMFMLMMMMMMMMMMMMMLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLFF","n":["BootstrapError","BootstrapError","Bootstraping","DbError","EmptyStream","Error","GlobalState","IndexerError","LoggingError","Other","Ready","SettingsError","ShuttingDown","UnrecoverableError","api","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","db","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","handle_block","handle_tip","indexer","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","logging","main","process_subscriptions","rest_service","settings","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","filter","graphql","handler","serve","setup_cors","Address","BftLeader","BftLeader","Block","BlockDate","Branch","EContext","Epoch","FeeSettings","Leader","Pool","PoolStakeDistribution","Private","Private","Proposal","Public","Public","Query","Ratio","Schema","Settings","StakeDistribution","StakePool","Subscription","TallyPrivateStatus","TallyPublicStatus","TallyStatus","TaxType","Transaction","TransactionInput","TransactionOutput","Treasury","VotePayloadPrivateStatus","VotePayloadPublicStatus","VotePayloadStatus","VotePlanStatus","VoteProposalStatus","VoteStatus","address","address","address","address","address","address","address","all_stake_pools","all_vote_plans","amount","amount","amount","amount","block","block","block_hashes","blocks","blocks","blocks","blocks","blocks_by_chain_length","blocks_by_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branches","branches","certificate","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","certificates","chain_length","choice","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","coefficient","collect_all_fields","collect_all_fields","collect_all_fields","committee_end","committee_end","config_param","connections","constant","constant","contents","contents","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","data","date","db","delegated_stake","delegated_stake","delegation","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encrypted_vote","encrypted_vote","epoch","epoch","epoch","epoch_stability_depth","error","external_id","extract_context","fees","fetch_explorer_block","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","first_block","fixed","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bech32","from_contents","from_contents","from_epoch_number","from_id","from_id_and_state","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_string_hash","from_string_id","from_valid_hash","from_valid_id","from_valid_id","generic_tally_status","get_blocks","get_branches","get_contents","get_epoch_data","hash","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspection_type_name","introspection_type_name","introspection_type_name","is_confirmed","last_block","leader","max_limit","new_with_data","numerator","options","options","options","options","options","options","options","outputs","payload","payload","payload_type","payload_type","pool","pool","pools","pools","previous_block","proof","proof","proposal_id","proposal_id","proposals","proposals","ratio","registration","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","results","results","results","results","retirement","rewards","rewards","scalars","settings","settings","slot","slot","stake_distribution","stake_pool","state","tally","tally","tip","tip","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_blocks","total_input","total_output","transaction","transactions","transactions_by_address","treasury","treasury","treasury_tax","treasury_tax","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_id","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vote_end","vote_end","vote_plan","vote_plan_from_data","vote_plan_from_id","vote_start","vote_start","votes","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Certificate","EvmMapping","EvmMapping","MintToken","MintToken","OwnerStakeDelegation","OwnerStakeDelegation","PoolRegistration","PoolRegistration","PoolRetirement","PoolRetirement","PoolUpdate","PoolUpdate","StakeDelegation","StakeDelegation","UpdateProposal","UpdateProposal","UpdateVote","UpdateVote","VoteCast","VoteCast","VotePlan","VotePlan","VoteTally","VoteTally","account","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","collect_all_fields","committee_end","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspection_type_name","management_threshold","name","operators","owners","payload_type","pool","pool_id","pool_id","pools","pools","proposal_id","proposal_index","proposals","proposer_id","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","retirement_time","reward_account","rewards","start_validity","start_validity","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","Bft","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","ConfigParam","ConfigParams","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusType","ConsensusTypeEnum","ConsensusVersion","Discrimination","Discrimination","DiscriminationEnum","EpochStabilityDepth","EpochStabilityDepth","FeesInTreasury","FeesInTreasury","GenesisPraos","Halving","HalvingRewardParams","KesUpdateSpeed","KesUpdateSpeed","Linear","LinearFee","LinearFee","LinearRewardParams","Milli","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFees","PoolRewardParticipationCapping","PoolRewardParticipationCapping","Production","ProposalExpiration","ProposalExpiration","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParamsUnion","RewardPot","RewardPot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","Test","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","__create_type_info","__create_type_info","__type_name","__type_name","add_bft_leader","add_bft_leader","add_committee_id","add_committee_id","as_raw_value","as_raw_value","block0_date","block0_date","block_content_max_size","block_content_max_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","clone","clone","clone_into","clone_into","coefficient","coefficient","collect_all_fields","collect_all_fields","config_params","config_params","consensus_type","consensus_type","constant","constant","constant","constant","constant","constant","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_rate","epoch_rate","epoch_rate","epoch_rate","epoch_stability_depth","epoch_stability_depth","epoch_start","epoch_start","epoch_start","epoch_start","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fees_in_treasury","fees_in_treasury","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspection_type_name","introspection_type_name","items","items","kes_update_speed","kes_update_speed","max","max","milli","milli","min","min","parse","parse","per_certificate_fees","per_certificate_fees","per_vote_certificate_fees","per_vote_certificate_fees","proposal_expiration","proposal_expiration","ratio","ratio","ratio","ratio","remove_bft_leader","remove_bft_leader","remove_committee_id","remove_committee_id","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","reward_limit_by_absolute_stake","reward_limit_by_absolute_stake","reward_limit_none","reward_limit_none","reward_params","reward_params","reward_pot","reward_pot","slot_duration","slot_duration","slots_per_epoch","slots_per_epoch","to_owned","to_owned","to_value","to_value","transaction_max_expiry_epochs","transaction_max_expiry_epochs","treasury_add","treasury_add","treasury_params","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConnectionFields","Empty","Inclusive","InclusivePaginationInterval","PageMeta","PaginationInterval","ValidatedPaginationArguments","after","before","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_into","bounds_try_into","compute_interval","compute_range_boundaries","create_type_info","cursors_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","first","from","from","from","from","from","has_next_page","has_previous_page","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last","lower_bound","resolve","resolve_field","total_count","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","upper_bound","vzip","vzip","vzip","vzip","vzip","ApiError","ArgumentError","InternalError","InvalidAddress","InvalidCursor","NotFound","Unimplemented","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","into_request","into_request","to_string","try_from","try_into","type_id","vzip","BlockCount","ChainLength","EpochNumber","ExternalProposalId","IndexCursor","NonZero","PayloadType","PoolCount","PoolId","Private","Public","PublicKey","Slot","TimeOffsetSeconds","TransactionCount","Value","VoteOptionRange","VotePlanCount","VotePlanId","VotePlanStatusCount","VoteStatusCount","Weight","__create_type_info","__type_name","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","decode_cursor","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_cursor","end","end","eq","equivalent","equivalent","equivalent","equivalent","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_resettable","items","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","start","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockchainConfig","Explorer","ExplorerDb","Ref","Settings","StableIndex","State","Tip","address_bech32_prefix","addresses","apply_block","apply_block_to_addresses","apply_block_to_blocks","apply_block_to_chain_lengths","apply_block_to_epochs","apply_block_to_stake_control","apply_block_to_stake_pools","apply_block_to_transactions","apply_block_to_vote_plans","blockchain_config","blocks","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_lengths","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirmed_block_chain_length","consensus_version","db","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","drop","epoch_stability_depth","epochs","error","fees","find_blocks_by_chain_length","find_blocks_by_transaction","from","from","from","from","from","from","from","from_config_params","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_block","get_block_hash_range","get_block_id","get_block_with_branches","get_branch","get_branches","get_epoch","get_stake_pool_blocks","get_stake_pool_data","get_stake_pools","get_tip","get_vote_plan_by_id","get_vote_plans","indexing","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_block_confirmed","longest_chain_tip","multiverse","multiverse","new","persistent_sequence","query_complexity_limit","query_depth_limit","set_tip","stable_store","stake_control","stake_pool_blocks","stake_pool_data","tally","tip_broadcast","tip_subscription","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transactions","transactions_by_address","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_plans","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AncestorNotFound","BlockAlreadyExists","BlockNotFound","BlockNotFound","BootstrapError","CannotApplyBlock","ChainLengthBlockAlreadyExists","ExplorerError","ExplorerTransmuteFail","TallyDecryptionFailure","TransactionAlreadyExists","TxCalculationFailure","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","hash","init","init","into","into","into_request","into_request","into_request","into_request","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Addresses","BftLeader","BlockProducer","Blocks","ChainLengths","EpochData","Epochs","ExplorerAddress","ExplorerBlock","ExplorerBlockBuildingContext","ExplorerInput","ExplorerOutput","ExplorerTransaction","ExplorerVote","ExplorerVotePlan","ExplorerVoteProposal","ExplorerVoteTally","Hamt","New","None","Old","Private","Private","Public","Public","StakePool","StakePool","StakePoolBlocks","StakePoolData","Transactions","VotePlans","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","chain_length","chain_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_end","config_params","date","date","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","first_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","hash","hasher","hasher","hasher","hasher","hasher","hasher","hasher","hasher","hasher","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block","offset_in_block","options","outputs","outputs","parent_hash","payload_type","prev_blocks","prev_transactions","producer","producer","proposal_id","proposals","registration","resolve_from","retirement","root","root","root","root","root","root","root","root","root","tally","to_identifier","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_blocks","total_input","total_output","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vote_end","vote_start","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","encrypted_vote","proof","options","options","results","results","Inner","Multiverse","Ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","gc","get_ref","hash","init","init","inner","insert","into","into","into_request","into_request","into_request","into_request","multiverse","new","state","tips","tips","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PersistentSequence","append","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","elements","fmt","from","from_ref","get","init","into","into_request","into_request","is_empty","len","len","new","to_owned","try_from","try_into","type_id","vzip","compute_private_tally","compute_public_tally","CannotDeserialize","DbError","HashError","IOError","Indexer","IndexerError","UrlError","apply_block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","new","set_tip","source","tip_candidate","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","File","File","FormatNotSupported","InitSubscriber","InstallOpenTelemetryPipeLine","Json","LogFormat","LogGuard","LogOutput","LogSettings","Plain","Stderr","Stdout","_nonblocking_worker_guard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_ref","from_ref","from_ref","from_str","from_str","init","init","init","init","init","init_log","init_subscriber","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","level","output","serialize","serialize","source","to_owned","to_owned","to_owned","to_string","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","cause","path","specified","CommandLine","Config","ConfigLogSettings","DEFAULT_QUERY_COMPLEXITY_LIMIT","DEFAULT_QUERY_DEPTH_LIMIT","Error","Format","IO","InvalidHost","LOG_FILTER_LEVEL_POSSIBLE_VALUES","Settings","__private_field","address_bech32_prefix","address_bech32_prefix","address_bech32_prefix","augment_args","augment_args_for_update","binding_address","binding_address","binding_address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","config","cors","cors","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_uri_string","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","filter_level_opt_serde","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","group_id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","level","load","log_format","log_level","log_level_parse","log_output","log_settings","log_settings","log_trace_collector_endpoint","logs","node","node","node","output","query_complexity_limit","query_complexity_limit","query_complexity_limit","query_depth_limit","query_depth_limit","query_depth_limit","serialize","source","tls","tls","to_owned","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize"],"q":[[0,"explorer"],[84,"explorer::api"],[89,"explorer::api::graphql"],[947,"explorer::api::graphql::certificates"],[1271,"explorer::api::graphql::config_param"],[2107,"explorer::api::graphql::connections"],[2204,"explorer::api::graphql::error"],[2228,"explorer::api::graphql::scalars"],[2682,"explorer::db"],[2875,"explorer::db::error"],[2932,"explorer::db::indexing"],[3277,"explorer::db::indexing::ExplorerVote"],[3279,"explorer::db::indexing::ExplorerVoteTally"],[3283,"explorer::db::multiverse"],[3328,"explorer::db::persistent_sequence"],[3356,"explorer::db::tally"],[3358,"explorer::indexer"],[3411,"explorer::logging"],[3548,"explorer::logging::Error"],[3551,"explorer::settings"],[3714,"explorer::settings::filter_level_opt_serde"],[3716,"chain_network::grpc::watch::client"],[3717,"core::result"],[3718,"core::fmt"],[3719,"core::fmt"],[3720,"chain_network::data::block::header"],[3721,"tonic::request"],[3722,"tonic::request"],[3723,"chain_network::grpc::watch::client"],[3724,"core::option"],[3725,"alloc::string"],[3726,"core::any"],[3727,"warp::filter"],[3728,"core::clone"],[3729,"async_graphql::types::empty_mutation"],[3730,"async_graphql::schema"],[3731,"async_graphql::request"],[3732,"warp::reply"],[3733,"core::convert"],[3734,"core::net::socket_addr"],[3735,"jormungandr_lib::interfaces::config::node"],[3736,"core::marker"],[3737,"core::marker"],[3738,"jormungandr_lib::interfaces::config::node"],[3739,"async_graphql"],[3740,"async_graphql::error"],[3741,"async_graphql::types::connection"],[3742,"async_graphql::types::connection::connection_type"],[3743,"alloc::vec"],[3744,"async_graphql::context"],[3745,"async_graphql::error"],[3746,"alloc::sync"],[3747,"async_graphql_value"],[3748,"alloc::boxed"],[3749,"core::pin"],[3750,"chain_impl_mockchain::key"],[3751,"chain_impl_mockchain::date"],[3752,"chain_impl_mockchain::date"],[3753,"chain_impl_mockchain::chaintypes"],[3754,"chain_impl_mockchain::certificate::pool"],[3755,"chain_impl_mockchain::vote::payload"],[3756,"alloc::borrow"],[3757,"async_graphql_parser::types::executable"],[3758,"async_graphql_parser::pos"],[3759,"futures_core::stream"],[3760,"chain_impl_mockchain::certificate::delegation"],[3761,"chain_impl_mockchain::certificate::pool"],[3762,"chain_impl_mockchain::certificate::vote_cast"],[3763,"chain_impl_mockchain::certificate::update_proposal"],[3764,"chain_impl_mockchain::certificate::update_vote"],[3765,"chain_impl_mockchain::certificate::evm_mapping"],[3766,"chain_impl_mockchain::certificate"],[3767,"core::num::nonzero"],[3768,"core::num::nonzero"],[3769,"chain_addr"],[3770,"chain_impl_mockchain::chaintypes"],[3771,"chain_impl_mockchain::fee"],[3772,"chain_impl_mockchain::fee"],[3773,"chain_impl_mockchain::rewards"],[3774,"chain_impl_mockchain::config"],[3775,"chain_impl_mockchain::config"],[3776,"async_graphql::resolver_utils::enum"],[3777,"async_graphql::error"],[3778,"chain_crypto::algorithms::ed25519"],[3779,"chain_crypto::key"],[3780,"chain_time::timeline"],[3781,"chain_impl_mockchain::certificate::vote_plan"],[3782,"core::borrow"],[3783,"chain_impl_mockchain::vote::choice"],[3784,"chain_impl_mockchain::chaintypes"],[3785,"chain_impl_mockchain::block"],[3786,"chain_impl_mockchain::stake::controlled"],[3787,"chain_impl_mockchain::transaction::transaction"],[3788,"std::collections::hash::map"],[3789,"core::hash"],[3790,"core::marker"],[3791,"chain_impl_mockchain::multiverse"],[3792,"core::fmt"],[3793,"url::parser"],[3794,"chain_crypto::hash"],[3795,"serde_json::error"],[3796,"std::io::error"],[3797,"serde::de"],[3798,"tracing_appender::non_blocking"],[3799,"serde::ser"],[3800,"clap_builder::builder::command"],[3801,"http::uri"],[3802,"serde_yaml::error"],[3803,"clap_builder::parser::matches::arg_matches"],[3804,"clap_builder"],[3805,"clap_builder::util::id"],[3806,"tracing_core::metadata"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block’s date, composed of an Epoch and a Slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the blocks this transaction is included in","","","","Get a paginated view of all the blocks in this epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get all current tips, sorted (descending) by their length","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date the Block was included in the blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","what get subtracted as fixed value","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Block unique identifier","","The hash that identifies the transaction","The base32 representation of an address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initial bootstrap config params (initial fragments), only …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max limit of tax","","","get the vote options range","","","","","","","","","","","","","","","","","","","","","","","Ratio of tax after fixed amout subtracted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not yet implemented","","","","","get the block that the ledger currently considers as the …","","","","","","","","","","","","","","","","","","","","","The transactions contained in the blocketirement info for a pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the committee duration is the time allocated to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Management threshold for owners, this need to be &lt;= …","","","Owners of this pool","","","","","","","","","the proposals to vote for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reward account","","Beginning of validity for this pool, this is used to keep …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the duration within which it is possible to vote for one …","","","the vote start validityeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Vote option range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the exclusive upper bound of the option range. minimal …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the start of the vote option range, starting from 0 usually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inmutable data structure used to represent the explorer’…","","This is the prefix that’s used for the Address bech32 …","","Try to add a new block to the indexes, this can fail if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to construct <code>Address</code> from <code>AccountIndentifier</code> when …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","This keeps track of the longest chain seen until now. All …","","Structure that keeps all the known states to allow easy …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Block with unified inputs the metadata needed in the …","","Unified Input representation for utxo and account inputs …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Map the given AuthenticatedTransaction to the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map the given <code>Block</code> to the <code>ExplorerBlock</code>, transforming all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The HashMap allows for easy search when querying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","run the garbage collection of the multiverse","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","get all the branches this block is in, None here means the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the logger.","","Output of the logger.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Set format of the log emitted. Can be “json” or “…","Set log messages minimum severity. If not configured …","","Set format of the log emitted. Can be “stdout”, “…","","","Enable the OTLP trace data exporter and set the collector…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,5,10,10,0,0,3,3,3,5,3,5,3,0,0,3,10,5,3,10,5,5,5,0,3,10,5,3,10,5,3,10,5,3,3,10,10,5,3,3,3,3,3,10,5,5,0,0,0,3,10,5,3,10,5,3,3,10,10,5,5,0,0,0,0,0,3,10,5,3,10,3,10,5,3,10,5,3,10,5,3,10,5,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,72,75,0,72,75,0,0,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,46,48,49,46,48,49,50,50,46,48,46,48,50,30,61,50,61,53,53,30,50,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,30,60,30,61,66,66,66,66,66,66,66,66,66,66,66,66,0,60,67,67,68,69,61,44,53,70,67,71,72,73,74,75,58,49,76,68,69,61,44,53,70,67,71,72,73,74,75,58,49,76,66,66,77,72,75,58,58,0,0,66,66,60,61,50,60,96,83,87,85,30,32,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,53,60,89,82,82,44,83,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,71,71,30,69,69,85,0,87,0,85,60,50,60,96,83,87,85,30,68,61,44,53,70,67,71,76,70,96,50,60,60,96,83,87,85,30,32,89,68,68,77,77,77,69,69,61,46,48,44,44,53,124,66,70,120,82,67,71,72,72,72,73,74,75,75,75,75,58,49,76,44,60,61,70,61,50,68,69,61,44,53,70,67,71,72,73,74,75,58,49,76,60,53,60,61,53,0,61,60,61,70,60,50,60,68,61,44,53,70,58,50,68,61,44,53,70,58,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,61,61,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,50,60,60,96,96,83,83,87,87,85,85,30,30,32,32,89,89,68,68,77,77,69,69,61,61,46,46,48,48,44,44,53,53,124,124,66,66,70,70,120,120,82,82,67,67,71,71,72,72,73,73,74,74,75,75,58,58,49,49,76,76,77,72,75,60,70,60,96,53,83,87,73,74,76,73,74,76,61,49,49,58,58,82,82,120,120,60,71,71,76,76,58,58,96,53,50,60,96,83,87,85,30,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,60,96,83,87,85,30,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,73,74,73,74,53,124,124,0,30,89,69,69,70,30,50,76,76,30,32,68,69,61,44,53,70,67,71,72,73,74,75,58,49,76,70,60,60,30,60,50,124,124,124,124,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,50,60,96,83,87,85,30,32,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,58,58,30,58,58,58,58,76,76,50,60,96,83,87,85,30,32,89,68,77,69,61,46,48,44,53,124,66,70,120,82,67,71,72,73,74,75,58,49,76,0,0,65,0,65,0,65,0,65,0,65,0,65,0,65,0,65,0,65,0,65,0,65,0,65,130,131,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,132,65,133,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,130,130,121,121,134,134,126,126,135,135,133,133,136,136,137,132,132,138,138,139,131,131,65,65,65,65,65,65,65,65,65,65,65,65,65,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,130,121,121,134,134,126,126,135,135,133,133,136,136,137,137,132,132,138,138,139,139,131,131,65,65,65,121,139,121,121,133,121,126,135,130,134,138,136,133,132,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,126,121,121,121,135,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,130,121,134,126,135,133,136,137,132,138,139,131,65,133,136,137,133,138,130,121,134,126,135,133,136,137,132,138,139,131,65,0,163,0,163,155,0,163,0,163,0,0,163,0,0,163,0,163,0,0,163,0,163,155,162,0,0,163,162,0,163,0,0,0,163,0,163,0,163,154,0,163,0,163,0,163,0,163,0,163,0,163,0,0,163,0,163,0,163,154,0,163,0,163,0,163,154,155,154,155,152,152,153,153,154,155,156,156,157,157,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,90,90,159,159,159,159,159,159,161,161,161,161,154,155,154,155,90,90,162,163,114,114,164,164,90,165,166,90,165,166,156,154,154,167,155,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,167,167,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,165,166,165,166,86,86,165,166,165,166,154,155,154,154,154,154,155,155,155,155,169,169,156,156,154,167,167,155,164,164,173,173,175,175,86,86,177,177,157,157,152,152,178,178,90,90,159,159,161,161,182,182,183,183,185,185,187,187,188,188,165,166,162,162,162,190,190,169,169,198,192,192,193,193,153,153,195,195,196,196,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,114,114,154,155,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,156,154,154,167,167,155,155,164,164,173,173,175,175,86,86,177,177,157,157,152,152,178,178,90,90,159,159,161,161,182,182,183,183,185,185,187,187,188,188,165,165,166,166,162,162,190,190,169,169,198,198,192,192,193,193,153,153,195,195,196,196,163,163,114,114,162,163,154,155,183,183,193,193,177,177,193,193,154,155,90,90,90,90,182,182,165,166,165,166,178,178,195,195,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,167,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,192,192,198,198,190,190,188,188,175,175,173,173,154,155,154,155,196,196,185,185,187,187,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,154,167,155,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,156,154,167,155,164,173,175,86,177,157,152,178,90,159,161,182,183,185,187,188,165,166,162,190,169,198,192,193,153,195,196,163,114,0,203,203,0,0,0,0,206,206,206,207,203,208,55,206,207,203,208,55,203,203,0,0,55,206,206,207,203,208,55,206,207,203,208,55,206,207,203,208,55,206,206,207,203,208,55,207,207,206,207,203,208,55,206,207,203,208,55,206,206,207,207,203,203,208,208,55,55,206,208,55,55,55,207,55,206,207,203,208,55,206,207,203,208,55,206,207,203,208,55,55,208,206,207,203,208,55,0,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,0,0,0,0,0,0,0,119,119,112,59,111,151,84,211,212,64,127,63,113,88,119,125,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,64,127,63,113,88,119,125,118,52,64,127,63,113,88,119,125,118,52,112,112,59,59,111,111,151,151,84,84,211,211,212,212,64,64,127,127,63,63,113,113,88,88,119,119,125,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,52,118,118,119,119,119,119,119,112,59,59,111,111,151,151,84,211,211,211,212,212,64,127,63,113,113,88,88,119,119,125,125,118,118,52,52,52,52,64,127,63,113,88,119,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,112,59,59,111,111,151,151,84,84,211,211,212,212,64,64,127,127,63,63,113,113,88,88,119,119,125,125,118,118,52,52,52,119,112,112,59,59,111,111,151,151,84,84,211,211,212,212,64,64,127,127,63,63,113,113,88,88,119,125,125,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,118,118,118,64,127,63,113,88,119,125,118,52,112,112,59,59,111,111,151,151,84,84,211,211,212,212,64,64,127,127,63,63,113,113,88,88,119,125,125,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,52,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,112,112,59,59,111,111,151,151,84,84,211,211,212,212,64,64,127,127,63,63,113,113,88,88,119,119,125,125,118,112,59,111,151,84,211,212,64,127,63,113,88,119,125,118,52,0,0,0,0,0,0,0,0,27,238,2,0,0,0,0,0,0,0,0,2,238,2,234,235,2,236,237,238,27,234,235,2,236,237,238,27,238,234,235,2,236,237,238,27,234,235,2,236,237,238,27,236,237,234,234,235,2,236,237,238,27,234,235,2,236,237,238,27,237,234,235,2,236,237,238,27,237,238,0,237,2,2,234,235,2,236,237,238,27,237,234,235,2,236,237,238,27,2,238,235,2,2,2,2,2,2,238,2,2,238,0,234,235,2,236,237,238,27,234,235,2,236,237,238,27,234,234,235,235,2,2,236,236,237,237,238,238,27,27,2,2,0,2,235,0,27,27,2,2,238,238,238,0,2,2,234,235,2,236,237,238,27,238,238,234,235,2,236,237,238,27,234,235,2,236,237,238,27,234,235,2,236,237,238,27,238,234,235,2,236,237,238,27,224,224,0,224,224,224,224,0,224,224,224,224,224,240,224,240,224,240,224,240,224,240,224,240,224,240,224,224,240,240,224,224,240,224,240,240,224,240,224,240,224,224,240,240,224,224,240,224,240,224,240,224,240,224,240,224,240,0,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,241,99,244,100,244,100,0,241,0,0,0,0,242,243,117,91,241,102,242,243,110,99,129,244,108,100,245,117,91,241,102,242,243,110,99,129,244,108,100,245,102,91,91,117,91,241,102,242,243,110,99,129,244,108,100,117,91,241,102,242,243,110,99,129,244,108,100,129,102,91,91,102,117,91,241,102,242,243,110,99,129,244,108,100,245,117,91,241,102,242,243,110,99,129,244,108,100,245,245,117,91,241,102,242,243,110,99,129,244,108,100,245,99,99,99,99,99,110,117,91,241,102,242,243,99,129,244,108,100,245,117,91,241,102,102,242,243,110,99,129,244,108,100,245,117,91,241,102,242,243,110,99,129,244,108,100,99,99,280,232,226,227,225,228,231,230,233,91,102,91,102,129,117,91,241,102,242,243,110,99,129,244,108,100,245,102,102,117,91,241,102,242,243,110,99,129,244,108,100,245,117,117,91,91,241,241,102,102,242,242,243,243,110,110,99,99,129,129,244,244,108,108,100,100,245,245,110,102,108,102,102,91,129,245,245,91,91,108,129,117,91,117,280,232,226,227,225,228,231,230,233,108,99,117,91,241,102,242,243,110,99,129,244,108,100,110,91,91,91,117,91,241,102,242,243,110,99,129,244,108,100,245,117,91,241,102,242,243,110,99,129,244,108,100,245,117,91,241,102,242,243,110,99,129,244,108,100,245,242,243,129,129,108,117,91,241,102,242,243,110,99,129,244,108,100,245,281,281,282,283,282,283,0,0,0,253,284,253,284,253,253,253,284,253,284,253,284,253,284,253,253,253,106,253,284,253,253,253,284,253,253,284,284,284,253,106,253,284,253,253,284,253,284,253,284,253,284,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,0,11,11,11,11,0,0,11,15,11,15,11,15,15,15,15,11,15,11,15,11,15,11,11,11,11,11,11,11,11,15,15,11,15,11,15,11,11,15,15,15,15,11,15,15,11,11,15,11,15,11,15,11,15,0,263,12,12,12,12,262,0,0,0,0,262,263,263,266,266,262,263,264,12,266,262,263,264,12,262,263,264,262,263,264,262,263,264,266,262,263,264,12,266,262,263,264,12,262,263,266,266,262,263,264,12,262,263,264,262,262,262,262,263,263,263,263,264,264,264,264,262,262,263,264,12,12,264,266,262,263,264,12,262,263,264,262,263,266,262,263,264,12,264,264,266,262,263,264,12,266,266,262,262,263,263,264,264,12,12,264,264,262,263,12,262,263,264,262,12,264,266,262,263,264,12,266,262,263,264,12,266,262,263,264,12,266,262,263,264,12,285,285,286,0,0,0,0,0,0,13,13,13,0,0,272,22,274,271,274,274,22,274,271,22,272,13,274,271,270,22,272,13,274,271,270,270,270,274,274,274,22,271,271,22,272,272,13,274,271,270,22,272,13,274,271,270,271,270,0,22,272,13,274,271,270,270,270,270,270,270,0,13,13,274,271,270,270,22,272,13,13,13,274,271,270,274,274,270,274,22,272,13,274,271,270,22,272,13,274,271,270,22,22,272,272,13,13,274,274,271,271,270,270,270,22,274,274,0,274,22,22,274,271,22,274,271,270,22,274,271,22,274,271,270,13,22,271,270,13,270,22,272,13,274,271,270,22,272,13,274,271,270,22,272,13,274,271,270,274,274,22,272,13,274,271,270,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],6,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[7,6],[[3,8],9],[[3,8],9],[[10,8],9],[[10,8],9],[[5,8],9],[11,3],[-1,-1,[]],[12,3],[13,3],[10,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[14,15],[[4,[6,3]]]],[[16,15],[[4,[6,3]]]],0,[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[[],[[4,[6,3]]]],[[[19,[5]],20,21],[[4,[6,3]]]],[[[19,[5]],22],6],0,[3,[[24,[23]]]],[10,[[24,[23]]]],[-1,-2,[],[]],[-1,25,[]],[-1,25,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,27],[[0,[28,29]]]],0,[[[33,[30,31,32]],34],[[4,[[0,[35]],36]]]],[[-1,37,[24,[38]],-2],6,[28,29,39,40],[41,39]],[[-1,37,[24,[38]],[24,[42]],-2],6,[28,29,39,40],[41,39]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[30,43,25],[[45,[44]]]],[[46,43],[[47,[44]]]],[[48,43],[[47,[44]]]],[[49,43],[[47,[44]]]],0,0,0,[[50,43,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,53,[55,[54]],56]]]]]],[[50,43,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,58,[55,[54]],56]]]]]],[[46,43],[[47,[59]]]],[[48,43],[[47,[59]]]],0,0,[[50,43],[[47,[60]]]],[[30,43,25],[[45,[60]]]],0,[[50,43,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,60,[55,[54]],56]]]]]],[[61,43],[[45,[[62,[60]]]]]],[[53,43,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,60,[55,[54]]]]]]]],0,[[30,43,63],[[45,[[62,[60]]]]]],[[50,43,64,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[24,[[57,[52,60,[55,[54]],56]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[30,43,25],[[45,[50]]]],[[60,43],[[45,[[62,[50]]]]]],[[30,43],[[47,[[62,[50]]]]]],[[61,43],[[45,[[24,[65]]]]]],[[66,43],[[47,[59]]]],0,[[66,43],[[47,[59]]]],0,[[66,43],[[47,[59]]]],0,[[66,43],[[47,[59]]]],0,[[66,43],[[47,[59]]]],0,[[66,43],[[47,[59]]]],0,0,[[60,43],[[45,[63]]]],[[67,43],[[47,[51]]]],0,[68,68],[69,69],[61,61],[44,44],[53,53],[70,70],[67,67],[71,71],[72,72],[73,73],[74,74],[75,75],[58,58],[49,49],[76,76],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[66,43],[[47,[59]]]],0,[[77,78,79],[[80,[6]]]],[[72,78,79],[[80,[6]]]],[[75,78,79],[[80,[6]]]],[[58,43],[[47,[69]]]],0,0,0,[[66,43],[[47,[59]]]],0,0,0,[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],0,[[60,43],[[45,[69]]]],0,[[82,43],[[47,[59]]]],0,[[44,43],[[45,[53]]]],[[83,43],[[47,[84]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[[71,43],[[47,[25]]]],0,[[30,43,64],[[47,[70]]]],[[69,43],[[47,[70]]]],0,[[85,43],[[47,[86]]]],0,[[87,43],[[47,[88]]]],[43,89],[[85,43],[[47,[90]]]],[[60,2],[[45,[[92,[91]]]]]],[[50,43,93],[[95,[[94,[41]]]]]],[[60,43,93],[[95,[[94,[41]]]]]],[[96,43,93],[[95,[[94,[41]]]]]],[[83,43,93],[[95,[[94,[41]]]]]],[[87,43,93],[[95,[[94,[41]]]]]],[[85,43,93],[[95,[[94,[41]]]]]],[[30,43,93],[[95,[[94,[41]]]]]],[[68,43,93],[[95,[[94,[41]]]]]],[[61,43,93],[[95,[[94,[41]]]]]],[[44,43,93],[[95,[[94,[41]]]]]],[[53,43,93],[[95,[[94,[41]]]]]],[[70,43,93],[[95,[[94,[41]]]]]],[[67,43,93],[[95,[[94,[41]]]]]],[[71,43,93],[[95,[[94,[41]]]]]],[[76,43,93],[[95,[[94,[41]]]]]],[[70,43],[[47,[[24,[60]]]]]],[[96,43],[[47,[59]]]],[-1,-1,[]],[[[92,[91]]],60],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[97,68],[53,77],[-1,-1,[]],[68,77],[98,69],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[99,44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[67,72],[71,72],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[100,75],[-1,-1,[]],[74,75],[73,75],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[101,[[45,[44]]]],[[[92,[91]]],60],[102,61],[103,70],[[104,43],[[45,[61]]]],[[105,106],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[25,2],[[45,[60]]]],[[101,2],[[45,[53]]]],[105,60],[104,61],[107,53],[[108,109],75],[[61,43],[[45,[[62,[[92,[91]]]]]]]],[[60,2],[[45,[[62,[50]]]]]],[[61,43],[[45,[102]]]],[[70,2],[[24,[110]]]],0,[[50,43],[[47,[25]]]],[[60,43],[[47,[25]]]],[[68,43],[[47,[111]]]],[[61,43],[[47,[25]]]],[[44,43],[[47,[25]]]],[[53,43],[[47,[112]]]],[[70,43],[[47,[64]]]],[[58,43],[[47,[113]]]],0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[61,43],[[45,[[24,[114]]]]]],[[61,43],[[45,[[62,[46]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[77,[[115,[101]]]],[72,[[115,[101]]]],[75,[[115,[101]]]],[[60,43],[[47,[116]]]],[[70,43],[[47,[[24,[60]]]]]],[[60,43],[[45,[[24,[77]]]]]],[[96,43],[[47,[[24,[84]]]]]],[[107,[92,[117]]],53],[[83,43],[[47,[59]]]],[[87,43],[[47,[118]]]],[[73,43],[[47,[118]]]],[[74,43],[[47,[118]]]],[[76,43],[[47,[118]]]],0,0,0,[[61,43],[[45,[[62,[48]]]]]],[[49,43],[[47,[72]]]],0,[[58,43],[[47,[119]]]],0,[[82,43],[[47,[53]]]],0,[[120,43],[[47,[[62,[82]]]]]],0,[[60,43],[[45,[60]]]],[[71,43],[[47,[25]]]],0,[[76,43],[[47,[88]]]],0,[[58,43],[[47,[[62,[76]]]]]],0,[[96,43],[[47,[83]]]],[[53,43],[[45,[121]]]],[[50,78,[123,[122]]],[[95,[[94,[41]]]]]],[[60,78,[123,[122]]],[[95,[[94,[41]]]]]],[[96,78,[123,[122]]],[[95,[[94,[41]]]]]],[[83,78,[123,[122]]],[[95,[[94,[41]]]]]],[[87,78,[123,[122]]],[[95,[[94,[41]]]]]],[[85,78,[123,[122]]],[[95,[[94,[41]]]]]],[[30,78,[123,[122]]],[[95,[[94,[41]]]]]],[[68,78,[123,[122]]],[[95,[[94,[41]]]]]],[[77,78,[123,[122]]],[[95,[[94,[41]]]]]],[[69,78,[123,[122]]],[[95,[[94,[41]]]]]],[[61,78,[123,[122]]],[[95,[[94,[41]]]]]],[[46,78,[123,[122]]],[[95,[[94,[41]]]]]],[[48,78,[123,[122]]],[[95,[[94,[41]]]]]],[[44,78,[123,[122]]],[[95,[[94,[41]]]]]],[[53,78,[123,[122]]],[[95,[[94,[41]]]]]],[[124,78,[123,[122]]],[[95,[[94,[41]]]]]],[[66,78,[123,[122]]],[[95,[[94,[41]]]]]],[[70,78,[123,[122]]],[[95,[[94,[41]]]]]],[[120,78,[123,[122]]],[[95,[[94,[41]]]]]],[[82,78,[123,[122]]],[[95,[[94,[41]]]]]],[[67,78,[123,[122]]],[[95,[[94,[41]]]]]],[[71,78,[123,[122]]],[[95,[[94,[41]]]]]],[[72,78,[123,[122]]],[[95,[[94,[41]]]]]],[[73,78,[123,[122]]],[[95,[[94,[41]]]]]],[[74,78,[123,[122]]],[[95,[[94,[41]]]]]],[[75,78,[123,[122]]],[[95,[[94,[41]]]]]],[[58,78,[123,[122]]],[[95,[[94,[41]]]]]],[[49,78,[123,[122]]],[[95,[[94,[41]]]]]],[[76,78,[123,[122]]],[[95,[[94,[41]]]]]],[[50,43],[[95,[[94,[41]]]]]],[[60,43],[[95,[[94,[41]]]]]],[[96,43],[[95,[[94,[41]]]]]],[[83,43],[[95,[[94,[41]]]]]],[[87,43],[[95,[[94,[41]]]]]],[[85,43],[[95,[[94,[41]]]]]],[[30,43],[[95,[[94,[41]]]]]],[[68,43],[[95,[[94,[41]]]]]],[[77,43],[[95,[[94,[41]]]]]],[[69,43],[[95,[[94,[41]]]]]],[[61,43],[[95,[[94,[41]]]]]],[[46,43],[[95,[[94,[41]]]]]],[[48,43],[[95,[[94,[41]]]]]],[[44,43],[[95,[[94,[41]]]]]],[[53,43],[[95,[[94,[41]]]]]],[[124,43],[[95,[[94,[41]]]]]],[[66,43],[[95,[[94,[41]]]]]],[[70,43],[[95,[[94,[41]]]]]],[[120,43],[[95,[[94,[41]]]]]],[[82,43],[[95,[[94,[41]]]]]],[[67,43],[[95,[[94,[41]]]]]],[[71,43],[[95,[[94,[41]]]]]],[[72,43],[[95,[[94,[41]]]]]],[[73,43],[[95,[[94,[41]]]]]],[[74,43],[[95,[[94,[41]]]]]],[[75,43],[[95,[[94,[41]]]]]],[[58,43],[[95,[[94,[41]]]]]],[[49,43],[[95,[[94,[41]]]]]],[[76,43],[[95,[[94,[41]]]]]],[[73,43],[[47,[[62,[125]]]]]],[[74,43],[[47,[[24,[[62,[125]]]]]]]],0,0,[[53,43],[[45,[[24,[126]]]]]],[[124,43],[[47,[59]]]],0,0,[[30,43],[[45,[85]]]],0,[[69,43],[[47,[127]]]],0,[[70,43],[[45,[120]]]],[[30,43,112],[[45,[53]]]],0,[[76,43],[[47,[[24,[75]]]]]],0,[[30,43],[[47,[50]]]],[[32,43],[[47,[[0,[128]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[70,43],[[47,[54]]]],[[60,43],[[45,[59]]]],[[60,43],[[45,[59]]]],[[30,43,25],[[45,[61]]]],[[60,43,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,61,[55,[54]],56]]]]]],[[50,43,25,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,61,[55,[54]],56]]]]]],[[124,43],[[47,[59]]]],0,[[124,43],[[47,[96]]]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[105,89],[[45,[50]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[58,43],[[47,[69]]]],0,[[30,43,25],[[45,[58]]]],[[[92,[129]]],58],[[113,43],[[45,[58]]]],[[58,43],[[47,[69]]]],0,[[76,43,[24,[51]],[24,[51]],[24,[25]],[24,[25]]],[[45,[[57,[52,49,[55,[54]],56]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[130,43],[[45,[44]]]],[[131,43],[[47,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[132,43],[[47,[114]]]],[[65,78,79],[[80,[6]]]],[[133,43],[[47,[69]]]],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[[130,43,93],[[95,[[94,[41]]]]]],[[121,43,93],[[95,[[94,[41]]]]]],[[134,43,93],[[95,[[94,[41]]]]]],[[126,43,93],[[95,[[94,[41]]]]]],[[135,43,93],[[95,[[94,[41]]]]]],[[133,43,93],[[95,[[94,[41]]]]]],[[136,43,93],[[95,[[94,[41]]]]]],[[137,43,93],[[95,[[94,[41]]]]]],[[132,43,93],[[95,[[94,[41]]]]]],[[138,43,93],[[95,[[94,[41]]]]]],[[139,43,93],[[95,[[94,[41]]]]]],[[131,43,93],[[95,[[94,[41]]]]]],[140,130],[-1,-1,[]],[141,121],[-1,-1,[]],[142,134],[-1,-1,[]],[143,126],[-1,-1,[]],[144,135],[-1,-1,[]],[145,133],[-1,-1,[]],[-1,-1,[]],[146,136],[-1,-1,[]],[-1,-1,[]],[147,132],[148,138],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[149,131],[131,65],[133,65],[-1,-1,[]],[136,65],[135,65],[130,65],[137,65],[132,65],[126,65],[138,65],[134,65],[121,65],[150,65],[139,65],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[65,[[115,[101]]]],[[121,43],[[47,[51]]]],[[139,43],[[47,[25]]]],[[121,43],[[47,[[62,[111]]]]]],[[121,43],[[47,[[62,[111]]]]]],[[133,43],[[47,[119]]]],[[121,43],[[47,[53]]]],[[126,43],[[47,[112]]]],[[135,43],[[47,[112]]]],[[130,43],[[47,[[62,[53]]]]]],[[134,43],[[47,[[62,[53]]]]]],[[138,43],[[47,[25]]]],[[136,43],[[47,[51]]]],[[133,43],[[47,[[62,[87]]]]]],[[132,43],[[47,[68]]]],[[130,78,[123,[122]]],[[95,[[94,[41]]]]]],[[121,78,[123,[122]]],[[95,[[94,[41]]]]]],[[134,78,[123,[122]]],[[95,[[94,[41]]]]]],[[126,78,[123,[122]]],[[95,[[94,[41]]]]]],[[135,78,[123,[122]]],[[95,[[94,[41]]]]]],[[133,78,[123,[122]]],[[95,[[94,[41]]]]]],[[136,78,[123,[122]]],[[95,[[94,[41]]]]]],[[137,78,[123,[122]]],[[95,[[94,[41]]]]]],[[132,78,[123,[122]]],[[95,[[94,[41]]]]]],[[138,78,[123,[122]]],[[95,[[94,[41]]]]]],[[139,78,[123,[122]]],[[95,[[94,[41]]]]]],[[131,78,[123,[122]]],[[95,[[94,[41]]]]]],[[65,78,[123,[122]]],[[95,[[94,[41]]]]]],[[130,43],[[95,[[94,[41]]]]]],[[121,43],[[95,[[94,[41]]]]]],[[134,43],[[95,[[94,[41]]]]]],[[126,43],[[95,[[94,[41]]]]]],[[135,43],[[95,[[94,[41]]]]]],[[133,43],[[95,[[94,[41]]]]]],[[136,43],[[95,[[94,[41]]]]]],[[137,43],[[95,[[94,[41]]]]]],[[132,43],[[95,[[94,[41]]]]]],[[138,43],[[95,[[94,[41]]]]]],[[139,43],[[95,[[94,[41]]]]]],[[131,43],[[95,[[94,[41]]]]]],[[65,43],[[95,[[94,[41]]]]]],[[126,43],[[47,[151]]]],[[121,43],[[47,[[24,[44]]]]]],[[121,43],[[47,[96]]]],[[121,43],[[47,[151]]]],[[135,43],[[47,[151]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[133,43],[[47,[69]]]],[[136,43],[[47,[113]]]],[[137,43],[[47,[113]]]],[[133,43],[[47,[69]]]],[[138,43],[[47,[68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[81,25],[81,25],[[],[[115,[101]]]],[[],[[115,[101]]]],[[152,43],[[47,[68]]]],0,[[153,43],[[47,[25]]]],0,[154,24],[155,24],[[156,43],[[47,[54]]]],0,[[157,43],[[47,[158]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[90,43],[[47,[54]]]],0,[[159,43],[[47,[[24,[160]]]]]],0,[[159,43],[[47,[[24,[160]]]]]],0,[[159,43],[[47,[[24,[160]]]]]],0,[[161,43],[[47,[[24,[160]]]]]],0,[[161,43],[[47,[[24,[160]]]]]],0,[154,154],[155,155],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[90,43],[[47,[54]]]],0,[[162,78,79],[[80,[6]]]],[[163,78,79],[[80,[6]]]],[[114,43],[[47,[[62,[163]]]]]],0,[[164,43],[[47,[155]]]],0,[[90,43],[[47,[54]]]],[[165,43],[[47,[54]]]],[[166,43],[[47,[54]]]],0,0,0,[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[167,43],[[47,[154]]]],0,[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[[165,43],[[47,[168]]]],[[166,43],[[47,[168]]]],0,0,[[86,43],[[47,[158]]]],0,[[165,43],[[47,[158]]]],[[166,43],[[47,[158]]]],0,0,[[154,154],116],[[155,155],116],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[169,43],[[47,[116]]]],0,[170,156],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[171,167],[-1,-1,[]],[172,164],[-1,-1,[]],[-1,-1,[]],[158,173],[-1,-1,[]],[174,175],[158,86],[-1,-1,[]],[176,177],[-1,-1,[]],[-1,-1,[]],[158,157],[-1,-1,[]],[97,152],[97,178],[-1,-1,[]],[-1,-1,[]],[179,90],[180,159],[-1,-1,[]],[-1,-1,[]],[181,161],[-1,-1,[]],[158,182],[158,183],[-1,-1,[]],[184,185],[-1,-1,[]],[-1,-1,[]],[186,187],[-1,-1,[]],[184,188],[-1,-1,[]],[-1,-1,[]],[166,162],[165,162],[-1,-1,[]],[189,190],[-1,-1,[]],[116,169],[-1,-1,[]],[-1,-1,[]],[191,192],[-1,-1,[]],[[[6,[168,168]]],193],[-1,-1,[]],[-1,-1,[]],[194,153],[194,195],[-1,-1,[]],[-1,-1,[]],[174,196],[173,163],[177,163],[86,163],[187,163],[182,163],[157,163],[164,163],[193,163],[185,163],[197,163],[169,163],[159,163],[161,163],[195,163],[167,163],[183,163],[198,163],[178,163],[192,163],[90,163],[190,163],[175,163],[152,163],[156,163],[196,163],[153,163],[-1,-1,[]],[188,163],[-1,-1,[]],[199,114],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[162,[[115,[101]]]],[163,[[115,[101]]]],[[],[[201,[[200,[154]]]]]],[[],[[201,[[200,[155]]]]]],[[183,43],[[47,[158]]]],0,[[193,43],[[47,[168]]]],0,[[177,43],[[47,[54]]]],0,[[193,43],[[47,[168]]]],0,[[[24,[93]]],[[202,[154]]]],[[[24,[93]]],[[202,[155]]]],[[90,43],[[47,[159]]]],0,[[90,43],[[47,[161]]]],0,[[182,43],[[47,[158]]]],0,[[165,43],[[47,[83]]]],[[166,43],[[47,[83]]]],0,0,[[178,43],[[47,[68]]]],0,[[195,43],[[47,[25]]]],0,[[156,78,[123,[122]]],[[95,[[94,[41]]]]]],[[154,78,[123,[122]]],[[95,[[94,[41]]]]]],[[167,78,[123,[122]]],[[95,[[94,[41]]]]]],[[155,78,[123,[122]]],[[95,[[94,[41]]]]]],[[164,78,[123,[122]]],[[95,[[94,[41]]]]]],[[173,78,[123,[122]]],[[95,[[94,[41]]]]]],[[175,78,[123,[122]]],[[95,[[94,[41]]]]]],[[86,78,[123,[122]]],[[95,[[94,[41]]]]]],[[177,78,[123,[122]]],[[95,[[94,[41]]]]]],[[157,78,[123,[122]]],[[95,[[94,[41]]]]]],[[152,78,[123,[122]]],[[95,[[94,[41]]]]]],[[178,78,[123,[122]]],[[95,[[94,[41]]]]]],[[90,78,[123,[122]]],[[95,[[94,[41]]]]]],[[159,78,[123,[122]]],[[95,[[94,[41]]]]]],[[161,78,[123,[122]]],[[95,[[94,[41]]]]]],[[182,78,[123,[122]]],[[95,[[94,[41]]]]]],[[183,78,[123,[122]]],[[95,[[94,[41]]]]]],[[185,78,[123,[122]]],[[95,[[94,[41]]]]]],[[187,78,[123,[122]]],[[95,[[94,[41]]]]]],[[188,78,[123,[122]]],[[95,[[94,[41]]]]]],[[165,78,[123,[122]]],[[95,[[94,[41]]]]]],[[166,78,[123,[122]]],[[95,[[94,[41]]]]]],[[162,78,[123,[122]]],[[95,[[94,[41]]]]]],[[190,78,[123,[122]]],[[95,[[94,[41]]]]]],[[169,78,[123,[122]]],[[95,[[94,[41]]]]]],[[198,78,[123,[122]]],[[95,[[94,[41]]]]]],[[192,78,[123,[122]]],[[95,[[94,[41]]]]]],[[193,78,[123,[122]]],[[95,[[94,[41]]]]]],[[153,78,[123,[122]]],[[95,[[94,[41]]]]]],[[195,78,[123,[122]]],[[95,[[94,[41]]]]]],[[196,78,[123,[122]]],[[95,[[94,[41]]]]]],[[163,78,[123,[122]]],[[95,[[94,[41]]]]]],[[114,78,[123,[122]]],[[95,[[94,[41]]]]]],[[156,43],[[95,[[94,[41]]]]]],[[167,43],[[95,[[94,[41]]]]]],[[164,43],[[95,[[94,[41]]]]]],[[173,43],[[95,[[94,[41]]]]]],[[175,43],[[95,[[94,[41]]]]]],[[86,43],[[95,[[94,[41]]]]]],[[177,43],[[95,[[94,[41]]]]]],[[157,43],[[95,[[94,[41]]]]]],[[152,43],[[95,[[94,[41]]]]]],[[178,43],[[95,[[94,[41]]]]]],[[90,43],[[95,[[94,[41]]]]]],[[159,43],[[95,[[94,[41]]]]]],[[161,43],[[95,[[94,[41]]]]]],[[182,43],[[95,[[94,[41]]]]]],[[183,43],[[95,[[94,[41]]]]]],[[185,43],[[95,[[94,[41]]]]]],[[187,43],[[95,[[94,[41]]]]]],[[188,43],[[95,[[94,[41]]]]]],[[165,43],[[95,[[94,[41]]]]]],[[166,43],[[95,[[94,[41]]]]]],[[162,43],[[95,[[94,[41]]]]]],[[190,43],[[95,[[94,[41]]]]]],[[169,43],[[95,[[94,[41]]]]]],[[198,43],[[95,[[94,[41]]]]]],[[192,43],[[95,[[94,[41]]]]]],[[193,43],[[95,[[94,[41]]]]]],[[153,43],[[95,[[94,[41]]]]]],[[195,43],[[95,[[94,[41]]]]]],[[196,43],[[95,[[94,[41]]]]]],[[163,43],[[95,[[94,[41]]]]]],[[114,43],[[95,[[94,[41]]]]]],[[192,43],[[47,[83]]]],0,[[198,43],[[47,[116]]]],0,[[190,43],[[47,[162]]]],0,[[188,43],[[47,[59]]]],0,[[175,43],[[47,[174]]]],0,[[173,43],[[47,[158]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[154,93],[155,93],[[196,43],[[47,[174]]]],0,[[185,43],[[47,[59]]]],0,[[187,43],[[47,[96]]]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[203,[-1]]],[[203,[-2]]],[],[[204,[-1]]]],[[[203,[-1]]],[[4,[[203,[-2]]]]],[],[[205,[-1]]]],[[[203,[-1]],[206,[-1]]],[[45,[[6,[[203,[-1]],207]]]]],[[205,[54]],29]],[[[208,[54]],[206,[54]]],[[208,[54]]]],[81,25],[[[206,[-1]]],[[206,[-2]]],[],[[204,[-1]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[7,6],[7,6],[7,6],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[[55,[-1]],78,[123,[122]]],[[95,[[94,[41]]]]],[209,39,40]],[[[55,[-1]],43],[[95,[[94,[41]]]]],[209,39,40]],[[[55,[-1]],43],[[47,[-1]]],[209,39,40]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[],[[115,[101]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,6],[[210,8],9],[[210,8],9],[-1,-1,[]],[[],7],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,25,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[81,25],[[],[[115,[101]]]],[112,24],[59,24],[111,24],[151,24],[84,24],[211,24],[212,24],[64,24],[127,24],[63,24],[113,24],[88,24],[119,24],[125,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[127,127],[63,63],[113,113],[88,88],[119,119],[125,125],[118,118],[52,52],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[81,25],[101,[[4,[52]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[52,25],[[118,43],[[47,[51]]]],0,[[119,119],116],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[-1,-1,[]],[-1,-1,[]],[54,59],[-1,-1,[]],[[[214,[213]]],111],[-1,-1,[]],[215,151],[-1,-1,[]],[158,211],[54,211],[-1,-1,[]],[54,212],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[216,113],[-1,-1,[]],[-1,-1,[]],[217,88],[109,119],[-1,-1,[]],[-1,125,[[219,[218]]]],[-1,-1,[]],[220,118],[-1,-1,[]],[221,52],[54,52],[-1,-1,[]],[158,52],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[222,[25]]],[]],[[],[[201,[[200,[119]]]]]],[93,[[202,[112]]]],[[[24,[93]]],[[202,[112]]]],[93,[[202,[59]]]],[[[24,[93]]],[[202,[59]]]],[[[24,[93]]],[[202,[111]]]],[93,[[202,[111]]]],[[[24,[93]]],[[202,[151]]]],[93,[[202,[151]]]],[[[24,[93]]],[[202,[84]]]],[93,[[202,[84]]]],[93,[[202,[211]]]],[[[24,[93]]],[[202,[211]]]],[[[24,[93]]],[[202,[212]]]],[93,[[202,[212]]]],[93,[[202,[64]]]],[[[24,[93]]],[[202,[64]]]],[93,[[202,[127]]]],[[[24,[93]]],[[202,[127]]]],[[[24,[93]]],[[202,[63]]]],[93,[[202,[63]]]],[93,[[202,[113]]]],[[[24,[93]]],[[202,[113]]]],[93,[[202,[88]]]],[[[24,[93]]],[[202,[88]]]],[[[24,[93]]],[[202,[119]]]],[[[24,[93]]],[[202,[125]]]],[93,[[202,[125]]]],[[112,78,[123,[122]]],[[95,[[94,[41]]]]]],[[59,78,[123,[122]]],[[95,[[94,[41]]]]]],[[111,78,[123,[122]]],[[95,[[94,[41]]]]]],[[151,78,[123,[122]]],[[95,[[94,[41]]]]]],[[84,78,[123,[122]]],[[95,[[94,[41]]]]]],[[211,78,[123,[122]]],[[95,[[94,[41]]]]]],[[212,78,[123,[122]]],[[95,[[94,[41]]]]]],[[64,78,[123,[122]]],[[95,[[94,[41]]]]]],[[127,78,[123,[122]]],[[95,[[94,[41]]]]]],[[63,78,[123,[122]]],[[95,[[94,[41]]]]]],[[113,78,[123,[122]]],[[95,[[94,[41]]]]]],[[88,78,[123,[122]]],[[95,[[94,[41]]]]]],[[119,78,[123,[122]]],[[95,[[94,[41]]]]]],[[125,78,[123,[122]]],[[95,[[94,[41]]]]]],[[118,78,[123,[122]]],[[95,[[94,[41]]]]]],[[118,43],[[95,[[94,[41]]]]]],[[118,43],[[47,[51]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,93],[112,93],[59,93],[59,93],[111,93],[111,93],[151,93],[151,93],[84,93],[84,93],[211,93],[211,93],[212,93],[212,93],[64,93],[64,93],[127,93],[127,93],[63,93],[63,93],[113,93],[113,93],[88,93],[88,93],[119,93],[125,93],[125,93],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[52,[[4,[54]]]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[[],[[115,[101]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[2,223],[[4,[106,224]]]],[[225,91],225],[[226,91],[[4,[226,224]]]],[[227,91],[[4,[227,224]]]],[[228,91],228],[[229,91],229],[[230,231,91],[[4,[[6,[230,231]],224]]]],[[232,91],[[4,[232,224]]]],[[233,91,229],[[4,[233,224]]]],0,0,[223,[[4,[2,224]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[234,234],[235,235],[2,2],[236,236],[237,237],[238,238],[27,27],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],0,[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],0,0,0,0,[[2,221],[[62,[105]]]],[[2,104],[[62,[105]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[199,237],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,105],[[24,[[92,[91]]]]]],[[238,221,221],[[62,[[6,[105,221]]]]]],[235,105],[[2,105],[[24,[[6,[[92,[91]],[62,[[6,[105,106]]]]]]]]]],[[2,105],[[24,[106]]]],[2,[[62,[[6,[105,106]]]]]],[[2,103],[[24,[110]]]],[[2,107],[[24,[[92,[[239,[105]]]]]]]],[[2,107],[[24,[[92,[117]]]]]],[238,[[62,[[6,[107,[92,[117]]]]]]]],[2,[[6,[105,106]]]],[[2,216],[[24,[[92,[129]]]]]],[238,[[62,[[6,[216,[92,[129]]]]]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[2,105],116],0,0,0,[105,235],0,0,0,[[2,105],[[4,[6,240]]]],0,0,0,0,0,0,[2,[[0,[128]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[238,99],[[24,[[239,[104]]]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[224,224],[240,240],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[[224,8],9],[[224,8],9],[[240,8],9],[[240,8],9],[240,224],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[224,[[24,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,25,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[91,221],0,[117,117],[91,91],[241,241],[102,102],[242,242],[243,243],[110,110],[99,99],[129,129],[244,244],[108,108],[100,100],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,0,[91,98],0,[[],102],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],0,[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[[99,99],116],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],0,[[117,8],9],[[91,8],9],[[241,8],9],[[102,8],9],[[242,8],9],[[243,8],9],[[99,8],9],[[129,8],9],[[244,8],9],[[108,8],9],[[100,8],9],[[245,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[245,104,[246,[-1]],[24,[150]],158,[247,[104,102]]],[[4,[102,224]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],54,[248,249],250],[[99,-1],6,251],0,0,0,0,0,0,0,0,0,[91,105],[102,104],0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[102,[[62,[242]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[102,[[62,[243]]]],0,0,0,0,0,[91,241],0,0,0,0,[[223,245],[[4,[91,224]]]],0,0,0,0,0,0,0,0,0,0,0,[99,[[24,[252]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[253,253],[[-1,-2],6,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[253,158],6],[[253,105],[[24,[[254,[238]]]]]],0,[[],7],[[],7],0,[[253,221,105,105,238],[[254,[238]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[[221,105,238],[[6,[[254,[238]],253]]]],0,[253,[[62,[[6,[105,[254,[238]]]]]]]],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[239,[-1]],-1],[[239,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[239,[-1]]],[[239,[-1]]],29],[[-1,-2],6,[],[]],[[],[[239,[-1]]],[]],[7,-1,[]],[7,-1,[]],[7,6],0,[[[239,[-1]],8],9,255],[-1,-1,[]],[-1,-1,[]],[[[239,[-1]],-2],[[24,[[92,[-1]]]]],[],[[256,[54]]]],[[],7],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[[239,[-1]]],116,[]],[[[239,[-1]]],54,[]],0,[[],[[239,[-1]]],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],[[108,257],100],[[108,229],100],0,0,0,0,0,0,0,[[15,223],[[4,[6,11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],6,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,6],[7,6],[[11,8],9],[[11,8],9],[258,11],[259,11],[260,11],[-1,-1,[]],[261,11],[224,11],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[2,15],[[15,105],6],[11,[[24,[23]]]],0,[-1,-2,[],[]],[-1,25,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[262,262],[263,263],[264,264],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],262],[[],263],[[],264],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[4,[262]]],265],[-1,[[4,[263]]],265],[266,6],[7,6],[7,6],[7,6],[7,6],[7,6],[[262,262],116],[[263,263],116],[[264,264],116],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[262,8],9],[[262,8],9],[[263,8],9],[[264,8],9],[[12,8],9],[[12,8],9],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[101,[[4,[262]]]],[101,[[4,[263]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[264,[[4,[266,12]]]],[[264,267],[[4,[6,12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[262,-1],4,268],[[263,-1],4,268],[12,[[24,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,25,[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[269,269],[269,269],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[270,270],[[-1,-2],6,[],[]],[[],269],[[],269],0,0,0,[[],271],[7,-1,[]],[272,[[62,[101]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[4,[271]]],265],[-1,[[4,[270]]],265],[-1,[[4,[[24,[273]]]]],265],[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[[270,270],116],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],[[-1,-2],116,[],[]],0,[[13,8],9],[[13,8],9],[[274,8],9],[[271,8],9],[[270,8],9],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[275,13],[261,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[276,[[4,[274,277]]]],[276,[[4,[274,277]]]],[-1,-1,[]],[[],[[24,[278]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[[],[[4,[22,13]]]],0,0,[101,[[4,[279,25]]]],0,[[274,271],264],0,0,0,0,0,0,0,0,0,0,0,0,0,[[270,-1],4,268],[13,[[24,[23]]]],0,0,[-1,-2,[],[]],[-1,25,[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[274,276],[[4,[6,277]]]],[[274,276],[[4,[6,277]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[[24,[279]]]]],265],[[[24,[279]],-1],4,268]],"c":[],"p":[[6,"SyncMultiverseStream",3716],[3,"ExplorerDb",2682],[4,"Error",0],[4,"Result",3717],[4,"GlobalState",0],[15,"tuple"],[15,"usize"],[3,"Formatter",3718],[6,"Result",3718],[4,"BootstrapError",0],[4,"IndexerError",3358],[4,"Error",3411],[4,"Error",3551],[3,"Block",3719],[3,"Indexer",3358],[3,"Header",3720],[3,"Request",3721],[3,"Request",3721],[3,"Receiver",3722],[6,"BlockSubscription",3716],[6,"TipSubscription",3716],[3,"Settings",3551],[8,"Error",3723],[4,"Option",3724],[3,"String",3725],[3,"TypeId",3726],[3,"Settings",2682],[8,"Filter",3727],[8,"Clone",3728],[3,"Query",89],[3,"EmptyMutation",3729],[3,"Subscription",89],[3,"Schema",3730],[3,"Request",3731],[8,"Reply",3732],[4,"Infallible",3733],[4,"SocketAddr",3734],[3,"Tls",3735],[8,"Send",3736],[8,"Sync",3736],[8,"Future",3737],[3,"Cors",3735],[6,"Context",3738],[3,"Address",89],[6,"FieldResult",3739],[3,"TransactionInput",89],[6,"Result",3740],[3,"TransactionOutput",89],[3,"VoteStatus",89],[3,"Branch",89],[15,"i32"],[3,"IndexCursor",2228],[3,"Pool",89],[15,"u64"],[3,"ConnectionFields",2107],[3,"EmptyFields",3741],[3,"Connection",3742],[3,"VotePlanStatus",89],[3,"Value",2228],[3,"Block",89],[3,"Transaction",89],[3,"Vec",3743],[3,"ChainLength",2228],[3,"EpochNumber",2228],[4,"Certificate",947],[3,"FeeSettings",89],[3,"VotePayloadPublicStatus",89],[3,"BftLeader",89],[3,"BlockDate",89],[3,"Epoch",89],[3,"VotePayloadPrivateStatus",89],[4,"VotePayloadStatus",89],[3,"TallyPublicStatus",89],[3,"TallyPrivateStatus",89],[4,"TallyStatus",89],[3,"VoteProposalStatus",89],[4,"Leader",89],[6,"ContextSelectionSet",3738],[3,"Fields",3744],[6,"ServerResult",3740],[3,"Registry",3745],[3,"PoolStakeDistribution",89],[3,"Ratio",89],[3,"NonZero",2228],[3,"Settings",89],[3,"EpochStabilityDepth",1271],[3,"Proposal",89],[3,"ExternalProposalId",2228],[3,"EContext",89],[3,"LinearFee",1271],[3,"ExplorerBlock",2932],[3,"Arc",3746],[4,"ConstValue",3747],[3,"Box",3748],[3,"Pin",3749],[3,"TaxType",89],[3,"BftLeaderId",3750],[3,"BlockDate",3751],[4,"ExplorerAddress",2932],[4,"ExplorerVoteTally",2932],[15,"str"],[3,"ExplorerTransaction",2932],[6,"Epoch",3751],[6,"FragmentId",3752],[6,"HeaderId",3753],[6,"Ref",3283],[6,"PoolId",3754],[3,"ExplorerVoteProposal",2932],[4,"PayloadType",3755],[3,"EpochData",2932],[3,"PublicKey",2228],[3,"PoolId",2228],[3,"VotePlanId",2228],[3,"ConfigParams",1271],[4,"Cow",3756],[15,"bool"],[3,"StakePoolData",2932],[3,"VoteOptionRange",2228],[4,"PayloadType",2228],[3,"StakeDistribution",89],[3,"PoolRegistration",947],[3,"Field",3757],[3,"Positioned",3758],[3,"Treasury",89],[3,"Weight",2228],[3,"PoolRetirement",947],[3,"Slot",2228],[8,"Stream",3759],[3,"ExplorerVotePlan",2932],[3,"StakeDelegation",947],[3,"EvmMapping",947],[3,"UpdateProposal",947],[3,"VotePlan",947],[3,"OwnerStakeDelegation",947],[3,"PoolUpdate",947],[3,"VoteCast",947],[3,"VoteTally",947],[3,"UpdateVote",947],[3,"MintToken",947],[3,"StakeDelegation",3760],[3,"PoolRegistration",3754],[3,"OwnerStakeDelegation",3760],[3,"PoolRetirement",3754],[3,"PoolUpdate",3754],[3,"VotePlan",3761],[3,"VoteCast",3762],[3,"UpdateProposal",3763],[3,"UpdateVote",3764],[3,"EvmMapping",3765],[4,"Certificate",3766],[3,"TimeOffsetSeconds",2228],[3,"AddBftLeader",1271],[3,"AddCommitteeId",1271],[4,"DiscriminationEnum",1271],[4,"ConsensusTypeEnum",1271],[3,"Block0Date",1271],[3,"BlockContentMaxSize",1271],[15,"u32"],[3,"PerCertificateFee",1271],[3,"NonZeroU64",3767],[3,"PerVoteCertificateFee",1271],[4,"RewardParamsUnion",1271],[4,"ConfigParam",1271],[3,"ConsensusType",1271],[3,"LinearRewardParams",1271],[3,"HalvingRewardParams",1271],[3,"Discrimination",1271],[3,"NonZeroU32",3767],[3,"FeesInTreasury",1271],[3,"Block0Date",3768],[4,"Discrimination",3769],[4,"ConsensusType",3753],[3,"SlotsPerEpoch",1271],[15,"u8"],[3,"SlotDuration",1271],[3,"Milli",3770],[3,"Milli",1271],[3,"RemoveBftLeader",1271],[3,"LinearFee",3771],[3,"PerCertificateFee",3771],[3,"PerVoteCertificateFee",3771],[3,"ProposalExpiration",1271],[3,"KesUpdateSpeed",1271],[3,"Value",3772],[3,"TreasuryAdd",1271],[3,"TaxType",3773],[3,"TreasuryParams",1271],[3,"RewardPot",1271],[4,"RewardParams",3768],[3,"RewardParams",1271],[3,"Ratio",3773],[3,"RewardLimitByAbsoluteStake",1271],[3,"PoolRewardParticipationCapping",1271],[3,"CommitteeId",3774],[3,"RemoveCommitteeId",1271],[3,"TransactionMaxExpiryEpochs",1271],[4,"ConfigParam",3768],[3,"RewardLimitNone",1271],[3,"ConfigParams",3775],[3,"EnumItem",3776],[15,"slice"],[6,"InputValueResult",3740],[4,"PaginationInterval",2107],[8,"From",3733],[8,"TryFrom",3733],[3,"ValidatedPaginationArguments",2107],[3,"PageMeta",2107],[3,"InclusivePaginationInterval",2107],[8,"OutputType",3777],[4,"ApiError",2204],[3,"VotePlanCount",2228],[3,"VoteStatusCount",2228],[3,"Ed25519",3778],[3,"PublicKey",3779],[3,"TimeOffsetSeconds",3780],[6,"VotePlanId",3761],[6,"ExternalProposalId",3761],[3,"Weight",3781],[8,"Borrow",3782],[3,"Options",3783],[3,"ChainLength",3753],[4,"Resettable",3784],[3,"Block",3785],[4,"ExplorerError",2875],[6,"Addresses",2932],[6,"Blocks",2932],[6,"ChainLengths",2932],[6,"Epochs",2932],[3,"StakeControl",3786],[6,"StakePool",2932],[6,"StakePoolBlocks",2932],[6,"Transactions",2932],[6,"VotePlans",2932],[3,"Explorer",2682],[3,"Tip",2682],[3,"StableIndex",2682],[3,"BlockchainConfig",2682],[3,"State",2682],[3,"PersistentSequence",3328],[3,"BlockNotFound",2875],[4,"BlockProducer",2932],[3,"ExplorerInput",2932],[3,"ExplorerOutput",2932],[4,"ExplorerVote",2932],[3,"ExplorerBlockBuildingContext",2932],[3,"TransactionSlice",3787],[3,"HashMap",3788],[8,"Hash",3789],[8,"Sized",3736],[8,"BuildHasher",3789],[8,"Hasher",3789],[3,"Identifier",3790],[3,"Multiverse",3283],[3,"Ref",3791],[8,"Debug",3718],[8,"Into",3733],[3,"DecryptedPrivateTallyProposal",3792],[4,"ParseError",3793],[4,"Error",3794],[3,"Error",3795],[3,"Error",3796],[4,"LogFormat",3411],[4,"LogOutput",3411],[3,"LogSettings",3411],[8,"Deserializer",3797],[3,"LogGuard",3411],[3,"NonBlocking",3798],[8,"Serializer",3799],[3,"Command",3800],[3,"ConfigLogSettings",3551],[3,"Config",3551],[3,"LOG_FILTER_LEVEL_POSSIBLE_VALUES",3551],[3,"Uri",3801],[3,"CommandLine",3551],[3,"Error",3802],[3,"ArgMatches",3803],[6,"Error",3804],[3,"Id",3805],[3,"LevelFilter",3806],[6,"Hamt",2932],[13,"Private",3277],[13,"Public",3279],[13,"Private",3279],[3,"Inner",3283],[13,"File",3548],[13,"FormatNotSupported",3548]]},\
"explorer_client":{"doc":"","t":"DENENNMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFFLMLLLLLLLLLLLLLLLLL","n":["Command","Error","Explorer","ExplorerClientCommand","Io","LastBlock","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","full_version","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","main","report_error","source","source_version","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip"],"q":[[0,"explorer_client"],[77,"clap_builder::builder::command"],[78,"core::result"],[79,"alloc::string"],[80,"jormungandr_automation::jormungandr::explorer"],[81,"core::fmt"],[82,"core::fmt"],[83,"clap_builder::parser::matches::arg_matches"],[84,"clap_builder"],[85,"clap_builder::util::id"],[86,"core::option"],[87,"tonic::request"],[88,"core::error"],[89,"core::any"]],"d":["","","","Explorer Client CLI toolkit","","Get last block","explorer address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","display full version details (software version, source …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","display the sources version, allowing to check the source…","","","","","","","","","","","","","","","","",""],"i":[0,0,5,0,5,7,4,4,4,7,7,5,4,7,5,4,7,4,7,4,4,7,5,4,7,5,4,7,5,4,7,4,7,5,5,5,5,5,4,7,4,7,4,7,4,4,7,5,4,7,5,4,7,5,4,7,0,0,5,4,5,5,4,7,5,4,7,5,4,7,4,7,4,7,5,4,7],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[4,[[6,[3,5]]]],[[7,8],[[6,[3,9]]]],[[5,10],11],[[5,10],11],[9,5],[-1,-1,[]],[12,5],[-1,-1,[]],[-1,-1,[]],[13,[[6,[4,14]]]],[13,[[6,[7,14]]]],[13,[[6,[4,14]]]],[13,[[6,[7,14]]]],0,[[],[[16,[15]]]],[17,18],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[],3],[5,3],[5,[[16,[20]]]],0,[-1,8,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[4,13],[[6,[3,14]]]],[[7,13],[[6,[3,14]]]],[[4,13],[[6,[3,14]]]],[[7,13],[[6,[3,14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",77],[15,"usize"],[15,"tuple"],[3,"Command",0],[4,"Error",0],[4,"Result",78],[4,"ExplorerClientCommand",0],[3,"String",79],[4,"ExplorerError",80],[3,"Formatter",81],[6,"Result",81],[3,"Error",82],[3,"ArgMatches",83],[6,"Error",84],[3,"Id",85],[4,"Option",86],[15,"str"],[15,"bool"],[3,"Request",87],[8,"Error",88],[3,"TypeId",89]]},\
"find":{"doc":"Find my vote","t":"DMLLLLLLLLLLLLMLLLLLLMMFLLLLLLML","n":["Args","aggregate","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","fragments","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","key_file","key_to_convert","main","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","voting_key","vzip"],"q":[[0,"find"],[32,"clap_builder::builder::command"],[33,"core::fmt"],[34,"core::fmt"],[35,"clap_builder"],[36,"core::result"],[37,"clap_builder::util::id"],[38,"core::option"],[39,"core::error"],[40,"alloc::boxed"],[41,"eyre"],[42,"core::any"]],"d":["Args defines and declares CLI behaviour within the context …","aggregate voting keys","","","","","","","","","","","","","Obtain fragments by providing path to historical fund data.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","check batch of keys and write history to file","convert key formats","","","","","","","","voting key",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2],"f":[0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,3],[[2,5],6],0,[-1,-1,[]],[7,[[9,[2,8]]]],[7,[[9,[2,8]]]],[[],[[11,[10]]]],[[],4],[-1,-2,[],[]],0,0,[[],[[14,[3,[13,[12]]]]]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[[2,7],[[9,[3,8]]]],[[2,7],[[9,[3,8]]]],0,[-1,-2,[],[]]],"c":[],"p":[[3,"Command",32],[3,"Args",0],[15,"tuple"],[15,"usize"],[3,"Formatter",33],[6,"Result",33],[3,"ArgMatches",34],[6,"Error",35],[4,"Result",36],[3,"Id",37],[4,"Option",38],[8,"Error",39],[3,"Box",40],[6,"Result",41],[3,"TypeId",42]]},\
"grpc_client_app":{"doc":"","t":"F","n":["main"],"q":[[0,"grpc_client_app"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"grpc_server_app":{"doc":"","t":"F","n":["main"],"q":[[0,"grpc_server_app"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"hdkeygen":{"doc":"","t":"DDMAAMAMMMMADDSGLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLSSSDDMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLLMLLLLLLLLLLLLLLLDFARRNERDRRNNRRLLLLLLFFFLLLLLLLLLLLLLLLLLLL","n":["Key","KeyRange","_marker","account","bip44","derivation_scheme","key","key","key","path","range","rindex","Account","AccountId","SIZE","Seed","account_id","address","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","cmp","counter","counter","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","from","from","from","from_secret_key","from_seed","from_str","from_str","hash","id","increase_counter","into","into","partial_cmp","public","secret","secret","set_counter","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","ACCOUNT","EXTERNAL","INTERNAL","Key","KeyRange","_marker","account","account","account","address","address","address_account","address_group","address_single","addresses","as_ref","base32_len","bip44","borrow","borrow","borrow_mut","borrow_mut","cardano","chain_code","change","change","check_base32","chimeric_bip44","clone","clone_into","coerce_unchecked","coin_type","derivation_scheme","derive_path_unchecked","derive_unchecked","derive_unchecked","encode_hex","encode_hex_upper","external","external","fmt","fmt","fmt","from","from","hd_key","id","internal","internal","into","into","into_iter","key","key","key","new","new_unchecked","next","next","path","path","pk","pk","public","public_key","public_key_slice","purpose","range","sign","sign","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify","vzip","vzip","write_base32","HdKey","decode_derivation_path","hdpayload","CBOR_BREAK","CBOR_INDEFINITE_ARRAY","CannotDecrypt","Error","HDKEY_SIZE","HdKey","MAX_PAYLOAD_SIZE","NONCE","NotEnoughEncryptedData","PayloadIsTooLarge","SALT","TAG_LEN","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cursor_read","decode_derivation","decode_derivation_path","decrypt","drop","fmt","fmt","from","from","into","into","new","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"hdkeygen"],[12,"hdkeygen::account"],[64,"hdkeygen::key"],[147,"hdkeygen::rindex"],[150,"hdkeygen::rindex::hdpayload"],[190,"chain_crypto::key"],[191,"chain_addr"],[192,"chain_addr"],[193,"alloc::alloc"],[194,"alloc::vec"],[195,"core::result"],[196,"core::cmp"],[197,"core::iter::traits::collect"],[198,"core::fmt"],[199,"core::fmt"],[200,"chain_crypto::key"],[201,"core::hash"],[202,"core::option"],[203,"alloc::string"],[204,"core::any"],[205,"bech32"],[206,"chain_path_derivation::bip44"],[207,"chain_path_derivation::bip44"],[208,"chain_path_derivation::derivation"],[209,"core::iter::traits::collect"],[210,"chain_path_derivation::rindex"],[211,"ed25519_bip32::derivation::common"],[212,"chain_path_derivation::derivation"],[213,"core::convert"],[214,"chain_path_derivation::derivation_path"]],"d":["convenient wrapper around the <code>Key</code>.","","","account based wallet, does not really have any …","","","","","","","","random indexes wallet - 2 Level of randomly chosen hard …","","","the total size of an account ID","","","get the public address associated to this account …","","","","","","","","","","","get the transaction counter","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","increase the counter with the given amount","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","convenient wrapper around the <code>Key</code>.","","","","","","","","","","","","","","","","","","","","get key’s chain code","","","","","","","","","","derive the private key against the given derivation index …","derive the private key against the given derivation index …","derive the private key against the given derivation index …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","get an address recovering object, this object can be used …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","create a <code>Key</code> with the given component","","","get the derivation path that lead to this key","","","","retrieve the associated public key of the given private key","","get the public key content without revealing the chaincode.","","","create a signature for the given message and associate the …","create a signature for the given message and associate the …","","","","","","","","","verify the signature with the private key for the given …","verify the signature with the public key for the given …","","","","The key to encrypt and decrypt HD payload","","HD Payload","","","","","","The key to encrypt and decrypt HD payload","This is the max size we accept to try to decrypt a …","","","this relates to the issue that addresses with the payload …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>HDKey</code> from an extended public key","","","","","","","","","",""],"i":[0,0,44,0,0,35,0,35,44,35,44,0,0,0,2,0,1,2,2,2,1,2,1,2,2,2,2,2,1,1,2,2,2,2,2,2,1,2,2,1,1,2,2,2,2,1,1,2,2,1,1,1,1,2,2,1,2,1,2,1,2,1,2,2,35,35,35,0,0,44,35,35,35,35,35,35,35,35,35,35,35,35,35,44,35,44,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,44,35,35,35,35,35,44,44,35,35,44,44,35,44,44,35,35,35,35,35,35,35,35,44,35,35,35,35,35,44,35,44,35,44,35,35,35,44,35,0,0,0,0,0,61,0,0,0,0,0,61,61,0,0,61,53,61,53,53,53,0,0,0,53,53,61,61,61,53,61,53,53,53,61,61,53,61,53,61,53,61,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],2,3],[[2,4],5],[2,[[7,[6]]]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[[11,[9,10]]]]],[]],[2,2],[[-1,-2],13,[],[]],[[2,2],14],[[[1,[-1]]],15,3],0,[-1,-2,[],[[17,[16]]]],[-1,-2,[],[[17,[16]]]],[[2,2],18],[[-1,-2],18,[],[]],[[2,19],20],[[2,19],20],[-1,-1,[]],[-1,-1,[]],[[[21,[6]]],2],[[[23,[22]]],[[1,[22]]]],[24,[[1,[25]]]],[26,[[12,[-1]]],[]],[26,[[12,[2]]]],[[2,-1],13,27],0,[[[1,[-1]],15],13,3],[-1,-2,[],[]],[-1,-2,[],[]],[[2,2],[[28,[14]]]],[[[1,[-1]]],[[21,[6]]],3],[[[1,[-1]]],[[23,[-1]]],3],0,[[[1,[-1]],15],13,3],[-1,-2,[],[]],[-1,29,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[13]]],[],31],0,0,0,0,0,0,[[[35,[32,[34,[33]]]]],[[35,[32,[34,[36]]]]]],[[[35,[37,[34,[33]]]]],[[35,[37,[34,[36]]]]]],[[[35,[32,[34,[38]]]],39],[[35,[32,[34,[33]]]]]],[[[35,[32,[34,[36]]]],40],[[35,[32,[34,[41]]]]]],[[[35,[37,[34,[36]]]],40],[[35,[37,[34,[41]]]]]],[[[35,[37,[34,[41]]]],4],5],[[[35,[37,[34,[41]]]],4,[42,[25]]],5],[[[35,[37,[34,[41]]]],4],5],[[[35,[37,[34,[36]]]],43],[[44,[37,43,[34,[36]],[34,[41]]]]]],[[[35,[-1,-2]]],-1,[],[]],[-1,8,[]],[[[35,[32,[34,[45]]]]],[[35,[32,[34,[46]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[35,[32,[34,[46]]]]],[[35,[32,[34,[38]]]]]],[[[35,[32,-1]]],[[21,[6]]],[]],[[[35,[37,[34,[33]]]],40],[[35,[37,[34,[36]]]]]],[[[35,[32,[34,[33]]]],40],[[35,[32,[34,[36]]]]]],[-1,[[12,[[11,[9,10]]]]],[]],[[[35,[32,[34,[45]]]]],[[35,[32,[34,[46]]]]]],[[[35,[-1,-2]]],[[35,[-1,-2]]],47,[]],[[-1,-2],13,[],[]],[[[35,[-1,-2]]],[[35,[-1,-3]]],[],[],[]],[[[35,[32,[34,[46]]]],39],[[35,[32,[34,[38]]]]]],0,[[[35,[32,-1]],-2],[[35,[32,-3]]],[],48,[]],[[[35,[37,-1]],40],[[35,[37,-2]]],[],[]],[[[35,[32,-1]],49],[[35,[32,-2]]],[],[]],[-1,-2,[],[[17,[16]]]],[-1,-2,[],[[17,[16]]]],[[[35,[32,[34,[33]]]]],[[35,[32,[34,[36]]]]]],[[[35,[37,[34,[33]]]]],[[35,[37,[34,[36]]]]]],[[[35,[37,-1]],19],20,[]],[[[35,[32,-1]],19],20,[]],[[[35,[-1,-2]],19],20,50,[]],[-1,-1,[]],[-1,-1,[]],[[[35,[32,[52,[51]]]]],53],[[[35,[-1,[34,[33]]]]],39,[]],[[[35,[37,[34,[33]]]]],[[35,[37,[34,[36]]]]]],[[[35,[32,[34,[33]]]]],[[35,[32,[34,[36]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[35,[32,[52,[51]]]],[55,[[52,[54]]]]],[[35,[32,[52,[54]]]]]],0,0,[[[35,[-1,-2]],-3],[[44,[-1,-3,-2,-4]]],[],[],[],[]],[[-1,[55,[-2]],56],[[35,[-1,-2]]],[],[]],[[[44,[37,43,-1,-2]]],28,[],[]],[[[44,[32,57,-1,-2]]],28,[],[]],[[[35,[-1,-2]]],[[55,[-2]]],[],[]],0,[[[35,[37,-1]]],[[42,[25]]],[]],[[[35,[[23,[22]],-1]]],[[42,[25]]],[]],[[[35,[32,-1]]],[[35,[37,-1]]],[]],[[[35,[37,-1]]],37,[]],[[[35,[37,-1]]],[[7,[6]]],[]],[[[35,[32,[34,[45]]]],39],[[35,[32,[34,[46]]]]]],0,[[[35,[32,-1]],-2],[[58,[-3]]],[],[[59,[[7,[6]]]]],[]],[[[35,[[23,[22]],-1]],-2],[[58,[-3]]],[],[[59,[[7,[6]]]]],[]],[-1,-2,[],[]],[-1,29,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[[[35,[32,-1]],-2,[58,[-3]]],18,[],[[59,[[7,[6]]]]],[]],[[[35,[37,-1]],-2,[58,[-3]]],18,[],[[59,[[7,[6]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[12,[13]]],[],31],0,[[[7,[6]]],[[28,[[55,[60]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,53],[[-1,-2],13,[],[]],[[[7,[6]]],[[28,[6]]]],[[[7,[6]]],[[28,[49]]]],[[[7,[6]]],[[28,[[55,[60]]]]]],[[53,[7,[6]]],[[12,[[11,[6]],61]]]],[53,13],[[61,19],20],[[61,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,53],[-1,-2,[],[]],[-1,29,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Account",12],[3,"AccountId",12],[8,"AsymmetricKey",190],[4,"Discrimination",191],[3,"Address",191],[15,"u8"],[15,"slice"],[15,"usize"],[3,"u5",192],[3,"Global",193],[3,"Vec",194],[4,"Result",195],[15,"tuple"],[4,"Ordering",196],[15,"u32"],[15,"char"],[8,"FromIterator",197],[15,"bool"],[3,"Formatter",198],[6,"Result",198],[15,"array"],[3,"Ed25519Extended",199],[3,"SecretKey",190],[6,"Seed",12],[3,"Ed25519",200],[15,"str"],[8,"Hasher",201],[4,"Option",202],[3,"String",203],[3,"TypeId",204],[8,"WriteBase32",192],[3,"XPrv",205],[3,"Account",206],[3,"Bip44",206],[3,"Key",64],[3,"Change",206],[3,"XPub",205],[3,"CoinType",206],[3,"HardDerivation",207],[3,"SoftDerivation",207],[3,"Address",206],[3,"PublicKey",190],[3,"SoftDerivationRange",207],[3,"KeyRange",64],[3,"Root",206],[3,"Purpose",206],[8,"Clone",208],[8,"IntoIterator",197],[3,"Derivation",207],[8,"Debug",198],[3,"Root",209],[3,"Rindex",209],[3,"HdKey",150],[3,"Address",209],[3,"DerivationPath",210],[4,"DerivationScheme",211],[3,"DerivationRange",207],[3,"Signature",212],[8,"AsRef",213],[3,"AnyScheme",210],[4,"Error",150]]},\
"hersir":{"doc":"","t":"AAAAAAAAADLLLLLLMLLLLLLLLLLLLLLLMLCDCGCCCCCCCDLMLLLLLAMLLLLFLALMLLLMLLLMLALMAAMALMLLLMALMLALLMNNENLLLLLLLLLLFLLLLLLLLLNELLLLLLLLFLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLCNENDDNMMLLLLLLMMLLLLLLLMLLLLLLLLLLLLLLLAMMLLLMLMLLMLLLLLLAMLLAMDMLLLLMLLLLLLLLMMLMLLLLNNELLLLLLLLLLLLLLLLLLLLMMNNENNDGEMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLFDDMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLDMLLLLLLLLLLLLLLLFLLLLLMLLLLLLFFNNDDEEDDNNNNNNDDEDDNDEDMMMMMMMAMMMLLLLLLLLLLLLLLLLLLLLLLAMMMMMMMMMLFFFFFLLLLLLLLLLLLLLLMMMLLLLLMMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLMFMMMMMMMMMMMMMMMAMMMLLLLLLLMMMMLLLLLLLLLLMLLLLLMMMMAMMMMLLLLLAMMMMMMMMMMMMMMMMMNNNCCEGNLLLLALLLLLLLLLLLLLLLDDLLMLLMMLLLLLLLLLLMLLMLLMLLLLLLLLLMLLLLMLLLLLLLLLLLMLLLMLLMLLMLLMLLLLLLLMLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLMMMMMMDMLMLMLLLLLLLLMLLMLLLLLLLLLLLMLLLLLLMLLMLMLMLMLMLMLMLMLLLMLLLMLMLMLMLMLMLLMLMLLLLMLMLLMLDDLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMMLLNNECLLLLALLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMDMMLLLLLLLLMLLLLLLMMLLLMLLLLLNNNNNNNNDENNNNNNNENNNNNNNNNCNDDDDRRRNNENNNDNNNNNNNNNNNNNCNNNLMLLLLLLLLLLLLLLLLLCLLALLLLLLLLLMALLLLLLAMLLLMMMMMMMMMLMLLLLLMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMNNNENNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNEEINDNNNNDMALLLLLLAAMMLLLLMFLLLLLLLLLLLLMLMKLMLLLMLLLLLLLLLMAAAAANEDDDDDNNNNMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNLLLLALLLLLLLLLLLLLLALLALLLLDLLLLMLLLLLLLLLLLLLLMMLLLLLMMLMDLLLLLLMLLLLLLLLLLLLLLLLLMMLDMLLLLLLLLLLLLMLLLLLLMLLLLLMLDNNNNNEDDDDDDDNNNMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMLLLLLLLLLLLLLLLLLLMMNNNENNNLLLLLLLLLLLLLLLLLLLLLLLDLLLLLMLLLFLLLLLLMLLLMLLLLLLLLLMLCDDDCCCLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLALLMMLMLLLLLMLLLLLLLLLLLLLLNNNNNNNNENIENNNNNNNNNNNNDDDCNDEDNNNNDNNNNNENNNNNRLLLLLLMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLALLKLLLLKLLLKLKLLLLLMLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLMKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDNNNIEDDDDDNNDNNNNEENLLLLLMLKLLLLLLMLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLKLLLLKLLKLLKLLLLLLLMMLLLLLLMLLMLLMLLMLLMLLLLMLLLLLLMLLMLKLLKLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNNNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAFFAFFFFFRMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLADLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLGMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDAAFADLLLLLLLLLLLLLLLLFARMMMMMMDDADDDDGMMMMMMMMMMMMDDDDDDDDDDDDIK","n":["args","builder","cli","config","controller","error","spawn","style","utils","Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbose","vzip","ControllerError","NetworkBuilder","Node","NodeAlias","NodeSetting","Random","Seed","Settings","Topology","VotePlanKey","VotePlanSettings","Wallet","apply_config","blockchain","blockchain_config","blockchain_config_or_hash","borrow","borrow_mut","build","committee","committee_templates","committees","default","deref","deref_mut","document","drop","explorer","explorer","explorer_template","finish_all","from","init","inner","into","into_request","notify_all","observers","register","rng","session_settings","session_settings","settings","stake_pool","template","topology","topology","topology","try_from","try_into","type_id","vec","vote","vote_plan_templates","vote_plan_templates","vzip","wallet","wallet_template","wallet_templates","wallet_templates","Bech3","CannotFindAlias","Error","Wallet","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","generate_committee_data","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","CannotFindAlias","Error","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","generate_explorer","init","into","into_request","to_string","try_from","try_into","type_id","vzip","Random","Seed","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","derive","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_str","from_str","generate","init","init","into","into","into_request","into_request","new","rng","rng_mut","seed","seed","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zero","Blockchain","Committee","Error","Explorer","NodeSetting","Settings","Settings","alias","block0","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","committees","config","deref","deref","deref_mut","deref_mut","drop","drop","dump_private_vote_keys","explorer","fmt","fmt","fmt","from","from","from","from","from","init","init","into","into","into_request","into_request","new","node","node_topology","nodes","populate_block0_blockchain_configuration","populate_block0_blockchain_initials","populate_trusted_peers","secret","source","stake_pools","to_owned","to_string","topology_secret","try_from","try_from","try_into","try_into","type_id","type_id","vote_plan","vote_plans","vzip","vzip","wallet","wallets","NodeSetting","alias","borrow","borrow_mut","clone","clone_into","config","deref","deref_mut","drop","fmt","from","init","into","into_request","node_topology","secret","to_owned","topology_secret","try_from","try_into","type_id","vzip","Private","Public","VotePlanSettings","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_public_vote_plan","init","into","into_request","to_id","to_owned","try_from","try_into","type_id","vote_plan","vzip","keys","vote_plan","Account","CannotRetrieveAddress","Error","OperationUnavailableForExternalWallet","UTxO","Wallet","WalletLib","WalletType","account","address","alias","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committee_id","delegation_cert_for_block0","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","external","fmt","fmt","fmt","fmt","from","from","from","from","generate_account","generate_utxo","get_hash","has_alias","hash","identifier","init","init","init","inner","inner","into","into","into","into_request","into_request","into_request","save_to","stake_key","template","template","to_initial_fund","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","generate","Node","Topology","alias","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","new","nodes","to_owned","to_owned","trusted_peers","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_node","with_trusted_peer","VotePlanKey","alias","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","generate_vote_plans","get_hash","hash","init","into","into_request","owner_alias","serialize","to_owned","try_from","try_into","type_id","vzip","generate","populate_tokens","Block0","Block0Hash","BlockchainBuilder","BlockchainConfiguration","BlockchainConfigurationOrHash","CommitteeTemplate","Config","ExplorerTemplate","External","External","Generated","Generated","Interactive","Monitor","NodeConfig","PrivateParameters","SessionMode","SessionSettings","SpawnParams","Standard","VotePlanTemplate","WalletTemplate","WalletTemplateBuilder","address","address_bech32_prefix","alias","alias","allow_private_addresses","block0_date","block_content_max_size","blockchain","blockchain","blockchain","bootstrap_from_peers","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_blockchain","build_topology","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","committee","committee_end","committee_member_public_keys","committees","committees","committees","connect_to","consensus","consensus_genesis_praos_active_slot_coeff","crs","default","default_jormungandr","default_log_level","default_persistence_mode","default_root","default_title","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","discrimination","dns_server_address","drop","drop","drop","drop","drop","explorer","external_consensus_leader_ids","faketime","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_documentation","gossip_interval","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","jormungandr","jormungandr","kes_update_speed","leaders","leadership_mode","linear_fee","listen_address","log","log_level","max_bootstrap_attempts","max_connections","max_inbound_connections","mempool","mode","network_stuck_check","node_alias","node_key_file","node_spawn_params","nodes","parse_session_mode_from_str","persistence_mode","persistence_mode","persistent_fragment_log","policy","preferred_layer","private","proposals","public_address","query_complexity_limit","query_depth_limit","root","session","skip_bootstrap","slot_duration","slots_per_epoch","spawn_params","spawn_params","threshold","title","to_explorer_params","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tokens","topics_of_interest","trusted_peers","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_max_expiry_epochs","type_id","type_id","type_id","type_id","type_id","value","verbose","version","vote_end","vote_plan","vote_plan_key","vote_plans","vote_start","voting_token","vzip","vzip","vzip","vzip","vzip","wallet","wallets","whitelist","alias","communication_pk","communication_pk","id","member_pk","member_pk","address","alias","delegate","discrimination","tokens","tokens","value","value","wallet_type","Bft","Block0","Block0Hash","BlockchainBuilder","BlockchainConfiguration","BlockchainConfigurationOrHash","ConsensusVersion","GenesisPraos","borrow","borrow_mut","clone","clone_into","configuration","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","BlockchainBuilder","BlockchainConfiguration","block0_date","block0_date","block0_date","block_content_max_size","block_content_max_size","block_content_max_size","blockchain","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","committee","committees","committees","committees","consensus","consensus","consensus","consensus_genesis_praos_active_slot_coeff","consensus_genesis_praos_active_slot_coeff","consensus_genesis_praos_active_slot_coeff","default","default","deref","deref","deref_mut","deref_mut","deserialize","discrimination","discrimination","discrimination","drop","drop","external_consensus_leader_ids","external_consensus_leader_ids","external_consensus_leader_ids","fmt","from","from","has_external_consensus_leader_ids","init","init","into","into","into_request","into_request","kes_update_speed","kes_update_speed","leader","leaders","leaders","leaders","linear_fee","linear_fee","linear_fee","slot_duration","slot_duration","slot_duration","slots_per_epoch","slots_per_epoch","slots_per_epoch","to_owned","try_from","try_from","try_into","try_into","tx_max_expiry_epochs","tx_max_expiry_epochs","tx_max_expiry_epochs","type_id","type_id","vzip","vzip","with_block0_date","with_block_content_max_size","with_committee","with_committees","with_consensus","with_consensus_genesis_praos_active_slot_coeff","with_discrimination","with_external_consensus_leader_ids","with_leader","with_leaders","with_linear_fee","with_slot_duration","with_slots_per_epoch","with_tx_max_expiry_epochs","CommitteeTemplate","External","Generated","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","alias","communication_pk","communication_pk","id","member_pk","member_pk","SpawnParams","alias","allow_private_addresses","allow_private_addresses","bootstrap_from_peers","bootstrap_from_peers","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","dns_server_address","dns_server_address","drop","faketime","faketime","fmt","from","get_alias","get_faketime","get_jormungandr","get_leadership_mode","get_log_level","get_persistence_mode","get_verbose","get_version","gossip_interval","gossip_interval","in_memory","init","into","into_request","is_leader","jormungandr","jormungandr","leader","leadership_mode","leadership_mode","listen_address","listen_address","log_level","log_level","max_bootstrap_attempts","max_bootstrap_attempts","max_connections","max_connections","max_inbound_connections","max_inbound_connections","mempool","mempool","network_stuck_check","network_stuck_check","new","no_listen_address","node_key_file","node_key_file","override_settings","passive","persistence_mode","persistence_mode","persistent_fragment_log","persistent_fragment_log","policy","policy","preferred_layer","preferred_layer","public_address","public_address","skip_bootstrap","skip_bootstrap","to_owned","topics_of_interest","topics_of_interest","trusted_peers","trusted_peers","try_from","try_into","type_id","verbose","verbose","version","version","vzip","whitelist","whitelist","with_dns_server_address","PrivateParameters","VotePlanTemplate","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committee_end","committee_member_public_keys","committees","crs","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","private","proposals","threshold","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vote_end","vote_plan_key","vote_start","voting_token","vzip","vzip","External","Generated","WalletTemplate","WalletTemplateBuilder","address","alias","borrow","borrow_mut","builder","clone","clone_into","default_discrimination","default_wallet_type","delegate","delegate_mut","deref","deref_mut","deserialize","discrimination","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","has_alias","hash","id","init","into","into_request","is_generated","new_account","new_external","new_utxo","to_owned","tokens","try_from","try_into","type_id","value","vzip","wallet_type","address","alias","delegate","discrimination","tokens","tokens","value","value","wallet_type","WalletTemplateBuilder","address","alias","borrow","borrow_mut","build","default","delegated_to","deref","deref_mut","discrimination","discrimination","drop","from","init","into","into_request","new","node_alias","tokens","try_from","try_into","type_id","value","vzip","with","with_address","with_alias","with_token","BlockFormatError","BlockFormatError","BlockWriteError","CannotCreateFile","CannotSerializeBlock","CannotSpawnNode","CannotSpawnNode","CannotWriteYamlFile","Controller","Error","Explorer","FragmentIsPendingForTooLong","FragmentNotInMemPoolLogs","FragmentSender","FsFixture","GrpcError","InteractiveCommand","InteractiveCommandError","InvalidBlock","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidGrpcCall","InvalidHeaderId","InvalidNetworkStats","Io","Io","IoError","JormungandrInteractiveCommandExec","Legacy","MonitorController","MonitorControllerBuilder","MonitorLegacyNode","MonitorNode","NODE_CONFIG_FILE","NODE_SECRETS_FILE","NODE_TOPOLOGY_KEY_FILE","NoExplorerConfigurationDefined","Node","NodeError","NodeFailedToBootstrap","NodeFailedToShutdown","NodeNotFound","ProgressBarController","Reqwest","Reqwest","Rest","RestError","Serialization","SerializationError","Settings","SettingsWallet","ShutdownProcedure","StakePoolNotFound","Startup","Startup","UserError","UserInteractionController","VotePlanNotFound","Wallet","WalletNotFound","block0_file","block0_file","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","controlled_wallet","controlled_wallets","convert_to_def","defined_nodes","defined_vote_plan","defined_vote_plans","defined_wallets","deref","deref","deref_mut","deref_mut","do_for_all_alias","drop","drop","error","expect_spawn_failed","fmt","fmt","from","from","from","from","init","init","inner","interactive","into","into","into_persistent","into_request","into_request","make_starter_for","monitor","network_builder","new","node_config","node_settings","prefix","process","process","progress_bar","progress_bar","progress_bar","progress_bar","progress_bar_thread","session_settings","settings","settings","source","spawn","spawn_explorer","spawn_node_async","stake_pool","title","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallet","working_directory","working_directory","alias","alias","alias","alias","alias","cause","cause","duration","e","e","fragment_id","fragment_id","logs","logs","logs","message","path","path","BlockFormatError","BlockWriteError","CannotSpawnNode","Error","Explorer","FragmentSender","FsFixture","InteractiveCommand","Io","Legacy","NoExplorerConfigurationDefined","Node","NodeNotFound","Reqwest","Serialization","Settings","SettingsWallet","StakePoolNotFound","Startup","VotePlanNotFound","Wallet","WalletNotFound","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","ConsoleWriter","Describe","Exit","Explorer","InteractiveCommand","InteractiveCommandError","InteractiveCommandExec","IoError","JormungandrInteractiveCommandExec","Send","Show","Spawn","UserError","UserInteractionController","app_name","args","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","controller","controller","controller","deref","deref","deref_mut","deref_mut","description","do_for_all_alias","drop","drop","fmt","format_error","from","from","init","init","into","into","into_request","into_request","legacy_nodes","new","nodes","parse_and_exec","parse_and_exec","prompt","show_help","show_info","show_prompt","title","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallets","describe","explorer","send","show","spawn","All","Describe","DescribeAll","DescribeNodes","DescribeTopology","DescribeVotePlans","DescribeWallets","Nodes","Topology","VotePlan","Wallets","alias","alias","alias","alias","alias","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","Explorer","ExplorerTip","Tip","alias","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","into_request","into_request","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","Send","Tally","Tx","Vote","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","cast","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","tally","try_from","try_into","tx","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CastVote","augment_args","augment_args_for_update","borrow","borrow_mut","choice","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","proposal_id","proposal_index","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","via","vote_plan","vzip","wallet","VoteTally","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","committee","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","via","vote_plan","vzip","SendTransaction","ada","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","to","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","via","vzip","ActiveVotePlans","BlockHeight","FragmentCount","Fragments","Logs","PeerStats","Show","ShowBlockHeight","ShowFragmentCount","ShowFragments","ShowLogs","ShowNodeStats","ShowPeerStats","ShowStatus","Stats","Status","VotePlans","alias","alias","alias","alias","alias","alias","alias","alias","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","contains","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","only_errors","show_logs_for","tail","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Leader","Passive","Spawn","SpawnLeaderNode","SpawnPassiveNode","alias","alias","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","legacy","legacy","spawn_node","storage","storage","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","wait","wait","Describe","Exit","Explorer","InteractiveCommand","Send","Show","Spawn","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","UserInteractionController","borrow","borrow_mut","cast_vote","controlled_wallet","controller","controller","controller_mut","deref","deref_mut","do_for_all_alias","drop","from","init","into","into_request","legacy_nodes","legacy_nodes","legacy_nodes_mut","new","nodes","nodes","nodes_mut","send_transaction","spawn_node","tally_vote","try_from","try_into","type_id","vzip","wallets","wallets","wallets_mut","LegacyNode","MonitorController","MonitorControllerBuilder","NetworkBuilderObserver","Node","NodeError","ProgressBarController","add_to_progress_bar","block0_conf","block0_file","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_progress_bar","controlled_wallet","controlled_wallets","controller_progress","defined_vote_plans","defined_wallets","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","finalize","finished","from","from","from","init","init","init","inner","into","into","into","into_request","into_request","into_request","monitor_nodes","network_builder","new","new","new","new_spawn_params","new_with_progress_bar","node","node_dir","notify","progress_bar","progress_bar_thread","session_settings","session_settings","settings","spawn_legacy_node","spawn_node","spawn_node_custom","stake_pool","title","topology","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","working_directory","BlockFormatError","CannotCreateFile","CannotDeserialize","CannotSendFragment","CannotSendFragmentBatch","CannotSerializeBlock","CannotSpawnNode","CannotWriteYamlFile","Error","FragmentIsPendingForTooLong","FragmentNode","FragmentNodeError","FragmentNotInMemPoolLogs","GrpcError","HashParseError","InvalidAddressFormat","InvalidBlock","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidGrpcCall","InvalidHeaderId","InvalidNetworkStats","InvalidRequest","Io","JormungandrClient","JormungandrLogger","JormungandrRest","LegacyNode","ListFragmentError","MemPoolCheck","MockClientError","Node","NodeFailedToBootstrap","NodeFailedToShutdown","NonSuccessErrorCode","PollError","ProgressBarController","ReadBytes","RequestError","Reqwest","ReqwestError","Rest","RestError","RestError","SerializationError","ShutdownProcedure","Startup","UnknownError","_DERIVE_core_fmt_Debug_FOR_Error","account_state","account_state_by_pk","account_state_by_pk_raw","account_votes","account_votes_all","account_votes_with_plan_id","addr","address","address","alias","alias","alias","alias","assert_no_errors","block","block_as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_logs","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collected_logs","collected_panics","contains_any_of","contains_error","controller","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_logger","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_logger","epoch_reward_history","eq","equivalent","equivalent","equivalent","equivalent","explorer","finish_monitoring","finish_with_message","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_id","fragment_id","fragment_logs","fragment_logs","fragment_logs","fragments_statuses","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_address","get_blocks","get_created_blocks_counter","get_created_blocks_hashes","get_created_blocks_hashes_after","get_error_indicators","get_fragments","get_genesis_block_hash","get_lines","get_lines_as_string","get_lines_with_error_and_invalid","get_log_content","get_log_lines_with_level","get_panic_content","get_panic_lines","grpc","handshake","headers","init","init","init","init","init","init","init","init","init","init","inner","inner","inner_client","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_running","is_up","last_block_height","last_validated_block_date","leaders_log","legacy","log","log","log_content","log_content","log_content","log_content","log_err","log_in_block_fragment","log_in_block_fragment","log_info","log_leadership_log","log_pending_fragment","log_pending_fragment","log_rejected_fragment","log_rejected_fragment","log_stats","logger","logs","logs","logs_collector","message","network_stats","new","new","new","new","new","new","new_with_cert","new_with_custom_settings","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","panics_collector","prefix","process","progress_bar","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","raw","remaining_rewards","rest","reward_history","rt","send_batch_fragments","send_batch_fragments","send_fragment","send_fragment","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","shutdown","shutdown","source","source","source","stake_distribution","stake_distribution_at","stake_pools","stats","status","tip","tip","tip","tip","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates","upload_blocks","uri_from_socket_addr","vote_plan_statuses","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_bootstrap","wait_for_chain_length","wait_for_shutdown","alias","alias","alias","alias","alias","cause","cause","duration","e","e","fragment_id","fragment_id","logs","logs","logs","message","path","path","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","checks","response","status","BackwardCompatibleRest","CannotSendFragment","CannotSendFragmentBatch","Exited","FragmentNode","FragmentNodeError","JormungandrClient","JormungandrLogger","JormungandrProcess","JormungandrRest","LegacyNode","ListFragmentError","Log","MemPoolCheck","ReqwestError","Rest","Running","Starting","StartupVerificationMode","Status","UnknownError","account_state","account_state_by_pk","account_votes","account_votes_all","account_votes_with_plan_id","addr","address","alias","alias","alias","alias","alias","alias","alias","alias","as_named_process","assert_no_errors_in_log","assert_no_errors_in_log_with_message","block_as_bytes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_logs","check_no_errors_in_log","child","clone","clone","clone_into","clone_into","collected_logs","collected_panics","correct_state_verifier","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_logger","drop","drop","drop","drop","drop","drop","enable_logger","epoch_reward_history","eq","explorer","fmt","fmt","fragment_id","fragment_logs","fragment_logs","fragment_logs","fragment_logs","fragments_logs","fragments_statuses","from","from","from","from","from","from","genesis_block_hash","get_lines_with_error_and_invalid","get_lines_with_error_and_invalid","grpc","grpc_client","init","init","init","init","init","inner","inner_client","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_running","is_running","is_up","last_block_height","last_block_height","leaders_log","legacy_rest","log","log_content","log_content","log_content","log_content","log_content","log_in_block_fragment","log_in_block_fragment","log_in_block_fragment","log_pending_fragment","log_pending_fragment","log_pending_fragment","log_rejected_fragment","log_rejected_fragment","log_rejected_fragment","log_stats","log_stats","log_stats","log_stats","logger","logger","logs_collector","network_stats","new","new","new","p2p_available","p2p_listen_addr","p2p_listen_address","p2p_non_public","p2p_public_address","p2p_public_address","p2p_quarantined","p2p_view","panics_collector","pid","ports_are_opened","process","process_id","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","raw","raw","remaining_rewards","rest","rest","rest_address","rest_debug","rest_settings","rest_socket_addr","rest_uri","reward_history","rt","secure_rest","send_batch_fragments","send_batch_fragments","send_batch_fragments","send_fragment","send_fragment","send_fragment","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","shutdown","shutdown","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","stats","status","status","steal_temp_dir","stop","temp_dir","temp_dir","time_era","tip","tip","tip","to_owned","to_owned","to_remote","to_trusted_peer","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vote_plan_statuses","vzip","vzip","vzip","vzip","vzip","wait_for_bootstrap","wait_for_bootstrap","wait_for_shutdown","wait_for_shutdown","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","CircularTrust","ConsumptionBenchmark","Controller","Error","Explorer","FragmentSender","FragmentVerifier","IO","InteractiveCommand","Internal","MonitorNode","Rest","Serialization","Verification","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","interactive","monitor","run_health_check","spawn_network","standard","jormungandr_user_interaction","spawn_network","run_health_check","spawn_network","spawn_network","TICKER","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","binary","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","error","from","from","from","from","from","from","icons","info","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","scenario_title","seed","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Icon","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","account","block","blockchain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failure","from","from","from","from","from","from","from","from","from","from","from","from","ignored","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jcli","jormungandr","scenario","seed","success","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","Dotifier","dotifier","introduction","print_intro","vote_plan","Dotifier","borrow","borrow_mut","deref","deref_mut","dot_node_label","dot_wallet_label","dottify","drop","from","init","into","into_request","try_from","try_into","type_id","vzip","print_intro","style","TICKER","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","binary","error","icons","info","scenario_title","seed","success","Icon","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","account","block","blockchain","failure","ignored","jcli","jormungandr","scenario","seed","success","transaction","wallet","VotePlanExtension","convert_to_def"],"q":[[0,"hersir"],[9,"hersir::args"],[34,"hersir::builder"],[94,"hersir::builder::committee"],[118,"hersir::builder::explorer"],[137,"hersir::builder::rng"],[189,"hersir::builder::settings"],[253,"hersir::builder::settings::node"],[276,"hersir::builder::settings::vote_plan"],[299,"hersir::builder::settings::vote_plan::VotePlanSettings"],[301,"hersir::builder::settings::wallet"],[385,"hersir::builder::stake_pool"],[386,"hersir::builder::topology"],[429,"hersir::builder::vote"],[459,"hersir::builder::wallet"],[461,"hersir::config"],[670,"hersir::config::CommitteeTemplate"],[676,"hersir::config::WalletTemplate"],[685,"hersir::config::blockchain"],[713,"hersir::config::blockchain::configuration"],[805,"hersir::config::committee"],[826,"hersir::config::committee::CommitteeTemplate"],[832,"hersir::config::spawn_params"],[920,"hersir::config::vote_plan"],[969,"hersir::config::wallet"],[1015,"hersir::config::wallet::WalletTemplate"],[1024,"hersir::config::wallet::builder"],[1053,"hersir::controller"],[1188,"hersir::controller::NodeError"],[1206,"hersir::controller::error"],[1260,"hersir::controller::interactive"],[1324,"hersir::controller::interactive::args"],[1329,"hersir::controller::interactive::args::describe"],[1489,"hersir::controller::interactive::args::explorer"],[1541,"hersir::controller::interactive::args::send"],[1572,"hersir::controller::interactive::args::send::cast"],[1603,"hersir::controller::interactive::args::send::tally"],[1631,"hersir::controller::interactive::args::send::tx"],[1660,"hersir::controller::interactive::args::show"],[1905,"hersir::controller::interactive::args::spawn"],[1991,"hersir::controller::interactive::command"],[2021,"hersir::controller::interactive::controller"],[2054,"hersir::controller::monitor"],[2136,"hersir::controller::monitor::node"],[2506,"hersir::controller::monitor::node::Error"],[2524,"hersir::controller::monitor::node::FragmentNodeError"],[2532,"hersir::controller::monitor::node::RestError"],[2535,"hersir::controller::monitor::node::legacy"],[2776,"hersir::controller::monitor::node::legacy::FragmentNodeError"],[2784,"hersir::error"],[2826,"hersir::spawn"],[2831,"hersir::spawn::interactive"],[2833,"hersir::spawn::monitor"],[2835,"hersir::spawn::standard"],[2836,"hersir::style"],[2934,"hersir::style::icons"],[3127,"hersir::utils"],[3132,"hersir::utils::dotifier"],[3149,"hersir::utils::introduction"],[3151,"hersir::utils::introduction::style"],[3165,"hersir::utils::introduction::style::icons"],[3190,"hersir::utils::vote_plan"],[3192,"clap_builder::builder::command"],[3193,"clap_builder::parser::matches::arg_matches"],[3194,"clap_builder"],[3195,"core::result"],[3196,"clap_builder::util::id"],[3197,"core::option"],[3198,"tonic::request"],[3199,"core::any"],[3200,"alloc::vec"],[3201,"std::path"],[3202,"jormungandr_automation::testing::observer"],[3203,"jormungandr_automation::testing::observer"],[3204,"core::fmt"],[3205,"core::fmt"],[3206,"thor::wallet::committee"],[3207,"core::error"],[3208,"alloc::string"],[3209,"std::collections::hash::map"],[3210,"jormungandr_automation::jormungandr::explorer::configuration"],[3211,"core::clone"],[3212,"rand_core"],[3213,"core::marker"],[3214,"rand_chacha"],[3215,"assert_fs::fixture::child"],[3216,"rand_core"],[3217,"chain_impl_mockchain::certificate::vote_plan"],[3218,"jormungandr_lib::interfaces::address"],[3219,"chain_impl_mockchain::vote::committee"],[3220,"chain_impl_mockchain::date"],[3221,"chain_impl_mockchain::certificate::pool"],[3222,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[3223,"serde::de"],[3224,"core::hash"],[3225,"core::hash"],[3226,"core::hash"],[3227,"thor::wallet"],[3228,"core::convert"],[3229,"chain_impl_mockchain::transaction::input"],[3230,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[3231,"core::convert"],[3232,"serde::ser"],[3233,"jormungandr_lib::interfaces::mint_token"],[3234,"std::collections::hash::map"],[3235,"jormungandr_automation::jormungandr::starter"],[3236,"jormungandr_automation::jormungandr::starter::testing_directory"],[3237,"jormungandr_automation::jormungandr::explorer::configuration"],[3238,"jormungandr_lib::interfaces::block0_configuration::block_content_max_size"],[3239,"jormungandr_lib::interfaces::committee"],[3240,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient"],[3241,"chain_addr"],[3242,"jormungandr_lib::interfaces::block0_configuration::leader_id"],[3243,"jormungandr_lib::interfaces::block0_configuration::kes_update_speed"],[3244,"core::iter::traits::iterator"],[3245,"chain_impl_mockchain::fee"],[3246,"jormungandr_lib::interfaces::block0_configuration::slots_duration"],[3247,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch"],[3248,"core::net::socket_addr"],[3249,"jormungandr_automation::jormungandr::starter"],[3250,"jormungandr_lib::time"],[3251,"jormungandr_lib::interfaces::config::node"],[3252,"jormungandr_lib::interfaces::config::node"],[3253,"jormungandr_lib::interfaces::config::node"],[3254,"chain_impl_mockchain::certificate::vote_plan"],[3255,"core::fmt"],[3256,"jormungandr_automation::jormungandr::legacy::config::node"],[3257,"reqwest::error"],[3258,"assert_fs::fixture::errors"],[3259,"serde_yaml::error"],[3260,"jormungandr_automation::jormungandr::explorer"],[3261,"jormungandr_automation::jormungandr::starter"],[3262,"chain_ser::deser"],[3263,"alloc::alloc"],[3264,"jormungandr_lib::interfaces::value"],[3265,"indicatif::progress"],[3266,"jormungandr_lib::interfaces::block0_configuration"],[3267,"indicatif::progress"],[3268,"jormungandr_lib::crypto::account"],[3269,"jormungandr_lib::interfaces::account_state"],[3270,"jormungandr_lib::interfaces::vote"],[3271,"chain_impl_mockchain::key"],[3272,"chain_impl_mockchain::block"],[3273,"jormungandr_lib::interfaces::rewards_info"],[3274,"core::fmt"],[3275,"chain_impl_mockchain::fragment"],[3276,"jortestkit::process::wait"],[3277,"serde_json::error"],[3278,"chain_crypto::hash"],[3279,"jormungandr_lib::time"],[3280,"chain_impl_mockchain::header::header"],[3281,"jormungandr_lib::interfaces::blockdate"],[3282,"jormungandr_lib::interfaces::leadership_log"],[3283,"jormungandr_lib::interfaces::peer_stats"],[3284,"std::io"],[3285,"core::marker"],[3286,"jormungandr_lib::interfaces::peer_stats"],[3287,"jormungandr_lib::interfaces::fragments_processing_summary"],[3288,"jormungandr_lib::interfaces::settings"],[3289,"std::process"],[3290,"jormungandr_lib::interfaces::stake_distribution"],[3291,"jormungandr_lib::interfaces::stats"],[3292,"jormungandr_lib::interfaces::updates"],[3293,"jormungandr_lib::interfaces::vote"],[3294,"core::time"],[3295,"jortestkit::measurement::attribute::consumption"],[3296,"jormungandr_automation::jormungandr"],[3297,"jormungandr_automation::jormungandr::verifier"],[3298,"jormungandr_lib::interfaces::stats"],[3299,"reqwest::blocking::response"],[3300,"yaml_rust::yaml"],[3301,"chain_time::era"],[3302,"jormungandr_automation::jormungandr::remote"],[3303,"jormungandr_automation::jormungandr::process"],[3304,"jortestkit::measurement::benchmark::consumption_benchmark"],[3305,"jormungandr_automation::testing::verify"],[3306,"thor::fragment::verifier"],[3307,"jortestkit::console::interactive"],[3308,"console::utils"],[3309,"console::utils"]],"d":["","","","","","","","centralized styles for the different items to display.","","Hersir is a command line tool that lets you deploy a …","","","","","","","Path to config file","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Enable verbose mode","","","","","","","","","","","","","wallet to utilise when testing jormungandr","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","derive the Context into a new context, seeding a new RNG …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","retrieve the original seed of the pseudo random generator","","","","","","","","","","","","","","","","","","contains all the data to start or interact with a node","","","for reference purpose only","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","node secret, this will be passed to the node at start up …","","","","","","","","","","","","","","","","","","contains all the data to start or interact with a node","for reference purpose only","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","node secret, this will be passed to the node at start up …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","wallet to utilise when testing jormungandr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Wallet which was given in configuration by address, thus …","","Generated wallet when we want let hersir generate new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Wallet which was given in configuration by address, thus …","Generated wallet when we want let hersir generate new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Node is going to be used by the <code>Controller</code> to monitor the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Prints wallets, nodes which can be used. Draw topology","Exit interactive mode","Sends Explorer queries","","","","","","send fragments","Prints nodes related data, like stats,fragments etc.","Spawn leader or passive node (also legacy)","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints everything","","","","","","","Prints available node with aliases that can be used","Prints trusted peer info","Prints Votes Plan","Prints available wallets with aliases that can be used","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends transaction","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Tally the vote","Sends transaction","Send the vote","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Prints block height","Prints fragments counts","Prints received fragment list","Prints logs, can filter logs to print only errors or …","Prints peers stats","","","","","","","","","Prints stats","Prints which nodes are upp","Active Vote Plans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints wallets, nodes which can be used. Draw topology","Exit interactive mode","Sends Explorer queries","","send fragments","Prints nodes related data, like stats,fragments etc.","Spawn leader or passive node (also legacy)","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","Node is going to be used by the <code>Controller</code> to monitor the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeegacy tolerant rest api This layer returns raw strings …","","","","","","","","","Specialized rest api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","style to apply when displaying the path to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","icons are not meant to add some SWAG to the display, not …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","style to apply when displaying the <code>Seed</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","icon associated the <code>jcli</code> command line binary","icon associated the <code>jcli</code> command line binary","","icon associated the test <code>Seed</code> to re-run the same tests with","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","centralized styles for the different items to display.","","","","","","","","style to apply when displaying the path to a …","","icons are not meant to add some SWAG to the display, not …","","","style to apply when displaying the <code>Seed</code>","","","","","","","","","","","","","","","","","","","","icon associated the <code>jcli</code> command line binary","icon associated the <code>jcli</code> command line binary","","icon associated the test <code>Seed</code> to re-run the same tests with","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,0,12,12,12,12,12,0,12,0,12,12,12,12,12,35,12,12,12,12,12,0,12,12,0,0,35,0,12,12,12,12,12,41,0,12,12,12,0,12,12,12,30,30,0,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,40,0,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,40,0,0,45,46,45,46,45,46,45,46,45,46,45,46,46,45,46,45,45,45,45,45,45,45,45,46,45,45,45,45,46,45,46,45,46,46,46,46,46,46,45,46,45,45,46,45,46,45,46,45,46,45,0,54,0,54,0,0,54,42,21,21,54,21,54,21,21,21,42,21,54,21,54,21,54,21,21,21,54,54,21,54,54,54,54,21,54,21,54,21,54,21,0,42,21,21,21,21,42,54,21,21,54,42,21,54,21,54,21,54,0,21,21,54,0,21,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,269,269,60,33,0,33,60,0,0,0,270,35,270,60,35,33,60,35,33,60,35,60,35,35,35,60,35,33,60,35,33,60,60,35,33,60,60,60,60,60,35,60,35,33,33,60,35,35,33,35,35,60,35,60,35,60,35,33,35,35,60,35,33,60,35,33,35,35,35,35,35,60,35,33,60,35,33,60,35,33,60,35,33,60,35,33,0,0,0,78,27,78,27,78,27,78,27,78,27,27,78,27,78,27,78,27,78,27,78,27,78,27,78,27,78,78,27,27,78,78,27,78,27,78,27,78,27,78,27,78,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,0,0,15,15,0,0,0,0,0,0,18,29,18,29,86,86,0,0,0,0,0,86,0,0,0,123,22,123,91,91,14,14,0,95,13,91,13,85,26,22,86,13,85,26,22,86,13,13,13,85,26,22,86,13,85,26,22,86,0,28,28,14,28,13,22,14,14,121,26,0,0,0,0,0,13,85,26,22,86,13,85,26,22,86,13,85,26,22,86,123,14,91,13,85,26,22,86,13,14,91,13,85,26,22,86,86,13,85,26,22,86,26,91,13,85,26,22,86,13,85,26,22,86,13,85,26,22,86,91,26,14,14,91,14,91,26,91,91,91,91,91,26,91,123,91,13,13,0,91,22,91,91,91,28,28,91,22,22,26,13,91,14,14,0,85,121,26,22,13,85,26,22,86,86,123,91,91,85,13,85,26,22,86,13,85,26,22,86,14,13,85,26,22,86,123,91,91,28,0,28,13,28,28,13,85,26,22,86,0,13,91,271,271,272,272,271,272,273,274,274,274,274,273,274,273,274,98,15,15,0,0,0,0,98,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,14,95,14,14,95,14,95,14,95,14,95,95,14,14,95,14,95,14,14,95,14,14,95,14,14,95,14,95,14,95,14,14,95,14,14,95,14,95,14,14,14,95,14,14,95,14,95,14,95,14,14,95,14,95,14,14,95,14,14,95,14,14,95,14,14,14,95,14,95,14,95,14,14,95,14,95,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,271,271,272,272,271,272,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,28,121,28,121,28,121,28,121,28,28,28,121,28,121,28,121,28,121,28,121,28,121,28,121,28,121,28,121,28,121,28,28,121,28,121,28,121,28,121,28,121,28,28,28,28,28,121,29,29,0,0,29,29,29,29,0,29,29,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,273,274,274,274,274,273,274,273,274,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,17,138,17,138,138,17,138,138,0,0,17,138,138,17,17,138,17,0,138,138,138,138,138,138,17,138,126,0,17,0,0,0,0,0,0,0,17,17,0,138,138,17,0,17,138,138,138,17,138,17,17,138,17,17,138,126,0,17,17,17,16,16,126,16,126,16,16,16,16,16,16,16,16,16,16,126,16,126,16,0,126,16,0,16,126,126,126,126,16,16,126,16,129,0,126,16,16,126,16,16,0,179,16,16,16,180,184,185,184,185,129,180,129,129,16,16,126,16,16,16,16,179,16,126,126,16,126,16,126,16,126,16,16,16,16,275,276,277,278,279,280,281,279,275,277,278,279,276,278,279,276,280,281,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,174,174,174,0,0,0,126,0,174,174,174,126,0,144,0,147,144,147,144,144,144,0,0,149,147,147,144,147,144,144,0,147,144,144,144,147,144,147,144,147,144,147,144,149,144,149,282,147,144,144,144,144,144,144,147,144,147,144,147,144,147,144,149,0,0,0,0,0,148,0,0,0,0,0,0,148,148,148,148,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,148,148,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,150,151,152,153,154,148,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,148,150,151,152,153,154,0,0,155,156,156,156,155,155,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,156,155,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,155,156,0,157,157,157,157,157,157,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,0,157,157,157,157,0,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,161,161,161,161,161,0,0,0,0,0,0,0,0,161,161,161,162,163,164,165,166,167,168,169,162,163,164,165,166,167,168,169,162,163,164,165,166,167,168,169,161,161,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,163,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,162,163,164,165,166,167,168,169,161,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,163,0,163,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,161,162,163,164,165,166,167,168,169,171,171,0,0,0,172,173,172,173,172,173,171,171,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,172,173,171,171,172,173,171,172,173,171,172,173,172,173,0,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,172,173,174,174,174,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,0,149,149,149,149,149,149,149,149,149,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,0,0,0,0,0,0,0,129,129,129,179,179,181,129,179,181,129,179,129,129,129,181,129,129,179,181,129,179,181,129,179,181,129,129,181,179,181,129,179,181,129,129,179,181,129,179,181,129,129,179,179,181,129,129,129,0,129,181,129,129,129,129,129,129,129,129,129,179,179,179,181,129,179,181,129,179,181,129,179,181,129,129,138,138,189,199,199,138,138,138,0,138,0,0,138,138,189,197,138,138,138,138,138,138,197,138,0,0,0,0,199,0,0,0,138,138,189,189,0,189,189,138,199,138,0,138,138,138,138,199,0,186,186,186,186,186,186,195,185,186,283,185,185,185,170,186,186,185,170,195,138,180,199,175,189,186,197,185,170,195,138,180,199,175,189,186,197,185,195,180,175,186,195,180,175,186,170,170,170,170,185,185,170,195,138,180,180,199,175,189,186,197,185,170,195,138,180,199,175,189,186,197,186,185,170,195,138,180,199,175,189,186,197,186,186,197,197,197,197,197,185,185,180,195,138,138,199,199,175,189,189,186,197,197,175,175,283,185,186,186,185,170,195,138,138,138,138,138,138,138,138,180,199,199,175,175,189,189,189,189,189,189,186,197,195,195,170,170,170,170,195,195,170,170,185,170,170,170,170,185,195,195,185,170,195,138,180,199,175,189,186,197,186,186,195,185,170,195,138,180,199,175,189,186,197,185,170,195,138,180,199,175,189,186,197,185,185,185,170,186,0,185,180,283,185,185,185,180,283,185,180,185,283,185,283,185,185,185,138,199,170,197,186,185,170,195,180,175,186,186,186,186,186,186,186,170,180,185,185,185,180,185,185,185,195,195,195,195,186,186,185,186,195,283,185,283,185,186,186,186,186,186,186,185,186,138,199,189,186,186,186,186,185,185,185,195,186,195,180,175,186,138,199,189,197,185,170,195,138,180,199,175,189,186,197,185,170,195,138,180,199,175,189,186,197,185,170,195,138,180,199,175,189,186,197,186,195,0,186,185,170,195,138,180,199,175,189,186,197,185,195,185,275,276,277,278,279,280,281,279,275,277,278,279,276,278,279,276,280,281,284,285,284,285,284,285,284,285,286,286,286,0,199,199,225,0,0,0,0,0,0,0,199,239,0,199,239,225,225,0,0,199,211,211,211,211,211,195,131,283,184,184,184,131,131,131,131,131,131,131,211,184,131,239,211,225,184,131,239,211,225,184,131,131,211,225,211,225,170,170,131,184,131,239,211,225,184,131,239,211,225,211,184,131,131,239,211,225,211,211,225,131,211,225,175,283,184,131,211,211,211,184,131,239,211,225,225,184,184,131,131,131,184,131,239,211,225,186,195,184,131,239,211,225,184,131,239,211,225,184,131,184,184,131,211,184,184,283,184,184,131,131,283,184,131,283,184,131,283,184,131,184,184,131,131,184,131,170,211,184,131,211,211,131,131,211,131,131,211,211,170,131,131,184,131,184,184,184,184,184,211,211,211,184,131,131,131,211,131,131,211,195,131,283,184,131,283,184,131,211,211,211,211,211,211,184,131,211,211,211,211,184,211,184,131,131,131,131,131,131,184,131,211,211,225,131,131,184,131,239,211,225,184,131,239,211,225,184,131,239,211,225,211,184,131,239,211,225,184,131,184,131,284,285,284,285,284,285,284,285,92,92,92,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,0,0,0,0,0,0,0,0,247,249,250,251,252,253,0,247,249,250,251,252,253,247,249,250,251,252,253,247,247,249,249,250,250,251,251,252,252,253,253,247,249,250,251,252,253,247,249,250,251,252,253,0,247,249,250,251,252,253,0,0,247,249,250,251,252,253,247,249,250,251,252,253,247,249,250,251,252,253,0,0,0,247,249,250,251,252,253,247,249,250,251,252,253,247,249,250,251,252,253,247,249,250,251,252,253,0,254,256,257,258,259,260,261,262,263,264,265,266,0,0,0,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,254,254,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,0,254,256,257,258,259,260,261,262,263,264,265,266,0,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,0,0,0,0,0,0,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,254,256,257,258,259,260,261,262,263,264,265,266,0,0,0,0,0,0,0,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,0,0,0,247,249,250,251,252,253,0,0,0,0,0,0,0,0,254,256,257,258,259,260,261,262,263,264,265,266,0,0,0,0,0,0,0,0,0,0,0,0,0,287],"f":[0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[],[[9,[8]]]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[5,4],[[7,[3,6]]]],[[5,4],[[7,[3,6]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[12,13],12],0,[[12,14],12],[[12,15],12],[-1,-2,[],[]],[-1,-2,[],[]],[12,[[7,[16,17]]]],0,0,[[12,[19,[18]]],12],[[],12],[2,-1,[]],[2,-1,[]],[[20,21],[[7,[3,17]]]],[2,3],0,[[12,[9,[22]]],12],0,[12,3],[-1,-1,[]],[[],2],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[[12,23],3],0,[[12,[25,[24]]],12],0,[[12,26],12],0,0,0,0,0,[[12,27],12],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],0,0,[[12,[19,[28]]],12],0,[-1,-2,[],[]],0,[[12,29],12],[[12,[19,[29]]],12],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[30,31],32],[[30,31],32],[-1,-1,[]],[33,30],[34,30],[[[36,[35]],[36,[18]]],[[7,[37,30]]]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[30,[[9,[38]]]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[40,31],32],[[40,31],32],[-1,-1,[]],[[[43,[41,42]],22],[[7,[44,40]]]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[[46,[-1]]],[[46,[-1]]],[47,48,49]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[[[46,[50]]],[[46,[50]]]],[2,3],[2,3],[[45,45],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[45,31],32],[[45,31],32],[-1,-1,[]],[-1,-1,[]],[52,[[7,[-1]]],[]],[52,[[7,[45]]]],[-1,45,48],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[45,[[46,[50]]]],0,[[[46,[-1]]],-1,48],[[[46,[-1]]],45,48],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[[-1,-2],3,[],[]],0,0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[21,53],3],0,[[21,31],32],[[54,31],32],[[54,31],32],[-1,-1,[]],[33,54],[30,54],[40,54],[-1,-1,[]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[43,[41,42]],14,[36,[29]],[36,[18]],[9,[22]],[36,[28]],[46,[-1]]],[[7,[21,54]]],[48,55]],0,0,0,[[21,14,[46,[-1]]],3,[48,55]],[[21,[36,[29]]],[[7,[3,54]]]],[21,3],0,[54,[[9,[38]]]],0,[-1,-2,[],[]],[-1,39,[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[[-1,-2],3,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[[42,31],32],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],0,0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[56,31],32],[-1,-1,[]],[57,56],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[56,58],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[56,57],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[35,[[7,[59,33]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[35,35],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[35,[[7,[61,33]]]],[[35,62,63],[[7,[64,33]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[60]]],65],[2,3],[2,3],[2,3],[[60,60],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[29,35],[[60,31],32],[[35,31],32],[[33,31],32],[[33,31],32],[-1,-1,[]],[29,35],[-1,-1,[]],[-1,-1,[]],[[29,-1],35,[55,48]],[[29,-1],35,[55,48]],[[-1,-2],66,[67,49],68],[[35,69],51],[[60,-1],3,70],[35,71],[[],2],[[],2],[[],2],[35,[[9,[72]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[35,-1],[[73,[3]]],[[74,[20]]]],[35,[[9,[75]]]],[35,29],0,[35,[[7,[76,33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[35]],[43,[41,42]]],[[7,[[3,[[19,[64]],[43,[41,77]]]],54]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[78,78],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],27],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[27,31],32],[[78,31],32],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,78,[[79,[41]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[27,78],27],[[78,-1],78,[[79,[41]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[80]]],65],[2,3],[[80,80],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[80,31],32],[-1,-1,[]],[[[36,[35]],[36,[28]],37],[[3,[[43,[80,56]],[19,[81]]]]]],[[-1,-2],66,[67,49],68],[[80,-1],3,70],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],0,[[80,-1],7,82],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[[36,[29]]],[[7,[[3,[[19,[35]],[19,[64]]]],33]]]],[[59,[84,[83,66]]],[[19,[64]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,15],[13,27],[13,13],[85,85],[26,26],[22,22],[86,86],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,0,0,0,0,0,0,0,[[],26],[[],87],[[],88],[[],89],[[],90],[[],39],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[13]]],65],[-1,[[7,[85]]],65],[-1,[[7,[26]]],65],[-1,[[7,[22]]],65],[-1,[[7,[86]]],65],0,0,0,[2,3],[2,3],[2,3],[2,3],[2,3],0,0,0,[[13,31],32],[[85,31],32],[[26,31],32],[[22,31],32],[[86,31],32],[[86,31],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,52],[[7,[91,92]]]],0,[52,86],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,93],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],3,[],[]],0,[[],15],[2,-1,[]],[2,-1,[]],[-1,[[7,[15]]],65],[2,3],[[15,31],32],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[14,94],[[95,94],95],0,[14,96],[[95,96],95],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,14],[14,14],[[-1,-2],3,[],[]],[[95,97],95],[14,[[19,[97]]]],[[95,[19,[97]]],95],0,[14,98],[[95,98],95],0,[14,99],[[95,99],95],0,[[],14],[[],95],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[14]]],65],[14,100],[[95,100],95],0,[2,3],[2,3],[14,[[19,[101]]]],[[95,[19,[101]]],95],0,[[14,31],32],[-1,-1,[]],[-1,-1,[]],[14,51],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[14,102],0,[[95,-1],95,[[79,[41]]]],[14,[[0,[103]]]],[[95,[19,[-1]]],95,[[79,[41]]]],0,[14,104],[[95,104],95],0,[14,105],[[95,106],95],0,[14,107],[[95,108],95],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[14,[[9,[106]]]],[[95,[9,[106]]],95],0,[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,94],14],[[14,96],14],[[14,97],14],[[14,[19,[97]]],14],[[14,98],14],[[14,99],14],[[14,100],14],[[14,[19,[101]]],14],[[14,-1],14,[[79,[41]]]],[[14,[19,[-1]]],14,[[79,[41]]]],[[14,104],14],[[14,105],14],[[14,107],14],[[14,[9,[106]]],14],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[18]]],65],[2,3],[[18,31],32],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[91,51],91],0,[[91,51],91],0,[-1,-2,[],[]],[-1,-2,[],[]],[91,91],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[91]]],65],[91,[[9,[109]]]],0,[2,3],[[91,110],91],0,[[91,31],32],[-1,-1,[]],[91,41],[91,[[9,[110]]]],[91,[[9,[87]]]],[91,111],[91,[[9,[88]]]],[91,89],[91,51],[91,[[9,[112]]]],[[91,113],91],0,[91,91],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[91,51],[[91,87],91],0,[91,91],[[91,111],91],0,[[91,[9,[109]]],91],0,[[91,88],91],0,[[91,2],91],0,[[91,108],91],0,[[91,108],91],0,[[91,114],91],0,[[91,113],91],0,[52,91],[91,91],[[91,87],91],0,[[91,115],3],[91,91],[[91,89],91],0,[[91,-1],91,[[74,[20]]]],0,[[91,116],91],0,[[91,117],91],0,[[91,118],91],0,[[91,51],91],0,[-1,-2,[],[]],[[91,119],91],0,[[91,[19,[120]]],91],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[91,51],91],0,[[91,112],91],0,[-1,-2,[],[]],[[91,[19,[118]]],91],0,[[91,109],91],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,28],[121,121],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[28]]],65],[-1,[[7,[121]]],65],[2,3],[2,3],[[28,31],32],[[121,31],32],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[29,[[9,[39]]]],[29,[[9,[69]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[29,29],[[-1,-2],3,[],[]],[[],100],[[],60],[29,[[9,[41]]]],[29,[[9,[41]]]],[2,-1,[]],[2,-1,[]],[-1,[[7,[29]]],65],[29,100],[2,3],[[29,29],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[29,31],32],[-1,-1,[]],[[-1,-2],66,[67,49],68],[[29,69],51],[[29,-1],3,70],[29,39],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[29,51],[[-1,122,100,[43,[83,66]]],29,[[79,[69]]]],[[-1,122,[43,[83,66]]],29,[[79,[39]]]],[[-1,122,100,[43,[83,66]]],29,[[79,[69]]]],[-1,-2,[],[]],[29,[[43,[83,66]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[29,122],[-1,-2,[],[]],[29,[[9,[60]]]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[123,29],[[],123],[[123,52],123],[2,-1,[]],[2,-1,[]],[[123,100],123],0,[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,123,[[79,[69]]]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],0,[-1,-2,[],[]],[[123,66],123],[[123,-1],123,[[79,[39]]]],[[123,-1],123,[[79,[69]]]],[[123,83,66],123],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,87],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[-1,-2],3,[],[]],[[16,52],[[9,[72]]]],[16,[[19,[72]]]],[[16,80,124],125],[16,[[0,[103]]]],[[16,52],[[7,[125,17]]]],[16,[[19,[125]]]],[16,[[0,[103]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,[2,3],[2,3],0,[[16,91,52],[[7,[3,17]]]],[[126,31],[[7,[3,127]]]],[[126,31],[[7,[3,127]]]],[128,126],[-1,-1,[]],[-1,-1,[]],[129,16],[[],2],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[16,91],[[7,[130,17]]]],0,0,[[21,90],[[7,[16,17]]]],[[16,52],[[7,[115,17]]]],[[16,52],[[7,[42,17]]]],0,0,0,0,0,0,0,0,0,[16,21],0,[126,[[9,[38]]]],[[16,91],[[7,[131,17]]]],[16,[[7,[132,17]]]],[[16,52],[[7,[131,17]]]],[[16,52],[[7,[77,17]]]],0,[-1,-2,[],[]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,52],[[9,[35]]]],[16,90],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[17,31],32],[[17,31],32],[133,17],[134,17],[54,17],[135,17],[128,17],[136,17],[126,17],[137,17],[138,17],[139,17],[140,17],[141,17],[-1,-1,[]],[142,17],[143,17],[33,17],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[17,[[9,[38]]]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[144,144],[[-1,-2],3,[],[]],0,0,0,0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,[[[9,[39]],[36,[131]],[36,[131]],-1,-2],3,145,145],[2,3],[2,3],[[144,31],[[7,[3,127]]]],[[144,126],3],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[[39,39,39,[19,[39,146]]],144],0,[[-1,[19,[39,146]],144],[[7,[3,126]]],[]],[[147,[19,[39]],144],[[7,[3,126]]]],0,[[144,126],3],[144,3],[144,3],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[148,149],[[7,[3,17]]]],[[150,149],[[7,[3,17]]]],[[151,149],[[7,[3,17]]]],[[152,149],[[7,[3,17]]]],[[153,149],[[7,[3,17]]]],[[154,149],[[7,[3,17]]]],[[148,31],32],[[150,31],32],[[151,31],32],[[152,31],32],[[153,31],32],[[154,31],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[7,[148,6]]]],[4,[[7,[150,6]]]],[4,[[7,[151,6]]]],[4,[[7,[152,6]]]],[4,[[7,[153,6]]]],[4,[[7,[154,6]]]],[4,[[7,[148,6]]]],[4,[[7,[150,6]]]],[4,[[7,[151,6]]]],[4,[[7,[152,6]]]],[4,[[7,[153,6]]]],[4,[[7,[154,6]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[52,51],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[148,4],[[7,[3,6]]]],[[150,4],[[7,[3,6]]]],[[151,4],[[7,[3,6]]]],[[152,4],[[7,[3,6]]]],[[153,4],[[7,[3,6]]]],[[154,4],[[7,[3,6]]]],[[148,4],[[7,[3,6]]]],[[150,4],[[7,[3,6]]]],[[151,4],[[7,[3,6]]]],[[152,4],[[7,[3,6]]]],[[153,4],[[7,[3,6]]]],[[154,4],[[7,[3,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[155,149],[[7,[3,17]]]],[[156,149],[[7,[3,17]]]],[[155,31],32],[[156,31],32],[-1,-1,[]],[-1,-1,[]],[4,[[7,[155,6]]]],[4,[[7,[156,6]]]],[4,[[7,[155,6]]]],[4,[[7,[156,6]]]],[[],[[9,[8]]]],[52,51],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[155,4],[[7,[3,6]]]],[[156,4],[[7,[3,6]]]],[[155,4],[[7,[3,6]]]],[[156,4],[[7,[3,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[157,149],[[7,[3,17]]]],[[157,31],32],[-1,-1,[]],[4,[[7,[157,6]]]],[4,[[7,[157,6]]]],[52,51],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,11,[]],[[157,4],[[7,[3,6]]]],[[157,4],[[7,[3,6]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[158,149],[[7,[3,17]]]],[[158,31],32],[-1,-1,[]],[4,[[7,[158,6]]]],[4,[[7,[158,6]]]],[[],[[9,[8]]]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[158,4],[[7,[3,6]]]],[[158,4],[[7,[3,6]]]],0,0,[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[[159,149],[[7,[3,17]]]],[[159,31],32],[-1,-1,[]],[4,[[7,[159,6]]]],[4,[[7,[159,6]]]],[[],[[9,[8]]]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[159,4],[[7,[3,6]]]],[[159,4],[[7,[3,6]]]],0,0,[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[160,149],[[7,[3,17]]]],[[160,31],32],[-1,-1,[]],0,[4,[[7,[160,6]]]],[4,[[7,[160,6]]]],[[],[[9,[8]]]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[160,4],[[7,[3,6]]]],[[160,4],[[7,[3,6]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[161,149],3],[[162,149],3],[[163,149],3],[[164,149],3],[[165,149],3],[[166,149],3],[[167,149],3],[[168,149],3],[[169,149],3],[[161,31],32],[[162,31],32],[[163,31],32],[[164,31],32],[[165,31],32],[[166,31],32],[[167,31],32],[[168,31],32],[[169,31],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[7,[161,6]]]],[4,[[7,[162,6]]]],[4,[[7,[163,6]]]],[4,[[7,[164,6]]]],[4,[[7,[165,6]]]],[4,[[7,[166,6]]]],[4,[[7,[167,6]]]],[4,[[7,[168,6]]]],[4,[[7,[169,6]]]],[4,[[7,[161,6]]]],[4,[[7,[162,6]]]],[4,[[7,[163,6]]]],[4,[[7,[164,6]]]],[4,[[7,[165,6]]]],[4,[[7,[166,6]]]],[4,[[7,[167,6]]]],[4,[[7,[168,6]]]],[4,[[7,[169,6]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[52,51],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[[51,[9,[39]],52,[9,[2]],170],3],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[161,4],[[7,[3,6]]]],[[162,4],[[7,[3,6]]]],[[163,4],[[7,[3,6]]]],[[164,4],[[7,[3,6]]]],[[165,4],[[7,[3,6]]]],[[166,4],[[7,[3,6]]]],[[167,4],[[7,[3,6]]]],[[168,4],[[7,[3,6]]]],[[169,4],[[7,[3,6]]]],[[161,4],[[7,[3,6]]]],[[162,4],[[7,[3,6]]]],[[163,4],[[7,[3,6]]]],[[164,4],[[7,[3,6]]]],[[165,4],[[7,[3,6]]]],[[166,4],[[7,[3,6]]]],[[167,4],[[7,[3,6]]]],[[168,4],[[7,[3,6]]]],[[169,4],[[7,[3,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[[171,149],[[7,[3,17]]]],[[172,149],[[7,[3,17]]]],[[173,149],[[7,[3,17]]]],[[171,31],32],[[172,31],32],[[173,31],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[7,[171,6]]]],[4,[[7,[172,6]]]],[4,[[7,[173,6]]]],[4,[[7,[171,6]]]],[4,[[7,[172,6]]]],[4,[[7,[173,6]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[52,51],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,[[149,111,51,52,[9,[112]],51],[[7,[3,17]]]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[171,4],[[7,[3,6]]]],[[172,4],[[7,[3,6]]]],[[173,4],[[7,[3,6]]]],[[171,4],[[7,[3,6]]]],[[172,4],[[7,[3,6]]]],[[173,4],[[7,[3,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[174,31],32],[-1,-1,[]],[4,[[7,[174,6]]]],[4,[[7,[174,6]]]],[52,51],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[174,4],[[7,[3,6]]]],[[174,4],[[7,[3,6]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[149,52,52,52,2,106],[[7,[175,17]]]],[[149,52],[[9,[72]]]],[149,16],0,[149,16],[2,-1,[]],[2,-1,[]],[[[9,[39]],[36,[131]],[36,[131]],-1,-2],3,145,145],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[149,[[36,[131]]]],0,[149,[[19,[131]]]],[16,149],[149,[[36,[131]]]],0,[149,[[19,[131]]]],[[149,52,52,52,176],[[7,[175,17]]]],[[149,91],[[7,[131,17]]]],[[149,52,52,52],[[7,[175,17]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[149,[[36,[72]]]],0,[149,[[19,[72]]]],0,0,0,0,0,0,0,[[129,177],177],[129,178],[129,87],[[179,15],179],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[179,26],[[7,[129,17]]]],[[129,52,109],180],[[129,52],[[7,[72,17]]]],[129,[[19,[72]]]],0,[129,[[19,[125]]]],[129,[[0,[103]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[129,3],[181,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[129,3],0,[52,179],[-1,181,[[79,[39]]]],[[16,26],[[7,[129,17]]]],[[129,52],91],[[16,26,[183,[182]]],129],0,[[129,52],87],[[181,23],3],0,0,[129,26],0,[129,21],[[129,91,112],[[7,[184,17]]]],[[129,52,111,89],[[7,[185,17]]]],[[129,91],[[7,[185,17]]]],[[129,52],[[7,[77,17]]]],0,[[179,27],179],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[129,90],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[186,187],[[7,[188,189]]]],[[186,52],[[7,[188,189]]]],[[186,52],[[7,[39,189]]]],[[186,59],[[7,[[9,[[19,[190,146]]]],189]]]],[186,[[7,[[43,[39,[19,[190,146]],191]],189]]]],[[186,192,59],[[7,[[9,[[19,[106,146]]]],189]]]],0,[185,109],[186,39],[-1,39,[]],[185,41],[185,41],[185,41],[[170,52],3],[[186,193],[[7,[194,189]]]],[[186,193],[[7,[[19,[106,146]],189]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[185,3],[195,195],[180,180],[175,175],[186,186],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,[[170,[36,[52]]],51],[170,51],[185,131],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[180],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[186,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[186,3],[[186,108],[[7,[196,189]]]],[[197,197],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[185,[[7,[132,137]]]],[185,3],[[180,-1],3,198],[[195,31],[[7,[3,127]]]],[[138,31],32],[[138,31],32],[[199,31],[[7,[3,127]]]],[[199,31],[[7,[3,127]]]],[[175,31],[[7,[3,127]]]],[[189,31],[[7,[3,127]]]],[[189,31],[[7,[3,127]]]],[[186,31],[[7,[3,127]]]],[[197,31],[[7,[3,127]]]],[[197,31],[[7,[3,127]]]],[175,193],0,[-1,[[7,[[43,[193,200,191]],199]]],[]],[185,[[7,[[43,[201,200]],199]]]],[186,[[7,[[43,[193,200,191]],189]]]],[[186,[19,[39,146]]],[[7,[[43,[39,202,191]],189]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[189,138],[197,138],[128,138],[139,138],[203,138],[140,138],[-1,-1,[]],[134,138],[-1,-1,[]],[134,199],[-1,-1,[]],[-1,-1,[]],[193,175],[204,189],[205,189],[206,189],[134,189],[139,189],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,[[7,[195,197]]]],[[195,[36,[193]]],[[7,[[19,[194,146]],197]]]],[170,2],[170,[[19,[193,146]]]],[[170,207],[[19,[193,146]]]],[[],[[19,[52,146]]]],[[195,[19,[193,146]]],[[7,[[19,[81,146]],197]]]],[195,193],[170,[[19,[208,146]]]],[170,[[19,[39,146]]]],[185,[[19,[39]]]],[170,39],[[170,88],[[0,[103]]]],[170,39],[170,[[19,[39,146]]]],[185,195],[[195,[36,[106]]],209],[[195,[36,[193]]],[[7,[[19,[210,146]],197]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[186,211],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[185,51],[185,51],[185,108],[170,[[9,[212]]]],[186,[[7,[[19,[213,146]],189]]]],0,[[185,52],3],[[180,-1,-2],3,198,198],[-1,[[19,[39,146]]],[]],[185,39],[185,39],[185,[[19,[39]]]],[[180,-1],3,198],[[-1,193,212,192],3,[]],[[185,201,212,192],3],[[180,-1],3,198],[185,3],[[-1,193],3,[]],[[185,201],3],[[-1,193,39],3,[]],[[185,201,39],3],[185,3],[185,170],[138,[[0,[103]]]],[199,[[0,[103]]]],0,[197,39],[186,[[7,[[19,[214,146]],189]]]],[[131,180],185],[[-1,-2],170,[215,216],[215,216]],[109,195],[[177,39],180],[193,175],[39,186],[[39,-1],186,[[74,[20]]]],[[39,217],186],[186,[[7,[[19,[218,146]],189]]]],[186,[[7,[[19,[218,146]],189]]]],[186,[[7,[[19,[218,146]],189]]]],[186,[[7,[[19,[39,146]],189]]]],0,0,0,[185,180],0,0,[185,3],[185,3],[185,3],[[195,[36,[193]],193],[[7,[[19,[194,146]],197]]]],[[195,193],[[7,[[19,[194,146]],197]]]],[[195,[36,[193]],193],[[7,[[19,[210,146]],197]]]],[[195,210],[[7,[3,197]]]],[186,219],[186,[[7,[176,189]]]],[185,186],[[186,108],[[7,[[19,[196,146]],189]]]],0,[[-1,[19,[81,146]],51],[[7,[220,199]]],[]],[[185,[19,[81]],51],[[7,[220,199]]]],[[-1,81],[[7,[175,199]]],[]],[[185,81],[[7,[175,199]]]],[[186,81],[[7,[175,189]]]],[[186,[19,[81,146]],51],[[7,[220,189]]]],[[186,[19,[106,146]]],[[7,[3,189]]]],[[186,[19,[[19,[106,146]],146]]],[[7,[3,189]]]],[[186,-1],3,[[79,[39]]]],[186,[[7,[221,189]]]],[185,[[7,[[9,[222]],138]]]],[186,[[7,[39,189]]]],[138,[[9,[38]]]],[199,[[9,[38]]]],[189,[[9,[38]]]],[186,[[7,[223,189]]]],[[186,108],[[7,[223,189]]]],[186,[[7,[[19,[39,146]],189]]]],[186,[[7,[224,189]]]],[185,[[7,[225,140]]]],[185,192],[185,[[7,[192,138]]]],[195,210],[186,[[7,[192,189]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[186,[[7,[[43,[192,226,191]],189]]]],[[195,194],[[7,[3,197]]]],[109,39],[186,[[7,[[19,[227,146]],189]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[185,[[7,[3,138]]]],[[195,228,229],3],[185,[[7,[[9,[222]],138]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[211,187],[[7,[39,134]]]],[[211,52],[[7,[39,134]]]],[[211,59],[[7,[39,134]]]],[211,[[7,[39,134]]]],[[211,192,59],[[7,[39,134]]]],0,[131,109],[-1,39,[]],[184,41],[184,41],[184,41],[131,39],[131,39],[131,39],0,[131,230],[131,3],[[131,52],3],[[211,193],[[7,[[19,[106,146]],189]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[184,3],[131,[[7,[3,231]]]],0,[211,211],[225,225],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,[131,232],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[211,3],[2,3],[131,3],[2,3],[2,3],[2,3],[2,3],[211,3],[[211,108],[[7,[39,134]]]],[[225,225],51],[[131,93],[[7,[132,137]]]],[[211,31],[[7,[3,127]]]],[[225,31],[[7,[3,127]]]],0,[-1,[[7,[[43,[193,200,191]],199]]],[]],[184,[[7,[[43,[201,200]],199]]]],[131,[[7,[[43,[193,200,191]],199]]]],[211,[[7,[[43,[193,200,191]],189]]]],[211,[[7,[[43,[193,200,191]],189]]]],[[211,[19,[39,146]]],[[7,[[43,[39,202,191]],189]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[233,225],[-1,-1,[]],[184,[[7,[234,138]]]],[184,[[19,[39]]]],[131,[[19,[39,146]]]],[131,195],0,[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[184,51],[131,51],[184,51],[184,108],[131,108],[211,[[7,[39,134]]]],[184,211],[[184,52],3],[-1,[[19,[39,146]]],[]],[184,39],[184,[[19,[39]]]],[131,[[19,[39,146]]]],[131,39],[[-1,193,212,192],3,[]],[[184,201,212,192],3],[[131,193,212,192],3],[[-1,193],3,[]],[[184,201],3],[[131,193],3],[[-1,193,39],3,[]],[[184,201,39],3],[[131,193,39],3],[184,3],[184,3],[131,3],[131,3],[184,170],0,0,[211,[[7,[39,134]]]],[[131,180],184],[[235,236,[9,[90]],39],[[7,[131,140]]]],[[39,217],211],[211,[[7,[39,134]]]],[131,109],0,[211,[[7,[39,134]]]],[131,118],0,[211,[[7,[39,134]]]],[211,[[7,[39,134]]]],0,[131,108],[131,51],0,[131,108],[184,180],0,[184,3],[184,3],[184,3],[211,219],0,[211,[[7,[39,134]]]],[184,186],[131,186],[131,109],[131,186],[211,217],0,[131,39],[[211,108],[[7,[39,134]]]],0,[[131,-1],186,[[74,[20]]]],[[-1,[19,[81,146]],51],[[7,[220,199]]],[]],[[184,[19,[81]],51],[[7,[220,199]]]],[[131,[19,[81,146]],51],[[7,[220,199]]]],[[-1,81],[[7,[175,199]]],[]],[[184,81],[[7,[175,199]]]],[[131,81],[[7,[175,199]]]],[[211,81],[[7,[175,134]]]],[[211,[19,[81,146]],51],[[7,[220,189]]]],[[211,[19,[106,146]]],[[7,[237,134]]]],[[211,[19,[[19,[106,146]],146]]],[[7,[3,134]]]],[[211,-1],3,[[79,[39]]]],[211,[[7,[39,134]]]],[184,[[7,[[9,[222]],138]]]],[131,3],[211,[[7,[39,134]]]],[211,[[7,[39,134]]]],[[211,108],[[7,[39,134]]]],[211,[[7,[39,134]]]],[184,[[7,[238,138]]]],[211,[[7,[39,134]]]],[184,[[7,[225,140]]]],[[131,239],[[7,[225,140]]]],[131,[[9,[90]]]],[131,3],[131,[[9,[87]]]],0,[131,240],[184,192],[131,192],[211,[[7,[192,189]]]],[-1,-2,[],[]],[-1,-2,[],[]],[131,241],[131,120],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[211,[[7,[39,134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[184,[[7,[3,138]]]],[[131,239,229],[[7,[3,140]]]],[184,[[7,[[9,[222]],138]]]],[[131,229],[[7,[[9,[222]],242]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[92,31],32],[[92,31],32],[138,92],[243,92],[137,92],[136,92],[17,92],[128,92],[244,92],[126,92],[-1,-1,[]],[142,92],[245,92],[189,92],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[92,[[9,[38]]]],[-1,39,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[[[36,[[3,[186,180]]]]],3],[5,[[7,[3,92]]]],0,[[],246],[13,[[7,[3,92]]]],[[[36,[[3,[186,180]]]]],3],[[13,5],[[7,[3,92]]]],[[13,5],[[7,[3,92]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[247,248],[2,-1,[]],[249,248],[2,-1,[]],[250,248],[2,-1,[]],[251,248],[252,248],[2,-1,[]],[253,248],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[254,255],[256,255],[2,-1,[]],[257,255],[2,-1,[]],[258,255],[2,-1,[]],[2,-1,[]],[259,255],[260,255],[2,-1,[]],[2,-1,[]],[261,255],[2,-1,[]],[262,255],[2,-1,[]],[263,255],[264,255],[2,-1,[]],[265,255],[2,-1,[]],[266,255],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[26,52],3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[[267,42],39],[[267,29],39],[[267,21,-1],[[73,[3]]],268],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[26,52],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,80],125,[]]],"c":[],"p":[[3,"Command",3192],[15,"usize"],[15,"tuple"],[3,"ArgMatches",3193],[3,"Args",9],[6,"Error",3194],[4,"Result",3195],[3,"Id",3196],[4,"Option",3197],[3,"Request",3198],[3,"TypeId",3199],[3,"NetworkBuilder",34],[3,"Config",461],[3,"BlockchainConfiguration",713],[4,"BlockchainConfigurationOrHash",685],[3,"Controller",1053],[4,"Error",1206],[4,"CommitteeTemplate",805],[3,"Vec",3200],[3,"Path",3201],[3,"Settings",189],[3,"ExplorerTemplate",461],[3,"Event",3202],[8,"Observer",3202],[3,"Rc",3203],[3,"SessionSettings",461],[3,"Topology",386],[3,"VotePlanTemplate",920],[4,"WalletTemplate",969],[4,"Error",94],[3,"Formatter",3204],[6,"Result",3204],[4,"Error",301],[4,"Error",3205],[3,"Wallet",301],[15,"slice"],[3,"CommitteeDataManager",3206],[8,"Error",3207],[3,"String",3208],[4,"Error",118],[6,"NodeAlias",34],[3,"NodeSetting",253],[3,"HashMap",3209],[3,"ExplorerConfiguration",3210],[3,"Seed",137],[3,"Random",137],[8,"Clone",3211],[8,"RngCore",3212],[8,"Sized",3213],[6,"ChaChaRng",3214],[15,"bool"],[15,"str"],[3,"ChildPath",3215],[4,"Error",189],[8,"CryptoRng",3212],[4,"VotePlanSettings",276],[3,"VotePlan",3216],[6,"VotePlanId",3217],[3,"Address",3218],[4,"WalletType",301],[3,"CommitteeId",3219],[3,"BlockDate",3220],[6,"PoolId",3221],[4,"Initial",3222],[8,"Deserializer",3223],[15,"u64"],[8,"Hash",3224],[8,"BuildHasher",3224],[6,"WalletAlias",3225],[8,"Hasher",3224],[3,"Identifier",3226],[4,"Wallet",3225],[6,"Result",3227],[8,"AsRef",3228],[3,"UnspecifiedAccountIdentifier",3229],[3,"InitialUTxO",3222],[3,"StakePool",3230],[3,"Node",386],[8,"Into",3228],[3,"VotePlanKey",429],[4,"Fragment",3231],[8,"Serializer",3232],[3,"TokenIdentifier",3233],[3,"Iter",3209],[3,"NodeConfig",461],[4,"SessionMode",461],[3,"PathBuf",3201],[4,"Level",3234],[4,"PersistenceMode",3235],[4,"TestingDirectory",3236],[3,"SpawnParams",832],[4,"Error",2784],[3,"ExplorerParams",3210],[3,"SecondsSinceUnixEpoch",3237],[3,"BlockchainBuilder",713],[3,"BlockContentMaxSize",3238],[3,"CommitteeIdDef",3239],[6,"ConsensusVersion",685],[3,"ActiveSlotCoefficient",3240],[4,"Discrimination",3241],[3,"ConsensusLeaderId",3242],[3,"KesUpdateSpeed",3243],[8,"Iterator",3244],[3,"LinearFee",3245],[3,"SlotDuration",3246],[15,"u8"],[3,"NumberOfSlotsPerEpoch",3247],[15,"u32"],[4,"SocketAddr",3248],[3,"FaketimeConfig",3235],[4,"LeadershipMode",3235],[3,"Version",3249],[3,"Duration",3237],[3,"Mempool",3250],[3,"NodeConfig",3251],[3,"Policy",3251],[3,"PreferredListConfig",3251],[3,"Multiaddr",3252],[3,"TopicsOfInterest",3251],[3,"TrustedPeer",3251],[3,"PrivateParameters",920],[3,"Value",3253],[3,"WalletTemplateBuilder",1024],[3,"VotePlan",3217],[3,"VotePlanDef",3254],[4,"InteractiveCommandError",1053],[3,"Error",3204],[3,"Error",3227],[3,"MonitorController",2054],[3,"Starter",3235],[3,"JormungandrProcess",2535],[3,"ExplorerProcess",3255],[4,"Error",3256],[3,"Error",3257],[3,"FixtureError",3258],[3,"Error",3259],[4,"ExplorerError",3255],[4,"Error",2136],[4,"ReadError",3260],[4,"StartupError",3235],[4,"WalletError",3225],[4,"FragmentSenderError",3261],[4,"WriteError",3260],[3,"ConsoleWriter",1260],[8,"Fn",3262],[3,"Global",3263],[3,"JormungandrInteractiveCommandExec",1260],[4,"Describe",1329],[3,"UserInteractionController",2021],[3,"DescribeTopology",1329],[3,"DescribeWallets",1329],[3,"DescribeVotePlans",1329],[3,"DescribeNodes",1329],[3,"DescribeAll",1329],[4,"Explorer",1489],[3,"ExplorerTip",1489],[4,"Send",1541],[3,"CastVote",1572],[3,"VoteTally",1603],[3,"SendTransaction",1631],[4,"Show",1660],[3,"ShowNodeStats",1660],[3,"ShowLogs",1660],[3,"ShowFragmentCount",1660],[3,"ShowFragments",1660],[3,"ShowBlockHeight",1660],[3,"ActiveVotePlans",1660],[3,"ShowPeerStats",1660],[3,"ShowStatus",1660],[3,"JormungandrLogger",2136],[4,"Spawn",1905],[3,"SpawnPassiveNode",1905],[3,"SpawnLeaderNode",1905],[4,"InteractiveCommand",1991],[3,"MemPoolCheck",2136],[3,"Value",3264],[3,"ProgressBar",3265],[3,"Block0Configuration",3266],[3,"MonitorControllerBuilder",2054],[3,"ProgressBarController",2136],[3,"NetworkBuilderObserver",2054],[3,"MultiProgress",3265],[3,"Arc",3267],[3,"LegacyNode",2535],[3,"Node",2136],[3,"JormungandrRest",2136],[3,"Identifier",3268],[3,"AccountState",3269],[4,"RestError",2136],[3,"AccountVotes",3216],[3,"RandomState",3209],[3,"Hash",3270],[3,"Hash",3271],[3,"Block",3272],[3,"JormungandrClient",2136],[3,"EpochRewardsInfo",3273],[4,"MockClientError",2136],[8,"Display",3204],[4,"FragmentNodeError",2136],[3,"FragmentLog",3274],[6,"FragmentId",3231],[4,"FragmentStatus",3274],[3,"ScanError",3275],[4,"Error",3276],[3,"Error",3277],[4,"Error",3278],[3,"SystemTime",3237],[3,"LogEntry",3234],[3,"HandshakeResponse",3279],[4,"Header",3280],[3,"BackwardCompatibleRest",2535],[3,"BlockDate",3281],[3,"LeadershipLog",3282],[3,"PeerStats",3283],[8,"Read",3284],[8,"Send",3213],[3,"RestSettings",3285],[3,"PeerRecord",3283],[3,"RawRest",3286],[3,"FragmentsProcessingSummary",3287],[3,"SettingsDto",3288],[3,"ExitStatus",3289],[3,"StakeDistributionDto",3290],[3,"NodeStatsDto",3291],[4,"Status",2535],[3,"UpdateProposalStateDef",3292],[3,"VotePlanStatus",3216],[3,"ChainLength",3293],[3,"Duration",3294],[3,"NamedProcess",3295],[4,"JormungandrError",3296],[3,"JormungandrStateVerifier",3297],[4,"NodeState",3291],[6,"HeaderId",3293],[3,"Child",3289],[3,"CommunicationParams",3298],[3,"Response",3299],[4,"Yaml",3300],[4,"StartupVerificationMode",2535],[3,"TimeEra",3301],[3,"RemoteJormungandr",3302],[4,"ShutdownError",3303],[4,"ConsumptionBenchmarkError",3304],[4,"Error",3305],[4,"FragmentVerifierError",3306],[3,"UserInteraction",3307],[3,"binary",2836],[3,"Style",3308],[3,"seed",2836],[3,"error",2836],[3,"success",2836],[3,"info",2836],[3,"scenario_title",2836],[3,"seed",2934],[3,"Emoji",3308],[3,"jcli",2934],[3,"jormungandr",2934],[3,"scenario",2934],[3,"wallet",2934],[3,"account",2934],[3,"transaction",2934],[3,"block",2934],[3,"blockchain",2934],[3,"success",2934],[3,"failure",2934],[3,"ignored",2934],[3,"Dotifier",3132],[8,"Write",3284],[13,"Private",299],[6,"WalletLib",301],[13,"Generated",826],[13,"External",826],[13,"External",1015],[13,"Generated",1015],[13,"NodeFailedToBootstrap",2506],[13,"ShutdownProcedure",2506],[13,"NodeFailedToShutdown",2506],[13,"FragmentNotInMemPoolLogs",2506],[13,"FragmentIsPendingForTooLong",2506],[13,"CannotCreateFile",2506],[13,"CannotWriteYamlFile",2506],[8,"InteractiveCommandExec",1260],[8,"FragmentNode",2136],[13,"CannotSendFragment",2776],[13,"CannotSendFragmentBatch",2776],[13,"NonSuccessErrorCode",2532],[8,"VotePlanExtension",3190]]},\
"iapyx":{"doc":"Library part of iapyx which serves as a core lib for this …","t":"DENNNNNNNNNNNNNDNDEENNNNNNNDNENNNDDENNNNNNNNNNNNDENNNNNDNDNNNNENNDNNMMMMMMMMMMMMAMMAAMMAMMMMAMMMMMMMMMMMMMAMMAMMMMMMMNDCCENNNNNNNNNLLMMLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMMMNNNNNDENNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLFFCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAACCCCCCCAAANNNDNNNENNMLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLMLLLLLLLLMLLNNNDENMMLLLLLLLMMMLLLLLLLLLLLLLMLLLLLLLLMMLMMMLLLLLLLLLLMMMLLNNNDENNNEMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLNNNNDENNNNNDNNNNLMLLLLLLMLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLMCCCCCCCAAADRMLLLLLLLLLMLLLLLLMMMLMLLLLCCCCCAAADLLLLLLLLLLLMLMLLLLLMNCNENCALLLLLLLLLLLLLLLLALLLLLLDMMLLLLLLLLLMLLLMMMLMLLLLMMMLMDMLLLLLLLLLMLLMMMLMLLLLMMLMRDLLLLLLLLLMLLMLLLLLLRDLLMMLLLLLLLMLLLLLLLLMMLLMLLLLLCCCCCCAAADENNNNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENDNNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLNNNENDGINNNNNNNKKMKMFKAAFFNNNENDGINNNNNNNLLLLLLLLLLLLLLLLLLLKLKLMKLMLLLLLLLLLFLKLLLLLLLLLLNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLL","n":["ArtificialUserLoad","ArtificialUserLoadError","Backend","BackendError","BackendError","BackendNotDefined","Bech32","CannotFindProposal","CannotLeakSecret","CannotReadQrCode","CannotRecover","CannotRetrieveFunds","CannotSendVote","ConfigError","ConfigurationError","Controller","Controller","ControllerBuilder","ControllerBuilderError","ControllerError","InvalidProposalsLen","InvalidSecretKeyLength","Key","LoadConfig","MissingGroupForToken","MissingProposal","MissingVoteplan","MultiController","MultiController","MultiControllerError","MultiControllerError","NoMoreVotesToVote","NoSecretKeyEncoded","NodeLoad","NodeLoadConfig","NodeLoadError","NotEnoughProposals","NotEnoughWallets","ParseAccountIdentifier","PinRead","PinRead","RandomChoiceFailed","RequestGen","Rest","Rest","Rest","RestError","ServicingConfig","ServicingStationLoad","ServicingStationLoadError","SettingsNotDefined","StatusProvider","TimeError","TransactionsWerePendingForTooLong","Valgrind","VoteStatusProvider","VotesCastRegister","Wallet","Wallet","Wallet","WalletCore","WalletCore","WalletError","WalletError","WalletNotDefined","WalletRequestGen","WalletTime","WalletTime","address","backend","backend","backend","backend","batch_size","block_date_generator","block_date_generator","config","config","config","config","controller","criterion","debug","expiry","exports","global_pin","inner","load","multi_controller","options","pending_txs","proposals","qr","qr_codes_folder","rand","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","settings","settings","settings","settings","update_account_before_vote","use_https","use_v1","utils","vote_cast_counter","voting_group","wallet","wallet","wallet","wallet_index","wallets","fragments","proposal_index","vote_plan_name","CannotFindProposal","Controller","ControllerBuilder","ControllerBuilderError","ControllerError","MissingGroupForToken","MissingVoteplan","ParseAccountIdentifier","Rest","TransactionsWerePendingForTooLong","Valgrind","Wallet","WalletCore","WalletTime","account","active_vote_plan","backend","block_date_generator","borrow","borrow","borrow_mut","borrow_mut","builder","confirm_all_transactions","confirm_transaction","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fragment_logs","from","from","from","from","from","from","from","from","funds","get_account_state","get_proposals","header","id","in_current_span","init","init","into","into","into_request","into_request","pending_transactions","proposals","refresh_state","remove_pending_transaction","send_fragment","send_fragments","set_block_date_generator","settings","settings","source","switch_backend","to_string","total_value","try_from","try_from","try_into","try_into","type_id","type_id","vote","vote_for","vote_plan_history","votes_batch","votes_history","vzip","vzip","wait_for_pending_transactions","wallet","wallet_address","fragments","proposal_index","vote_plan_name","BackendError","BackendNotDefined","Bech32","CannotLeakSecret","CannotReadQrCode","ControllerBuilder","Error","InvalidSecretKeyLength","Key","NoSecretKeyEncoded","PinRead","Rest","SettingsNotDefined","TimeError","WalletError","WalletNotDefined","backend","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","settings","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallet","with_backend_from_address","with_backend_from_client","with_wallet_from_account","with_wallet_from_qr_file","with_wallet_from_qr_hash_file","with_wallet_from_secret_file","with_wallet_from_secret_key","default_block_date_generator","from_block_or_shift","ArtificialUserLoad","ArtificialUserLoadError","Controller","ControllerBuilder","ControllerBuilderError","ControllerError","MultiController","MultiControllerError","NodeLoad","NodeLoadConfig","NodeLoadError","ServicingStationLoad","ServicingStationLoadError","VoteStatusProvider","Wallet","WalletError","WalletRequestGen","expiry","qr","ArtificialUserLoadConfig","MultiController","MultiControllerError","NodeLoadConfig","ServicingStationRequestGen","StatusProviderError","VoteStatusProvider","WalletRequestGen","config","multi_controller","request_generators","scenario","status_provider","ArtificialUserLoadConfig","ArtificialUserRequestType","NodeLoadConfig","NodeLoadConfigError","ServicingStationConfigError","ServicingStationLoadConfig","ServicingStationRequestType","artificial_user","node","servicing_station","Account","Challenge","Challenges","Config","Fund","Proposal","Proposals","RequestType","Settings","Vote","account","borrow","borrow","borrow_mut","borrow_mut","challenge","challenges","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","fund","get_hash","hash","init","init","into","into","into_request","into_request","proposal","serialize","serialize","settings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vote","vzip","vzip","CannotFindPrivateKeyRoot","CannotReadMnemonicsFile","CannotReadQrs","Config","Error","MultiController","address","batch_size","borrow","borrow","borrow_mut","borrow_mut","build_multi_controller","clone","clone_into","config","criterion","debug","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","global_pin","header","in_current_span","init","init","into","into","into_request","into_request","qr_codes_folder","read_pin_from_filename","rest_settings","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","use_https","use_v1","voting_group","vzip","vzip","CannotFindConfigurationFor","Challenge","Challenges","Config","Error","Fund","Proposal","Proposals","RequestType","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","criterion","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","get","get_hash","hash","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_https","vzip","vzip","vzip","Backend","Controller","InvalidProposalsLen","MissingProposal","MultiController","MultiControllerError","NoMoreVotesToVote","NotEnoughProposals","NotEnoughWallets","PinRead","RandomChoiceFailed","RestSettings","VotesCastRegister","Wallet","WalletCore","WalletTime","backend","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone_into","confirm_all_transactions","confirm_transaction","cors","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enable_debug","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","new_use_https","proposals","recover_from_qrs","recover_from_sks","settings","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_wallet_state","update_wallet_state_if","update_wallets_state","use_https","vote","votes_batch","vzip","vzip","vzip","wallet_count","wallets","AccountRequestGen","ArtificialUserRequestGen","BatchWalletRequestGen","RequestGenError","ServicingStationRequestGen","SettingsRequestGen","WalletRequestGen","artificial_user","jormungandr","servicing_station","ArtificialUserRequestGen","DEFAULT_MAX_SPLITS","account_gen","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","max_splits","new_account","new_node","new_settings","new_static","next","next_request","node_gen","request_type","settings_gen","split","static_gen","try_from","try_into","type_id","vzip","AccountRequestGen","BatchWalletRequestGen","RequestGenError","SettingsRequestGen","WalletRequestGen","account","post","settings","AccountRequestGen","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","next","rand","random_account_request","rest","split","try_from","try_into","type_id","vzip","wallets","Backend","BatchWalletRequestGen","MultiController","RequestGenError","Wallet","WalletRequestGen","batch","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","header","in_current_span","init","into","into_request","single","source","to_string","try_from","try_into","type_id","vzip","BatchWalletRequestGen","batch_size","block_date_generator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","multi_controller","new","next","next_usize","options","proposals","rand","random_votes","settings","split","try_from","try_into","type_id","update_account_before_vote","use_v1","vote_cast_counter","vzip","wallet_index","WalletRequestGen","block_date_generator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","multi_controller","new","next","options","proposals","rand","random_vote","settings","split","try_from","try_into","type_id","update_account_before_vote","vote_cast_counter","vzip","wallet_index","DEFAULT_MAX_SPLITS","SettingsRequestGen","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","max_splits","new","next","rest","settings_request","split","try_from","try_into","type_id","vzip","DEFAULT_MAX_SPLITS","ServicingStationRequestGen","borrow","borrow_mut","challenges","client","deref","deref_mut","drop","from","init","into","into_request","max_splits","new_challenge","new_challenges","new_fund","new_proposal","new_proposals","next","next_request","next_usize","proposals","rand","random_challenge","random_proposal","request_type","split","try_from","try_into","type_id","vzip","ArtificialUserLoad","ArtificialUserLoadError","NodeLoad","NodeLoadError","ServicingStationLoad","ServicingStationLoadError","artificial_users","node","servicing_station","ArtificialUserLoad","Error","LoadConfig","MultiController","Rest","ServicingConfig","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigError","Error","MultiControllerError","NodeLoad","RequestGen","StatusProvider","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigurationError","Error","RestError","ServicingStationLoad","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Backend","Controller","Error","PinRead","VoteStatusProvider","Wallet","WalletTime","backend","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","get_statuses","header","in_current_span","init","init","into","into","into_request","into_request","into_status","new","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BadPin","CannotDecodeHash","CannotReadPinFromFile","Error","GlobalModeOnly","PinReadModeSettings","Secret","SecretFromQrCode","UnableToDecodeQr","UnableToDetectFileName","UnableToGetSecretKey","UnableToOpenImage","UnableToReadFileName","UnableToReadQr","UnableToSplitFileName","from_bytes","from_file","from_filename","from_payload_file","global_pin","read_qrs","to_bech32","expiry","qr","default_block_date_generator","from_block_or_shift","BadPin","CannotDecodeHash","CannotReadPinFromFile","Error","GlobalModeOnly","PinReadModeSettings","Secret","SecretFromQrCode","UnableToDecodeQr","UnableToDetectFileName","UnableToGetSecretKey","UnableToOpenImage","UnableToReadFileName","UnableToReadQr","UnableToSplitFileName","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_file","from_file","from_filename","from_payload_file","from_payload_file","global_pin","header","in_current_span","init","init","into","into","into_qr_pin_mode","into_request","into_request","read_qrs","source","to_bech32","to_bech32","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BackendError","CannotRecover","CannotRetrieveFunds","CannotSendVote","Error","Wallet","account","borrow","borrow","borrow_mut","borrow_mut","confirm_all_transactions","confirm_transaction","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","header","id","identifier","in_current_span","init","init","inner","into","into","into_request","into_request","pending_transactions","pending_txs","recover","recover_from_utxo","remove_pending_transaction","set_state","source","spending_counter","to_string","total_value","try_from","try_from","try_into","try_into","type_id","type_id","vote","vzip","vzip"],"q":[[0,"iapyx"],[114,"iapyx::ControllerError"],[117,"iapyx::controller"],[200,"iapyx::controller::ControllerError"],[203,"iapyx::controller::builder"],[271,"iapyx::expiry"],[273,"iapyx::exports"],[292,"iapyx::load"],[305,"iapyx::load::config"],[315,"iapyx::load::config::artificial_user"],[377,"iapyx::load::config::node"],[438,"iapyx::load::config::servicing_station"],[515,"iapyx::load::multi_controller"],[608,"iapyx::load::request_generators"],[618,"iapyx::load::request_generators::artificial_user"],[646,"iapyx::load::request_generators::jormungandr"],[654,"iapyx::load::request_generators::jormungandr::account"],[675,"iapyx::load::request_generators::jormungandr::post"],[705,"iapyx::load::request_generators::jormungandr::post::batch"],[735,"iapyx::load::request_generators::jormungandr::post::single"],[762,"iapyx::load::request_generators::jormungandr::settings"],[783,"iapyx::load::request_generators::servicing_station"],[815,"iapyx::load::scenario"],[824,"iapyx::load::scenario::artificial_users"],[869,"iapyx::load::scenario::node"],[914,"iapyx::load::scenario::servicing_station"],[955,"iapyx::load::status_provider"],[1003,"iapyx::qr"],[1025,"iapyx::utils"],[1027,"iapyx::utils::expiry"],[1029,"iapyx::utils::qr"],[1093,"iapyx::wallet"],[1148,"chain_addr"],[1149,"chain_addr"],[1150,"alloc::vec"],[1151,"core::result"],[1152,"chain_impl_mockchain::fragment"],[1153,"core::fmt"],[1154,"core::fmt"],[1155,"std::collections::hash::map"],[1156,"wallet_core::error"],[1157,"wallet::time"],[1158,"jormungandr_lib::interfaces::account_identifier"],[1159,"jormungandr_automation::jormungandr::rest"],[1160,"valgrind::client"],[1161,"vit_servicing_station_lib::db::models::funds"],[1162,"jormungandr_lib::interfaces::account_state"],[1163,"vit_servicing_station_lib::db::models::proposals"],[1164,"color_eyre::section"],[1165,"core::fmt"],[1166,"core::marker"],[1167,"tonic::request"],[1168,"thor::fragment::sender"],[1169,"jormungandr_lib::interfaces::settings"],[1170,"core::error"],[1171,"core::option"],[1172,"alloc::string"],[1173,"chain_impl_mockchain::value"],[1174,"core::any"],[1175,"chain_impl_mockchain::vote::choice"],[1176,"jormungandr_lib::interfaces::vote"],[1177,"jormungandr_lib::interfaces::address"],[1178,"jcli_lib::jcli_lib::key"],[1179,"image::error"],[1180,"bech32"],[1181,"core::convert"],[1182,"valgrind::client"],[1183,"core::convert"],[1184,"chain_crypto::key"],[1185,"chain_impl_mockchain::date"],[1186,"serde::de"],[1187,"core::hash"],[1188,"core::marker"],[1189,"jortestkit::load::config"],[1190,"core::fmt"],[1191,"core::ops::function"],[1192,"jortestkit::load::request"],[1193,"jortestkit::load::request"],[1194,"valgrind::client::vit_station"],[1195,"vit_servicing_station_lib::db::models::challenges"],[1196,"vit_servicing_station_lib::db::models::proposals"],[1197,"valgrind::client::vit_station"],[1198,"jortestkit::load::status"],[1199,"jormungandr_lib::interfaces::fragment_log"],[1200,"catalyst_toolbox::kedqr"],[1201,"catalyst_toolbox::kedqr::img"],[1202,"jormungandr_lib::interfaces::account_identifier"],[1203,"wallet_core::vote"],[1204,"alloc::boxed"]],"d":["Struct responsible to simulate real user calls send to …","Generator errors","Backend related errors","Backend","Backend issues","Lack of Backend definition","Bech32","Missing proposals","Cannot leak secret","Qr code","Recovery failed","Funds retrieval failure","Error with sending votes","Configuration error","Configuration error","Responsible for all wallet operations from voting to …","Wallet Controller related errors","Builder for wallet controller","Builder errors","Controller related Errors","Too many proposals","Cannot leak secret","Key","Loading configuration","Internal wallet errors","Missing proposal","Internal wallet errors","Responsible for controlling more than one wallet at one …","Controller errors","Errors for <code>MultiController</code>","Controller errors","Not enough votes","No secret key exposed","Load scenario for node only calls. It uses <code>WalletRequestGen</code>…","Node Load configuration struct. It defines all aspects of …","Errors for node load","Not enough proposals","Not enough proposals","Parse account identifier","Reading pin","Read pin errors","Randomizing choices failed","Requests generator error","Rest","Connection with rest","Rest api errors","Rest api errors","Building configuration","Servicing station load scenario. Basically responsible for …","Servicing station errors","Settings related","Status providers error","Time","Expiry","Proxy","Responsible for providing information about status for …","Missing proposal","Wallet object, which wraps struct from chain-wallet-libs …","Wallet issues","Wallet related errors","Internal wallet errors","Internal wallet core errors","Wallet error","Wallet","Lack of Wallet definition","Vote request generator. Implements <code>RequestGenerator</code> …","Wallet expiry issues","Wallet time boundaries errors","REST API address to be excercised by load tool","Catalyst backend client","","","","Batch size for single load step","Expiry date generator","","","","","Inner configuration which controls common settings like …","","Success criteria for run. It helps to put simple assertion …","Print verbose information during load","consts for defining transaction expiry block date","","This parameter work in conjunction with <code>qr_codes_folder</code>. …","","","","","","","qr parsing utils","Source folder for seed qr codes which can be used during …","","This parameter work in conjunction with <code>global_pin</code> and …","Sometimes we may want to run load tool again on the same …","This particular settings controls when load tool will …","Source folder for seed bech32 accounts file which will be …","Cached blockchain settings","","","","","Use https protocol","Use REST API V1, which allows send batch votes or checking …","","","Voting groups which account belongs to. Existence of this …","","Wallet state","","","","Expired fragmnents","proposal index within parent vote plan","name of parent vote plan","Missing proposals","Responsible for all wallet operations from voting to …","","","Controller related Errors","Internal wallet errors","Internal wallet errors","Parse account identifier","Connection with rest","Expiry","Proxy","Wallet issues","Internal wallet errors","Wallet expiry issues","Gets account","Gets vote plan from node","Catalyst backend client","Expiry date generator","","","","","","Confirms all transactions means to remove them from …","Confirms transaction by it id. This means to remove it …","","","","","","","","","Gets fragment logs from node","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Gets proposals from vit-servicing-station","Get account state from blockchain (ada/delegation status …","Gets proposals from vit-servicing-station based on voting …","","Gets account identifier. This is something different that …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Unconfirmed collection of transactions (which statuses we …","Gets proposals from vit-servicing-station","Reload wallet state from blockchain","remove specific transaction from assumed pending","Sends raw transaction bytes","Sends collection of raw transaction bytes","Sets transaction ttl definition. Usually when we are …","Gets blockchain Settings from blockchain","Cached blockchain settings","","Connects to new backend","","gets total value ada","","","","","","","Send specialized transaction (with vote certificates) …","Send specialized transaction (with vote certificates) …","Gets vote plan history from node for given vote plan id","Send collection for specialized transaction (with vote …","Gets vote plan history from node","","","Waits until all transaction will have final states (either …","Wallet state","","Expired fragmnents","proposal index within parent vote plan","name of parent vote plan","Backend","Lack of Backend definition","Bech32","Cannot leak secret","Qr code","Builder for wallet controller","Builder errors","Cannot leak secret","Key","No secret key exposed","Reading pin","Rest","Settings related","Time","Wallet","Lack of Wallet definition","","","","","","Builds Controller","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Sets backend from address along with connectivity setup …","Sets backend from <code>ValgrindClient</code> struct","Sets wallet based on account bytes","Sets wallet based on qr code with private key","Sets wallet based on payload file (in form of hex encoded …","Sets wallet based on secret file with bech32 secret key","Sets wallet based on secret key struct","Creates <code>BlockDateGenerator</code> object based on settings","Creates <code>BlockDateGenerator</code> object based on setup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","No private key root","No mnemonic file","Cannot read qr","Node Load configuration struct. It defines all aspects of …","Builder related error","MultiController setup","REST API address to be excercised by load tool","Batch size for single load step","","","","","Construct multi controller (for multi accounts handling)","","","Inner configuration which controls common settings like …","Success criteria for run. It helps to put simple assertion …","Print verbose information during load","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","This parameter work in conjunction with <code>qr_codes_folder</code>. …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Source folder for seed qr codes which can be used during …","This parameter work in conjunction with <code>global_pin</code> and …","Gets rest settings","Sometimes we may want to run load tool again on the same …","This particular settings controls when load tool will …","Source folder for seed bech32 accounts file which will be …","","","","","","","","","","","Use https protocol","Use REST API V1, which allows send batch votes or checking …","Voting groups which account belongs to. Existence of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Backend related errors","Wallet Controller related errors","Too many proposals","Missing proposal","Responsible for controlling more than one wallet at one …","Errors for <code>MultiController</code>","Not enough votes","Not enough proposals","Not enough proposals","Read pin errors","Randomizing choices failed","","Missing proposal","Wallet related errors","Internal wallet core errors","Wallet time boundaries errors","Get inner backend client which can perform some custom …","","","","","","","","","","","Confirms all transactions for all wallets. Confirms means …","Confirms all transactions for wallet. Confirms means loose …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Gets proposals from vit-servicing-station based on voting …","Creates object based on qr codes files","Creates object based on secret files","","","","","","","","","","","","","","Update wallet states based on current state in blockchain","Update wallet states based on current state in blockchain …","Update wallet state for entire wallets collection based on …","","Sends vote transaction on behalf of wallet with index …","Sends bunch of vote transactions on behalf of wallet with …","","","","Wallet counts","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Vote request generator. Implements <code>RequestGenerator</code> …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Creates new object","","","","","Sends vote with random choice on behalf of random wallet. …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct responsible to simulate real user calls send to …","Generator errors","Loading configuration","Controller errors","Rest api errors","Building configuration","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates new object based on configuration","","Starts load based on configuration","","","","","","","","","","Configuration error","Errors for node load","Controller errors","Load scenario for node only calls. It uses <code>WalletRequestGen</code>…","Requests generator error","Status providers error","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates new object","","Starts scenario","","","","","","","","","","Configuration error","Servicing station errors","Rest api errors","Servicing station load scenario. Basically responsible for …","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates new load scenario object","","Start scenario","","","","","","","","","","","","","","Responsible for providing information about status for …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates object based on address and verbosity","","","","","","","","","","","Cannot decode qr","Cannot  decode hash","Cannot read pin","Qr handling Errors","Wrong pin reading mode","Read mode for Pin. It can try to read it from file name or …","Alias for secret key","Trait for converting qr code into secret key","Cannot decode qr","Cannot get filename","Cannot get secret key","Cannot open image","Cannot read file","Cannot read qr","Cannot split file name","Convert to secret from bytes","Convert to secret from qr code file","Try to read it from filename","Convert from qr code payload","Static one","Reads qr codes from paths","Convert secret to bech32 format","consts for defining transaction expiry block date","qr parsing utils","Creates <code>BlockDateGenerator</code> object based on settings","Creates <code>BlockDateGenerator</code> object based on setup","Cannot decode qr","Cannot  decode hash","Cannot read pin","Qr handling Errors","Wrong pin reading mode","Read mode for Pin. It can try to read it from file name or …","Alias for secret key","Trait for converting qr code into secret key","Cannot decode qr","Cannot get filename","Cannot get secret key","Cannot open image","Cannot read file","Cannot read qr","Cannot split file name","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Convert to secret from bytes","","Convert to secret from qr code file","","Try to read it from filename","Convert from qr code payload","","Static one","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to <code>PinReadMode</code> based on path","","","Reads qr codes from paths","","Convert secret to bech32 format","","","","","","","","","","","Backend issues","Recovery failed","Funds retrieval failure","Error with sending votes","Wallet error","Wallet object, which wraps struct from chain-wallet-libs …","Get account object","","","","","Confirms all transactions means to remove them from …","Confirms transaction by it id. This means to remove it …","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Get account id","Get account identifier","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Unconfirmed collection of transactions (which statuses we …","","Recover wallet from secret key bytes","Recover from utxo secret key    ///","remove specific transaction from assumed pending","update value and spending-counters","","Gets spending counters","","total ada wallet holds","","","","","","","Send specialized transaction (with vote certificates) …","",""],"i":[0,0,73,48,20,48,48,6,48,48,20,20,20,102,105,0,73,0,0,0,73,48,48,98,6,73,6,0,98,0,102,73,48,0,0,0,73,73,6,48,73,73,102,48,6,98,105,98,0,0,48,102,48,6,6,0,73,0,6,73,6,73,0,48,48,0,6,73,70,1,71,107,47,70,1,93,100,104,106,70,0,70,70,0,0,70,90,0,93,93,90,93,0,70,93,70,70,70,70,1,71,93,47,93,70,70,0,93,70,0,1,47,93,71,120,121,121,6,0,0,0,0,6,6,6,6,6,6,6,6,6,1,1,1,1,1,6,1,6,0,1,1,1,6,1,6,1,6,6,6,1,1,6,6,6,6,6,6,6,1,1,1,6,1,6,1,6,1,6,1,6,1,1,1,1,1,1,1,1,1,6,1,6,1,1,6,1,6,1,6,1,1,1,1,1,1,6,1,1,1,120,121,121,48,48,48,48,48,0,0,48,48,48,48,48,48,48,48,48,47,47,48,47,48,47,47,47,48,47,48,47,48,48,48,47,48,48,48,48,48,48,48,48,48,48,48,47,48,47,48,47,48,47,48,48,47,48,47,48,47,48,47,48,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,0,60,60,60,0,60,60,61,60,61,60,61,61,61,60,61,60,61,60,61,60,61,60,61,60,61,60,60,60,60,60,60,61,60,61,61,60,60,60,61,60,61,60,61,61,60,61,61,60,61,60,61,60,61,60,61,61,60,61,72,72,72,0,0,72,70,70,70,72,70,72,70,70,70,70,70,70,70,72,70,72,70,70,72,70,72,72,70,72,72,70,72,72,70,72,70,72,70,72,70,70,70,70,70,70,70,72,70,72,70,72,70,72,70,72,70,70,70,70,72,76,74,74,0,0,74,74,74,0,75,74,75,76,74,75,76,74,75,74,75,75,75,74,75,76,74,75,76,74,75,74,75,76,74,74,74,74,74,74,75,76,76,74,75,76,75,74,74,76,76,74,75,76,74,75,76,74,75,76,74,75,74,75,76,74,75,76,74,75,76,74,75,76,75,74,75,76,73,73,73,73,0,0,73,73,73,73,73,0,73,73,73,73,71,71,71,73,38,71,73,38,38,38,38,71,71,38,38,71,73,38,71,73,38,71,73,38,38,73,73,38,71,73,73,73,73,73,73,73,73,38,73,73,71,73,38,71,73,38,71,73,38,38,71,71,71,71,73,38,73,71,73,38,71,73,38,71,73,38,71,71,71,38,71,71,71,73,38,71,71,0,0,0,0,0,0,0,0,0,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,0,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,92,0,92,0,92,0,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,92,92,92,92,92,92,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0,0,0,0,0,0,98,98,98,98,100,98,100,98,100,100,98,100,98,100,98,98,98,100,98,98,98,98,98,98,98,100,98,100,98,100,98,100,98,100,98,100,98,100,98,100,98,100,98,102,0,102,0,102,102,104,102,104,102,104,104,102,104,102,104,102,102,102,104,102,102,102,102,102,102,102,104,102,104,102,104,102,104,102,104,102,104,102,104,102,104,102,104,102,105,0,105,0,106,105,106,105,106,106,105,106,105,106,105,105,105,106,105,105,105,105,105,106,105,106,105,106,105,106,105,106,105,106,105,106,105,106,105,106,105,103,103,0,103,0,103,103,107,107,103,107,103,107,103,107,103,107,103,103,103,107,103,103,103,103,103,103,107,103,103,107,103,107,103,107,103,0,107,103,103,107,103,107,103,107,103,107,103,50,50,50,0,50,0,0,0,50,50,50,50,50,50,50,122,122,80,122,80,0,122,0,0,0,0,50,50,50,0,50,0,0,0,50,50,50,50,50,50,50,80,50,80,50,80,50,80,50,80,50,50,50,80,50,50,50,50,50,50,122,111,122,111,80,122,111,80,50,50,80,50,80,50,80,80,50,0,50,122,111,50,80,50,80,50,80,50,80,50,20,20,20,20,0,0,90,90,20,90,20,90,90,90,20,90,20,90,20,90,20,20,90,20,20,20,90,90,20,90,20,90,90,20,90,20,90,90,90,90,90,90,20,90,20,90,90,20,90,20,90,20,90,90,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[1,[[7,[[5,[4]],6]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,8],[[1,9],8],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[6,11],12],[[6,11],12],[1,[[7,[[14,[9,13]],6]]]],[-1,-1,[]],[15,6],[16,6],[17,6],[18,6],[19,6],[20,6],[-1,-1,[]],[1,[[7,[21,6]]]],[1,[[7,[22,6]]]],[[1,23],[[7,[[5,[24]],6]]]],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[1,29],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[1,[[5,[9]]]],[[1,23],[[7,[[5,[24]],6]]]],[1,[[7,[8,6]]]],[[1,9],8],[[1,[32,[31]]],[[7,[9,6]]]],[[1,[5,[[5,[31]]]]],[[7,[[5,[9]],6]]]],[[1,33],8],[1,[[7,[34,6]]]],0,[6,[[36,[35]]]],[[1,37,38],[[7,[8,6]]]],[-1,37,[]],[1,39],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[[1,24,41],[[7,[9,6]]]],[[1,23,42,31],[[7,[9,6]]]],[[1,43],[[7,[[36,[[5,[31]]]],6]]]],[[1,[5,[[8,[24,41]]]]],[[7,[[5,[9]],6]]]],[1,[[7,[[36,[[5,[44]]]],6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,45],[[7,[8,6]]]],0,[1,[[7,[46,6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,[[7,[1,48]]]],[[],47],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[48,11],12],[[48,11],12],[-1,-1,[]],[20,48],[-1,-1,[]],[16,48],[49,48],[50,48],[18,48],[51,48],[19,48],[52,48],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,[48,[[36,[35]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[47,-1,38],[[7,[47,48]]],[[53,[37]]]],[[47,54],[[7,[47,48]]]],[[47,[32,[31]]],[[7,[47,48]]]],[[47,-1,23],[[7,[47,48]]],[[56,[55]]]],[[47,-1,23],[[7,[47,48]]],[[56,[55]]]],[[47,-1],[[7,[47,48]]],[[56,[55]]]],[[47,[58,[57]]],[[7,[47,48]]]],[34,33],[[[36,[59]],[36,[59]],34],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[60,60],[61,61],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[7,[60]]],62],[-1,[[7,[61]]],62],[10,8],[10,8],[[60,60],63],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[[60,11],12],[[61,11],12],[-1,-1,[]],[-1,-1,[]],0,[[-1,-2],64,[65,66],67],[[60,-1],8,68],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,[[60,-1],7,69],[[61,-1],7,69],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,[[7,[71,72]]]],[70,70],[[-1,-2],8,[],[]],0,0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[7,[70]]],62],[10,8],[10,8],[[70,11],12],[[72,11],12],[[72,11],12],[-1,-1,[]],[73,72],[-1,-1,[]],0,[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],0,0,[70,38],0,0,0,[[70,-1],7,69],[72,[[36,[35]]]],[-1,-2,[],[]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[75,75],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[7,[74]]],62],[-1,[[7,[75]]],62],[10,8],[10,8],[10,8],[[74,74],63],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[[74,11],12],[[75,11],12],[[76,11],12],[[76,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[75,74],[[7,[77,76]]]],[[-1,-2],64,[65,66],67],[[74,-1],8,68],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[74,-1],7,69],[[75,-1],7,69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[71,54],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[38,38],[[-1,-2],8,[],[]],[71,8],[[71,9],8],0,[[],38],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[10,8],0,[[73,11],12],[[73,11],12],[[38,11],[[7,[8,78]]]],[-1,-1,[]],[-1,-1,[]],[50,73],[15,73],[6,73],[79,73],[20,73],[19,73],[16,73],[-1,-1,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[],38],[[71,23],[[7,[[5,[24]],73]]]],[[23,[32,[-1]],80,38],[[7,[71,73]]],[[56,[55]]]],[[23,[32,[-1]],38],[[7,[71,73]]],[[56,[55]]]],0,[73,[[36,[35]]]],[-1,-2,[],[]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[[71,10],[[7,[8,73]]]],[[71,10,81],[[7,[8,73]]]],[71,[[7,[8,73]]]],0,[[71,10,24,41,59],[[7,[9,73]]]],[[71,10,63,[5,[[8,[24,41]]]],59],[[7,[[5,[9]],73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,8],[-1,-1,[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[82,83],[84,83],[85,83],[[86,60],83],[83,[[7,[87,88]]]],[83,[[7,[[5,[[36,[89]]]],88]]]],0,0,0,[83,[[8,[83,[36,[83]]]]]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,8],[-1,-1,[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[[[5,[90]],91],82],[82,[[7,[87,88]]]],0,[82,[[7,[8,88]]]],0,[82,[[8,[82,[36,[82]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,8],[[92,11],12],[[92,11],12],[73,92],[20,92],[19,92],[-1,-1,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[92,[[36,[35]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,8],[-1,-1,[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[[71,10,63,63,23],[[7,[84,73]]]],[84,[[7,[87,88]]]],[84,10],0,0,0,[84,[[7,[[5,[[36,[89]]]],73]]]],0,[84,[[8,[84,[36,[84]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],0,0,0,[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,8],[-1,-1,[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[[71,63,23],[[7,[93,92]]]],[93,[[7,[87,88]]]],0,0,0,[93,[[7,[9,73]]]],0,[93,[[8,[93,[36,[93]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,8],[-1,-1,[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[91,85],[85,[[7,[87,88]]]],0,[85,[[7,[8,88]]]],[85,[[8,[85,[36,[85]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[10,-1,[]],[10,-1,[]],[10,8],[-1,-1,[]],[[],10],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],0,[[94,[5,[95]]],86],[94,86],[94,86],[[94,[5,[96]]],86],[94,86],[86,[[7,[87,88]]]],[86,[[7,[[5,[[36,[89]]]],88]]]],[86,10],0,0,[86,[[7,[97,88]]]],[86,[[7,[97,88]]]],0,[86,[[8,[86,[36,[86]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[98,11],12],[[98,11],12],[-1,-1,[]],[-1,-1,[]],[76,98],[99,98],[73,98],[72,98],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[61,100],[98,[[36,[35]]]],[100,[[7,[[5,[101]],98]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[102,11],12],[[102,11],12],[-1,-1,[]],[73,102],[-1,-1,[]],[72,102],[103,102],[92,102],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[70,104],[102,[[36,[35]]]],[104,[[7,[[36,[101]],102]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[105,11],12],[[105,11],12],[-1,-1,[]],[99,105],[76,105],[-1,-1,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[75,106],[105,[[36,[35]]]],[106,[[7,[[5,[101]],105]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[103,11],12],[[103,11],12],[-1,-1,[]],[6,103],[50,103],[20,103],[19,103],[-1,-1,[]],[16,103],[[107,[32,[89]]],[[5,[108]]]],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[109,9],108],[[37,63],[[7,[107,103]]]],[103,[[36,[35]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[31]],110],[[7,[111,50]]]],[[-1,110],[[7,[111,50]]],[[56,[55]]]],0,[[-1,110],[[7,[111,50]]],[[56,[55]]]],0,[[[32,[-1]],80,63],[[5,[111]]],[[56,[55]]]],[-1,[[7,[37,50]]],[]],0,0,[34,33],[[[36,[59]],[36,[59]],34],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[50,11],12],[[50,11],12],[-1,-1,[]],[51,50],[112,50],[52,50],[113,50],[-1,-1,[]],[114,50],[[[5,[31]],110],[[7,[111,50]]]],[[[5,[31]],110],[[7,[111,50]]]],[[-1,110],[[7,[111,50]]],[[56,[55]]]],[[-1,110],[[7,[111,50]]],[[56,[55]]]],0,[[-1,110],[[7,[111,50]]],[[56,[55]]]],[[-1,110],[[7,[111,50]]],[[56,[55]]]],0,[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[-1,[],[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[[80,-1],110,[[56,[55]]]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[[32,[-1]],80,63],[[5,[111]]],[[56,[55]]]],[50,[[36,[35]]]],[-1,[[7,[37,50]]],[]],[111,[[7,[37,50]]]],[-1,37,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[90,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,8],[[90,9],8],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,8],[10,8],[[90,11],12],[[20,11],12],[[20,11],12],[-1,-1,[]],[19,20],[-1,-1,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,27,28],[]],[90,29],[[90,2],[[7,[115,17]]]],[-1,[],[]],[[],10],[[],10],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[90,[[5,[9]]]],0,[[[32,[31]]],[[7,[90,20]]]],[[[116,[31]]],[[7,[90,20]]]],[[90,9],8],[[90,39,[116,[42]]],[[7,[8,15]]]],[20,[[36,[35]]]],[90,[[116,[42]]]],[-1,37,[]],[90,39],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[[90,117,118,41,59],[[7,[[119,[[32,[31]]]],20]]]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Controller",117],[4,"Discrimination",1148],[3,"Address",1148],[3,"VotePlanStatus",1149],[3,"Vec",1150],[4,"ControllerError",117],[4,"Result",1151],[15,"tuple"],[6,"FragmentId",1152],[15,"usize"],[3,"Formatter",1153],[6,"Result",1153],[3,"FragmentLog",1154],[3,"HashMap",1155],[3,"Error",1156],[4,"Error",1157],[4,"ParseAccountIdentifierError",1158],[4,"RestError",1159],[4,"Error",1160],[4,"Error",1093],[3,"Fund",1161],[3,"AccountState",1162],[15,"str"],[3,"FullProposalInfo",1163],[3,"IndentedSection",1164],[8,"Display",1153],[8,"Send",1165],[8,"Sync",1165],[3,"AccountId",1166],[3,"Request",1167],[15,"u8"],[15,"slice"],[4,"BlockDateGenerator",1168],[3,"SettingsDto",1169],[8,"Error",1170],[4,"Option",1171],[3,"String",1172],[3,"RestSettings",515],[3,"Value",1173],[3,"TypeId",1174],[3,"Choice",1175],[15,"u32"],[6,"VotePlanId",1149],[3,"AccountVotes",1149],[3,"Duration",1176],[3,"Address",1177],[3,"ControllerBuilder",203],[4,"Error",203],[4,"Error",1178],[4,"Error",1029],[4,"ImageError",1179],[4,"Error",1180],[8,"Into",1181],[3,"ValgrindClient",1160],[3,"Path",1182],[8,"AsRef",1181],[3,"Ed25519Extended",1183],[3,"SecretKey",1184],[3,"BlockDate",1185],[4,"RequestType",315],[3,"Config",315],[8,"Deserializer",1186],[15,"bool"],[15,"u64"],[8,"Hash",1187],[8,"Sized",1165],[8,"BuildHasher",1187],[8,"Hasher",1187],[8,"Serializer",1188],[3,"Config",377],[3,"MultiController",515],[4,"Error",377],[4,"MultiControllerError",515],[4,"RequestType",438],[3,"Config",438],[4,"Error",438],[3,"Configuration",1189],[3,"Error",1153],[4,"Error",1190],[3,"PinReadModeSettings",1029],[8,"Fn",1191],[3,"AccountRequestGen",654],[3,"ArtificialUserRequestGen",618],[3,"BatchWalletRequestGen",705],[3,"SettingsRequestGen",762],[3,"ServicingStationRequestGen",783],[3,"Request",1192],[4,"RequestFailure",1192],[6,"Id",1192],[3,"Wallet",1093],[3,"WalletNodeRestClient",1193],[4,"RequestGenError",675],[3,"WalletRequestGen",735],[3,"VitStationRestClient",1194],[3,"Challenge",1195],[3,"Proposal",1163],[3,"Response",1196],[4,"Error",824],[4,"RestError",1194],[3,"ArtificialUserLoad",824],[3,"EfficiencyBenchmarkFinish",1197],[4,"Error",869],[4,"Error",955],[3,"NodeLoad",869],[4,"Error",914],[3,"ServicingStationLoad",914],[3,"VoteStatusProvider",955],[3,"Status",1198],[4,"FragmentStatus",1154],[4,"PinReadMode",1199],[6,"Secret",1029],[4,"BadPinError",1199],[3,"Error",1200],[4,"KeyQrCodeError",1201],[3,"AccountIdentifier",1158],[15,"array"],[3,"Settings",1202],[3,"Proposal",1203],[3,"Box",1204],[13,"TransactionsWerePendingForTooLong",200],[13,"CannotFindProposal",200],[8,"SecretFromQrCode",1029]]},\
"iapyx_load":{"doc":"","t":"AFDNNNEENNNNNENENNNNNDLLLLLLLLLLLLLLLLLLLLFALLLLLLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCENNLLLLLLALLLALLLLLLLLLLLLLLLDNNENMLLMLLLLLMMMMLLLLLLLLMLLLLFMMMMMMMMLLLLLMMMLDNNENMLLMLLLLLMMMLLLMLLLLLMLLLLFMMMMMMMMLLLLLMMMLCECNNLLLLLLALLLALLLLLLLLLLLLLLLDNNENMLLLLLLLMMMMLLLLLLLLMLLLLFMMMMMMMMLLLLLMMLDNNENMLLLLLLLMMMLLLMLLLLLMLLLLFMMMMMMMMLLLLLMML","n":["load","main","ArtificialLoadCommand","ArtificialUserError","Burst","Const","IapyxLoadCommand","IapyxLoadCommandError","Io","Monitor","MultiControllerError","NodeLoadError","NodeOnly","NodeOnlyLoadCommand","None","ProgressBarMode","SerializeError","ServicingStationError","Simulation","Standard","StaticOnly","StaticOnlyLoadCommand","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_monitor","burst","clone","clone_into","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","config","config","constant","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","has_subcommand","header","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","parse_progress_bar_mode_from_str","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","BurstCountIapyxLoadCommand","BurstDurationIapyxLoadCommand","BurstIapyxLoadCommand","Count","Duration","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","count","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","BurstCountIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","build_config","command","command_for_update","count","criterion","debug","delay","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","use_v1","voting_group","vzip","BurstDurationIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","build_config","command","command_for_update","criterion","debug","delay","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","use_v1","voting_group","vzip","ConstDurationIapyxLoadCommand","ConstIapyxLoadCommand","ConstantCountIapyxLoadCommand","Count","Duration","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","count","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","ConstantCountIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","borrow","borrow_mut","build_config","command","command_for_update","count","criterion","debug","delay","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","voting_group","vzip","ConstDurationIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","borrow","borrow_mut","build_config","command","command_for_update","criterion","debug","delay","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","voting_group","vzip"],"q":[[0,"iapyx_load"],[2,"iapyx_load::load"],[174,"iapyx_load::load::burst"],[205,"iapyx_load::load::burst::count"],[254,"iapyx_load::load::burst::duration"],[303,"iapyx_load::load::constant"],[334,"iapyx_load::load::constant::count"],[381,"iapyx_load::load::constant::duration"],[428,"clap_builder::builder::command"],[429,"jortestkit::load::config"],[430,"core::result"],[431,"core::fmt"],[432,"core::fmt"],[433,"iapyx::load::multi_controller"],[434,"std::io::error"],[435,"iapyx::load::scenario::servicing_station"],[436,"iapyx::load::scenario::artificial_users"],[437,"serde_json::error"],[438,"clap_builder::parser::matches::arg_matches"],[439,"clap_builder"],[440,"clap_builder::util::id"],[441,"core::option"],[442,"color_eyre::section"],[443,"core::fmt"],[444,"core::marker"],[445,"core::convert"],[446,"core::error"],[447,"alloc::string"],[448,"core::any"],[449,"iapyx::load::config::node"]],"d":["","","","","Bursts mode. Sends votes in batches and then wait x seconds","Constant load. Sends votes with x votes per second speed.","","","","","","","Load which targets blockchain calls only","","","","","","Load with simulate real user case (both blockchain and …","","Load which targets static data only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to configuration file","Path to configuration file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requests count based load. Defines how many requests load …","Duration based load. Defines how much time load should run","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Address in format: 127.0.0.1:8000","","","Number of votes sent in single batch","","","","","","How many requests per thread should be sent","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","Update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","Use v1 endpoint for sending votes","","","","","","","","Address in format: 127.0.0.1:8000","","","Number of votes sent in single batch","","","","","","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","Duration of scenario in seconds","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","Update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","Use v1 endpoint for sending votes","","","","","","Requests count based load. Defines how many requests load …","Duration based load. Defines how much time load should run","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Address in format: 127.0.0.1:8000","","","","","","","","How many requests per thread should be sent","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","Update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","","","","","","","","Address in format: 127.0.0.1:8000","","","","","","","","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","Duration of scenario in seconds","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","",""],"i":[0,0,0,8,12,12,0,0,8,3,8,8,7,0,3,0,8,8,7,3,7,0,10,11,10,11,7,12,7,12,8,7,10,11,12,3,8,7,10,11,12,3,0,0,3,3,7,10,11,12,7,10,11,12,10,11,0,8,7,10,11,12,3,8,7,10,11,12,3,8,7,10,11,12,3,3,3,3,3,3,7,10,11,12,8,8,7,10,11,12,3,3,8,8,8,8,8,8,8,7,10,11,12,3,7,10,11,12,7,10,11,12,10,11,7,12,8,3,8,8,7,10,11,12,3,8,7,10,11,12,3,8,7,10,11,12,3,0,8,3,8,3,8,7,10,11,12,3,8,7,10,11,12,3,8,7,10,11,12,3,7,10,11,12,7,10,11,12,8,7,10,11,12,3,0,0,0,36,36,36,36,36,36,36,36,0,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,3,3,0,3,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,3,3,0,3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,40,40,40,40,40,40,40,40,0,40,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,3,3,0,3,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,3,3,0,3,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42],"f":[0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],0,[3,3],[[-1,-2],1,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,1],[5,1],[5,1],[5,1],[5,1],[5,1],[[3,3],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[7,[[9,[1,8]]]],[10,[[9,[1,8]]]],[11,[[9,[1,8]]]],[12,[[9,[1,8]]]],[[8,13],14],[[8,13],14],[[7,13],14],[[10,13],14],[[11,13],14],[[12,13],14],[[3,13],[[9,[1,15]]]],[[3,13],[[9,[1,15]]]],[16,8],[17,8],[18,8],[19,8],[20,8],[-1,-1,[]],[21,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,[[9,[7,23]]]],[22,[[9,[10,23]]]],[22,[[9,[11,23]]]],[22,[[9,[12,23]]]],[22,[[9,[7,23]]]],[22,[[9,[10,23]]]],[22,[[9,[11,23]]]],[22,[[9,[12,23]]]],[[],[[25,[24]]]],[[],[[25,[24]]]],[26,6],[26,6],[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],[-1,[],[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[26,[[9,[3,32]]]],[8,[[25,[33]]]],[-1,-2,[],[]],[-1,34,[]],[-1,34,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[[7,22],[[9,[1,23]]]],[[10,22],[[9,[1,23]]]],[[11,22],[[9,[1,23]]]],[[12,22],[[9,[1,23]]]],[[7,22],[[9,[1,23]]]],[[10,22],[[9,[1,23]]]],[[11,22],[[9,[1,23]]]],[[12,22],[[9,[1,23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,[5,-1,[]],[5,-1,[]],[5,1],0,[36,[[9,[1,8]]]],[[36,13],14],[-1,-1,[]],[22,[[9,[36,23]]]],[22,[[9,[36,23]]]],[26,6],[[],5],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[[36,22],[[9,[1,23]]]],[[36,22],[[9,[1,23]]]],[-1,-2,[],[]],0,0,0,0,0,0,[2,2],[2,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[37,38],[[],2],[[],2],0,0,0,0,[5,-1,[]],[5,-1,[]],[5,1],[37,[[9,[1,8]]]],[[37,13],14],[-1,-1,[]],[22,[[9,[37,23]]]],[22,[[9,[37,23]]]],0,[[],[[25,[24]]]],[[],5],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[26,[[9,[3,32]]]],0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[[37,22],[[9,[1,23]]]],[[37,22],[[9,[1,23]]]],0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,[2,2],[2,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[39,38],[[],2],[[],2],0,0,0,[5,-1,[]],[5,-1,[]],[5,1],0,[39,[[9,[1,8]]]],[[39,13],14],[-1,-1,[]],[22,[[9,[39,23]]]],[22,[[9,[39,23]]]],0,[[],[[25,[24]]]],[[],5],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[26,[[9,[3,32]]]],0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[[39,22],[[9,[1,23]]]],[[39,22],[[9,[1,23]]]],0,0,0,[-1,-2,[],[]],0,0,0,0,0,[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,[5,-1,[]],[5,-1,[]],[5,1],0,[40,[[9,[1,8]]]],[[40,13],14],[-1,-1,[]],[22,[[9,[40,23]]]],[22,[[9,[40,23]]]],[26,6],[[],5],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[[40,22],[[9,[1,23]]]],[[40,22],[[9,[1,23]]]],[-1,-2,[],[]],0,0,0,0,0,0,[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[41,38],[[],2],[[],2],0,0,0,0,[5,-1,[]],[5,-1,[]],[5,1],[41,[[9,[1,8]]]],[[41,13],14],[-1,-1,[]],[22,[[9,[41,23]]]],[22,[[9,[41,23]]]],0,[[],[[25,[24]]]],[[],5],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[26,[[9,[3,32]]]],0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[[41,22],[[9,[1,23]]]],[[41,22],[[9,[1,23]]]],0,0,[-1,-2,[],[]],0,0,0,0,0,0,[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[42,38],[[],2],[[],2],0,0,0,[5,-1,[]],[5,-1,[]],[5,1],0,[42,[[9,[1,8]]]],[[42,13],14],[-1,-1,[]],[22,[[9,[42,23]]]],[22,[[9,[42,23]]]],0,[[],[[25,[24]]]],[[],5],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[26,[[9,[3,32]]]],0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,35,[]],[[42,22],[[9,[1,23]]]],[[42,22],[[9,[1,23]]]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Command",428],[4,"ProgressBarMode",2],[4,"Monitor",429],[15,"usize"],[15,"bool"],[4,"IapyxLoadCommand",2],[4,"IapyxLoadCommandError",2],[4,"Result",430],[3,"ArtificialLoadCommand",2],[3,"StaticOnlyLoadCommand",2],[4,"NodeOnlyLoadCommand",2],[3,"Formatter",431],[6,"Result",431],[3,"Error",431],[4,"Error",432],[4,"MultiControllerError",433],[3,"Error",434],[4,"Error",435],[4,"Error",436],[3,"Error",437],[3,"ArgMatches",438],[6,"Error",439],[3,"Id",440],[4,"Option",441],[15,"str"],[3,"IndentedSection",442],[8,"Display",431],[8,"Send",443],[8,"Sync",443],[3,"Request",444],[4,"Infallible",445],[8,"Error",446],[3,"String",447],[3,"TypeId",448],[4,"BurstIapyxLoadCommand",174],[3,"BurstCountIapyxLoadCommand",205],[3,"Config",449],[3,"BurstDurationIapyxLoadCommand",254],[4,"ConstIapyxLoadCommand",303],[3,"ConstantCountIapyxLoadCommand",334],[3,"ConstDurationIapyxLoadCommand",381]]},\
"imhamt":{"doc":"","t":"NDDENNNEEENNAMAAMAAAMAMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDCCCCLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLMLMLLLLLLLLIYDIDRLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLKLLLLLLLLLLLLLLFFFFADNENNNEDGNNMMLLLLLLLLMLLLLAMLLLLLLLLLLLLFLLLLLLLLFLLMLFLFLLFLFLLFLLLLLLLLLLLLLLFFNENNNEEENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGMMM","n":["EntryExists","Hamt","HamtIter","InsertError","KeyNotFound","KeyNotFound","KeyNotFound","RemoveError","ReplaceError","UpdateError","ValueCallbackError","ValueNotMatching","bitmap","content","hamt","hash","hasher","helper","node","operation","root","sharedref","stack","ArrayIndex","SmallBitmap","borrow","borrow","borrow_mut","borrow_mut","clear_index","clone","clone","clone_into","clone_into","create","eq","equivalent","fmt","fmt","from","from","get_found","get_index_sparse","get_sparse_pos","into","into","is_empty","is_not_found","is_set","new","not_found","once","present","set_index","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Hamt","HamtIter","InsertError","RemoveError","ReplaceError","UpdateError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contains_key","content","default","eq","equivalent","fmt","from","from","from_iter","hasher","insert","insert_or_update","insert_or_update_simple","into","into","into_iter","into_iter","is_empty","iter","lookup","new","next","remove","remove_match","replace","replace_with","root","size","stack","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","Hash","Hash","HashedKey","Hasher","LevelIndex","SIZE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute","eq","eq","equivalent","equivalent","finish","fmt","fmt","from","from","hash","hash_slice","into","into","level_index","mask","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_length_prefix","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","clone_array_and_extend","clone_array_and_insert_at_pos","clone_array_and_remove_at_pos","clone_array_and_set_at_pos","reference","Collision","ContinueIn","Entry","Found","Leaf","LeafMany","LookupRet","Node","NodeIter","NotFound","SubNode","_marker","bitmap","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clear_at","clear_or_replace_at","clone","clone_into","debug","end_or_len","fmt","fmt","fmt","from","from","from","from","from_box","from_vec","get_child","get_record_and_pos","insert","insert_rec","into","into","into","into","is_empty","iter","iter","len","lookup_one","new","number_children","ptr","remove","remove_eq_rec","remove_match","remove_rec","replace","replace_at","replace_rec","replace_with","replace_with_rec","set_at","singleton","size_rec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update_rec","depth_rec","EntryExists","InsertError","KeyNotFound","KeyNotFound","KeyNotFound","RemoveError","ReplaceError","UpdateError","ValueCallbackError","ValueNotMatching","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SharedRef","alloc","phantom","ptr"],"q":[[0,"imhamt"],[23,"imhamt::bitmap"],[62,"imhamt::hamt"],[111,"imhamt::hash"],[164,"imhamt::helper"],[168,"imhamt::node"],[169,"imhamt::node::reference"],[249,"imhamt::node::reference::debug"],[250,"imhamt::operation"],[321,"imhamt::sharedref"],[325,"core::fmt"],[326,"core::fmt"],[327,"core::any"],[328,"core::clone"],[329,"core::default"],[330,"core::cmp"],[331,"core::cmp"],[332,"core::fmt"],[333,"core::ops::function"],[334,"core::error"],[335,"core::option"],[336,"core::marker"],[337,"core::marker"],[338,"alloc::sync"],[339,"alloc::vec"],[340,"core::slice::iter"],[341,"alloc::string"]],"d":["","","","","","","","","","","","","helpers and type for the HAMT bitmap","","","","","","","","","","","Sparse index in the array.","This is a node size bitmap to allow to find element in the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get the sparse array index from a level index","Get the position of a level index in the sparse array for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Check if the element exist","Create a new bitmap with no element","","Create a new bitmap with 1 element set","","","","","","","","","","","","","","","","","","","","","","","Check if the key is contained into the HAMT","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Update or insert the element at the key K","Update or insert the element at the key K","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Try to get the element related to key K","","","","","Replace the element at the key by the v and return the new …","Replace the element at the key by the v and return the new …","","","","","","","","","","","Update the element at the key K.","A hashable type.","Derive macro generating an impl of the trait <code>Hash</code>.","Hash of a key","A trait for hashing an arbitrary stream of bytes.","Hash value subgroup per level used as Index for children","","","","","","","","","","Compute the HashedKey from a key ‘k’","","","","","Returns the hash value for the values written so far.","","","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given <code>Hasher</code>.","Feeds a slice of this type into the given <code>Hasher</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","get the index associated with a specific level","","","","","","","","","","Writes some data into this <code>Hasher</code>.","Writes a single <code>i128</code> into this hasher.","Writes a single <code>i16</code> into this hasher.","Writes a single <code>i32</code> into this hasher.","Writes a single <code>i64</code> into this hasher.","Writes a single <code>i8</code> into this hasher.","Writes a single <code>isize</code> into this hasher.","Writes a length prefix into this hasher, as part of being …","Writes a single <code>str</code> into this hasher.","Writes a single <code>u128</code> into this hasher.","Writes a single <code>u16</code> into this hasher.","Writes a single <code>u32</code> into this hasher.","Writes a single <code>u64</code> into this hasher.","Writes a single <code>u8</code> into this hasher.","Writes a single <code>usize</code> into this hasher.","","","","","","","","","","","","","Node of the Hash Array Mapped Trie","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[21,0,0,0,26,28,27,0,0,0,28,26,0,24,0,0,11,0,0,0,11,0,24,0,0,1,3,1,3,1,1,3,1,3,3,1,1,1,3,1,3,3,1,1,1,3,1,3,1,1,3,1,1,1,1,3,1,3,1,3,1,3,0,0,0,0,0,0,24,11,24,11,11,11,11,24,11,11,11,11,24,11,11,11,11,11,11,24,11,24,11,11,11,11,11,24,11,11,11,11,11,11,24,11,24,11,24,11,24,11,11,0,0,0,0,0,0,29,2,29,2,29,2,29,2,29,29,2,29,2,13,29,2,29,2,17,17,29,2,29,2,29,2,29,2,29,2,29,2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,52,0,52,47,47,0,0,0,52,47,54,46,52,46,49,47,52,46,49,47,46,46,46,46,46,0,54,46,49,47,52,46,49,47,49,49,46,49,49,0,52,46,49,47,46,46,49,49,0,46,46,54,49,0,49,0,49,46,0,49,0,46,46,0,46,52,46,49,47,52,46,49,47,52,46,49,47,49,0,0,21,0,26,28,27,0,0,0,28,26,21,26,28,27,21,26,28,27,21,26,28,27,21,26,28,27,21,26,28,27,21,26,28,27,21,21,26,26,28,28,27,27,21,26,28,27,21,26,28,27,28,21,26,28,27,21,26,28,27,21,26,28,27,21,26,28,27,21,26,28,27,0,55,55,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],1],[1,1],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[5,3],[[1,1],6],[[-1,-2],6,[],[]],[[1,7],8],[[3,7],8],[-1,-1,[]],[-1,-1,[]],[3,5],[[1,2],3],[[1,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[1,6],[3,6],[[1,2],6],[[],1],[[],3],[2,1],[1,5],[[1,2],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1,-2,-3]]],[[11,[-1,-2,-3]]],[12,13,14],[12,15,16,17],12],[[-1,-2],4,[],[]],[[[11,[-1,-3,-4]],-2],6,[13,14],[17,16],[[18,[-2]],17,16],[]],0,[[],[[11,[-1,-2,-3]]],[13,14],[16,17],[]],[[[11,[-1,-2,-3]],[11,[-1,-2,-3]]],6,[14,13],[16,17],15],[[-1,-2],6,[],[]],[[[11,[-1,-2,-3]],7],8,[19,13,14],[19,15,16,17],19],[-1,-1,[]],[-1,-1,[]],[-1,[[11,[-2,-3,-4]]],20,[14,13],[16,17,12],12],0,[[[11,[-1,-2,-3]],-2,-3],[[9,[[11,[-1,-2,-3]],21]]],[13,14],[12,16,17],12],[[[11,[-1,-2,-3]],-2,-3,-4],[[9,[[11,[-1,-2,-3]],-5]]],[13,14],[16,17,12],[12,12],22,[23,19]],[[[11,[-1,-2,-3]],-2,-3,-4],[[11,[-1,-2,-3]]],[13,14],[16,17,12],[12,12],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1,-2,-3]]],[],[14,13],[16,17],[]],[[[11,[-1,-2,-3]]],6,[13,14],[16,17],[]],[[[11,[-1,-2,-3]]],[[24,[-2,-3]]],[13,14],[17,16],[]],[[[11,[-1,-3,-4]],-2],[[25,[-4]]],[13,14],[17,16],[[18,[-2]],17,16],[]],[[],[[11,[-1,-2,-3]]],[13,14],[16,17],[]],[[[24,[-1,-2]]],25,[],[]],[[[11,[-1,-3,-4]],-2],[[9,[[11,[-1,-3,-4]],26]]],[13,14],[17,16],[[18,[-2]],12,16,17],12],[[[11,[-1,-3,-4]],-2,-4],[[9,[[11,[-1,-3,-4]],26]]],[13,14],[17,16],[[18,[-2]],16,17,12],[15,12]],[[[11,[-1,-2,-3]],-2,-3],[[9,[[4,[[11,[-1,-2,-3]],-3]],27]]],[13,14],[16,17,12],12],[[[11,[-1,-2,-3]],-2,-4],[[9,[[11,[-1,-2,-3]],27]]],[13,14],[16,17,12],12,22],0,[[[11,[-1,-2,-3]]],5,[13,14],[16,17],[]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[[11,[-1,-2,-3]],-2,-4],[[9,[[11,[-1,-2,-3]],[28,[-5]]]]],[13,14],[16,17,12],12,22,[23,19]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[2,2],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[[30,[-1]],-2],29,[13,14],17],[[29,29],6],[[2,2],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[-1,31,[]],[[29,7],8],[[2,7],8],[-1,-1,[]],[-1,-1,[]],[[-1,-2],4,[],13],[[[32,[-1]],-2],4,33,13],[-1,-2,[],[]],[-1,-2,[],[]],[[29,5],2],[2,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[-1,[32,[35]]],4,[]],[[-1,36],4,[]],[[-1,37],4,[]],[[-1,38],4,[]],[[-1,39],4,[]],[[-1,40],4,[]],[[-1,41],4,[]],[[-1,5],4,[]],[[-1,42],4,[]],[[-1,43],4,[]],[[-1,44],4,[]],[[-1,34],4,[]],[[-1,31],4,[]],[[-1,35],4,[]],[[-1,5],4,[]],[[[32,[-1]],-1],[[45,[[32,[-1]]]]],12],[[[32,[-1]],-1,5],[[45,[[32,[-1]]]]],12],[[[32,[-1]],5],[[45,[[32,[-1]]]]],12],[[[32,[-1]],-1,5],[[45,[[32,[-1]]]]],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[46,[-1,-2]],2],[[25,[[46,[-1,-2]]]]],[],[]],[[[46,[-1,-2]],2,[25,[[48,[[47,[-1,-2]]]]]]],[[25,[[46,[-1,-2]]]]],[],[]],[[[46,[-1,-2]]],[[46,[-1,-2]]],12,12],[[-1,-2],4,[],[]],0,0,[[[46,[-1,-2]],7],8,19,19],[[[49,[-1,-2]],7],8,19,19],[[[47,[-1,-2]],7],8,19,19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[45,[[32,[[4,[-1,-2]]]]]]],[[49,[-1,-2]]],[],[]],[[[50,[[4,[-1,-2]]]]],[[49,[-1,-2]]],[],[]],[[[46,[-1,-2]],3],[[48,[[47,[-1,-2]]]]],[],[]],[[[49,[-2,-3]],-1],[[25,[[4,[5,[4,[-2,-3]]]]]]],15,[[18,[-1]],12,15],12],[[[49,[-1,-2]],-1,-2],[[9,[[49,[-1,-2]],21]]],[12,15],12],[[[46,[-1,-2]],29,5,-1,-2],[[9,[[46,[-1,-2]],21]]],[12,15],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]]],6,[],[]],[[[46,[-1,-2]]],[[51,[[48,[[47,[-1,-2]]]]]]],[],[]],[[[49,[-1,-2]]],[[51,[[4,[-1,-2]]]]],[],[]],[[[49,[-1,-2]]],5,[],[]],[[[46,[-2,-3]],29,5,-1],[[52,[-2,-3]]],15,[15,[18,[-1]]],[]],[[],[[46,[-1,-2]]],[],[]],[[[46,[-1,-2]]],5,[],[]],0,[[[49,[-2,-3]],29,-1],[[9,[[47,[-2,-3]],26]]],15,[[18,[-1]],12,15],12],[[[46,[-2,-3]],29,5,-1,-3],[[9,[[25,[[46,[-2,-3]]]],26]]],15,[[18,[-1]],15,12],[15,12]],[[[49,[-2,-3]],29,-1,-3],[[9,[[47,[-2,-3]],26]]],15,[[18,[-1]],12,15],[15,12]],[[[46,[-2,-3]],29,5,-1],[[9,[[25,[[46,[-2,-3]]]],26]]],15,[[18,[-1]],15,12],12],[[[49,[-1,-2]],-1,-2],[[9,[[4,[[49,[-1,-2]],-2]],27]]],[12,15],12],[[[46,[-1,-2]],3,[48,[[47,[-1,-2]]]]],[[46,[-1,-2]]],[],[]],[[[46,[-1,-2]],29,5,-1,-2],[[9,[[4,[[46,[-1,-2]],-2]],27]]],[15,12],12],[[[49,[-1,-2]],-1,-3],[[9,[[49,[-1,-2]],27]]],[12,15],12,22],[[[46,[-1,-2]],29,5,-1,-3],[[9,[[46,[-1,-2]],27]]],[15,12],12,22],[[[46,[-1,-2]],2,[48,[[47,[-1,-2]]]]],[[46,[-1,-2]]],[],[]],[[2,[48,[[47,[-1,-2]]]]],[[46,[-1,-2]]],[],[]],[[[46,[-1,-2]]],5,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[[49,[-1,-2]],29,-1,-3],[[9,[[47,[-1,-2]],[28,[-4]]]]],[12,15],12,22,[23,19]],[[[46,[-1,-2]],29,5,-1,-3],[[9,[[25,[[46,[-1,-2]]]],[28,[-4]]]]],[15,12],12,22,[23,19]],[[[46,[-1,-2]]],5,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[26,26],[[[28,[-1]]],[[28,[-1]]],[23,19,12]],[27,27],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[21,21],6],[[26,26],6],[[[28,[-1]],[28,[-1]]],6,[23,19,15]],[[27,27],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[21,7],8],[[21,7],8],[[26,7],8],[[26,7],8],[[[28,[-1]],7],8,[23,19]],[[[28,[-1]],7],8,[23,19,19]],[[27,7],8],[[27,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[25,[23]]],[23,19]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0],"c":[],"p":[[3,"SmallBitmap",23],[3,"LevelIndex",111],[3,"ArrayIndex",23],[15,"tuple"],[15,"usize"],[15,"bool"],[3,"Formatter",325],[6,"Result",325],[4,"Result",326],[3,"TypeId",327],[3,"Hamt",62],[8,"Clone",328],[8,"Hasher",111],[8,"Default",329],[8,"PartialEq",330],[8,"Eq",330],[8,"Hash",111],[8,"Borrow",331],[8,"Debug",325],[8,"IntoIterator",332],[4,"InsertError",250],[8,"FnOnce",333],[8,"Error",334],[3,"HamtIter",62],[4,"Option",335],[4,"RemoveError",250],[4,"ReplaceError",250],[4,"UpdateError",250],[3,"HashedKey",111],[3,"PhantomData",336],[15,"u64"],[15,"slice"],[8,"Sized",336],[15,"u32"],[15,"u8"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"str"],[15,"u128"],[15,"u16"],[3,"Box",337],[3,"Node",169],[4,"Entry",169],[3,"Arc",338],[3,"Collision",169],[3,"Vec",339],[3,"Iter",340],[4,"LookupRet",169],[3,"String",341],[6,"NodeIter",169],[6,"SharedRef",321]]},\
"integration_tests":{"doc":"","t":"ENNNNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLLL","n":["Error","FragmentSenderError","IapyxError","No","VerificationError","VitupError","Vote","VoteTiming","Yes","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","new","source","tally_end","tally_start","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_start","vzip","vzip","vzip","wait_for_tally_end","wait_for_tally_start"],"q":[[0,"integration_tests"],[68,"dyn_clone::sealed"],[69,"core::fmt"],[70,"core::fmt"],[71,"iapyx::controller"],[72,"vitup::error"],[73,"thor::fragment::sender"],[74,"color_eyre::section"],[75,"core::fmt"],[76,"core::marker"],[77,"core::error"],[78,"core::option"],[79,"alloc::string"],[80,"core::result"],[81,"core::any"],[82,"jormungandr_automation::jormungandr::rest"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,5,5,3,5,5,0,0,3,3,18,5,3,18,5,3,3,3,18,5,3,18,5,3,18,5,3,5,5,18,5,5,5,5,5,3,5,5,18,5,3,18,5,3,18,5,3,18,5,18,18,3,5,18,5,3,18,5,3,18,5,3,18,18,5,3,18,18],"f":[0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[-1,-2],2,[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[[5,6],7],[[5,6],7],[-1,-1,[]],[-1,-1,[]],[8,5],[9,5],[10,5],[11,5],[-1,-1,[]],[[-1,-2],[[12,[-2,-3]]],[],[13,14,15],[]],[-1,[],[]],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[17,17,17],18],[5,[[20,[19]]]],0,0,[-1,-2,[],[]],[-1,21,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,24],2],[[18,24],2]],"c":[],"p":[[3,"Private",68],[15,"tuple"],[4,"Vote",0],[15,"usize"],[4,"Error",0],[3,"Formatter",69],[6,"Result",69],[4,"Error",70],[4,"ControllerError",71],[4,"Error",72],[4,"FragmentSenderError",73],[3,"IndentedSection",74],[8,"Display",69],[8,"Send",75],[8,"Sync",75],[3,"Request",76],[15,"u32"],[3,"VoteTiming",0],[8,"Error",77],[4,"Option",78],[3,"String",79],[4,"Result",80],[3,"TypeId",81],[3,"JormungandrRest",82]]},\
"jcli":{"doc":"","t":"FF","n":["main","report_error"],"q":[[0,"jcli"],[2,"core::error"],[3,"alloc::boxed"]],"d":["",""],"i":[0,0],"f":[[[],1],[[[3,[2]]],1]],"c":[],"p":[[15,"tuple"],[8,"Error",2],[3,"Box",3]]},\
"jcli_lib":{"doc":"","t":"ANNNNDENNNNNALLLLALLLLALLMLLALLLLLLLLLLLLLLMLLLLLLAAMALLLLLLLLLLAALLNDEDENDNNDMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFFFFFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDNNENENNNNDNNLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLFMMLLLLFLLFFLMFLLLLLLLLLLLLLLLLLLLLLLLLMMMMNENNENNNNNNNNNNNNNNNNNNNNENNNNNNNNDNNNNNNDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMAAAAAAAAAMMFFFAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFFMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLMMMLLLLLLDLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLMLDLLLLLLLLLLLLLLLLMMMLLLLLLDLLLLLLMLLLLLLLLLLFMMLLLLLLDLLLLLLLLLLLLLLLLMMLLLLLMLNDNDELLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLMMLLLDLLLLLLLLLLLLLLLMLMLLLLLFLNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLLLLLLLLLLLLLMMLLLENNLLLLLLLLLLLLLLALLLLLALDLLLLLLLLLLLLLLLMLMLLLLLLDLLLLLLLLLLLLLLLMLMLLLLLLDLLLLLLFFLLLFLLLLLLMLMFMFLLLLLFFLDDLLLLLLLLLLFFLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMNEENNNNNLLALLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLMMDLLLLLLLLLLLLLLLMLLLLLLLDLLLLLLLLLLLLLLLMLLLLLLLNNDNNNNEDNEDNNNNNENNNNDDNNNNDNDNNNNNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLMLLLLLLLLLLLMMMLLLLLLLLLLLMMMMMMMMLLMMFFMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMENNNNNNNEDNNNLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLAALLNNNENNNNNNNDDDDNNNLLMLLLLLLLLLLLLLMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLMNNNNNNNNNNNNNNNENALLALLLLLLALLLLLLLLAAAAAAAAAAALLLLLAALENLLLLLLLLLLLLLLLLFLLLLLLMMMDLLMLLLLLLLLLLLLLLAAMLLLLLLNELLLLLLLLLLFLLLLLLLLLLLLMMNNELLLLLLLLLLFLLLLLLLLLLLLMENLLLLLLLLLLLLLLLLLLLLLLMNEENLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLMMNENLLLLLLLLLLLLLFLLLFFLLLLLLMMMMENLLLLLLLLLLLLLLLLALLLLLLNELLLLLLLLLLLLLLLLLLLLLLMMENLLLLLLLLLLLLLLLLALLLLLLNELLLLLLLLLLLLLLLLLLLLLLMMNNELLLLLLLLLALLLLLALLLLLLLLENLLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLFLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMNELLLLLLLLLLLLLLLLLLLLLLMMMNELLLLLLLLLLLLLLLLLLLLLLMMMNELLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMNEDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLMMNEALLLLLLALLLLLLLLLLALLLLLLENNLLLLLLLLLLLLLLLLLLLLLLENLLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMMENLLLLLLLLLLLLLLLLLLLLLALDNEMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNGNNENNNNNNNNNNNNNNNNNNNNNNNNAAAAALLALLLLLLALLLLFFFFLLLALLLLLLLLLLLLLLLLLALLLLAAAAALALLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMLLLLLLMLLLLLLLLLLLLLLLMLDLLLLMLLMLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLMLLMLLLLLMLDMLLLLLLMLLLLLLLLLLLLLLLMLDLLLLLLMLLLLLLLLLLLLLLLLLMDLLLLLLMLLLLLLLLLLMLLLLLLDDLLLLLLLLMMMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDLLLLMLLMLLLLMFLLLLLLLLLLLLDMLLLLLLMLLLLMLLLLLLMMLLLLLLNDNNEMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFMMMLLLLLLLLLLLMLDLLLLLLMLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLLLLLLLLMLDLLMLLMLLMFFFFLLLLMLLLLLLFFMMMMMLLLLLMMLNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLMCNNDECEALLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLMLLLLLLLLAAMAALLLLLLLLLLLLLLLALLLDNENMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLMMMNENFLLLLLLLLLLLLFFFFFLLLLLLENNNNFLLLLLLLLLLLLFFFFLLLLLLMMMMNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMNNEEDNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLNNNNNNNDNEDNNDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNENNNNNNNNNNNNNNNDNNNNDNNNENLLLLLLLLLLLLALLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLALLLLLLLLLLLLLLLLMMMMMMMMMMENNLLLLLLALLLLLLLLLLALLLLLLEDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLLLLLLLLLLLLLLLDNEDNLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLMMMMMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLMMLLLLLLNNNNCELLLLLLAALLLLLLLLLLALLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLMMLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMLLEDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFMMMMLLMLLLLLLLLLLLLLLLLLMMLLLL","n":["jcli_lib","Address","Certificate","Debug","Genesis","JCli","JCliCommand","Key","Rest","Transaction","Utils","Votes","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","block","borrow","borrow","borrow_mut","borrow_mut","certificate","command","command","command","command_for_update","command_for_update","debug","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","full_version","group_id","has_subcommand","init","init","into","into","key","rest","source_version","transaction","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","utils","vote","vzip","vzip","Account","AccountArgs","Address","DiscriminationData","Error","Info","InfoArgs","MultisigAddressNotSupported","Single","SingleArgs","address","address_info","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","delegation","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination_data","discrimination_data","drop","drop","drop","drop","drop","drop","exec","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init","into","into","into","into","into","into","key","key","mk_account","mk_address","mk_address_1","mk_address_2","mk_delegation","mk_discrimination","mk_single","prefix","testing","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","BlockFileCorrupted","BlockSerializationFailed","BuildingGenesisFromBlock0Failed","Common","Decode","Encode","Error","GeneratedBlock0Invalid","Genesis","GenesisFileCorrupted","GenesisSerializationFailed","Hash","Init","Input","InputInvalid","OutputInvalid","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","decode_block_0","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_block_0","exec","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","init","init_genesis_yaml","input","input_file","into","into","into","into","load_block","load_block","open","open_block_file","open_output","open_output","output_file","print_hash","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","path","path","source","source","Base64","Certificate","ConfigFileCorrupted","ElectionPublicKey","Error","ExpectedSignedOrNotCertificate","ExpectingOnlyOneSigningKey","InputInvalid","InvalidBech32","InvalidBech32Key","InvalidCertificate","InvalidCertificateBech32","InvalidChoice","InvalidJson","InvalidPoolDelegation","InvalidPoolDelegationWeights","InvalidPrivateVotePlanCommitteeKeys","InvalidVotePlanCommitteeBlockDates","InvalidVotePlanVoteBlockDates","Io","KeyInvalid","KeyNotFound","ManagementThresholdInvalid","MintTokenDoesntNeedSignature","New","NewArgs","NoSigningKeys","NotStakePoolRegistration","NotVotePlanCertificate","OutputInvalid","OwnerStakeDelegation","OwnerStakeDelegationDoesntNeedSignature","PoolDelegationWithZeroWeight","Print","PrintArgs","PrivateTallyError","PrivateTallyExpected","SharesError","Show","Sign","StakeDelegation","StakeDelegationArgs","StakePoolRegistration","StakePoolRetirement","TooManyPoolDelegations","TooManyVotePlanProposals","UpdateProposal","UpdateVote","VoteCast","VoteCastDoesntNeedSignature","VotePlan","VotePlanConfig","VotePlanDoesntNeedSignature","VotePlanError","VoteTally","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exec","exec","exec","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","has_subcommand","init","init","init","init","init","input","into","into","into","into","into","key","new_owner_stake_delegation","new_stake_delegation","new_stake_pool_registration","new_stake_pool_retirement","new_update_proposal","new_update_vote","new_vote_cast","new_vote_plan","new_vote_tally","pool_id","private_key","read_cert","read_cert_or_signed_cert","read_input","show","sign","source","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","weighted_pool_ids","write_cert","write_output","write_signed_cert","actual","actual","actual","actual","committee_end","expected","found","got","got","index","max","max","max","max_expected","path","path","source","source","vote_end","vote_end","vote_start","OwnerStakeDelegation","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","pool_ids","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","StakeDelegation","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","pool_ids","stake_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","StakePoolRegistration","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","kes_key","management_threshold","operators","output","owners","reward_account","start_validity","tax_fixed","tax_limit","tax_ratio","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vrf_key","vzip","StakePoolRetirement","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","pool_id","retirement_time","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","UpdateProposal","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config_file","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","open_config_file","output","proposer_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","UpdateVote","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","proposal_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","voter_id","vzip","Private","PrivateVoteCast","Public","PublicVoteCast","VoteCastCmd","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choice","choice","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","election_key_path","exec","exec","exec","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","options","output","output","proposal_index","proposal_index","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan_id","vote_plan_id","vzip","vzip","vzip","VotePlanRegistration","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","validate_voteplan","vzip","Private","PrivateTally","Public","PublicTally","VoteTallyRegistration","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","id","init","init","init","into","into","into","output","output","shares","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan","vote_plan_id","vzip","vzip","vzip","ShowArgs","StakePoolId","VotePlanId","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","stake_pool_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plan_id","vzip","GetStakePoolId","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","GetVotePlanId","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Sign","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","committee_vote_plan_sign","committee_vote_tally_sign","deref","deref_mut","drop","evm_mapping_sign","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","pool_owner_sign","signing_keys","stake_delegation_account_binding_sign","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","update_proposal_sign","update_vote_sign","vzip","WeightedPoolId","WeightedPoolIds","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","delegation_ratio","delegation_ratio_sum","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_str","group_id","init","init","into","into","pool_id","pool_ids","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","weight","Block","Debug","Error","HexMalformed","InputInvalid","Io","Message","MessageMalformed","augment_subcommands","augment_subcommands_for_update","block","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","message","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","path","source","Block","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Message","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Bech32","Derivation","Derive","Derive","Ed25519","Ed25519Bip32","Ed25519Extended","Error","FromBytes","FromBytes","GenPrivKeyType","Generate","Generate","Hex","InvalidOutput","InvalidSeed","Io","Key","PublicKey","Rand","RistrettoGroup2HashDh","SecretKey","Seed","Sign","Sign","Signature","SignatureVerification","SumEd25519_12","ToBytes","ToBytes","ToPublic","ToPublic","UnexpectedBech32SignHrp","UnexpectedBip32Bech32Hrp","UnknownBech32PrivKeyHrp","UnknownBech32PubKeyHrp","Verify","Verify","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_priv_key","bytes_to_pub_key","child_key","clone","clone","clone_into","clone_into","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","gen_priv_key","gen_pub_key","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","index","init","init","init","init","init","init","init","init","init","init","init","input_bytes","input_key","input_key","into","into","into","into","into","into","into","into","into","into","into","key_type","key_type","output","output_file","output_file","output_file","output_file","parent_key","process_private_key","process_public_key","public_key","public_key","read_bech32","read_hex","secret_key","seed","sign","signature","source","to_owned","to_owned","to_possible_value","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_key","actual_hrp","actual_hrp","expected_hrp","hrp","hrp","private_hrp","public_hrp","seed_len","Error","InputFileInvalid","InputFileYamlMalformed","InputFragmentMalformed","InputHexMalformed","OutputFormatFailed","OutputFragmentMalformed","RequestError","Rest","RestArgs","SerdeError","V0","V1","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","debug","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","host","init","init","into","into","source","tls_cert_path","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","v0","v1","vzip","vzip","Bytes","CertIo","Client","Error","HostAddrNotBase","Internal","InvalidParams","Json","Pem","Redirecton","Request","RestArgs","RestClient","RestRequestBuilder","RestResponse","Text","Timeout","Unexpected","augment_args","augment_args_for_update","base_url","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","client","client","client","clone","clone_into","command","command_for_update","debug","debug","debug","delete","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","execute","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get","group_id","host","init","init","init","init","init","into","into","into","into","into","json","json","make_request_builder","make_url","post","query","request_builder","source","text","tls_cert_path","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","addr","Account","Block","Diagnostic","Leaders","Message","Network","Node","Rewards","Settings","Shutdown","Stake","StakePool","StakePools","Tip","Utxo","V0","Vote","account","augment_subcommands","augment_subcommands_for_update","block","borrow","borrow_mut","command","command_for_update","deref","deref_mut","diagnostic","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","leaders","message","network","node","rewards","settings","shutdown","stake","stake_pool","stake_pools","tip","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utxo","vote","vzip","Account","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","request_account_information","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","account_id","args","output_format","Block","augment_args","augment_args_for_update","block_id","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","next_id","subcommand","subcommand","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Get","NextId","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","exec_get","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","count","Get","NextId","Subcommand","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","exec_get","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Diagnostic","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Get","GetLogs","Leaders","Logs","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_logs","has_subcommand","has_subcommand","init","init","into","into","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","args","output_format","Logs","Message","Post","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","get_logs","has_subcommand","init","into","post_fragment","post_message","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","args","file","output_format","Network","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","stats","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Get","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Node","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","stats","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Get","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Epoch","History","Rewards","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","epoch","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","history","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Epoch","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","epoch","Get","History","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","length","Get","Settings","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","request_settings","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Post","Shutdown","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Get","Stake","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","epoch","output_format","Get","StakePool","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","pool_id","Get","StakePools","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Get","Tip","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Get","Subcommand","Utxo","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fragment_id","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","output_index","subcommand","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","args","output_format","Active","Vote","active","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","committees","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","plans","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Active","Committees","Plans","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Committees","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Get","Plans","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","V1","Vote","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote","vzip","AccountVotes","AccountVotes","Vote","account_id","args","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","output_format","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan_id","vzip","vzip","AccountAddressGroup","AccountAddressScript","AccountAddressSingle","AccountIdError","AddAccount","AddCertificate","AddInput","AddOutput","AddWitness","Auth","Block0Error","CancelByUser","CannotFinalizeWithoutValidUntil","CertificateError","DataForWitness","Error","Finalize","FragmentId","Id","Info","InfoCalculationFailed","InfoExpectedSingleAccount","InfoFileWriteFailed","InvalidBlock0HeaderHash","MakeTransaction","MakeWitness","MakeWitnessAccountCounterMissing","MakeWitnessAccountInvalidCounterLane","MessageSerializationFailed","New","NoSigningKeys","OutputFormatFailed","RandError","RestError","Seal","SecretKeyReadFailed","SetExpiryDate","StagingFileOpenFailed","StagingFileReadFailed","StagingFileWriteFailed","StaticStr","ToMessage","TooManyWitnessesToAddWitness","Transaction","TxDoesntNeedPayloadAuth","TxFinalizationFailed","TxKindToAddExtraInvalid","TxKindToAddInputInvalid","TxKindToAddOutputInvalid","TxKindToAddWitnessInvalid","TxKindToFinalizeInvalid","TxKindToGetMessageInvalid","TxKindToSealInvalid","TxKindToSetValidityTimeInvalid","TxKindToSignDataHashInvalid","TxNeedPayloadAuth","TxWithOwnerStakeDelegationHasOutputs","TxWithOwnerStakeDelegationHasUtxoInput","TxWithOwnerStakeDelegationMultiInputs","UserInputError","WitnessCountToSealInvalid","WitnessFileBech32EncodingFailed","WitnessFileBech32HrpInvalid","WitnessFileBech32Malformed","WitnessFileDeserializationFailed","WitnessFileReadFailed","WitnessFileSerializationFailed","WitnessFileWriteFailed","add_account","add_certificate","add_input","add_output","add_witness","augment_subcommands","augment_subcommands_for_update","auth","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","common","deref","deref","deref_mut","deref_mut","display_data_for_witness","display_fragment_id","display_id","display_message","drop","drop","exec","finalize","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","info","init","init","into","into","mk_witness","new","seal","set_expiry_date","simplified","source","staging","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","actual","actual","actual","actual","error","expected","expected","inputs","kind","kind","kind","kind","kind","kind","kind","kind","kind","max","max","path","path","path","path","path","path","path","path","path","source","source","source","source","source","source","source","source","AddAccount","account","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vzip","AddCertificate","augment_args","augment_args_for_update","borrow","borrow_mut","certificate","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AddInput","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","index","init","into","transaction_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vzip","AddOutput","address","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vzip","AddWitness","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","witness","witness","Auth","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","signing_keys","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CommonFees","CommonTransaction","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","command","command","command_for_update","command_for_update","constant","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","init","init","into","into","linear_fee","load","staging_file","store","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","Finalize","augment_args","augment_args_for_update","borrow","borrow_mut","change","command","command_for_update","common","deref","deref_mut","drop","exec","fee","finalize","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Info","address_prefix","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","fee","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","output_format","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Account","MkWitness","OldUTxO","UTxO","WitnessType","account_spending_counter","account_spending_counter_lane","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_str","genesis_block_hash","group_id","init","init","into","into","make_witness","output","secret","sign_data_hash","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","witness_type","write_witness","New","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Seal","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","SetExpiryDate","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","MakeTransaction","augment_args","augment_args_for_update","block0_hash","borrow","borrow_mut","change","command","command_for_update","common","common_fee_from_settings","create_new_private_key","create_receiver_address","create_receiver_secret_key_and_address","deref","deref_mut","drop","exec","force","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","make_address","make_transaction","post","receiver","rest_args","secret","sender_account","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","value","vzip","Authed","Balancing","Finalizing","Sealed","Staging","StagingKind","add_account","add_input","add_output","add_witness","balance","balance_inputs_outputs","borrow","borrow","borrow_mut","borrow_mut","builder_after_witness","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","evm_transaction","extra","extra_authed","fees","finalize_payload","fmt","fmt","fmt","fragment","from","from","get_inputs_outputs","init","init","inputs","inputs","into","into","kind","load","make_fragment","need_auth","new","outputs","outputs","seal","serialize","serialize","set_auth","set_evm_transaction","set_expiry_date","set_extra","staging_kind_name","store","to_owned","to_string","total_input","total_output","transaction_sign_data_hash","transaction_sign_data_hash_on","try_from","try_from","try_into","try_into","type_id","type_id","valid_until","vzip","vzip","witness_count","witnesses","AccountId","Bech32ConversionFailure","Bech32Convert","Bech32ConvertArgs","Error","OutputFormat","Utils","account_id","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","convert_prefix","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_bech32","group_id","has_subcommand","init","init","init","into","into","into","io","key_parser","new_hrp","output_file","output_format","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vote","vzip","vzip","vzip","AccountId","AddressNotAccount","Error","NotRecognized","account","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","id_from_pub","init","init","into","into","to_owned","to_string","to_url_arg","try_from","try_from","try_from_str","try_into","try_into","type_id","type_id","vzip","vzip","addr","addr","kind","Io","ReadYamlError","Yaml","ask_yes_or_no","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","open_file_read","open_file_write","path_to_path_buf","read_line","read_yaml","source","to_string","try_from","try_into","type_id","vzip","Error","SecretKeyFileMalformed","SecretKeyFileReadFailed","SecretKeyMalformed","UserInputError","_read_secret_key_from_file","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","parse_ed25519_secret_key","parse_pub_key","read_ed25519_secret_key_from_file","read_secret_key","source","to_string","try_from","try_into","type_id","vzip","path","path","source","source","CannotOpen","Error","OutputFile","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","extension_prefix","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","open","output","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","cause","path","Custom","CustomFormattingFailed","Error","FormatVariant","GtmplError","Json","JsonFormattingFailed","OutputFormat","Yaml","YamlFormattingFailed","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","format","format_json","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","from_str","group_id","init","init","init","init","into","into","into","into","json_array_to_gtmpl","json_number_to_gtmpl","json_object_to_gtmpl","json_value_to_gtmpl","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Empty","InsufficientShares","InvalidBinaryShare","Io","Io","JsonError","JsonError","MemberVotePlanShares","ProposalSharesNotBalanced","SharesError","TallyDecryptShare","UnclearVotePlan","ValidationFailed","VotePlanDecryptShares","VotePlanError","VotePlanIdNotFound","VotePlansRead","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_vote_plan_by_id","init","init","init","init","init","into","into","into","into","into","read_vote_plan_shares_from_file","serialize","serialize","serialize","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Base64","Bech32","Committee","ConfigFileCorrupted","DecryptionKeyRead","ElectionKey","EncryptedTallyRead","Error","FormatError","FragmentFileOpenFailed","FragmentFileWriteFailed","Hex","InputInvalid","InvalidCommitteMemberIndex","InvalidCrs","InvalidOutput","InvalidPublicKey","InvalidSecretKey","InvalidSeed","InvalidThreshold","Io","JsonError","MergeError","MergedVotePlan","PrivateTallyExpected","Rand","RestError","SecretKeyReadFailed","Seed","SharesError","Tally","TallyError","Vote","VotePlanError","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","committee","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","election_public_key","exec","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","from_str","has_subcommand","ids","init","init","init","into","into","into","proposals","source","tally","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","committee_members","found","path","path","path","seed_len","source","source","source","threshold","Committee","CommunicationKey","MemberKey","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","communication_key","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","member_key","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CommunicationKey","Generate","Generate","ToPublic","ToPublic","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","input_key","into","into","into","output_file","output_file","seed","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","Generate","Generate","MemberKey","ToPublic","ToPublic","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","crs","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","index","init","init","init","input_key","into","into","into","keys","output_file","output_file","seed","threshold","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","ElectionPublicKey","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","member_keys","output_file","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","DecryptResults","DecryptionShares","MergeResults","MergeShares","MergedVotePlan","Tally","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","decrypt_tally","decryption_shares","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","merge_results","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Output","TallyVotePlanWithAllShares","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","output_format","result","serialize","shares","threshold","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plan","vote_plan_id","vzip","vzip","MergeShares","TallyGenerateVotePlanDecryptionShares","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","init","init","into","into","key","shares","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan","vote_plan_id","vzip","vzip","Error","MergeVotePlan","MergedVotePlan","MergedVoteProposalStatus","PrivacyMismatch","VotePlanEncrypted","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exec","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","ids","init","init","init","init","into","into","into","into","merge_voteplans","options","output_format","proposal_id","proposals","serialize","serialize","tally","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plans","votes_cast","vzip","vzip","vzip","vzip"],"q":[[0,"jcli_lib"],[1,"jcli_lib::jcli_lib"],[68,"jcli_lib::jcli_lib::address"],[215,"jcli_lib::jcli_lib::block"],[326,"jcli_lib::jcli_lib::block::Error"],[330,"jcli_lib::jcli_lib::certificate"],[520,"jcli_lib::jcli_lib::certificate::Error"],[541,"jcli_lib::jcli_lib::certificate::new_owner_stake_delegation"],[566,"jcli_lib::jcli_lib::certificate::new_stake_delegation"],[592,"jcli_lib::jcli_lib::certificate::new_stake_pool_registration"],[627,"jcli_lib::jcli_lib::certificate::new_stake_pool_retirement"],[653,"jcli_lib::jcli_lib::certificate::new_update_proposal"],[680,"jcli_lib::jcli_lib::certificate::new_update_vote"],[706,"jcli_lib::jcli_lib::certificate::new_vote_cast"],[787,"jcli_lib::jcli_lib::certificate::new_vote_plan"],[813,"jcli_lib::jcli_lib::certificate::new_vote_tally"],[890,"jcli_lib::jcli_lib::certificate::show"],[915,"jcli_lib::jcli_lib::certificate::show::stake_pool_id"],[940,"jcli_lib::jcli_lib::certificate::show::vote_plan_id"],[965,"jcli_lib::jcli_lib::certificate::sign"],[998,"jcli_lib::jcli_lib::certificate::weighted_pool_ids"],[1043,"jcli_lib::jcli_lib::debug"],[1093,"jcli_lib::jcli_lib::debug::Error"],[1095,"jcli_lib::jcli_lib::debug::block"],[1119,"jcli_lib::jcli_lib::debug::message"],[1143,"jcli_lib::jcli_lib::key"],[1457,"jcli_lib::jcli_lib::key::Error"],[1465,"jcli_lib::jcli_lib::rest"],[1531,"jcli_lib::jcli_lib::rest::config"],[1647,"jcli_lib::jcli_lib::rest::config::Error"],[1648,"jcli_lib::jcli_lib::rest::v0"],[1703,"jcli_lib::jcli_lib::rest::v0::account"],[1728,"jcli_lib::jcli_lib::rest::v0::account::Account"],[1731,"jcli_lib::jcli_lib::rest::v0::block"],[1758,"jcli_lib::jcli_lib::rest::v0::block::next_id"],[1783,"jcli_lib::jcli_lib::rest::v0::block::next_id::NextId"],[1785,"jcli_lib::jcli_lib::rest::v0::block::subcommand"],[1811,"jcli_lib::jcli_lib::rest::v0::block::subcommand::Subcommand"],[1812,"jcli_lib::jcli_lib::rest::v0::diagnostic"],[1836,"jcli_lib::jcli_lib::rest::v0::diagnostic::Diagnostic"],[1837,"jcli_lib::jcli_lib::rest::v0::leaders"],[1885,"jcli_lib::jcli_lib::rest::v0::leaders::GetLogs"],[1887,"jcli_lib::jcli_lib::rest::v0::message"],[1915,"jcli_lib::jcli_lib::rest::v0::message::Message"],[1919,"jcli_lib::jcli_lib::rest::v0::network"],[1944,"jcli_lib::jcli_lib::rest::v0::network::stats"],[1968,"jcli_lib::jcli_lib::rest::v0::network::stats::Stats"],[1970,"jcli_lib::jcli_lib::rest::v0::node"],[1995,"jcli_lib::jcli_lib::rest::v0::node::stats"],[2019,"jcli_lib::jcli_lib::rest::v0::node::stats::Stats"],[2021,"jcli_lib::jcli_lib::rest::v0::rewards"],[2048,"jcli_lib::jcli_lib::rest::v0::rewards::epoch"],[2072,"jcli_lib::jcli_lib::rest::v0::rewards::epoch::Epoch"],[2074,"jcli_lib::jcli_lib::rest::v0::rewards::history"],[2098,"jcli_lib::jcli_lib::rest::v0::rewards::history::History"],[2100,"jcli_lib::jcli_lib::rest::v0::settings"],[2125,"jcli_lib::jcli_lib::rest::v0::settings::Settings"],[2127,"jcli_lib::jcli_lib::rest::v0::shutdown"],[2151,"jcli_lib::jcli_lib::rest::v0::shutdown::Shutdown"],[2152,"jcli_lib::jcli_lib::rest::v0::stake"],[2176,"jcli_lib::jcli_lib::rest::v0::stake::Stake"],[2179,"jcli_lib::jcli_lib::rest::v0::stake_pool"],[2203,"jcli_lib::jcli_lib::rest::v0::stake_pool::StakePool"],[2206,"jcli_lib::jcli_lib::rest::v0::stake_pools"],[2230,"jcli_lib::jcli_lib::rest::v0::stake_pools::StakePools"],[2232,"jcli_lib::jcli_lib::rest::v0::tip"],[2256,"jcli_lib::jcli_lib::rest::v0::tip::Tip"],[2257,"jcli_lib::jcli_lib::rest::v0::utxo"],[2306,"jcli_lib::jcli_lib::rest::v0::utxo::Subcommand"],[2308,"jcli_lib::jcli_lib::rest::v0::vote"],[2335,"jcli_lib::jcli_lib::rest::v0::vote::active"],[2360,"jcli_lib::jcli_lib::rest::v0::vote::committees"],[2384,"jcli_lib::jcli_lib::rest::v0::vote::committees::Committees"],[2386,"jcli_lib::jcli_lib::rest::v0::vote::plans"],[2410,"jcli_lib::jcli_lib::rest::v0::vote::plans::Plans"],[2412,"jcli_lib::jcli_lib::rest::v1"],[2437,"jcli_lib::jcli_lib::rest::v1::vote"],[2488,"jcli_lib::jcli_lib::transaction"],[2623,"jcli_lib::jcli_lib::transaction::Error"],[2659,"jcli_lib::jcli_lib::transaction::add_account"],[2685,"jcli_lib::jcli_lib::transaction::add_certificate"],[2710,"jcli_lib::jcli_lib::transaction::add_input"],[2737,"jcli_lib::jcli_lib::transaction::add_output"],[2763,"jcli_lib::jcli_lib::transaction::add_witness"],[2789,"jcli_lib::jcli_lib::transaction::auth"],[2814,"jcli_lib::jcli_lib::transaction::common"],[2871,"jcli_lib::jcli_lib::transaction::finalize"],[2898,"jcli_lib::jcli_lib::transaction::info"],[2926,"jcli_lib::jcli_lib::transaction::mk_witness"],[2979,"jcli_lib::jcli_lib::transaction::new"],[3003,"jcli_lib::jcli_lib::transaction::seal"],[3027,"jcli_lib::jcli_lib::transaction::set_expiry_date"],[3052,"jcli_lib::jcli_lib::transaction::simplified"],[3092,"jcli_lib::jcli_lib::transaction::staging"],[3176,"jcli_lib::jcli_lib::utils"],[3252,"jcli_lib::jcli_lib::utils::account_id"],[3291,"jcli_lib::jcli_lib::utils::account_id::Error"],[3294,"jcli_lib::jcli_lib::utils::io"],[3321,"jcli_lib::jcli_lib::utils::key_parser"],[3349,"jcli_lib::jcli_lib::utils::key_parser::Error"],[3353,"jcli_lib::jcli_lib::utils::output_file"],[3398,"jcli_lib::jcli_lib::utils::output_file::Error"],[3400,"jcli_lib::jcli_lib::utils::output_format"],[3491,"jcli_lib::jcli_lib::utils::vote"],[3597,"jcli_lib::jcli_lib::vote"],[3706,"jcli_lib::jcli_lib::vote::Error"],[3716,"jcli_lib::jcli_lib::vote::committee"],[3743,"jcli_lib::jcli_lib::vote::committee::communication_key"],[3821,"jcli_lib::jcli_lib::vote::committee::member_key"],[3900,"jcli_lib::jcli_lib::vote::election_public_key"],[3925,"jcli_lib::jcli_lib::vote::tally"],[3956,"jcli_lib::jcli_lib::vote::tally::decrypt_tally"],[3999,"jcli_lib::jcli_lib::vote::tally::decryption_shares"],[4049,"jcli_lib::jcli_lib::vote::tally::merge_results"],[4147,"clap_builder::builder::command"],[4148,"core::error"],[4149,"alloc::boxed"],[4150,"core::result"],[4151,"clap_builder::parser::matches::arg_matches"],[4152,"clap_builder"],[4153,"clap_builder::util::id"],[4154,"core::option"],[4155,"core::any"],[4156,"chain_addr"],[4157,"core::fmt"],[4158,"core::fmt"],[4159,"chain_crypto::key"],[4160,"chain_addr"],[4161,"alloc::string"],[4162,"jormungandr_lib::interfaces::block0_configuration"],[4163,"chain_impl_mockchain::ledger::ledger"],[4164,"chain_impl_mockchain::block"],[4165,"std::io"],[4166,"std::path"],[4167,"std::io"],[4168,"jormungandr_lib::interfaces::certificate"],[4169,"jormungandr_lib::interfaces::certificate"],[4170,"chain_crypto::bech32"],[4171,"chain_vote::encrypted_vote"],[4172,"serde_json::error"],[4173,"std::path"],[4174,"core::fmt"],[4175,"chain_impl_mockchain::transaction::builder"],[4176,"chain_impl_mockchain::transaction::builder"],[4177,"chain_impl_mockchain::certificate::vote_tally"],[4178,"chain_impl_mockchain::certificate::pool"],[4179,"chain_impl_mockchain::transaction::payload"],[4180,"chain_impl_mockchain::certificate::delegation"],[4181,"chain_impl_mockchain::certificate::update_proposal"],[4182,"chain_impl_mockchain::certificate::update_vote"],[4183,"chain_impl_mockchain::accounting::account::account_state"],[4184,"hex::error"],[4185,"rand_core::error"],[4186,"chain_crypto::sign"],[4187,"chain_crypto::key"],[4188,"chain_crypto::key"],[4189,"alloc::vec"],[4190,"bech32"],[4191,"chain_crypto::bech32"],[4192,"serde_yaml::error"],[4193,"chain_ser::deser"],[4194,"bytes::bytes"],[4195,"serde::ser"],[4196,"serde::de"],[4197,"core::ops::function"],[4198,"jormungandr_lib::interfaces::account_state"],[4199,"chain_impl_mockchain::fragment"],[4200,"jormungandr_lib::interfaces::settings"],[4201,"bech32"],[4202,"chain_impl_mockchain::transaction::io"],[4203,"chain_impl_mockchain::transaction::witness"],[4204,"chain_impl_mockchain::fee"],[4205,"jormungandr_lib::interfaces::address"],[4206,"chain_impl_mockchain::chaintypes"],[4207,"chain_impl_mockchain::transaction::element"],[4208,"chain_impl_mockchain::accounting::account::spending"],[4209,"chain_impl_mockchain::key"],[4210,"chain_crypto::algorithms::ed25519_extended"],[4211,"chain_crypto::key"],[4212,"jormungandr_lib::interfaces::blockdate"],[4213,"jormungandr_lib::interfaces::transaction_input"],[4214,"chain_addr"],[4215,"chain_impl_mockchain::transaction::element"],[4216,"serde::ser"],[4217,"chain_impl_mockchain::account"],[4218,"std::io::error"],[4219,"gtmpl_value::value"],[4220,"serde_json::number"],[4221,"serde_json::map"],[4222,"chain_vote::tally"],[4223,"chain_vote::tally"],[4224,"jormungandr_lib::interfaces::vote"],[4225,"chain_vote::tally"]],"d":["","Address tooling and helper","Certificate generation tool","Debug tools for developers","Block tooling and helper","Jormungandr CLI toolkit","Jormungandr CLI toolkit","Key Generation","Send request to node REST API","Build and view offline transaction","Utilities that perform specialized tasks","Vote related operations","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","display full version details (software version, source …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","display the sources version, allowing to check the source…","","","","","","","","","","","","","","","","Create an account address from a single public key.","","","","","Display the content and info of a bech32 formatted address.","","","Create an address from a single public key. This address …","","An address, in bech32 format, to display the content and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A public key in bech32 encoding with the key type prefix.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A public key in bech32 encoding with the key type prefix.","A public key in bech32 encoding with the key type prefix.","","","","","","","","Set the prefix to use to describe the address. This is …","Set the discrimination type to testing (default is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode the block 0 and print the corresponding YAML file","create the block 0 file (the genesis block of the …","","","create block 0 of the blockchain (i.e. the genesis block)","","","print the block hash (aka the block id) of the block 0","Create a default Genesis file with appropriate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","the file path to the genesis file defining the block 0","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the file path to the block to create","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build certificate","","","","","","build an owner stake delegation certificate","","","Print certificate","","","","","Output information encoded into the certificate","Sign a certificate. You can call this command multiple …","build a stake delegation certificate","","create the stake pool registration certificate.","retire the given stake pool ID From the blockchain","","","create a new update proposal certificate","create a new update vote certificate","create a vote cast certificate","","create a new vote plan certificate","","","","create a new vote tally certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","get the certificate to sign from the given file. If no file","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","","the public key used in the stake key registration","","","","","","","create the stake pool registration certificate.","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Public key of the block signing key","management threshold","public key of the operators(s)","print the output signed certificate in the given file, if …","public key of the owner(s)","the account to reward the stake pool tax too","start validity","set the fixed value tax the stake pool will reserve from …","The maximum tax value the stake pool will take.","The percentage take of the stake pool.","","","","","","public key of the VRF key","","retire the given stake pool ID From the blockchain","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","print the output signed certificate in the given file, if …","set the 32bytes (in hexadecimal) of the Stake Pool …","start retirement","","","","","","","","","","","","","","the file path to the config file defining the config param …","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","print the output signed certificate in the given file, if …","the proposer ID.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","print the output signed certificate in the given file, if …","the Proposal ID of the proposal.","","","","","","the voter ID.","","","","","","create a vote cast certificate","","","","","","","","","","","","","the number of choice within the proposal you vote for","the number of choice within the proposal you vote for","","","","","","","","","","","","","","","","key to encrypt the vote with","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","size of voting options","write the output to the given file or print it to the …","write the output to the given file or print it to the …","the number of proposal in the vote plan you vote for","the number of proposal in the vote plan you vote for","","","","","","","","","","","","","","","","the vote plan identified on the blockchain","the vote plan identified on the blockchain","","","","create a vote plan certificate","","","","","","","","","","","Returns the argument unchanged.","","","","","the file containing the vote plan configuration (YAML). If …","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","","","","","","","","","","","","create a vote tally certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","vote plan id","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","write the output to the given file or print it to the …","path to the json file containing the tally shares","","","","","","","","","","","","","","","","path to the json file containing the vote plan result","The id of the vote plan to include in the certificate. Can …","","","","","get the stake pool id from the given stake pool …","get the vote plan id from the given vote plan certificate","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file to read the certificate from (defaults to stdin)","Calls <code>U::from(self)</code>.","file to write the output to (defaults to stdout)","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file to read the certificate from (defaults to stdin)","Calls <code>U::from(self)</code>.","file to write the output to (defaults to stdout)","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","get the certificate to sign from the given file. If no file","Calls <code>U::from(self)</code>.","write the signed certificate into the given file. If no …","","path to the file with the signing key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","hex-encoded stake pool IDs and their numeric weights in …","","","","","","","","","","","","","Decode hex-encoded block and display its content","","","","","","Decode hex-encoded message and display its content","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file containing hex-encoded message. If not provided, it …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file containing hex-encoded message. If not provided, it …","Calls <code>U::from(self)</code>.","","","","","","","","","","derive a child key from a ed25519bip32 parent key","","","","","","retrive a private/public key from the given bytes","","","generate a private key","","","","","","","","","","","","sign data with private key","","","","","get the bytes out of a private key","","get the public key out of a given private key","","","","","","verify signed data with public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","path to file with data to sign, if no value is passed, …","path to file with signed data, if no value is passed, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the index of child key","","","","","","","","","","","","retrieve the private key from the given bytes","path to the private key to serialize in bytes Or read from …","the source private key to extract the public key from","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Type of a private key","Type of a private key","path to file to write signature into, if no value is …","","","","","the ed25519bip32 parent key to derive a child key from","","","","path to file with bech32-encoded public key","","","path to file with bech32-encoded secret key","optional seed to generate the key, for the same entropy …","","path to file with signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send request to node REST API","","","API version 0","API version 1","","","","","","","","","","print additional debug information to stderr. The output …","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","node API address. Must always have <code>http://</code> or <code>https://</code> …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An optional TLS root certificate to be used in a case when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","print additional debug information to stderr. The output …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","node API address. Must always have <code>http://</code> or <code>https://</code> …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An optional TLS root certificate to be used in a case when …","","","","","","","","","","","","","","","","","","","","","","","","","","Account operations","Block operations","System diagnostic information","Node leaders operations","Message sending","Network information","Node information","Rewards information","Node settings","Shutdown node","Stake information","Stake pool operations","Stake pools operations","Blockchain tip information","UTXO information","","Vote related operations","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Get account state","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","An Account ID either in the form of an address of kind …","","","","","","ID of the block","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Get block descendant ID","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Maximum number of IDs, must be between 1 and 100, default 1","Get block","Get block descendant ID","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get system diagnostic information","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get leadership log","","","Leadership log operations","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","get the node’s logs on the message pool. This will …","","Post message. Prints id for posted message","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","File containing hex-encoded message. If not provided, …","","","Network information","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get network information","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Node information","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get node information","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Rewards distribution for a specific epoch","Rewards distribution history one or more epochs starting …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get rewards for epoch","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Epoch number","Get rewards for one or more epochs","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Number of epochs","Get node settings","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Shutdown node","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get stake distribution","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Epoch to get the stake distribution from","","Get stake pool details","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","hex-encoded pool ID","Get stake pool IDs","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get tip ID","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get UTxO details","","","","","","","","","","","","","","","","","","","","","","hex-encoded ID of the transaction fragment","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","index of the transaction output","","","","","","","","","","","","","","","","Active vote related operations","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Committee members","Active vote plans","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get committee members list","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get active vote plans list","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get numbers of proposals within a vote plan a given user …","","Account id to filter votes. An Account ID either in the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Id of the voteplan for which we want to list proposals the …","","","","","","","add Account input to the transaction","set a certificate to the Transaction. If there is already …","add UTxO input to the transaction","add output to the transaction","add output to the finalized transaction","make auth","","","","","get the data to sign from the given transaction (if the …","","Lock a transaction and start adding witnesses","get the Fragment ID from the given ‘sealed’ transaction","DEPRECATED: use ‘data-for-witness’ instead","display the info regarding a given transaction","","","","","send a transaction from one account to another (simplified …","create witnesses","","","","create a new staging transaction. The transaction is …","","","","","Finalize the transaction","","set a transaction expiration date","","","","","get the message format out of a sealed transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the account to debit the funds from","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","the value","","","","","","","bech32-encoded certificate","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","the output index where the credited funds to utilise are.","","Calls <code>U::from(self)</code>.","the Transaction ID which contains the credited funds to …","","","","","","the value","","","the UTxO address or account address to credit funds to","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","the value","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","path to the file with the signing key","","","","","","","","","","","","","","","","","fee per certificate","fee per owner stake delegation (default: fee-certificate)","fee per pool registration (default: fee-certificate)","fee per stake delegation (default: fee-certificate)","fee per vote cast","fee per vote plan","fee per every input and output","","","","","fee per transaction","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","place where the transaction is going to be save during its …","","","","","","","","","","","","","","","","","","","Set the change in the given address","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","set the address prefix to use when displaying the addresses","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","write the info in the given file or print it to the …","","","","","","","","","","","","","value is mandatory if <code>--type=account</code>. It is the counter …","lane to use for the spending counter. Each lane has an …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","the hash of the block0, the first block of the blockchain","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","the file path to the file to write the witness in. If …","the file path to the file to read the signing key from. If …","the Transaction ID of the witness to sign","","","","","","","","","","","","the type of witness to build: account, UTxO or Legacy UtxO","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","the slot this transaction should be valid until, for …","","","","","","","","Set the change in the given address","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","the account to send funds to","","the file path to the file to read the signing key from. If …","the account to debit the funds from","","","","","","","the value","","","Settings inputs and outputs","Settings witnesses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert a bech32 with hrp n into a bech32 with prefix m","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","the bech32 you want to convert","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","the new bech32 hrp you want to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","open the given file path as a readable stream, or stdin if …","open the given file path as a writable stream, or stdout …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a prefix to the current path extension. For example, …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","output the key to the given file or to stdout if not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of output data. Possible values: json, yaml. Any …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create committee member keys","","","Build the election public key from committee member keys","","","","","","","","","","","","","","","","","","","","","","","","","Perform decryption of private voting tally","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","commands for managing committee member communication keys","commands for managing committee member stake keys","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","generate a private key","","get the public key out of a given private key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","The file with the private key to extract the public key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","optional seed to generate the key, for the same entropy …","","","","","","","","","","","","","","","","","","","","generate a private key","","","get the public key out of a given private key","","","","","","","","","","","","","","","","","","","the common reference string","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","index of the committee member this key is generated for","","","","The file with the private key to extract the public key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","communication keys of all committee members","","","optional seed to generate the key, for the same entropy …","threshold number of the committee members sufficient for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Keys of all committee members","","","","","","","","Decrypt all proposals in a vote plan.","Create a decryption share for private voting tally.","Merge voteplans that have the same external proposal ids.","Merge multiple sets of shares in a single object to be …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The path to a JSON file containing decryption shares …","The minimum number of shares needed for decryption","","","","","","","","","The path to json-encoded vote plan to decrypt. If this …","The id of the vote plan to decrypt. Can be left …","","","Merge multiple sets of shares in a single object to be …","Create decryption shares for all proposals in a vote plan.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The path to bech32-encoded decryption key.","The path to the shares to merge","","","","","","","","","","","The path to json-encoded vote plan to decrypt. If this …","The id of the vote plan to decrypt. Can be left …","","","","","","like VoteProposalStatus but without the index field, since …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The path to json-encoded list of voteplans to merge. If …","","","","",""],"i":[0,8,8,8,8,0,0,8,8,8,8,8,0,4,4,8,8,0,4,8,4,8,0,4,8,4,4,8,0,4,8,4,8,4,8,4,8,4,8,4,8,4,8,4,4,8,4,8,4,8,0,0,4,0,4,8,4,8,4,8,4,8,4,8,0,0,4,8,18,0,0,0,0,18,0,17,18,0,21,0,21,22,23,24,21,22,23,24,18,18,18,21,22,23,24,17,18,21,22,23,24,17,18,21,22,23,24,18,21,22,23,24,23,18,21,22,23,24,17,18,21,22,23,24,17,23,24,18,21,22,23,24,17,18,17,17,18,21,22,23,24,17,18,21,22,23,24,18,21,22,23,24,21,22,23,24,18,18,21,22,23,24,17,18,21,22,23,24,17,23,24,0,0,0,0,0,0,0,22,22,17,18,21,22,23,24,17,18,21,22,23,24,17,18,21,22,23,24,17,18,21,22,23,24,18,21,22,23,24,18,21,22,23,24,17,33,33,33,0,34,34,0,33,0,33,33,34,34,0,33,33,37,32,37,32,34,34,33,34,37,32,33,34,37,32,34,37,32,34,37,32,0,33,34,37,32,33,34,37,32,33,34,37,32,0,34,33,33,33,33,33,34,37,32,34,37,32,34,37,32,37,32,34,33,34,37,32,0,32,37,33,34,37,32,0,37,37,0,0,32,32,0,33,33,33,34,37,32,33,34,37,32,33,34,37,32,34,37,32,34,37,32,33,34,37,32,268,269,268,269,43,0,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,42,0,43,43,43,43,44,43,43,42,0,43,43,43,42,42,44,0,44,44,43,43,44,44,44,43,44,43,43,43,44,45,56,45,56,42,44,42,44,43,42,44,45,56,43,42,44,45,56,42,44,45,56,42,44,45,56,43,42,44,45,56,43,42,44,45,56,43,42,44,45,56,42,44,45,43,43,43,43,43,43,43,43,43,43,43,43,43,42,44,45,56,42,44,45,56,42,44,45,56,45,56,42,44,43,42,44,45,56,45,43,42,44,45,56,56,0,0,0,0,0,0,0,0,0,56,56,0,0,0,0,0,43,43,43,42,44,45,56,43,42,44,45,56,43,42,44,45,56,42,44,45,56,42,44,45,56,43,42,44,45,56,0,0,0,0,270,271,272,273,274,273,275,276,277,278,270,271,272,276,279,280,279,280,281,274,281,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,66,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,70,0,70,0,0,68,69,68,69,70,70,68,69,70,68,69,70,68,69,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,69,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,69,68,69,68,69,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,68,69,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,71,73,0,73,0,0,74,75,74,75,73,73,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,74,75,73,74,73,74,75,73,74,75,74,75,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,75,75,73,74,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,76,76,76,76,76,0,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,84,84,84,84,84,84,0,0,84,84,84,0,84,84,84,84,84,84,84,84,84,0,84,0,84,84,84,84,84,0,0,84,0,0,94,94,94,91,94,91,91,91,94,94,0,0,94,91,94,91,94,91,91,94,91,94,94,91,94,94,91,94,91,91,94,91,94,91,94,91,94,91,94,94,94,91,91,95,0,0,96,96,96,95,96,95,95,0,95,96,95,96,95,95,95,96,95,96,95,96,95,96,96,95,96,96,96,95,95,95,95,96,95,96,0,96,96,95,96,95,96,95,96,95,95,95,96,282,282,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,100,0,103,101,101,101,0,0,103,0,0,103,100,100,100,100,0,100,100,101,100,0,0,103,100,100,101,0,103,0,103,100,100,100,100,0,103,104,105,106,107,108,109,110,104,105,106,107,108,109,110,103,103,100,103,104,105,106,107,108,109,110,101,102,100,103,104,105,106,107,108,109,110,101,102,0,0,110,101,102,101,102,103,104,105,106,107,108,109,110,103,104,105,106,107,108,109,110,108,109,100,103,104,105,106,107,108,109,110,101,102,100,103,104,105,106,107,108,109,110,101,102,100,103,104,105,106,107,108,109,110,101,102,103,104,105,106,107,108,109,110,100,100,103,104,105,106,107,108,109,110,101,102,100,100,100,100,100,100,100,100,100,100,103,104,105,106,107,108,109,110,101,102,103,104,105,106,107,108,109,110,103,104,105,106,107,108,109,110,102,102,0,0,104,105,106,107,108,109,110,103,110,100,103,104,105,106,107,108,109,110,101,102,104,105,107,100,103,104,105,106,107,108,109,110,101,102,104,106,108,104,105,106,107,110,104,104,104,109,0,0,108,106,108,109,100,101,102,101,100,100,103,104,105,106,107,108,109,110,101,102,100,103,104,105,106,107,108,109,110,101,102,100,103,104,105,106,107,108,109,110,101,102,103,104,105,106,107,108,109,110,103,104,105,106,107,108,109,110,101,109,100,103,104,105,106,107,108,109,110,101,102,110,283,284,283,285,286,284,284,287,0,124,124,124,124,124,124,124,0,0,124,123,123,123,123,123,124,123,124,123,123,0,135,123,124,123,124,123,124,123,124,124,123,124,124,124,124,124,124,124,124,124,124,123,123,123,135,123,124,123,124,124,135,124,123,124,123,124,123,124,123,123,0,0,123,124,127,127,127,0,127,127,127,127,127,127,127,0,0,0,0,127,127,127,135,135,136,131,136,131,133,135,127,136,131,133,135,127,133,135,136,131,135,135,135,135,136,131,135,136,136,131,133,135,127,136,131,133,135,127,136,131,133,135,127,131,127,127,136,131,133,135,127,135,135,136,135,135,136,131,133,135,127,136,131,133,135,127,131,133,136,0,136,131,131,127,133,135,135,127,136,131,133,135,127,136,131,133,135,127,136,131,133,135,127,135,135,136,131,133,135,127,288,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,141,0,141,141,0,141,141,141,141,141,141,0,141,141,141,141,141,141,141,141,0,0,0,0,0,0,0,0,0,0,0,141,141,141,141,141,0,0,141,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,289,289,289,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,0,145,145,145,145,145,145,145,146,0,146,146,146,146,146,146,146,146,146,146,0,146,146,146,146,146,146,146,146,146,146,146,146,290,290,147,147,0,147,147,147,147,147,147,147,147,147,147,0,147,147,147,147,147,147,147,147,147,147,147,147,291,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,292,150,0,0,149,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,149,150,149,150,149,150,0,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,293,293,152,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,152,152,152,0,0,152,152,152,152,152,152,294,295,294,295,0,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,0,154,154,154,154,154,154,155,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,296,296,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,156,156,156,156,156,156,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,297,297,158,158,0,158,158,158,158,158,158,158,158,158,0,158,158,158,158,158,0,158,158,158,158,158,158,158,158,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,298,298,160,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,299,299,161,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,161,161,161,161,161,161,300,300,163,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,301,164,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,302,302,302,165,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,303,303,303,166,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,304,304,167,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,305,169,0,0,168,168,169,169,168,169,168,169,168,169,168,169,168,169,168,169,168,169,168,168,168,169,168,169,168,169,168,169,168,169,168,169,168,168,168,169,168,169,168,169,168,169,168,169,168,169,306,306,170,0,0,170,170,170,170,170,170,0,170,170,170,170,170,170,170,170,170,170,0,170,170,170,170,170,170,0,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,307,307,173,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,308,308,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,0,174,0,176,0,175,175,175,175,176,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,176,175,175,176,175,176,175,176,175,176,175,176,175,175,176,178,178,178,178,179,179,179,179,179,179,178,178,178,178,179,0,179,179,179,179,178,178,178,178,179,179,178,178,178,179,178,178,178,178,179,178,179,178,178,178,0,179,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,0,0,0,0,179,179,0,179,178,179,178,179,179,0,179,178,179,178,0,0,0,0,179,178,179,0,178,178,179,178,178,178,178,178,178,178,178,178,178,178,179,179,179,0,179,178,179,178,0,0,0,0,0,178,0,178,179,178,179,178,179,178,179,179,179,178,309,310,311,312,313,309,311,314,315,316,317,318,319,320,321,322,323,310,312,324,325,326,327,328,329,309,330,331,324,325,326,327,328,329,330,331,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,0,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,0,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,0,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,0,191,177,191,177,191,177,191,177,191,191,191,191,191,191,191,191,177,191,177,191,191,177,191,177,191,177,177,191,177,191,177,191,177,191,177,191,177,191,177,191,177,177,177,191,177,191,177,191,177,191,177,191,177,191,177,0,194,194,194,194,194,194,194,194,194,194,194,194,194,0,194,194,194,194,194,194,194,194,194,194,194,194,0,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,197,0,197,197,0,198,198,198,198,198,197,198,197,197,197,198,198,198,197,198,197,198,197,198,197,198,197,198,198,197,198,198,198,197,198,197,0,198,198,198,197,198,197,198,197,198,197,198,198,198,197,198,198,0,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,208,208,208,208,208,208,208,208,208,0,0,0,0,208,208,208,208,208,208,208,208,208,208,208,0,0,208,208,208,208,208,208,208,208,208,208,208,208,208,218,218,218,218,0,0,193,193,193,193,193,193,218,193,218,193,193,218,218,193,218,193,218,193,218,193,218,193,218,218,218,218,218,193,193,193,193,193,218,218,193,193,218,193,193,218,193,193,193,218,193,193,193,193,193,193,193,193,193,218,193,193,193,193,193,193,193,218,218,193,193,193,193,218,193,218,193,218,193,193,218,193,193,193,0,225,226,0,0,0,0,0,227,227,226,226,226,227,225,226,227,225,226,227,226,227,0,226,227,225,226,227,225,226,227,225,226,225,225,226,227,225,225,226,227,226,227,227,227,226,226,227,225,226,227,225,0,0,227,0,0,225,225,226,227,225,226,227,225,226,227,225,226,227,226,227,0,226,227,225,0,182,0,182,143,143,182,143,182,143,143,143,182,143,182,143,182,143,182,182,143,182,0,143,182,143,182,143,182,143,143,182,143,143,182,143,182,143,182,332,333,333,125,0,125,0,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,0,125,125,125,125,125,125,0,47,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,47,47,47,47,47,47,334,335,334,335,113,0,0,231,231,113,231,113,231,231,231,113,231,113,231,113,231,231,113,113,231,113,231,231,231,231,231,113,231,113,231,231,231,113,113,113,231,113,231,113,231,231,231,113,231,336,336,232,126,0,0,0,232,126,0,232,126,151,151,151,232,126,233,151,232,126,233,232,232,151,151,151,232,126,233,151,232,126,233,151,232,126,233,232,126,126,233,233,151,151,151,151,232,232,126,126,126,126,233,151,151,232,232,151,151,232,126,233,151,232,126,233,0,0,0,0,126,232,126,233,151,232,126,233,151,232,126,233,151,232,126,233,151,151,151,232,126,233,55,55,55,53,55,53,55,0,55,0,0,53,55,0,0,53,53,53,55,239,240,241,53,55,239,240,241,239,239,53,55,239,240,241,53,55,239,240,241,239,240,241,53,55,239,240,241,53,53,55,55,239,240,241,53,53,53,55,55,55,55,239,240,240,241,0,53,55,239,240,241,53,55,239,240,241,0,239,240,241,53,55,239,53,55,53,55,239,240,241,241,53,55,239,240,241,53,55,239,240,241,53,55,239,240,241,248,248,247,248,248,247,248,0,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,0,248,248,248,248,0,248,247,248,0,248,247,247,248,247,246,248,247,246,246,246,247,247,0,248,247,246,248,247,246,248,247,246,0,247,248,248,246,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,247,246,247,247,246,246,247,265,248,247,246,248,247,246,265,248,0,246,248,248,247,246,248,247,246,248,247,246,247,247,248,247,246,337,338,339,340,341,342,339,340,341,337,0,252,252,252,252,252,252,252,252,0,252,252,252,252,252,252,252,252,252,252,0,252,252,252,252,252,252,0,0,255,0,255,253,254,253,254,255,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,254,253,254,255,253,254,253,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,0,258,0,0,258,256,257,256,257,258,258,256,257,258,256,257,258,256,257,258,256,257,258,256,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,256,256,257,258,257,256,257,258,256,256,257,256,256,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,0,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,260,260,260,260,0,0,260,260,260,260,260,260,0,0,260,260,260,260,260,260,260,260,260,260,0,260,260,260,260,260,260,0,0,261,261,261,262,261,262,261,261,261,262,261,262,261,262,261,261,262,261,261,261,261,262,261,262,261,262,262,261,261,261,262,261,262,261,262,261,261,261,261,261,262,0,0,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,264,263,263,263,264,0,0,0,0,249,249,267,267,249,267,265,266,249,267,265,266,265,266,265,266,267,267,249,267,265,266,249,267,265,266,265,266,249,267,265,266,265,266,265,265,265,265,266,266,266,266,267,249,249,265,266,249,267,265,266,267,267,267,265,249,267,265,266,249,267,265,266,0,266,267,266,265,265,266,266,265,266,249,249,267,265,266,249,267,265,266,249,267,265,266,267,267,267,266,249,267,265,266],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],0,[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[4,[[7,[3,[6,[5]]]]]],[8,[[7,[3,[6,[5]]]]]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[4,10]]]],[9,[[7,[8,10]]]],[9,[[7,[4,10]]]],[9,[[7,[8,10]]]],0,[[],[[12,[11]]]],[13,14],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[4,9],[[7,[3,10]]]],[[8,9],[[7,[3,10]]]],[[4,9],[[7,[3,10]]]],[[8,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[16,[[7,[3,17]]]],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,0,[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[18,[[7,[3,17]]]],[[17,19],20],[[17,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[18,10]]]],[9,[[7,[21,10]]]],[9,[[7,[22,10]]]],[9,[[7,[23,10]]]],[9,[[7,[24,10]]]],[9,[[7,[18,10]]]],[9,[[7,[21,10]]]],[9,[[7,[22,10]]]],[9,[[7,[23,10]]]],[9,[[7,[24,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[13,[26,[25]],14],3],[[13,27,28],3],[[13,[26,[-1]],14,-2],3,29,30],[[13,[26,[-1]],[26,[-2]],14,-3],3,29,29,30],[[13,[26,[25]],14,[26,[25]]],3],[14,27],[[13,[26,[25]],14],3],0,0,[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[18,9],[[7,[3,10]]]],[[21,9],[[7,[3,10]]]],[[22,9],[[7,[3,10]]]],[[23,9],[[7,[3,10]]]],[[24,9],[[7,[3,10]]]],[[18,9],[[7,[3,10]]]],[[21,9],[[7,[3,10]]]],[[22,9],[[7,[3,10]]]],[[23,9],[[7,[3,10]]]],[[24,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[32,[[7,[3,33]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[32,[[7,[3,33]]]],[34,[[7,[3,33]]]],[[33,19],20],[[33,19],20],[35,33],[36,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[34,10]]]],[9,[[7,[37,10]]]],[9,[[7,[32,10]]]],[9,[[7,[34,10]]]],[9,[[7,[37,10]]]],[9,[[7,[32,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[[],2],[[],2],[[],3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[38,33]]],39],[37,[[7,[38,33]]]],[37,[[7,[[0,[39]],33]]]],[[[12,[40]]],[[7,[[0,[39]],33]]]],[[[12,[40]]],[[7,[[0,[41]],33]]]],[32,[[7,[[0,[41]],33]]]],0,[37,[[7,[3,33]]]],[33,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[34,9],[[7,[3,10]]]],[[37,9],[[7,[3,10]]]],[[32,9],[[7,[3,10]]]],[[34,9],[[7,[3,10]]]],[[37,9],[[7,[3,10]]]],[[32,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[42,[[7,[3,43]]]],[44,[[7,[3,43]]]],[45,[[7,[3,43]]]],[[43,19],20],[[43,19],20],[46,43],[47,43],[-1,-1,[]],[48,43],[49,43],[50,43],[51,43],[52,43],[53,43],[54,43],[55,43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[42,10]]]],[9,[[7,[44,10]]]],[9,[[7,[45,10]]]],[9,[[7,[56,10]]]],[9,[[7,[42,10]]]],[9,[[7,[44,10]]]],[9,[[7,[45,10]]]],[9,[[7,[56,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],[13,14],[[],2],[[],2],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[12,[57]]],[[7,[58,43]]]],[[[12,[57]]],[[7,[58,43]]]],[[[12,[57]]],[[7,[31,43]]]],0,0,[43,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[42,9],[[7,[3,10]]]],[[44,9],[[7,[3,10]]]],[[45,9],[[7,[3,10]]]],[[56,9],[[7,[3,10]]]],[[42,9],[[7,[3,10]]]],[[44,9],[[7,[3,10]]]],[[45,9],[[7,[3,10]]]],[[56,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[12,[-1]],58],[[7,[3,43]]],[[59,[57]]]],[[[12,[-1]],-2],[[7,[3,43]]],[[59,[57]]],60],[[[12,[57]],61],[[7,[3,43]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[62,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[62,10]]]],[9,[[7,[62,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[62,9],[[7,[3,10]]]],[[62,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[63,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[63,10]]]],[9,[[7,[63,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[63,9],[[7,[3,10]]]],[[63,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[64,[[7,[3,43]]]],[[64,19],20],[-1,-1,[]],[9,[[7,[64,10]]]],[9,[[7,[64,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[64,9],[[7,[3,10]]]],[[64,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[65,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[65,10]]]],[9,[[7,[65,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[65,9],[[7,[3,10]]]],[[65,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[66,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[66,10]]]],[9,[[7,[66,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[[[12,[40]]],[[7,[[0,[39]],43]]]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[66,9],[[7,[3,10]]]],[[66,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[67,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[67,10]]]],[9,[[7,[67,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[67,9],[[7,[3,10]]]],[[67,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],0,[68,[[7,[3,43]]]],[69,[[7,[3,43]]]],[70,[[7,[3,43]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[68,10]]]],[9,[[7,[69,10]]]],[9,[[7,[70,10]]]],[9,[[7,[68,10]]]],[9,[[7,[69,10]]]],[9,[[7,[70,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[68,9],[[7,[3,10]]]],[[69,9],[[7,[3,10]]]],[[70,9],[[7,[3,10]]]],[[68,9],[[7,[3,10]]]],[[69,9],[[7,[3,10]]]],[[70,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[71,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[71,10]]]],[9,[[7,[71,10]]]],[[],[[12,[11]]]],[[],2],0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[71,9],[[7,[3,10]]]],[[71,9],[[7,[3,10]]]],[72,[[7,[3,43]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[73,[[7,[3,43]]]],[74,[[7,[3,43]]]],[75,[[7,[3,43]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[73,10]]]],[9,[[7,[74,10]]]],[9,[[7,[75,10]]]],[9,[[7,[73,10]]]],[9,[[7,[74,10]]]],[9,[[7,[75,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],0,[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[73,9],[[7,[3,10]]]],[[74,9],[[7,[3,10]]]],[[75,9],[[7,[3,10]]]],[[73,9],[[7,[3,10]]]],[[74,9],[[7,[3,10]]]],[[75,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[76,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[76,10]]]],[9,[[7,[76,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[76,9],[[7,[3,10]]]],[[76,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[77,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[77,10]]]],[9,[[7,[77,10]]]],[[],[[12,[11]]]],[[],2],0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[77,9],[[7,[3,10]]]],[[77,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[78,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[78,10]]]],[9,[[7,[78,10]]]],[[],[[12,[11]]]],[[],2],0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[78,9],[[7,[3,10]]]],[[78,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[72,13,[80,[[79,[72]]]]],[[7,[81,43]]]],[[82,13,[80,[[79,[82]]]]],[[7,[81,43]]]],[2,-1,[]],[2,-1,[]],[2,3],[[83,13,[80,[[79,[83]]]]],[[7,[81,43]]]],[84,[[7,[3,43]]]],[-1,-1,[]],[9,[[7,[84,10]]]],[9,[[7,[84,10]]]],[[],[[12,[11]]]],[[],2],0,[-1,-2,[],[]],0,[[-1,[12,[85]],[86,[31]],[80,[[79,[-1]]]],-2],[[7,[81,43]]],87,30],0,[[88,13,[80,[[79,[88]]]]],[[7,[81,43]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[84,9],[[7,[3,10]]]],[[84,9],[[7,[3,10]]]],[[89,13,[80,[[79,[-1]]]]],[[7,[81,43]]],87],[[90,13,[80,[[79,[-1]]]]],[[7,[81,43]]],87],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[91,91],[[-1,-2],3,[],[]],[[],1],[[],1],[[[86,[91]]],[[7,[92,43]]]],[[[86,[91]]],[[7,[93,43]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[91,19],20],[-1,-1,[]],[-1,-1,[]],[9,[[7,[94,10]]]],[9,[[7,[94,10]]]],[13,[[7,[91]]]],[[],[[12,[11]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[94,9],[[7,[3,10]]]],[[94,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[95,[[7,[3,96]]]],[[96,19],20],[[96,19],20],[-1,-1,[]],[97,96],[50,96],[-1,-1,[]],[9,[[7,[95,10]]]],[9,[[7,[95,10]]]],[13,14],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[96,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[95,9],[[7,[3,10]]]],[[95,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[98,[[7,[3,96]]]],[-1,-1,[]],[9,[[7,[98,10]]]],[9,[[7,[98,10]]]],[[],[[12,[11]]]],[[],2],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[98,9],[[7,[3,10]]]],[[98,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[99,[[7,[3,96]]]],[-1,-1,[]],[9,[[7,[99,10]]]],[9,[[7,[99,10]]]],[[],[[12,[11]]]],[[],2],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[99,9],[[7,[3,10]]]],[[99,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[86,[93]]],[[7,[31,100]]]],[[[86,[93]]],[[7,[31,100]]]],0,[101,101],[102,102],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[103,[[7,[3,100]]]],[104,[[7,[3,100]]]],[105,[[7,[3,100]]]],[106,[[7,[3,100]]]],[107,[[7,[3,100]]]],[108,[[7,[3,100]]]],[109,[[7,[3,100]]]],[110,[[7,[3,100]]]],[[100,19],20],[[100,19],20],[[103,19],20],[[104,19],20],[[105,19],20],[[106,19],20],[[107,19],20],[[108,19],20],[[109,19],20],[[110,19],20],[[101,19],20],[[102,19],20],[97,100],[51,100],[111,100],[-1,-1,[]],[112,100],[113,100],[114,100],[115,100],[50,100],[116,100],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[103,10]]]],[9,[[7,[104,10]]]],[9,[[7,[105,10]]]],[9,[[7,[106,10]]]],[9,[[7,[107,10]]]],[9,[[7,[108,10]]]],[9,[[7,[109,10]]]],[9,[[7,[110,10]]]],[9,[[7,[103,10]]]],[9,[[7,[104,10]]]],[9,[[7,[105,10]]]],[9,[[7,[106,10]]]],[9,[[7,[107,10]]]],[9,[[7,[108,10]]]],[9,[[7,[109,10]]]],[9,[[7,[110,10]]]],[13,[[7,[102]]]],[13,[[7,[-1]]],[]],[[[12,[102]]],[[7,[31,100]]]],[[[86,[117]]],[[7,[31,100]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[104,[118,[93]]],[[7,[31,100]]]],[[104,[118,[93]]],[[7,[31,100]]]],0,0,[-1,[[7,[[3,[31,[118,[117]],119]],100]]],[[120,[[12,[40]]]]]],[[[12,[-1]]],[[7,[[118,[93]],100]]],[[59,[57]]]],0,0,[[108,[86,[93]]],[[7,[3,100]]]],0,[100,[[12,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[101,[[12,[121]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[103,9],[[7,[3,10]]]],[[104,9],[[7,[3,10]]]],[[105,9],[[7,[3,10]]]],[[106,9],[[7,[3,10]]]],[[107,9],[[7,[3,10]]]],[[108,9],[[7,[3,10]]]],[[109,9],[[7,[3,10]]]],[[110,9],[[7,[3,10]]]],[[103,9],[[7,[3,10]]]],[[104,9],[[7,[3,10]]]],[[105,9],[[7,[3,10]]]],[[106,9],[[7,[3,10]]]],[[107,9],[[7,[3,10]]]],[[108,9],[[7,[3,10]]]],[[109,9],[[7,[3,10]]]],[[110,9],[[7,[3,10]]]],[[],[[86,[101]]]],[[109,[86,[93]]],[[7,[3,100]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[110,-1],[[7,[3,100]]],122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[123,[[7,[3,124]]]],[[124,19],20],[[124,19],20],[-1,-1,[]],[125,124],[126,124],[127,124],[54,124],[50,124],[128,124],[97,124],[129,124],[-1,-1,[]],[130,124],[9,[[7,[123,10]]]],[9,[[7,[123,10]]]],[13,14],0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[124,[[12,[5]]]],0,[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[123,9],[[7,[3,10]]]],[[123,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[[131,-1],131,[[120,[132]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[133,[[7,[134,127]]]],[135,[[7,[136,127]]]],0,0,[135,135],[[-1,-2],3,[],[]],[[],1],[[],1],0,0,0,[[136,[86,[13]]],131],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[131,[[7,[133,127]]]],[[127,19],20],[[127,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[135,10]]]],[9,[[7,[135,10]]]],[[136,[86,[13]]],131],[[],[[12,[11]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[131,-1],131,137],[133,[[7,[-1,127]]],138],[[136,[86,[13]],-1],131,139],[[140,[86,[13]]],140],[[136,[86,[13]]],131],[[131,-1],131,137],0,[127,[[12,[5]]]],[133,[[7,[31,127]]]],0,[-1,-2,[],[]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[135,9],[[7,[3,10]]]],[[135,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],0,[2,3],[141,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[141,10]]]],[9,[[7,[141,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[141,9],[[7,[3,10]]]],[[141,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[142,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[142,10]]]],[9,[[7,[142,10]]]],[13,14],[[],2],[-1,-2,[],[]],[[135,143],[[7,[144,124]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[142,9],[[7,[3,10]]]],[[142,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[145,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[145,10]]]],[9,[[7,[145,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[145,9],[[7,[3,10]]]],[[145,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[146,31],[[7,[3,124]]]],[[135,31,[12,[2]]],[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[146,10]]]],[9,[[7,[146,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[146,9],[[7,[3,10]]]],[[146,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[147,31],[[7,[3,124]]]],[[31,135],[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[147,10]]]],[9,[[7,[147,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[147,9],[[7,[3,10]]]],[[147,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[148,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[148,10]]]],[9,[[7,[148,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[148,9],[[7,[3,10]]]],[[148,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[149,[[7,[3,124]]]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[149,10]]]],[9,[[7,[150,10]]]],[9,[[7,[149,10]]]],[9,[[7,[150,10]]]],[[135,151],[[7,[3,124]]]],[13,14],[13,14],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[149,9],[[7,[3,10]]]],[[150,9],[[7,[3,10]]]],[[149,9],[[7,[3,10]]]],[[150,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[152,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[152,10]]]],[9,[[7,[152,10]]]],[[135,151],[[7,[3,124]]]],[13,14],[[],2],[-1,-2,[],[]],[[135,153],[[7,[31,124]]]],[[135,[12,[40]]],[[7,[3,124]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[152,9],[[7,[3,10]]]],[[152,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[154,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[154,10]]]],[9,[[7,[154,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[154,9],[[7,[3,10]]]],[[154,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[155,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[155,10]]]],[9,[[7,[155,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[155,9],[[7,[3,10]]]],[[155,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[156,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[156,10]]]],[9,[[7,[156,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[156,9],[[7,[3,10]]]],[[156,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[157,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[157,10]]]],[9,[[7,[157,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[157,9],[[7,[3,10]]]],[[157,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],0,[158,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[158,10]]]],[9,[[7,[158,10]]]],[13,14],0,[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[158,9],[[7,[3,10]]]],[[158,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[159,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[159,10]]]],[9,[[7,[159,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[159,9],[[7,[3,10]]]],[[159,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[160,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[160,10]]]],[9,[[7,[160,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[160,9],[[7,[3,10]]]],[[160,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[161,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[161,10]]]],[9,[[7,[161,10]]]],[13,14],[[],2],[-1,-2,[],[]],[135,[[7,[162,124]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[161,9],[[7,[3,10]]]],[[161,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[163,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[163,10]]]],[9,[[7,[163,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[163,9],[[7,[3,10]]]],[[163,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[164,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[164,10]]]],[9,[[7,[164,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[164,9],[[7,[3,10]]]],[[164,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[165,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[165,10]]]],[9,[[7,[165,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[165,9],[[7,[3,10]]]],[[165,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[166,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[166,10]]]],[9,[[7,[166,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[166,9],[[7,[3,10]]]],[[166,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[167,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[167,10]]]],[9,[[7,[167,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[167,9],[[7,[3,10]]]],[[167,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[168,[[7,[3,124]]]],0,[-1,-1,[]],[-1,-1,[]],[9,[[7,[168,10]]]],[9,[[7,[169,10]]]],[9,[[7,[168,10]]]],[9,[[7,[169,10]]]],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[168,9],[[7,[3,10]]]],[[169,9],[[7,[3,10]]]],[[168,9],[[7,[3,10]]]],[[169,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[170,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[170,10]]]],[9,[[7,[170,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[170,9],[[7,[3,10]]]],[[170,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[171,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[171,10]]]],[9,[[7,[171,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[171,9],[[7,[3,10]]]],[[171,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[172,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[172,10]]]],[9,[[7,[172,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[172,9],[[7,[3,10]]]],[[172,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[173,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[173,10]]]],[9,[[7,[173,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[173,9],[[7,[3,10]]]],[[173,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[174,[[7,[3,124]]]],[-1,-1,[]],[9,[[7,[174,10]]]],[9,[[7,[174,10]]]],[13,14],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[174,9],[[7,[3,10]]]],[[174,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[175,[[7,[3,124]]]],[176,[[7,[3,124]]]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[175,10]]]],[9,[[7,[176,10]]]],[9,[[7,[175,10]]]],[9,[[7,[176,10]]]],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[175,9],[[7,[3,10]]]],[[176,9],[[7,[3,10]]]],[[175,9],[[7,[3,10]]]],[[176,9],[[7,[3,10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[177,[[7,[3,178]]]],[177,[[7,[3,178]]]],[177,[[7,[3,178]]]],[177,[[7,[3,178]]]],[2,3],[2,3],[179,[[7,[3,178]]]],0,[[178,19],20],[[178,19],20],[-1,-1,[]],[126,178],[47,178],[180,178],[-1,-1,[]],[111,178],[50,178],[124,178],[181,178],[33,178],[182,178],[183,178],[9,[[7,[179,10]]]],[9,[[7,[179,10]]]],[13,14],0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[178,[[12,[5]]]],0,[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[179,9],[[7,[3,10]]]],[[179,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[184,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[184,10]]]],[9,[[7,[184,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[184,9],[[7,[3,10]]]],[[184,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[185,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[185,10]]]],[9,[[7,[185,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[185,9],[[7,[3,10]]]],[[185,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[186,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[186,10]]]],[9,[[7,[186,10]]]],[[],[[12,[11]]]],0,[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[186,9],[[7,[3,10]]]],[[186,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[187,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[187,10]]]],[9,[[7,[187,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[187,9],[[7,[3,10]]]],[[187,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[188,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[188,10]]]],[9,[[7,[188,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[188,9],[[7,[3,10]]]],[[188,9],[[7,[3,10]]]],[-1,-2,[],[]],[188,[[7,[189,178]]]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[190,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[190,10]]]],[9,[[7,[190,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[190,9],[[7,[3,10]]]],[[190,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[177,19],20],[-1,-1,[]],[-1,-1,[]],[9,[[7,[191,10]]]],[9,[[7,[177,10]]]],[9,[[7,[191,10]]]],[9,[[7,[177,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[191,192],[177,[[7,[193,178]]]],0,[[177,193],[[7,[3,178]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[191,9],[[7,[3,10]]]],[[177,9],[[7,[3,10]]]],[[191,9],[[7,[3,10]]]],[[177,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[194,[[7,[3,178]]]],0,[[191,[12,[195]],193],[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[194,10]]]],[9,[[7,[194,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[194,9],[[7,[3,10]]]],[[194,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[196,[[7,[3,178]]]],0,[-1,-1,[]],[9,[[7,[196,10]]]],[9,[[7,[196,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[196,9],[[7,[3,10]]]],[[196,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[197,197],[[-1,-2],3,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[198,[[7,[3,178]]]],[[197,19],20],[-1,-1,[]],[-1,-1,[]],[9,[[7,[198,10]]]],[9,[[7,[198,10]]]],[13,[[7,[197]]]],0,[[],[[12,[11]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[197,199,200,[12,[201]],202],[[7,[189,178]]]],0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[198,9],[[7,[3,10]]]],[[198,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[198,189],[[7,[3,178]]]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[203,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[203,10]]]],[9,[[7,[203,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[203,9],[[7,[3,10]]]],[[203,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[204,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[204,10]]]],[9,[[7,[204,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[204,9],[[7,[3,10]]]],[[204,9],[[7,[3,10]]]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[205,[[7,[3,178]]]],[-1,-1,[]],[9,[[7,[205,10]]]],[9,[[7,[205,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[205,9],[[7,[3,10]]]],[[205,9],[[7,[3,10]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],0,[162,191],[[],[[7,[[207,[206]],178]]]],[[[207,[206]]],195],[[],[[7,[[3,[[207,[206]],195]],178]]]],[2,-1,[]],[2,-1,[]],[2,3],[208,[[7,[3,178]]]],0,[-1,-1,[]],[9,[[7,[208,10]]]],[9,[[7,[208,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],[[[26,[25]]],195],[[195,195,202,209,13,210,135,[12,[195]],14],[[7,[193,178]]]],0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[208,9],[[7,[3,10]]]],[[208,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],0,0,0,0,0,0,[[193,195,209],[[7,[3,178]]]],[[193,211],[[7,[3,178]]]],[[193,[213,[212]]],[[7,[3,178]]]],[[193,189],[[7,[3,178]]]],[[193,-1],[[7,[214,181]]],215],[[193,-1,216],[[7,[214,178]]],215],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[193,[80,[[217,[-1]]]]],[[7,[[80,[[79,[-1]]]],178]]],87],[218,218],[[-1,-2],3,[],[]],[[],193],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[218]]],219],[-1,[[7,[193]]],219],[2,3],[2,3],[[218,218],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,0,[[193,-1],220,215],[[193,-1,-2,216],[[7,[214,178]]],87,215],[[218,19],20],[[218,19],20],[[193,19],20],[193,[[7,[153,178]]]],[-1,-1,[]],[-1,-1,[]],[193,221],[[],2],[[],2],[193,[[86,[211]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[12,[-1]]],[[7,[193,178]]],[[59,[57]]]],[[193,-1,-2],[[7,[153,178]]],87,30],[193,14],[[],193],[193,[[86,[222]]]],0,[193,[[7,[3,178]]]],[[218,-1],7,223],[[193,-1],7,223],[[193,[86,[31]]],[[7,[3,178]]]],[[193,224],[[7,[3,178]]]],[[193,210],[[7,[3,178]]]],[[193,58],[[7,[3,178]]]],[193,31],[[193,[12,[-1]]],[[7,[3,178]]],[[59,[57]]]],[-1,-2,[],[]],[-1,31,[]],[193,[[7,[220,181]]]],[193,[[7,[220,181]]]],[193,[[7,[200,178]]]],[[193,[80,[[217,[-1]]]]],200,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[193,2],0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[31,31],[[7,[3,225]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[226,[[7,[3,225]]]],[[225,19],20],[[225,19],20],[-1,-1,[]],[-1,-1,[]],[180,225],[-1,-1,[]],[9,[[7,[226,10]]]],[9,[[7,[227,10]]]],[9,[[7,[226,10]]]],[9,[[7,[227,10]]]],0,[[],[[12,[11]]]],[13,14],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[225,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[226,9],[[7,[3,10]]]],[[227,9],[[7,[3,10]]]],[[226,9],[[7,[3,10]]]],[[227,9],[[7,[3,10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[143,143],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[143,19],20],[[182,19],20],[[182,19],20],[-1,-1,[]],[-1,-1,[]],[[[26,[25]]],228],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[143,31],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[13,[[7,[143,182]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[14,[[229,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[125,19],20],[[125,19],20],[50,125],[129,125],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[[12,[-1]]],[[7,[[0,[39]],50]]],[[59,[57]]]],[[[12,[-1]]],[[7,[[0,[41]],50]]],[[59,[57]]]],[[[12,[-1]]],40,[[59,[57]]]],[[[12,[-1]]],[[7,[31,50]]],[[59,[57]]]],[[[12,[-1]]],[[7,[-2,125]]],[[59,[57]]],138],[125,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,0,0,[[[12,[-1]]],[[7,[[207,[-2]],47]]],[[59,[57]]],230],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[47,19],20],[[47,19],20],[-1,-1,[]],[51,47],[50,47],[[],2],[-1,-2,[],[]],[13,[[7,[202,47]]]],[13,[[7,[[26,[-1]],51]]],29],[[[12,[-1]]],[[7,[202,47]]],[[59,[57]]]],[[[12,[40]]],[[7,[202,47]]]],[47,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[231,13],231],[[113,19],20],[[113,19],20],[[231,19],20],[-1,-1,[]],[-1,-1,[]],[40,231],[9,[[7,[231,10]]]],[9,[[7,[231,10]]]],[[],[[12,[11]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[231,[[7,[[0,[41]],113]]]],0,[113,[[12,[5]]]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[231,9],[[7,[3,10]]]],[[231,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[232,232],[[-1,-2],3,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[[232,19],20],[[126,19],20],[[126,19],20],[[233,19],[[7,[3,234]]]],[[233,19],20],0,[[151,235],[[7,[31,126]]]],[232,151],[-1,-1,[]],[13,232],[-1,-1,[]],[54,126],[129,126],[-1,-1,[]],[233,126],[-1,-1,[]],[9,[[7,[151,10]]]],[9,[[7,[151,10]]]],[13,[[7,[-1]]],[]],[13,[[7,[232]]]],[[],[[12,[11]]]],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[118,[235]]],236],[237,236],[[[238,[31,235]]],236],[235,236],[126,[[12,[5]]]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[151,9],[[7,[3,10]]]],[[151,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[239,239],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[239]]],219],[-1,[[7,[240]]],219],[-1,[[7,[241]]],219],[2,3],[2,3],[2,3],[2,3],[2,3],[[53,19],20],[[53,19],20],[[55,19],20],[[55,19],20],[[239,19],20],[[240,19],20],[[241,19],20],[-1,-1,[]],[50,53],[54,53],[242,55],[50,55],[54,55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[118,[243]]],240],[-1,-1,[]],[[[12,[-1]],[12,[244]]],[[7,[245,53]]],[[59,[57]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]],2,[12,[2]]],[[7,[241,55]]],[[59,[57]]]],[[239,-1],7,223],[[240,-1],7,223],[[241,-1],7,223],[53,[[12,[5]]]],[55,[[12,[5]]]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[118,[240]]],[[7,[241]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[246,246],[[-1,-2],3,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],0,[247,[[7,[3,248]]]],[[248,19],20],[[248,19],20],[[246,19],20],[-1,-1,[]],[249,248],[111,248],[55,248],[54,248],[51,248],[97,248],[250,248],[47,248],[53,248],[50,248],[124,248],[126,248],[251,248],[113,248],[-1,-1,[]],[-1,-1,[]],[9,[[7,[247,10]]]],[9,[[7,[247,10]]]],[13,[[7,[246]]]],[13,[[7,[-1]]],[]],[13,14],0,[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[248,[[12,[5]]]],0,[-1,-2,[],[]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[247,9],[[7,[3,10]]]],[[247,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,3],[252,[[7,[3,248]]]],[-1,-1,[]],[9,[[7,[252,10]]]],[9,[[7,[252,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[252,9],[[7,[3,10]]]],[[252,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[253,[[7,[3,248]]]],[254,[[7,[3,248]]]],[255,[[7,[3,248]]]],[[253,19],20],[[254,19],20],[[255,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[253,10]]]],[9,[[7,[254,10]]]],[9,[[7,[255,10]]]],[9,[[7,[253,10]]]],[9,[[7,[254,10]]]],[9,[[7,[255,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[253,9],[[7,[3,10]]]],[[254,9],[[7,[3,10]]]],[[255,9],[[7,[3,10]]]],[[253,9],[[7,[3,10]]]],[[254,9],[[7,[3,10]]]],[[255,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[256,[[7,[3,248]]]],[257,[[7,[3,248]]]],[258,[[7,[3,248]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[256,10]]]],[9,[[7,[257,10]]]],[9,[[7,[258,10]]]],[9,[[7,[256,10]]]],[9,[[7,[257,10]]]],[9,[[7,[258,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[13,14],0,[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[256,9],[[7,[3,10]]]],[[257,9],[[7,[3,10]]]],[[258,9],[[7,[3,10]]]],[[256,9],[[7,[3,10]]]],[[257,9],[[7,[3,10]]]],[[258,9],[[7,[3,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[259,[[7,[3,248]]]],[-1,-1,[]],[9,[[7,[259,10]]]],[9,[[7,[259,10]]]],[[],[[12,[11]]]],[[],2],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[259,9],[[7,[3,10]]]],[[259,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[2,-1,[]],[2,-1,[]],[2,3],[260,[[7,[3,248]]]],[-1,-1,[]],[9,[[7,[260,10]]]],[9,[[7,[260,10]]]],[13,14],[[],2],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[[260,9],[[7,[3,10]]]],[[260,9],[[7,[3,10]]]],[-1,-2,[],[]],0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[261,[[7,[3,248]]]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[261,10]]]],[9,[[7,[261,10]]]],[[],[[12,[11]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[262,-1],7,223],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[261,9],[[7,[3,10]]]],[[261,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[263,[[7,[3,248]]]],[264,[[7,[3,248]]]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[263,10]]]],[9,[[7,[264,10]]]],[9,[[7,[263,10]]]],[9,[[7,[264,10]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[263,9],[[7,[3,10]]]],[[264,9],[[7,[3,10]]]],[[263,9],[[7,[3,10]]]],[[264,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[265,265],[266,266],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[265]]],219],[-1,[[7,[266]]],219],[2,3],[2,3],[2,3],[2,3],[[265,265],14],[[266,266],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[267,[[7,[3,248]]]],[[249,19],20],[[249,19],20],[[265,19],20],[[266,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[7,[267,10]]]],[9,[[7,[267,10]]]],[[],[[12,[11]]]],0,[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[118,[245]]],[[7,[[118,[265]],249]]]],0,0,0,0,[[265,-1],7,223],[[266,-1],7,223],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[267,9],[[7,[3,10]]]],[[267,9],[[7,[3,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",4147],[15,"usize"],[15,"tuple"],[3,"JCli",1],[8,"Error",4148],[3,"Box",4149],[4,"Result",4150],[4,"JCliCommand",1],[3,"ArgMatches",4151],[6,"Error",4152],[3,"Id",4153],[4,"Option",4154],[15,"str"],[15,"bool"],[3,"TypeId",4155],[3,"AddressReadable",4156],[4,"Error",68],[4,"Address",68],[3,"Formatter",4157],[6,"Result",4157],[3,"InfoArgs",68],[3,"DiscriminationData",68],[3,"SingleArgs",68],[3,"AccountArgs",68],[3,"Ed25519",4158],[3,"PublicKey",4159],[4,"Discrimination",4156],[4,"Kind",4156],[8,"AsymmetricPublicKey",4159],[8,"FnOnce",4160],[3,"String",4161],[3,"Common",215],[4,"Error",215],[4,"Genesis",215],[4,"Block0ConfigurationError",4162],[4,"Error",4163],[3,"Input",215],[3,"Block",4164],[8,"BufRead",4165],[3,"PathBuf",4166],[8,"Write",4165],[4,"Certificate",330],[4,"Error",330],[4,"NewArgs",330],[3,"PrintArgs",330],[3,"DecryptedPrivateTallyError",4167],[4,"Error",3321],[4,"CertificateFromBech32Error",4168],[4,"CertificateFromStrError",4168],[3,"Error",4169],[4,"Error",4170],[3,"UnitVectorInitializationError",4171],[4,"VotePlanError",3491],[3,"Error",4172],[4,"SharesError",3491],[3,"StakeDelegationArgs",330],[3,"Path",4166],[3,"Certificate",4168],[8,"AsRef",4173],[8,"Display",4157],[3,"SignedCertificate",4168],[3,"OwnerStakeDelegation",541],[3,"StakeDelegation",566],[3,"StakePoolRegistration",592],[3,"StakePoolRetirement",627],[3,"UpdateProposal",653],[3,"UpdateVote",680],[3,"PublicVoteCast",706],[3,"PrivateVoteCast",706],[4,"VoteCastCmd",706],[3,"VotePlanRegistration",787],[3,"VotePlan",4174],[4,"VoteTallyRegistration",813],[3,"PublicTally",813],[3,"PrivateTally",813],[4,"ShowArgs",890],[3,"GetStakePoolId",915],[3,"GetVotePlanId",940],[3,"SetAuthData",4175],[3,"TxBuilderState",4175],[4,"SignedCertificate",4176],[3,"VoteTally",4167],[3,"EvmMapping",4177],[3,"Sign",965],[3,"PoolRegistration",4178],[15,"slice"],[8,"Payload",4179],[3,"StakeDelegation",4180],[3,"UpdateProposal",4181],[3,"UpdateVote",4182],[3,"WeightedPoolId",998],[3,"DelegationRatio",4183],[15,"u8"],[3,"WeightedPoolIds",998],[4,"Debug",1043],[4,"Error",1043],[4,"FromHexError",4184],[3,"Block",1095],[3,"Message",1119],[4,"Error",1143],[4,"GenPrivKeyType",1143],[3,"Seed",1143],[4,"Key",1143],[3,"FromBytes",1143],[3,"ToBytes",1143],[3,"Generate",1143],[3,"ToPublic",1143],[3,"Sign",1143],[3,"Verify",1143],[3,"Derive",1143],[3,"Error",4185],[4,"SignatureError",4186],[4,"Error",3353],[4,"PublicKeyError",4159],[4,"DerivationError",4187],[4,"SecretKeyError",4159],[3,"u5",4188],[3,"Vec",4189],[4,"Variant",4188],[8,"Into",4173],[3,"PossibleValue",4190],[8,"Bech32",4170],[4,"Rest",1465],[4,"Error",1465],[4,"ReadYamlError",3294],[4,"Error",3400],[4,"Error",1531],[4,"ReadError",4191],[3,"Error",4192],[4,"WriteError",4191],[3,"RestRequestBuilder",1531],[3,"Body",4193],[3,"RestResponse",1531],[3,"Bytes",4194],[3,"RestArgs",1531],[3,"RestClient",1531],[8,"Serialize",4195],[8,"DeserializeOwned",4196],[8,"Fn",4160],[3,"Url",4197],[4,"V0",1648],[4,"Account",1703],[3,"AccountId",3252],[3,"AccountState",4198],[3,"Block",1731],[4,"NextId",1758],[4,"Subcommand",1785],[4,"Diagnostic",1812],[4,"Leaders",1837],[4,"GetLogs",1837],[3,"OutputFormat",3400],[4,"Message",1887],[4,"Fragment",4199],[4,"Network",1919],[4,"Stats",1944],[4,"Node",1970],[4,"Stats",1995],[4,"Rewards",2021],[4,"Epoch",2048],[4,"History",2074],[4,"Settings",2100],[3,"SettingsDto",4200],[4,"Shutdown",2127],[4,"Stake",2152],[4,"StakePool",2179],[4,"StakePools",2206],[4,"Tip",2232],[3,"Utxo",2257],[4,"Subcommand",2257],[4,"Vote",2308],[4,"Active",2335],[4,"Committees",2360],[4,"Plans",2386],[4,"V1",2412],[3,"AccountVotes",2437],[4,"Vote",2437],[3,"CommonTransaction",2814],[4,"Error",2488],[4,"Transaction",2488],[4,"Error",4188],[4,"ValueError",4201],[4,"Error",3252],[4,"Error",4202],[3,"AddAccount",2659],[3,"AddCertificate",2685],[3,"AddInput",2710],[3,"AddOutput",2737],[3,"AddWitness",2763],[4,"Witness",4203],[3,"Auth",2789],[3,"CommonFees",2814],[3,"LinearFee",4204],[3,"Staging",3092],[3,"Finalize",2871],[3,"Address",4205],[3,"Info",2898],[4,"WitnessType",2926],[3,"MkWitness",2926],[6,"HeaderId",4206],[6,"TransactionSignDataHash",4207],[3,"SpendingCounter",4208],[4,"EitherEd25519SecretKey",4209],[3,"New",2979],[3,"Seal",3003],[3,"SetExpiryDate",3027],[3,"Ed25519Extended",4210],[3,"SecretKey",4159],[3,"MakeTransaction",3052],[3,"Value",4211],[3,"BlockDate",4212],[3,"TransactionInput",4213],[3,"Address",4156],[3,"Output",4214],[4,"Balance",4207],[8,"FeeAlgorithm",4204],[4,"OutputPolicy",4202],[3,"SetTtl",4175],[4,"StagingKind",3092],[8,"Deserializer",4196],[3,"Value",4201],[3,"InputOutputBuilder",4202],[3,"TransactionOutput",4215],[8,"Serializer",4195],[3,"EvmTransaction",4216],[4,"Error",3176],[4,"Utils",3176],[3,"Bech32ConvertArgs",3176],[3,"Identifier",4217],[6,"Result",4169],[8,"AsymmetricKey",4159],[3,"OutputFile",3353],[4,"FormatVariant",3400],[3,"GtmplError",3400],[3,"Error",4157],[4,"Value",4218],[4,"Value",4219],[3,"Number",4220],[3,"Map",4221],[3,"TallyDecryptShare",3491],[3,"MemberVotePlanShares",3491],[3,"VotePlanDecryptShares",3491],[3,"DecryptionError",4222],[3,"TallyDecryptShare",4222],[3,"Hash",4223],[3,"VotePlanStatus",4224],[3,"Seed",3597],[4,"Vote",3597],[4,"Error",3597],[4,"Error",4049],[3,"TallyError",4222],[4,"DecodeError",4225],[4,"Committee",3716],[3,"Generate",3743],[3,"ToPublic",3743],[4,"CommunicationKey",3743],[3,"Generate",3821],[3,"ToPublic",3821],[4,"MemberKey",3821],[3,"ElectionPublicKey",3900],[4,"Tally",3925],[3,"TallyVotePlanWithAllShares",3956],[3,"Output",3956],[3,"TallyGenerateVotePlanDecryptionShares",3999],[3,"MergeShares",3999],[3,"MergedVotePlan",4049],[3,"MergedVoteProposalStatus",4049],[3,"MergeVotePlan",4049],[13,"InputInvalid",326],[13,"OutputInvalid",326],[13,"InvalidPoolDelegationWeights",520],[13,"TooManyPoolDelegations",520],[13,"TooManyVotePlanProposals",520],[13,"InvalidBech32Key",520],[13,"InvalidVotePlanCommitteeBlockDates",520],[13,"PrivateTallyExpected",520],[13,"ManagementThresholdInvalid",520],[13,"ExpectingOnlyOneSigningKey",520],[13,"KeyNotFound",520],[13,"InputInvalid",520],[13,"OutputInvalid",520],[13,"InvalidVotePlanVoteBlockDates",520],[13,"InputInvalid",1093],[13,"UnexpectedBech32SignHrp",1457],[13,"UnexpectedBip32Bech32Hrp",1457],[13,"UnknownBech32PrivKeyHrp",1457],[13,"UnknownBech32PubKeyHrp",1457],[13,"InvalidSeed",1457],[13,"HostAddrNotBase",1647],[13,"Get",1728],[13,"Get",1783],[13,"Get",1811],[13,"Get",1836],[13,"Get",1885],[13,"Post",1915],[13,"Logs",1915],[13,"Get",1968],[13,"Get",2019],[13,"Get",2072],[13,"Get",2098],[13,"Get",2125],[13,"Post",2151],[13,"Get",2176],[13,"Get",2203],[13,"Get",2230],[13,"Get",2256],[13,"Get",2306],[13,"Get",2384],[13,"Get",2410],[13,"WitnessFileBech32HrpInvalid",2623],[13,"TooManyWitnessesToAddWitness",2623],[13,"WitnessCountToSealInvalid",2623],[13,"MakeWitnessAccountInvalidCounterLane",2623],[13,"CertificateError",2623],[13,"TxWithOwnerStakeDelegationMultiInputs",2623],[13,"TxKindToAddExtraInvalid",2623],[13,"TxKindToAddInputInvalid",2623],[13,"TxKindToAddOutputInvalid",2623],[13,"TxKindToAddWitnessInvalid",2623],[13,"TxKindToSealInvalid",2623],[13,"TxKindToFinalizeInvalid",2623],[13,"TxKindToGetMessageInvalid",2623],[13,"TxKindToSignDataHashInvalid",2623],[13,"TxKindToSetValidityTimeInvalid",2623],[13,"StagingFileOpenFailed",2623],[13,"StagingFileReadFailed",2623],[13,"StagingFileWriteFailed",2623],[13,"WitnessFileReadFailed",2623],[13,"WitnessFileWriteFailed",2623],[13,"WitnessFileBech32Malformed",2623],[13,"WitnessFileDeserializationFailed",2623],[13,"InfoFileWriteFailed",2623],[13,"NotRecognized",3291],[13,"AddressNotAccount",3291],[13,"SecretKeyFileReadFailed",3349],[13,"SecretKeyFileMalformed",3349],[13,"CannotOpen",3398],[13,"InvalidThreshold",3706],[13,"PrivateTallyExpected",3706],[13,"InputInvalid",3706],[13,"FragmentFileOpenFailed",3706],[13,"FragmentFileWriteFailed",3706],[13,"InvalidSeed",3706]]},\
"jormungandr":{"doc":"","t":"RRDDRRDRRRMMMMMAAMMMMFFLLLLLLMAAMMMLLLLLLALLLALLLLLLFMMFALLLLLLLLLAAAFAAAAMMAMMMFFAAMAALLLLLLLLLALLLANNDNNNDDIDNEENDENDEDNGNDDNNGDNNNNEGNNNDNNNDEDDDGDDDDGGENNNDEDDDNNNDNNNNNNNNNNNNNNNNNNNNNNNDNGNNNNNNNNNDENNNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLMLMLLLMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLMMMLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLLLLLLLLLLMMLLMMLLLLLMLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLKLMKLLLLMKLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDNNNNNENNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNEDNNNNNNNLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNNNNNNNNNNNNDNEDNNEDENNDENNNDNRNNNDNENNNDNNNDNEDDNMMMMAFAMAAAAAFMMMMMMMMMMAMFMMMAMAMAMMMFMMAMMMMAMMMMMMNNNENNFLLLLLLLLLLLLLFLLLLLLDLLLLLLLLLLLLLLLLMLLLLLNNDNENGNFLLLLAALLLLLLLLLLLLMLLLLLLLLFMMLLLMLLLLLLLLLNNELLLLLLLLLLLLLLDMLLLLLLMLLLLLLMLLLLNENNNNNNNDNNENDNENENNDNRNNNNNNRDEGNNNDDNLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLFMLMLLFMMMMMMLLMMLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMMMMRENNLLFLLFLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDLLLLLLLLLLLLLLMLLLLLLLLLLRRRRRGRDGRDMMMMLLLLFFLLLLLLMMLLMMMLLLLLLLLLFMMFFFFFFFMMMMFFFLLMMMLLLLLLLLMMDLLLLLLLLLLLLLMLMLLLLMLLLLLLMLMLLLMLLLLLDLLLLLLLLLLLMLLLLLLLLLLDNNNNNERNNNDNELLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLRRDDMLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMRRRRRRRDMLLLLLLFFFFFFFFFLLLLFFMLLLLNNDGNEDNDNNMLMLMMLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLMMMMLLMLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLNDENENNLLLLLLLLMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLNNEGNDNNNDDNNNDNNNNNNNMMLLLLLLLMMLLLLMALLLLLLMMMLLLLMLLLLLAMMMMMMAMMAMALLLLLLLDMMLLLLMMLLMLMLMLLLLLLLMLLLLLLLLDLLLLLMLLLLLLLLLLLLLLLLLLLNREDLLLLLLLLLLLLLLLLLLLALLLLLLFFLMMMLMMLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMLLLMLLMLLMLLLLMLLLLLLLLLLLLLLLLMMLLLLLENNDLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLENNIEDDDNNNNNENLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMKLMFLLLLLLLLLLLLLLLLLLLLLLLLMMNNNENNENDNNNNNNNNNNNNNNENNNNNENNNNNDDDGDDDDDDDNNEEDNEMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMLLMLLLMMMLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMNDNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLFLLLLLLLLLNDECDDDDMMMMAMMMMAMMMMMAMMMMMMMMNDECCLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLNDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLMLLLLLLLLLLLLLLLNNNNDNENDDNLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMFMMLMMMLLLLMMMLFLLLLLLLLLLLLLLLLLLMMRRRDIDLKLKLKLKLKLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLOOKLKLKLKLKLKLKLLLLLLLLLLDDMMMMMMMMMMMMMMMMMMMMMMMAMAMMMMMMMMMMDGLLLLLMMMMMMMMMMMLLLLLLLLLLLLMMLMMMMMLLLLLMLLLLMMLMMLDRDLLLLLMMMMMLLLLFMMMLLLLLLLLLLMLLLLLLLLMMLMMMLLLLLMMLLMMLLLLMMLLMLLCDDGDNNEDGNNDDENEDNNMMMAFMMLLLLLLLLLLLLLLLLLLLLAMMAMLLLLLAMFMMALLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLMMAFFLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMFLLFLLALMMFMFAAMLLLLMMLFAMLLLLLLMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNNENNRNNNNNFLLLLLLLLLLLLLFLLLLLLAARRRRRDDCCCNNDEDLLMMMLLLLLLLLLLMMMLLACLLLLLLLLLLLLLLLMMLLLLLLMMMMMMLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLNNNGEDDNNNNNNNLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMMLMLLLLLLLLLLLLFLLLMMRRIIQQGKKMFFCCCACCCAGGNGEGNNGNNMMMLLFFLLFLFLLLLMMMMMLLLMLLLLLLMMMMMFRRGNNARGGGGNDDEGDGNNDDDDDNDNNNNEENLMMLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMLLLLLMLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLMLMMMLLMAMMMLLLLLLLLLLLLMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLDENSDNDDLLMLLLLLLLLLLMLMLLLMLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLRDGLLLLMLLLLLLMLLLLLLLMLLLLLLLFLLLLLLLFFMLLLLLLLDNEDENDDGNNNNLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLMMMFLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMMMMMMLLLLLLLLLLLLLLFFFLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDLLMLLFLMLLLLLMAFFFFMLLLAALFFFAADLLMLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLFFLLLLNNNENNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLFFFFFLLLLLLFFAADLLLLLLMLFFFFFLLLLFLLLLNNENNNNNNNNNLLLLLLLLLLLLLLLLLLFFFFFLLLLFFLLLLLLDNDNDDEDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDDLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLMLMLLLLLLLLLLLLLEDCNDNMLLLLLLALLLLLLLLLLLMLLLLLLLLMMMMAMMMAMMLMLLLLLLLLDDDDLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMLMMFMMMMMMMMMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLENNNNNNEDEDNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMNNDRRENNNNDDDDDDMMMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMLMMAMMMMMMFMLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDMMMMMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLALLLLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFDRRRNNDNDEENDMLLLMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMLLMMMMMMLLLLMLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLNNNNNNNNEENNNNNNNNNNAFFFFMMMMMMNNNNNNNNEENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDLLLLLLLLLLLLLLLLFRDDDDGDDDDDMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMLLMLLLLLLMMAAMMMMAAMMMMMMMMMLLFMMMLLLAAMMLLLLLLLLLDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDMLLLLLLLLLLLLLMMAMAMLLLLMLDDLLLLLLMLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLMMLLRRRDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLRRRRDRDLLLLMLLLLLLLLMLLLMMLLLLLLMMMLFMMMLLLLLLLLRRRNNDEDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMLMMMLLLLLLLLLLLLLLLLLLLLRRSDSDDSSDMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLMLFMMMLLLLLLLLLLLLLLLLLLAAADDDDLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLENNNEDDDDNDDNLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLMLMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMNENNDNEDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLCDEGGNDMMLMLLLLLLLLLLLLLLLLLMLLLLFLLLMLLLLLLLLLLLMMLMMLMMLLLLLLLLLLLLLLMM","n":["BLOCK_TASK_QUEUE_LEN","BOOTSTRAP_RETRY_WAIT","BootstrapData","BootstrappedNode","CLIENT_TASK_QUEUE_LEN","FRAGMENT_TASK_QUEUE_LEN","InitializedNode","NETWORK_TASK_QUEUE_LEN","TOPOLOGY_TASK_QUEUE_LEN","WATCH_CLIENT_TASK_QUEUE_LEN","_logger_guard","_logger_guard","block0","block0_hash","block0_hash","blockcfg","blockchain","blockchain","blockchain","blockchain_tip","blockchain_tip","bootstrap","bootstrap_internal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancellation_token","client","context","context","context","context","deref","deref","deref","deref_mut","deref_mut","deref_mut","diagnostic","drop","drop","drop","fragment","from","from","from","init","init","init","init_os_signal_watchers","initial_peers","initial_peers","initialize_node","intercom","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","leadership","log","main","metrics","network","rest","secure","services","services","settings","settings","settings","settings","start","start_services","start_up","state","storage","stuck_notifier","topology","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vzip","vzip","vzip","watch_client","AddBftLeader","AddCommitteeId","ApplyBlockLedger","Bft","Bft","Bft","BftLeader","Block","Block0DataSource","Block0Date","Block0Date","Block0Error","Block0Malformed","BlockContentMaxSize","BlockDate","BlockVersion","CannotParseEntity","ChainLength","ConfigParam","ConfigParams","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","ConsensusVersion","Contents","ContentsBuilder","Discrimination","Ed25519Signed","Epoch","EpochRewardsInfo","EpochStabilityDepth","Evm","EvmMapping","FeesInTreasury","Fragment","FragmentId","FromSliceTooBig","FromSliceTooSmall","Genesis","GenesisLeader","GenesisPraos","GenesisPraos","GenesisPraos","Gossip","Header","HeaderBft","HeaderBftBuilder","HeaderBuilder","HeaderBuilderNew","HeaderContentEvalContext","HeaderDesc","HeaderGenesisPraos","HeaderGenesisPraosBuilder","HeaderHash","HeaderId","HeaderSetConsensusSignature","Initial","KesUpdateSpeed","KesVrfproof","Leader","LeaderOutput","Leadership","Ledger","LedgerStaticParameters","LinearFee","Malformed","MintToken","Multiverse","NegativeAmount","NoDiscrimination","NoInitialSettings","NoSlotDuration","NoSlotsPerEpoch","NoStartTime","None","OldUtxoDeclaration","Overflow","OwnerStakeDelegation","PerCertificateFees","PerVoteCertificateFees","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","RemoveBftLeader","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","RewardsInfoParameters","SlotDuration","SlotId","SlotsPerEpoch","StakeDelegation","Transaction","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","Unsigned","UpdateProposal","UpdateVote","Value","ValueError","VoteCast","VotePlan","VoteTally","accounts","accounts","accounts","active_vote_plans","add","add","add_to_account","apply_block","apply_fragment","apply_fragment","apply_owner_stake_delegation","apply_pool_registration","apply_pool_registration_signcheck","apply_pool_retirement","apply_pool_update","apply_protocol_changes","apply_stake_delegation","apply_transaction","apply_update","apply_update_proposal","apply_update_vote","apply_vote_cast","apply_vote_plan","apply_vote_tally","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","as_auth_slice","as_ref","as_slice","begin_block","bft_leader","block0_initial_hash","block0_start_time","block_builder","block_content_hash","block_content_size","block_date","block_date","block_date","block_date","block_parent_hash","block_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","can_distribute_reward","chain_length","chain_length","chain_length","chain_length","chain_length","chain_length","checked_add","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","common","compare","compare","compare","compute_hash","compute_hash_size","config","consensus","consensus_eval_context","consensus_version","content_hash","contents","contents","date","date","date","date","date","date_at_slot","default","default","default","default","default","delegation","delegation","delegation_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","discrimination","distribute_rewards","drawn","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode","encode","encode","epoch","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era","era","era","era","fees","finish","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","fragments","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_epoch_slot_id","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_str","from_str","from_u8","gc","generalize","generalize","genesis_leader","get","get_auth_size","get_authenticated_data","get_authenticated_data","get_bft_leader_id","get_consensus_eval_context","get_content_eval_context","get_hash","get_hash","get_hash","get_ref","get_size","get_stake_distribution","get_stakepool_id","get_static_parameters","get_total_value","governance","hash","hash","hash","hash","hash","hash","hash","header","header","header","height","id","id","id","id","id","id","increase","info_eq","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial","inner","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bft_builder","into_genesis_praos_builder","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_unsigned_header","is_empty","is_leader_for_date","iter","iter","iter","iter_slice","kes_update_speed","leaders_log","ledger","len","mint_token","mint_token_unchecked","multisig","new","new","new","new","new","new","new","new_raw","next","next","next_epoch","node_id","nodes","nr_states","nth_ancestor","oldutxos","params","parent_id","parent_id","partial_cmp","partial_cmp","partial_cmp","pots","proof","push","push","push_many","remaining_rewards","report_accounts","report_all","report_stake_pools","saturating_add","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","set_consensus_data","set_consensus_data","set_date","set_genesis","set_parent","set_signature","set_signature","set_stake_pool","set_treasury","settings","settings","settings","sig_key","sig_key","sign_using","sign_using","size","slot_duration","slot_duration","slot_id","slots_per_epoch","slots_per_epoch","source","split_in","stake_distribution","stake_pools","start_time","start_time","states_by_chain_length","states_by_hash","static_params","stats","sub","sum","sum","to_consensus_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u8","token_distribution","token_totals","token_totals","total","treasury","treasury_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates","updates","utxo_out","utxos","utxos","verify","version","version","votes","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","Block0Date","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BoolInvalid","ConfigParam","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","ConsensusVersion","Discrimination","Discrimination","EpochStabilityDepth","EpochStabilityDepth","Error","FeesInTreasury","FeesInTreasury","Halving","InvalidTag","KesUpdateSpeed","KesUpdateSpeed","Linear","LinearFee","LinearFee","PerCertificateFees","PerCertificateFees","PerVoteCertificateFees","PerVoteCertificateFees","PoolRewardParticipationCapping","PoolRewardParticipationCapping","ProposalExpiration","ProposalExpiration","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParams","RewardPot","RewardPot","SizeInvalid","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StructureInvalid","Tag","TagIter","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UnknownString","arbitrary","arbitrary","as_ref","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_str","from_str","from_u16","idx","init","init","init","init","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","par_bridge","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","AlreadyPresent","BackendError","Block0","Block0AlreadyInStorage","Block0InitialLedgerError","Block0NotAlreadyInStorage","BlockAlreadyPresent","BlockDeserialize","BlockHeaderVerificationFailed","BlockMissingParent","BlockNotFound","BlockNotRequested","Blockchain","BlockchainError","BootstrapError","Branch","CannotApplyBlock","CannotIterate","CheckHeaderProof","Checkpoints","ComparisonResult","Deserialize","Enabled","EpochLeadership","Error","HeaderWithCache","Intercom","Interrupted","LeadershipBlock","Ledger","MAIN_BRANCH_TAG","MissingParent","MissingParent","MissingParentBlock","Multiverse","NoTag","PreCheckedHeader","PreferCandidate","PreferCurrent","PullStreamFailed","Ref","SendError","Serialize","SkipFromStorage","Storage","Storage","StorageError","TaskData","Tip","TransactionSendError","block","block0","blockchain","blockchain_tip","bootstrap","bootstrap_from_stream","branch","branch","candidate","chain","chain_selection","checkpoints","chunk_sizes","compare_against","epoch_leadership_schedule","epoch_rewards_info","fragment_msgbox","garbage_collection_interval","header","inner","leadership","leadership","ledger","ledgers","multiverse","network_msgbox","new_epoch_leadership_from","new_ledger","previous_epoch_state","previous_state","process","ref_cache","reference","reference","reference_cache","rewards_info","rewards_report_all","span","start","state","stats_counter","storage","storage","storage","time_frame","time_frame","tip","watch_msgbox","cached_reference","header","header","header","parent_ref","BlockDeserialize","BlockMissingParent","BlockchainError","Error","Interrupted","PullStreamFailed","bootstrap_from_stream","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","into_request","into_request","report","source","to_string","try_from","try_into","type_id","vzip","Branch","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","get_ref","init","into","into_ref","into_request","into_request","new","reference","to_owned","try_from","try_into","type_id","vzip","Blockchain","BrokenHeaderChain","ChainAdvance","EmptyHeaderStream","Error","HeaderChainVerificationFailed","HeaderStream","MissingParentBlock","advance_branch","borrow","borrow","borrow_mut","borrow_mut","chain_advance","chain_landing","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","header","init","init","into","into","into_request","into_request","into_request","into_request","land_header_chain","new_hashes","parent_header","poll_done","process_header","source","stream","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Complete","Incomplete","Outcome","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","into_request","try_from","try_into","type_id","vzip","State","blockchain","borrow","borrow_mut","deref","deref_mut","drop","from","header","init","into","into_request","into_request","skip_present_blocks","start","stream","try_from","try_into","type_id","vzip","AlreadyPresent","AppliedBlock","Block0","Block0AlreadyInStorage","Block0InitialLedgerError","Block0NotAlreadyInStorage","BlockDateBeforeParent","BlockHeaderVerificationFailed","BlockNotRequested","Blockchain","CannotApplyBlock","ChainLengthNotIncremental","CheckHeaderProof","Enabled","EpochLeadership","Err","Error","Existing","HeaderChainVerifyError","HeaderWithCache","Intercom","LeadershipBlock","Ledger","MAIN_BRANCH_TAG","MissingParent","MissingParentBlock","New","NewLeadershipScheduleFailed","NoTag","Ok","PROCESS_LOGGING_DISTANCE","PostCheckedHeader","PreCheckedHeader","Result","SendError","SkipFromStorage","Storage","StreamInfo","StreamReporter","TransactionSendError","append_block","apply_and_store_block","apply_and_store_leadership_block","apply_block0","apply_block_check_rewards","apply_block_dry_run","apply_block_finalize","block","block0","block0","block_received","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","bytes_received","cached_ref","clone","clone","clone_into","clone_into","create_and_store_reference","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_leadership_schedule","epoch_rewards_info","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","gc","get_checkpoints","get_ref","handle_bootstrap_block","header","header","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block_description","last_bytes_received","last_reported","leadership","leadership","ledgers","load_from_block0","load_from_storage","load_header_parent","new","new","new_epoch_leadership_from","new_ledger","new_ref","parent_ledger_state","post_check_header","pre_check_header","pre_verify_link","previous_epoch_state","previous_state","ref_cache","report","rewards_info","rewards_report_all","source","source","start","state","storage","storage","store_and_apply_block_finalize","stream_info","time_frame","time_frame","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_reward_info","child","child","parent","parent","cached_reference","header","header","header","parent_ref","ALLOWED_TIME_DISCREPANCY","ComparisonResult","PreferCandidate","PreferCurrent","borrow","borrow_mut","check_rollback_up_to","clone","clone_into","compare_against","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","init","into","into_request","into_request","partial_cmp","to_owned","try_from","try_into","type_id","vzip","Checkpoints","as_ref","as_slice","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","init","into","into_iter","into_request","into_request","iter","new_from","to_owned","try_from","try_into","type_id","vzip","BLOCKS","Multiverse","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","from","from_ref","gc","get","get_ref","init","inner","insert","into","into_request","into_request","new","to_owned","try_from","try_into","type_id","vzip","DEFAULT_TIMEOUT_PROCESS_ANNOUNCEMENT","DEFAULT_TIMEOUT_PROCESS_BLOCKS","DEFAULT_TIMEOUT_PROCESS_HEADERS","DEFAULT_TIMEOUT_PROCESS_LEADERSHIP","GET_NEXT_BLOCK_SCHEDULER_CONFIG","GetNextBlockScheduler","PULL_HEADERS_SCHEDULER_CONFIG","Process","PullHeadersScheduler","TIP_UPDATE_QUEUE_SIZE","TaskData","blockchain","blockchain","blockchain_tip","blockchain_tip","borrow","borrow","borrow_mut","borrow_mut","chain_header_error_into_reply","check_and_apply_block","deref","deref","deref_mut","deref_mut","drop","drop","fragment_msgbox","fragment_msgbox","from","from","garbage_collection_interval","garbage_collection_interval","get_next_block_scheduler","handle_input","init","init","into","into","into_request","into_request","into_request","into_request","network_block_error_into_reply","network_msgbox","network_msgbox","process_and_propagate_new_ref","process_block_announcement","process_chain_headers","process_leadership_block","process_leadership_block_inner","process_network_block","process_network_blocks","pull_headers_scheduler","sender","sender","service_info","spawn_get_next_block_scheduler","spawn_pull_headers_scheduler","start","start","start_garbage_collector","stats_counter","stats_counter","tip_update_mbox","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_msgbox","watch_msgbox","Ref","active_vote_plans","block_date","block_parent_hash","borrow","borrow_mut","chain_length","clone","clone_into","deref","deref_mut","drop","elapsed","epoch_leadership_schedule","epoch_leadership_schedule","epoch_rewards_info","epoch_rewards_info","from","from_ref","hash","header","header","init","into","into_request","into_request","last_ref_previous_epoch","ledger","ledger","new","previous_epoch_state","slot","time","time_frame","time_frame","to_owned","try_from","try_into","type_id","vzip","RefCache","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","get","init","inner","insert","into","into_request","into_request","new","to_owned","try_from","try_into","type_id","vzip","Ancestor","BackendError","BlockAlreadyPresent","BlockNotFound","CannotIterate","Deserialize","Error","MINIMUM_BLOCKS_TO_FLUSH","MissingParent","Sending","Serialize","Storage","Storage","StreamingError","block_exists","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","distance","drop","drop","drop","drop","file","find_closest_ancestor","find_common_ancestor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","gc","get","get_blocks_by_chain_length","get_branches","get_chain_length","get_nth_ancestor","get_parent","get_tag","header_hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_ancestor","memory","put_block","put_tag","send_branch","send_branch_with","source","source","span","storage","stream_from_to","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BRANCH_REPROCESSING_INTERVAL","INTERNAL_TIP_UPDATE_QUEUE_SIZE","Tip","TipUpdater","blockchain","borrow","borrow","borrow_mut","borrow_mut","branch","branch","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fragment_mbox","from","from","from_ref","from_ref","get_ref","init","init","into","into","into_request","into_request","into_request","into_request","new","new","process_new_ref","reprocess_tip","run","stats_counter","switch_tip_branch","tip","to_owned","to_owned","try_from","try_from","try_into","try_into","try_request_fragment_removal","type_id","type_id","update_current_branch_tip","update_ref","vzip","vzip","watch_mbox","PROCESS_TIMEOUT_GET_BLOCKS","PROCESS_TIMEOUT_GET_BLOCK_TIP","PROCESS_TIMEOUT_GET_HEADERS","PROCESS_TIMEOUT_GET_HEADERS_RANGE","PROCESS_TIMEOUT_GET_PEERS","PROCESS_TIMEOUT_PULL_BLOCKS","PROCESS_TIMEOUT_PULL_BLOCKS_TO_TIP","TaskData","blockchain_tip","borrow","borrow_mut","deref","deref_mut","drop","from","fuse_send_items","get_block_from_storage","get_block_tip","handle_get_blocks","handle_get_headers","handle_get_headers_range","handle_input","handle_pull_blocks","handle_pull_blocks_to_tip","init","into","into_request","into_request","send_range_from_storage","start","storage","try_from","try_into","type_id","vzip","Blockchain","BlockchainTip","Context","ContextLock","Diagnostic","Error","FullContext","FullContext","ServerStopper","ServerStopper","Span","alloc","blockchain","blockchain","blockchain_tip","blockchain_tip","bootstrap_stopper","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diagnostic","drop","drop","drop","drop","enclave","fmt","fmt","from","from","from","from","from_ref","full","get_diagnostic_data","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","leadership_logs","network_state","network_task","new","new","node_state","node_state","phantom","prometheus","ptr","remove_bootstrap_stopper","rest_server_stopper","rest_server_stopper","set_blockchain","set_blockchain_tip","set_bootstrap_stopper","set_diagnostic_data","set_full","set_node_state","set_rest_server_stopper","set_span","span","span","stats_counter","stop","stop_bootstrap","to_owned","to_string","topology_task","transaction_task","try_from","try_from","try_from","try_from","try_full","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Cpu","Diagnostic","DiagnosticError","NoFile","RlimitResource","UnixError","UnknownError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cpu_usage_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from_ref","getrlimit","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","new","open_files_limit","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Evm","EvmMapping","Fragment","FragmentId","Initial","Logs","MintToken","OldUtxoDeclaration","OwnerStakeDelegation","Pool","PoolEntry","PoolRegistration","PoolRetirement","PoolUpdate","Process","StakeDelegation","Transaction","UpdateProposal","UpdateVote","VoteCast","VotePlan","VoteTally","ancestors_fee","ancestors_size","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","descendants_fee","descendants_size","deserialize","deserialize_from_slice","drop","encode","entries","entry","eq","equivalent","equivalent","equivalent","equivalent","fmt","fragment_fee","fragment_ref","fragment_size","from","from","from_ref","hash","hash","id","init","into","into_request","into_request","logs","logs","logs_max_entries","metrics","network_msg_box","network_msg_box","persistent_log","pool","pool","pool_max_entries","process","received_at","selection","serialize","serialized_size","to_owned","try_from","try_into","type_id","vzip","PoolEntry","ancestors_fee","ancestors_size","borrow","borrow_mut","deref","deref_mut","descendants_fee","descendants_size","drop","fragment_fee","fragment_fee","fragment_ref","fragment_ref","fragment_size","fragment_size","from","init","into","into_request","into_request","new","received_at","received_at","try_from","try_into","type_id","vzip","with_ancestors_fee","with_ancestors_size","with_descendants_fee","with_descendants_size","Logs","borrow","borrow_mut","deref","deref_mut","drop","entries","exist_all","exists","from","init","insert_all_pending","insert_pending","into","into_request","into_request","logs","logs_by_ids","modify","modify_all","new","remove_logs_after_date","try_from","try_into","type_id","vzip","CannotPropagate","DEFAULT_BUF_SIZE","Error","Pool","borrow","borrow","borrow_mut","borrow_mut","close_persistent_log","deref","deref","deref_mut","deref_mut","drop","drop","filter_fragment","fmt","fmt","from","from","init","init","insert_and_propagate_all","internal","into","into","into_request","into_request","into_request","into_request","is_fragment_valid","is_transaction_valid","logs","logs","metrics","network_msg_box","new","persistent_log","pool","prune_after_ledger_branch","remove_added_to_block","select","set_persistent_log","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_metrics","vzip","vzip","IndexedQueue","IndexedQueueEntry","IndexedQueueKeyRef","Pool","TimeoutQueueItem","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","entries","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","from","from","from","from","from","from_ref","get_hash","hash","head","id","index","init","init","init","init","init","insert_all","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","len","len","max_entries","max_entries","new","new","next","partial_cmp","pop_back","prev","push_front","remove","remove_all","remove_oldest","tail","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","valid_until","value","vzip","vzip","vzip","vzip","vzip","Error","PersistentLog","Pool","Process","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","into_request","into_request","logs_max_entries","network_msg_box","new","pool_max_entries","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApplyFragmentError","Commit","DoesNotFit","FragmentSelectionAlgorithm","FragmentSelectionAlgorithmParams","FragmentSelectionResult","NewLedgerState","OldestFirst","OldestFirst","Reject","Rejected","RequestSmallerFee","RequestSmallerSize","SelectionOutput","SoftDeadlineReached","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contents","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ledger","ledger","new","rejected_fragments_cnt","select","select","space_left","try_apply_fragment","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","fragment_id","reason","AcceptGossip","AnnouncedBlock","Block","BlockMsg","BranchSwitch","ChainHeaders","ClientMsg","DemotePeer","Error","Fragment","GetBlockTip","GetBlocks","GetBlocks","GetHeaders","GetLogs","GetNextBlock","GetStatuses","Gossip","LeadershipBlock","ListAvailable","ListNonPublic","ListQuarantined","NetworkBlocks","NetworkMsg","NewBlock","NewTip","PeerInfo","PromotePeer","Propagate","PropagateMsg","PullBlocks","PullBlocksToTip","PullHeaders","PullHeaders","RemoveTransactions","ReplyFuture","ReplyHandle","ReplySendError","ReplySender","ReplyStream","ReplyStreamFuture","ReplyStreamHandle","ReplyStreamSink","ReplyTrySendError","RequestSink","RequestStreamHandle","SelectTransactions","SendTransactions","TopologyMsg","TransactionMsg","UploadStream","View","WatchMsg","_phantom_error","_phantom_error","aborted","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","canceled","cause","clone","clone_into","code","code","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failed","failed_precondition","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_send_error","into_stream_and_reply","into_streaming_request","into_streaming_request","into_streaming_request","into_streaming_request","invalid_argument","is_full","lead_receiver","lead_sender","map_send_error","not_found","poll","poll","poll_close","poll_close","poll_discover","poll_discover","poll_flush","poll_flush","poll_next","poll_next","poll_ready","poll_ready","poll_ready","receiver","receiver","receiver","reply","reply","reply","reply_error","reply_error","reply_ok","sender","sender","sender","source","source","start_send","start_send","start_sending","stream_reply","stream_request","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll_next","try_poll_next","try_send_item","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unary_reply","unimplemented","upload","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","from","node_id","to","fail_fast","fragments","hard_deadline_future","ledger","origin","reply_handle","reply_handle","selection_alg","soft_deadline_future","AccountLedgerError","Config","ContextError","Error","EstimationError","EthereumSignatureError","Fragment","IntercomError","MiningIsNotAllowed","NonArchiveNode","Storage","TransactionDecodedError","TxMsgSendError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","into_request","into_request","into_request","into_request","listen","source","start_jrpc_server","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EmptyEnclave","Enclave","EnclaveError","LeaderEvent","LeadershipLogHandle","Logs","Module","ModuleConfig","block_hard_deadline","block_hard_deadline","block_message","block_message","enclave","enclave","enclave","inner","internal_id","logs","logs","logs","logs","pool","pool","process","rewards_report_all","rewards_report_all","schedule","service_info","service_info","tip","tip","tip_ref","EmptyEnclave","Enclave","EnclaveError","LeaderEvent","Schedule","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_ref","init","init","inner","into","into","into_request","into_request","into_request","into_request","new","query_header_bft_finalize","query_header_genesis_praos_finalize","query_schedules","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block","LeadershipLogHandle","LeadershipLogStatus","Logs","Pending","Rejected","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from_ref","from_ref","from_ref","get_hash","hash","init","init","init","insert","internal","internal_id","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","logs","logs","mark_finished","mark_finished","mark_wake","mark_wake","new","partial_cmp","serialize","set_status","set_status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","block","chain_length","parent","reason","Logs","borrow","borrow_mut","deref","deref_mut","drop","entries","from","init","insert","into","into_request","into_request","logs","mark_finished","mark_wake","new","set_status","try_from","try_into","type_id","vzip","CannotConnectToFragmentPool","CannotScheduleWithEnclave","CannotSendLeadershipBlock","CannotUpdateLogs","Entry","FragmentSelectionFailed","LeadershipError","LedgerError","Module","ModuleConfig","TooEarlyForTimeFrame","action","action_entry","action_run_entry","action_run_entry_build_block","action_run_entry_in_bound","action_run_schedule","action_schedule","block_hard_deadline","block_hard_deadline","block_message","block_message","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_slot","current_slot_position","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enclave","enclave","epoch_instant","epoch_time","event","event_following_slot_time","event_nth_future_slot_time","event_slot_time","fmt","fmt","from","from","from","from","from","from","init","init","init","init","instant","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","log","logs","logs","new","pool","pool","prepare_block","rewards_report_all","rewards_report_all","run","schedule","service_info","service_info","slot_instant","slot_time","source","step","tip","tip","tip_ref","to_string","too_late","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wait","wait_peek_deadline","source","time","KEY_SCOPE","KEY_SUB_TASK","KEY_TASK","Metrics","MetricsBackend","MetricsBuilder","add_backend","add_block_recv_cnt","add_block_recv_cnt","add_peer_connected_cnt","add_peer_connected_cnt","add_peer_quarantined_cnt","add_peer_quarantined_cnt","add_tx_recv_cnt","add_tx_recv_cnt","add_tx_rejected_cnt","add_tx_rejected_cnt","backends","backends","backends","borrow","borrow","borrow_mut","borrow_mut","build","builder","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","metrics_count_method","metrics_method","set_mempool_tx_count","set_mempool_tx_count","set_mempool_usage_ratio","set_mempool_usage_ratio","set_peer_available_cnt","set_peer_available_cnt","set_slot_start_time","set_slot_start_time","set_tip_block","set_tip_block","sub_peer_connected_cnt","sub_peer_connected_cnt","sub_peer_quarantined_cnt","sub_peer_quarantined_cnt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Prometheus","SimpleCounter","block_chain_length","block_content_size","block_epoch","block_fee_sum","block_hash","block_hash_value","block_input_sum","block_recv_cnt","block_recv_cnt","block_slot","block_time","block_tx_count","mempool_tx_count","mempool_tx_count","mempool_usage_ratio","mempool_usage_ratio","peer_available_cnt","peer_connected_cnt","peer_quarantined_cnt","peer_total_cnt","peers_available_cnt","peers_connected_cnt","peers_quarantined_cnt","prometheus_exporter","registry","simple_counter","slot_start_time","slot_start_time","start_time","tip_block","tx_recv_cnt","tx_recv_cnt","tx_rejected_cnt","tx_rejected_cnt","votes_cast","votes_casted_cnt","Prometheus","UIntGauge","add_block_recv_cnt","add_peer_connected_cnt","add_peer_quarantined_cnt","add_tx_recv_cnt","add_tx_rejected_cnt","block_chain_length","block_content_size","block_epoch","block_fee_sum","block_hash","block_hash_value","block_input_sum","block_recv_cnt","block_slot","block_time","block_tx_count","borrow","borrow_mut","default","deref","deref_mut","drop","from","http_response","init","into","into_request","into_request","mempool_tx_count","mempool_usage_ratio","new","peer_available_cnt","peer_connected_cnt","peer_quarantined_cnt","peer_total_cnt","registry","set_mempool_tx_count","set_mempool_usage_ratio","set_peer_available_cnt","set_slot_start_time","set_tip_block","slot_start_time","sub_peer_connected_cnt","sub_peer_quarantined_cnt","try_from","try_into","tx_recv_cnt","tx_rejected_cnt","type_id","v","votes_casted_cnt","vzip","BlockCounters","EXP_MOVING_AVERAGE_COEFF","SimpleCounter","add_block_recv_cnt","add_peer_connected_cnt","add_peer_quarantined_cnt","add_tx_recv_cnt","add_tx_rejected_cnt","avg_content_size","block_fee_sum","block_input_sum","block_recv_cnt","block_tx_count","borrow","borrow","borrow_mut","borrow_mut","calc_running_block_size_average","chain_length","content_size","date","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_stats","hash","init","init","into","into","into_request","into_request","into_request","into_request","mempool_tx_count","mempool_usage_ratio","new","peers_available_cnt","peers_connected_cnt","peers_quarantined_cnt","set_mempool_tx_count","set_mempool_usage_ratio","set_peer_available_cnt","set_slot_start_time","set_tip_block","slot_start_time","start_time","sub_peer_connected_cnt","sub_peer_quarantined_cnt","time","tip_block","try_from","try_from","try_into","try_into","tx_recv_cnt","tx_rejected_cnt","type_id","type_id","votes_cast","vzip","vzip","BootstrapError","BootstrapPeers","Channels","Connection","ConnectionState","CouldNotDownloadBlock","DnsResolver","FetchBlockError","GlobalState","GlobalStateR","InternalCommRecv","InternalCommSend","ListenError","NetworkBootstrapResult","NewGlobalStateError","NoTrustedPeers","PropagateError","TaskParams","V4","V6","alloc","block0_hash","block_box","bootstrap","bootstrap","bootstrap_peers","bootstrapped","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_sizes","cause","channels","client","client_box","client_count","clone","clone","clone_into","clone_into","concurrency_limits","config","connect_and_propagate","connected_count","connection","convert","dec_client_count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dns_resolver","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fetch_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","global","global_state","grpc","handle_network_input","handle_propagation_msg","inc_client_count","init","init","init","init","init","init","init","init","init","init","initial_peers","input","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keepalive_durations","keypair","netboot_peers","new","new","new_dns_resolver","node_address","num_clients_to_bump","p2p","peer","peers","phantom","propagate_message","ptr","retrieve_local_ip","security_params","service","sockaddr","source","source","span","span","span","span","spawn","start","subscription","timeout","to_owned","to_owned","to_string","to_string","to_string","to_string","topology_box","topology_peers","transaction_box","trusted_peers_shuffled","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch","block","BlockDecodingFailed","Blockchain","ClientNotReady","Connect","EmptyTrustedPeers","Error","GcFailed","Interrupted","MAX_BOOTSTRAP_PEERS","PeerDecodingFailed","PeersNotAvailable","PullRequestFailed","PullStreamFailed","TipFailed","bootstrap_from_peer","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","into_request","into_request","peers_from_trusted_peer","source","to_string","try_from","try_into","type_id","vzip","inbound","outbound","BLOCKS","FRAGMENTS","HEADERS","BLOCKS","HEADERS","Client","ClientBuilder","ConnectError","ConnectFuture","ConnectHandle","Continue","Disconnect","InboundSubscriptions","ProcessingOutcome","Progress","and_proceed_with","begin","block_events","block_sink","block_solicitations","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_pulls","channels","client_box","clone","clone_into","connect","connect","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fragment_sink","fragments","from","from","from","from","from","from_ref","global_state","gossip","gossip_sink","inbound","incoming_block_announcement","incoming_solicitation","init","init","init","init","init","inner","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","peer_id","poll","poll_shut_down","process_block_event","process_fragments","process_gossip","pull_headers","push_missing_headers","shutting_down","solicit_blocks","span","span","span","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upload_blocks","vzip","vzip","vzip","vzip","vzip","Block0Mismatch","Canceled","ClientAuth","ConnectCanceled","ConnectError","ConnectFuture","ConnectHandle","DecodeBlock0","Handshake","InvalidNodeId","InvalidNodeSignature","PeerSignatureVerificationFailed","Subscription","Transport","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","match_block0","poll","receiver","sender","source","task","to_string","try_complete","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","validate_peer_auth","vzip","vzip","vzip","expected","peer_responded","CLIENT_REQUESTS","SERVER_REQUESTS","Decode","Encode","NetworkData","Object","ResponseStream","decode","encode","inner","read","response_stream","Client","ConnectError","FetchBlockError","client","connect","fetch_block","run_listen_socket","server","BlockSubscription","Client","Connect","ConnectError","FetchBlockError","FragmentSubscription","GetBlocks","GetBlocksStream","GossipSubscription","NoBlocks","UnexpectedBlock","_phantom","_phantom","_phantom","borrow","borrow_mut","connect","connect_internal","deref","deref_mut","destination_endpoint","drop","fetch_block","fmt","fmt","from","init","inner","inner","inner","inner","inner","into","into_request","into_request","legacy_node_id","source","to_string","try_from","try_into","type_id","vzip","received","requested","source","source","source","run_listen_socket","HTTP2","TCP","Address","V4","V6","comm","BUFFER_LEN","BlockEventAnnounceStream","BlockEventMissingStream","BlockEventSolicitStream","BlockEventSubscription","Client","CommHandle","ConnectOptions","ErrorKind","FragmentSubscription","GetNodeAddress","GossipSubscription","NotSubscribed","NotSubscribed","OutboundSubscription","PeerComms","PeerInfo","PeerStats","Peers","Pending","PropagateError","Server","StreamOverflow","Subscribed","SubscriptionClosed","SubscriptionDirection","SubscriptionState","Unexpected","add_connecting","addr","block_announcements","block_announcements_subscribed","block_solicitations","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_pulls","clear","clear_pending","clear_pending","client_id","client_pending","clone","clone","clone","clone_into","clone_into","clone_into","connection_established","created","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direction","direction","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","evict_clients","f","f","f","fmt","fmt","fmt","fmt","fmt","fragments","fragments_subscribed","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","generate_auth_nonce","get_peer_addr","gossip","gossip_subscribed","has_client_subscriptions","id","infos","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_item","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_client","is_subscribed","item","kind","kind","last_activity","last_block_received","last_block_received","last_fragment_received","last_fragment_received","last_gossip_received","last_gossip_received","lock_fut","mutex","new","new","node_id","peer_map","pending_block_announcement","pending_fragment","pending_gossip","poll","poll_discover","poll_next","propagate_block","propagate_fragment","propagate_gossip_to","propagate_with","pull_headers","refresh_peer_on_block","refresh_peer_on_fragment","refresh_peer_on_gossip","remote_addr","remote_addr","remove_peer","server_complete_handshake","set_pending_block_announcement","set_pending_fragment","set_pending_gossip","solicit_blocks_any","solicit_blocks_peer","state","stats","stream","stream","stream","subscribe","subscribe_to_block_announcements","subscribe_to_block_events","subscribe_to_block_events","subscribe_to_block_solicitations","subscribe_to_chain_pulls","subscribe_to_fragments","subscribe_to_fragments","subscribe_to_gossip","subscribe_to_gossip","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_send","try_send_block_announcement","try_send_fragment","try_send_gossip","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update_entry","update_last_block_received","update_last_fragment_received","update_last_gossip_received","update_last_timestamp","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ClientAuth","CommStatus","Connecting","DEFAULT_OPEN_HANDSHAKED_LIMIT","Entry","Established","PeerData","PeerMap","add_client","add_connecting","auth_info","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","client_auth","client_id","client_id","comms","comms","complete_handshake","complete_handshake","connecting","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","entry","established","evict_clients","evict_if_full","from","from","from","from","from","generate_auth_nonce","generate_auth_nonce","in_progress","infos","init","init","init","init","init","inner","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","join_peer","map","new","new","next_peer_for_block_fetch","peer_comms","refresh_peer","remove","remove","remove_peer","server_comms","server_comms","stats","stats_counter","stats_counter","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_comm_status","update_comm_status","vzip","vzip","vzip","vzip","vzip","NONCE_LEN","NodeService","SubscriptionStream","block_service","block_subscription","borrow","borrow_mut","channels","client_auth","clone","clone_into","deref","deref_mut","drop","f","fragment_service","fragment_subscription","from","from_ref","get_blocks","get_fragments","get_headers","global_state","gossip_service","gossip_subscription","handshake","init","into","into_request","into_request","join_streams","new","peer_id","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_message","serve_subscription","stream","tip","to_owned","try_from","try_into","type_id","upload_blocks","vzip","BlockAnnouncementProcessor","Client","Direction","FragmentProcessor","FragmentProcessorSendFragmentsState","GetIngressAddress","GossipProcessor","PendingProcessing","ReverseDnsLookupFuture","ReverseLookup","SendFragments","Server","WaitingMessageBox","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered_fragments","clear_buffered_fragments","complete","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","filter_gossip_node","fmt","from","from","from","from","from","from","global_state","global_state","global_state","handle_mbox_error","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mbox","mbox","mbox","message_box","new","new","new","node_id","node_id","node_id","peer_promoted","pending_processing","pending_processing","pending_processing","poll_close","poll_close","poll_close","poll_complete","poll_complete_refresh_stat","poll_flush","poll_flush","poll_flush","poll_flush_mbox","poll_flush_mbox","poll_ready","poll_ready","poll_ready","poll_send_fragments","process_block_announcements","process_fragments","process_gossip","refresh_stat","refresh_stat","send_fragments_state","start","start_send","start_send","start_send","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","fut","fut","ingress_addr","ingress_addr","resolved_hostnames","Config","borrow","borrow_mut","cors","deref","deref_mut","display_internal_server_error","drop","enable_prometheus","from","init","into","into_request","into_request","listen","prometheus","run_server_with_app","setup_cors","setup_prometheus","start_rest_server","tls","try_from","try_into","type_id","v0","v1","vzip","filter","filter","handle_rejection","handlers","logic","GetBlockNextIdQuery","borrow","borrow_mut","count","deref","deref_mut","deserialize","drop","from","get_account_state","get_active_vote_plans","get_block_id","get_block_next_id","get_committees","get_diagnostic","get_leaders_logs","get_message_logs","get_network_p2p_available","get_network_p2p_non_public","get_network_p2p_quarantined","get_network_p2p_view","get_network_p2p_view_topic","get_network_stats","get_rewards_info_epoch","get_rewards_info_history","get_rewards_remaining","get_settings","get_stake_distribution","get_stake_distribution_at","get_stake_pool","get_stake_pools","get_stats_counter","get_tip","get_update_proposals","get_utxo","init","into","into_request","into_request","post_message","shutdown","try_from","try_into","type_id","vzip","ContextError","Deserialize","Digest","Error","Fragment","FromConfigParam","Hash","Hex","IntercomError","InvalidTopic","MsgSendError","PublicKey","Serialize","Storage","TipBlockNotFound","TxMsgSendError","Value","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_account_state","get_active_vote_plans","get_block_id","get_block_next_id","get_committees","get_diagnostic","get_leaders_logs","get_message_logs","get_network_p2p_available","get_network_p2p_non_public","get_network_p2p_quarantined","get_network_p2p_view","get_network_p2p_view_topic","get_network_stats","get_rewards_info_epoch","get_rewards_info_history","get_rewards_remaining","get_settings","get_stake_distribution","get_stake_distribution_at","get_stake_pool","get_stake_pools","get_stats_counter","get_tip","get_topology_view","get_update_proposals","get_utxo","init","into","into_request","into_request","parse_account_id","parse_block_hash","parse_fragment_id","post_message","shutdown","source","to_string","try_from","try_into","type_id","vzip","filter","handle_rejection","handlers","logic","GetMessageStatusesQuery","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fragment_ids","from","get_account_votes","get_account_votes_with_plan","get_accounts_votes_all","get_fragment_logs","get_fragment_statuses","init","into","into_request","into_request","post_fragments","try_from","try_into","type_id","vzip","Context","Digest","Error","Fragments","Hash","Hex","Intercom","MsgSend","PublicKey","Storage","TxMsgSend","Value","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_account_votes","get_account_votes_with_plan","get_accounts_votes_all","get_fragment_logs","get_fragment_statuses","init","into","into_request","into_request","parse_account_id","post_fragments","source","to_string","try_from","try_into","type_id","vzip","Bft","Format","GenesisPraos","Io","NodePublic","NodeSecret","NodeSecretFromFileError","OwnerKey","bft","bft","block_publickey","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enclave","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","genesis","genesis","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","load_from_file","node_id","sig_key","signing_key","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","Enclave","LeaderEvent","Schedule","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_header_bft","create_header_genesis_praos","current_slot","current_slot_data","date","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enclave","epoch","fill","from","from","from","from_ref","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","leader_data","leadership","new","new","next_event","output","peek","stop_at_slot","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Block0Info","CommandLine","Error","Hash","LOG_FILTER_LEVEL_POSSIBLE_VALUES","Path","__private_field","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command_arguments","deref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","full_version","init","init","into","into","into_request","into_request","into_request","into_request","jrpc_arguments","log_format","log_level","log_output","logging","rest_arguments","rewards_report_all","source_version","start","start_arguments","storage_check","to_owned","trace_collector_endpoint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CommandLine","JRpcArguments","RestArguments","StartArguments","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","block_0_hash","block_0_path","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","full_version","group_id","group_id","group_id","group_id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc_arguments","listen","listen","listen_address","load","log_format","log_level","log_level_parse","log_output","node_config","prometheus_enabled","public_address","rest_arguments","rewards_report_all","secret","source_version","start_arguments","storage","storage_check","trace_collector_endpoint","trusted_peer","trusted_peer_from_json","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Error","File","FileError","FormatNotSupported","InitSubscriber","InstallOpenTelemetryPipeLine","Json","LogFormat","LogGuard","LogOutput","LogSettings","Plain","Stderr","Stdout","_nonblocking_worker_guard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_ref","from_ref","from_ref","from_str","from_str","init","init","init","init","init","init_log","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","level","output","serialize","serialize","source","to_owned","to_owned","to_owned","to_string","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","cause","path","specified","Config","ConfigIo","Cors","DEFAULT_BLOCK_HARD_DEADLINE","DEFAULT_NO_BLOCKCHAIN_UPDATES_WARNING_INTERVAL","Error","ExpectedBlock0Info","InvalidKey","InvalidLayersConfig","InvalidMultiaddr","JRpc","Mempool","RawSettings","Rest","Settings","Tls","allowed_headers","allowed_methods","allowed_origins","block_0","block_hard_deadline","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","command_line","config","config","cors","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","generate_network","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","jrpc_config","leadership","listen","listen","load","log_max_entries","log_settings","max_age_secs","mempool","network","network","no_blockchain_updates_warning_interval","persistent_log","pool_max_entries","priv_key_file","prometheus","resolve_trusted_peers","rest","rest_config","rewards_report_all","secret","serialize","serialize","serialize","serialize","serialize","source","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_settings","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bootstrap","Config","ConfigLogSettings","Connection","Cors","JRpc","LayersConfig","Leadership","P2pConfig","Prometheus","Rest","Tls","TrustedPeer","address","allow_private_addresses","allowed_headers","allowed_methods","allowed_origins","block_hard_deadline","bootstrap","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connection","cors","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","drop","drop","drop","drop","drop","enabled","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter_level_opt_serde","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gossip_interval","http_fetch_block0_service","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","layers","leadership","level","listen","listen","listen","log","logs_capacity","max_age_secs","max_bootstrap_attempts","max_client_connections","max_connections","max_connections_threshold","mempool","network_stuck_check","no_blockchain_updates_warning_interval","node_key_file","output","p2p","policy","preferred_list","priv_key_file","prometheus","public_address","rest","secret_file","serialize","serialize","serialize","serialize","serialize","skip_bootstrap","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics_of_interest","trace_collector_endpoint","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","deserialize","serialize","Configuration","DEFAULT_MAX_CLIENT_CONNECTIONS","DEFAULT_MAX_CONNECTIONS","DEFAULT_TIMEOUT","Grpc","InvalidAddress","Listen","Ntt","Peer","PeerResolveError","Protocol","Resolve","TrustedPeer","addr","address","address","address","allow_private_addresses","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connection","connection","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","gossip_interval","hash","hash","http_fetch_block0_service","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","layers","listen","listen_address","max_bootstrap_attempts","max_client_connections","max_connections","network_stuck_check","new","new","node_key","policy","protocol","protocol","protocol","public_address","resolve","serialize","serialize","serialize","skip_bootstrap","source","timeout","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","with_timeout","Block0","Block0","Block0InFuture","Block0Mismatch","BlockStorage","Blockchain","ConfigurationError","DiagnosticError","Error","ErrorKind","FetchBlock0","GlobalState","Interrupted","Io","LoggingInitializationError","NetworkBootstrapError","NodeSecrets","ParseError","ServiceTerminatedWithError","StorageError","error","fetch_block0_http","load_blockchain","prepare_block_0","prepare_storage","expected","got","reason","reason","source","source","Block0","Block0","Block0InFuture","Block0Mismatch","BlockStorage","Blockchain","ConfigurationError","DiagnosticError","Error","ErrorKind","FetchBlock0","GlobalState","Interrupted","Io","LoggingInitializationError","NetworkBootstrapError","NodeSecrets","ParseError","ServiceTerminatedWithError","StorageError","borrow","borrow","borrow_mut","borrow_mut","code","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","into","into","into_request","into_request","into_request","into_request","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","expected","got","reason","reason","source","source","State","borrow","borrow_mut","default","deref","deref_mut","drop","from","init","into","into_request","into_request","new","try_from","try_into","type_id","vzip","check_last_block_time","DEFAULT_NETWORK_STUCK_INTERVAL","Gossip","Gossips","NodeId","P2pTopology","Peer","PeerInfo","QuarantineConfig","ReportRecords","TaskData","View","address","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","deref","deref","deref_mut","deref_mut","drop","drop","encode","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","get_hash","get_hash","gossip","hash","hash","id","init","init","initial_peers","into","into","into_request","into_request","into_request","into_request","key","last_update","layers","limits","max_num_quarantine_records","max_quarantine","network_msgbox","peers","process","quarantine","quarantine","quarantine_duration","quarantine_whitelist","quarantined","report_duration","report_grace","report_records","report_whitelist","self_node","serialize","serialize","start","stats_counter","stats_counter","subscriptions","to_owned","to_owned","to_string","topic","topology","topology","topology_queue","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Gossip","GossipError","Gossips","InvalidGossip","ReadError","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","encode","encode","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","get_hash","has_valid_address","hash","id","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_global","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LayersConfig","ParseError","PreferredListConfig","RingsConfig","blocks","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","init","into","into_request","into_request","messages","peers","preferred_list","preferred_list","rings","rings","to_owned","try_from","try_into","type_id","view_max","vzip","PreferredListConfig","PreferredListLayer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","current_peers","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","name","new","peers","peers","populate","prng","remove","reset","subscribe","subscriptions","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsubscribe","view","view_max","view_max","vzip","vzip","HIGH_INTEREST","LOW_INTERESET","NORMAL_INTEREST","ParseError","Rings","RingsConfig","blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_ref","init","init","init","interest_levels","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","messages","name","new","populate","remove","reset","rings","subscribe","subscriptions","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsubscribe","view","vzip","vzip","vzip","MAX_GOSSIP_SIZE","MAX_ID_SIZE","DEFAULT_NETWORK_STUCK_INTERVAL","MAX_GOSSIP_SIZE","Process","QUARANTINE_CHECK","TaskData","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","from","from","gossip_interval","handle_input","init","init","initial_peers","input","into","into","into_request","into_request","into_request","into_request","network_msgbox","network_msgbox","network_stuck_check","send_gossip_messages","start","stats_counter","topology","topology_queue","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DEFAULT_MAX_NUM_QUARANTINE_RECORDS","DEFAULT_MAX_QUARANTINE_DURATION","DEFAULT_QUARANTINE_DURATION","Ok","Quarantine","QuarantineConfig","ReportNodeStatus","ReportRecord","ReportRecords","SoftReport","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from_config","from_ref","from_ref","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lift_reports","max_num_quarantine_records","max_quarantine","peer_info","quarantine_duration","quarantine_whitelist","record_new_gossip","report_duration","report_grace","report_node","report_records","report_time","report_whitelist","reported_nodes","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BLOCKS","MESSAGES","CYCLON_VIEW_SIZE","CustomLayerBuilder","GOSSIP_SIZE","LOCAL_ADDR","P2pTopology","RINGS_VIEW_SIZE","VICINITY_VIEW_SIZE","View","__private_field","accept_gossips","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_for_gossip","build_for_view","build_layers","config","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from","init","init","init","init","initiate_gossips","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","lift_reports","list_available","list_non_public","list_quarantined","new","peer_available_cnt","peers","promote_node","quarantine","report_node","secret_key_into_keynesis","self_node","stats_counter","topology","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_gossip","view","vzip","vzip","vzip","vzip","async_msg","fire_forget_scheduler","task","MessageBox","MessageQueue","SendError","TrySendError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_send_error","into_streaming_request","into_streaming_request","is_disconnected","is_disconnected","is_full","is_full","kind","poll_close","poll_discover","poll_flush","poll_next","poll_ready","poll_ready","size_hint","start_send","start_send","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","try_send","type_id","type_id","type_id","type_id","val","vzip","vzip","vzip","vzip","Command","CommandQueueClosed","CommandSend","DeclareCompleted","Error","FireForgetScheduler","FireForgetSchedulerConfig","FireForgetSchedulerFuture","RunningTask","Schedule","ScheduledTask","TimedOutTask","Timer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command_channel_size","command_receiver","command_sender","data","declare_completed","declare_completed","declare_timed_out","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_completed","is_completed","is_running_same_task","is_scheduled","is_timed_out","launch","launcher","max_running","max_running_same_task","max_running_same_task","new","poll","pop_next_runnable_task","running","schedule","schedule","scheduled","scheduler","sender","source","task_run_count","tid","tid","tid","timeout","timeout","timeout_key","timeouts","to_owned","to_running","to_string","to_timed_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_run_scheduled","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wid","wid","wid","task","task","Cancelled","Input","Input","Panic","Service","Service","ServiceError","Services","Shutdown","TaskMessageBox","TokioServiceInfo","block_on_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","finish_listener","fmt","fmt","from","from","from","from","from","from","from_ref","handle","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","name","name","name","name","new","new","run_periodic","run_periodic_fallible","runtime","runtime_handle","send_to","services","source","span","span","spawn","spawn_fallible","spawn_future","spawn_try_future","timeout_spawn","timeout_spawn_fallible","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","up_time","up_time","up_time","up_time","vzip","vzip","vzip","vzip","vzip","vzip","wait_any_finished","Message","MessageProcessor","RequestMsg","SubscriptionStream","SubscriptionTryStream","SyncMultiverse","WatchClient","block_sender","block_sender","block_subscription","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","f","from","from","from","from_ref","handle_sync_multiverse","init","init","init","inner","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_server","new","request_tx","requests","start","storage","stream","sync_multiverse","tip_receiver","tip_sender","tip_subscription","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","from","handle"],"q":[[0,"jormungandr"],[101,"jormungandr::blockcfg"],[1183,"jormungandr::blockcfg::config"],[1361,"jormungandr::blockcfg::config::RewardParams"],[1369,"jormungandr::blockchain"],[1467,"jormungandr::blockchain::PreCheckedHeader"],[1472,"jormungandr::blockchain::bootstrap"],[1499,"jormungandr::blockchain::branch"],[1522,"jormungandr::blockchain::candidate"],[1574,"jormungandr::blockchain::candidate::chain_advance"],[1591,"jormungandr::blockchain::candidate::chain_landing"],[1611,"jormungandr::blockchain::chain"],[1890,"jormungandr::blockchain::chain::HeaderChainVerifyError"],[1894,"jormungandr::blockchain::chain::PreCheckedHeader"],[1899,"jormungandr::blockchain::chain_selection"],[1932,"jormungandr::blockchain::checkpoints"],[1962,"jormungandr::blockchain::chunk_sizes"],[1963,"jormungandr::blockchain::multiverse"],[1989,"jormungandr::blockchain::process"],[2064,"jormungandr::blockchain::reference"],[2104,"jormungandr::blockchain::reference_cache"],[2127,"jormungandr::blockchain::storage"],[2235,"jormungandr::blockchain::tip"],[2292,"jormungandr::client"],[2327,"jormungandr::context"],[2441,"jormungandr::diagnostic"],[2506,"jormungandr::fragment"],[2584,"jormungandr::fragment::entry"],[2616,"jormungandr::fragment::logs"],[2642,"jormungandr::fragment::pool"],[2696,"jormungandr::fragment::pool::internal"],[2813,"jormungandr::fragment::process"],[2855,"jormungandr::fragment::selection"],[2965,"jormungandr::fragment::selection::SelectionOutput"],[2967,"jormungandr::intercom"],[3376,"jormungandr::intercom::NetworkMsg"],[3379,"jormungandr::intercom::TransactionMsg"],[3388,"jormungandr::jrpc"],[3441,"jormungandr::leadership"],[3473,"jormungandr::leadership::enclave"],[3522,"jormungandr::leadership::logs"],[3607,"jormungandr::leadership::logs::LeadershipLogStatus"],[3611,"jormungandr::leadership::logs::internal"],[3633,"jormungandr::leadership::process"],[3750,"jormungandr::leadership::process::LeadershipError"],[3752,"jormungandr::log"],[3755,"jormungandr::metrics"],[3823,"jormungandr::metrics::backends"],[3861,"jormungandr::metrics::backends::prometheus_exporter"],[3915,"jormungandr::metrics::backends::simple_counter"],[3983,"jormungandr::network"],[4228,"jormungandr::network::FetchBlockError"],[4229,"jormungandr::network::bootstrap"],[4264,"jormungandr::network::buffer_sizes"],[4266,"jormungandr::network::buffer_sizes::inbound"],[4269,"jormungandr::network::buffer_sizes::outbound"],[4271,"jormungandr::network::client"],[4390,"jormungandr::network::client::connect"],[4460,"jormungandr::network::client::connect::ConnectError"],[4462,"jormungandr::network::concurrency_limits"],[4464,"jormungandr::network::convert"],[4474,"jormungandr::network::grpc"],[4482,"jormungandr::network::grpc::client"],[4524,"jormungandr::network::grpc::client::FetchBlockError"],[4529,"jormungandr::network::grpc::server"],[4530,"jormungandr::network::keepalive_durations"],[4532,"jormungandr::network::p2p"],[4536,"jormungandr::network::p2p::comm"],[4863,"jormungandr::network::p2p::comm::peer_map"],[4981,"jormungandr::network::security_params"],[4982,"jormungandr::network::service"],[5029,"jormungandr::network::subscription"],[5175,"jormungandr::network::subscription::FragmentProcessorSendFragmentsState"],[5180,"jormungandr::rest"],[5207,"jormungandr::rest::prometheus"],[5208,"jormungandr::rest::v0"],[5212,"jormungandr::rest::v0::handlers"],[5257,"jormungandr::rest::v0::logic"],[5335,"jormungandr::rest::v1"],[5339,"jormungandr::rest::v1::handlers"],[5362,"jormungandr::rest::v1::logic"],[5409,"jormungandr::secure"],[5542,"jormungandr::secure::enclave"],[5607,"jormungandr::settings"],[5662,"jormungandr::settings::command_arguments"],[5787,"jormungandr::settings::logging"],[5923,"jormungandr::settings::logging::Error"],[5926,"jormungandr::settings::start"],[6156,"jormungandr::settings::start::config"],[6422,"jormungandr::settings::start::config::filter_level_opt_serde"],[6424,"jormungandr::settings::start::network"],[6609,"jormungandr::start_up"],[6634,"jormungandr::start_up::Error"],[6640,"jormungandr::start_up::error"],[6706,"jormungandr::start_up::error::Error"],[6712,"jormungandr::state"],[6729,"jormungandr::stuck_notifier"],[6730,"jormungandr::topology"],[6834,"jormungandr::topology::gossip"],[6921,"jormungandr::topology::layers"],[6951,"jormungandr::topology::layers::preferred_list"],[7000,"jormungandr::topology::layers::rings"],[7070,"jormungandr::topology::limits"],[7072,"jormungandr::topology::process"],[7118,"jormungandr::topology::quarantine"],[7213,"jormungandr::topology::topic"],[7215,"jormungandr::topology::topology"],[7305,"jormungandr::utils"],[7308,"jormungandr::utils::async_msg"],[7421,"jormungandr::utils::fire_forget_scheduler"],[7600,"jormungandr::utils::fire_forget_scheduler::Command"],[7602,"jormungandr::utils::task"],[7733,"jormungandr::watch_client"],[7804,"jormungandr::watch_client::RequestMsg"],[7806,"core::result"],[7807,"core::option"],[7808,"tracing::span"],[7809,"tokio_util::sync::cancellation_token"],[7810,"tonic::request"],[7811,"tonic::request"],[7812,"chain_impl_mockchain::account"],[7813,"chain_impl_mockchain::accounting::account"],[7814,"chain_impl_mockchain::vote::status"],[7815,"alloc::alloc"],[7816,"alloc::vec"],[7817,"chain_impl_mockchain::key"],[7818,"chain_impl_mockchain::multiverse"],[7819,"chain_impl_mockchain::ledger::ledger"],[7820,"chain_impl_mockchain::transaction::input"],[7821,"chain_impl_mockchain::transaction::witness"],[7822,"chain_impl_mockchain::certificate::delegation"],[7823,"chain_impl_mockchain::certificate::pool"],[7824,"chain_impl_mockchain::transaction::transaction"],[7825,"chain_impl_mockchain::certificate::pool"],[7826,"chain_impl_mockchain::certificate::update_proposal"],[7827,"chain_impl_mockchain::transaction::element"],[7828,"chain_impl_mockchain::certificate::update_vote"],[7829,"chain_impl_mockchain::certificate::vote_cast"],[7830,"chain_impl_mockchain::certificate::vote_plan"],[7831,"chain_impl_mockchain::certificate::vote_plan"],[7832,"chain_impl_mockchain::certificate::vote_tally"],[7833,"core::ops::function"],[7834,"core::cmp"],[7835,"chain_impl_mockchain::header::deconstruct"],[7836,"chain_impl_mockchain::leadership"],[7837,"chain_impl_mockchain::chaintypes"],[7838,"chain_impl_mockchain::stake::delegation"],[7839,"chain_ser::packer"],[7840,"chain_ser::deser"],[7841,"std::io"],[7842,"chain_impl_mockchain::stake::distribution"],[7843,"chain_time::era"],[7844,"chain_impl_mockchain::chaineval"],[7845,"core::fmt"],[7846,"core::fmt"],[7847,"chain_crypto::algorithms::ed25519"],[7848,"chain_crypto::key"],[7849,"jormungandr_lib::interfaces::config_params"],[7850,"jormungandr_lib::interfaces::block0_configuration::slots_duration"],[7851,"jormungandr_lib::interfaces::block0_configuration::leader_id"],[7852,"jormungandr_lib::interfaces::block0_configuration::fees_go_to"],[7853,"jormungandr_lib::interfaces::block0_configuration::kes_update_speed"],[7854,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch"],[7855,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient"],[7856,"jormungandr_lib::interfaces::blockdate"],[7857,"chain_time::era"],[7858,"chain_impl_mockchain::testing::ledger"],[7859,"chain_impl_mockchain::testing::arbitrary"],[7860,"jormungandr_lib::interfaces::value"],[7861,"chain_impl_mockchain::testing::arbitrary"],[7862,"chain_impl_mockchain::date"],[7863,"alloc::sync"],[7864,"core::num::nonzero"],[7865,"chain_impl_mockchain::key"],[7866,"core::marker"],[7867,"core::hash"],[7868,"chain_crypto::digest"],[7869,"core::hash"],[7870,"chain_impl_mockchain::header::builder"],[7871,"chain_impl_mockchain::header::builder"],[7872,"core::slice::iter"],[7873,"chain_impl_mockchain::ledger::iter"],[7874,"chain_impl_mockchain::certificate::mint_token"],[7875,"chain_impl_mockchain::header::builder"],[7876,"chain_impl_mockchain::header::deconstruct"],[7877,"chain_impl_mockchain::header::builder"],[7878,"chain_crypto::algorithms::sumed25519"],[7879,"core::time"],[7880,"core::error"],[7881,"chain_impl_mockchain::value"],[7882,"std::time"],[7883,"alloc::boxed"],[7884,"chain_impl_mockchain::ledger::token_distribution"],[7885,"chain_impl_mockchain::ledger::token_distribution"],[7886,"chain_addr"],[7887,"chain_impl_mockchain::transaction::transfer"],[7888,"chain_impl_mockchain::utxo"],[7889,"chain_impl_mockchain::leadership"],[7890,"rayon::iter::par_bridge"],[7891,"futures_core::stream"],[7892,"core::marker"],[7893,"core::task::poll"],[7894,"core::ops::function"],[7895,"chain_impl_mockchain::leadership"],[7896,"core::clone"],[7897,"std::time"],[7898,"core::convert"],[7899,"chain_storage::error"],[7900,"core::marker"],[7901,"jormungandr_lib::interfaces::stats"],[7902,"serde::ser"],[7903,"jormungandr_lib::interfaces::fragment"],[7904,"jormungandr_lib::interfaces::fragment_log"],[7905,"std::collections::hash::map"],[7906,"jormungandr_lib::interfaces::fragment_log"],[7907,"jormungandr_lib::interfaces::fragment_log"],[7908,"futures_channel::oneshot"],[7909,"core::cmp"],[7910,"core::pin"],[7911,"futures_util::future::future::shared"],[7912,"core::convert"],[7913,"core::fmt"],[7914,"jormungandr_lib::interfaces::leadership_log"],[7915,"jormungandr_lib::interfaces::leadership_log"],[7916,"chain_time::era"],[7917,"warp::reject"],[7918,"jormungandr_lib::interfaces::stats"],[7919,"trust_dns_resolver::async_resolver"],[7920,"trust_dns_resolver::error"],[7921,"poldercast::layer"],[7922,"core::net::ip_addr"],[7923,"tonic::transport::channel"],[7924,"chain_network::grpc::client"],[7925,"chain_network::data::block::subscription"],[7926,"chain_network::data::block::id"],[7927,"chain_network::data::p2p"],[7928,"chain_network::error"],[7929,"tonic::transport::error"],[7930,"chain_network::grpc::client"],[7931,"chain_network::grpc::watch::server"],[7932,"futures_util::lock::mutex"],[7933,"chain_network::data::block::header"],[7934,"chain_network::data::fragment::fragment"],[7935,"chain_network::data::block::id"],[7936,"chain_network::data::fragment::id"],[7937,"futures_util::stream::stream::map"],[7938,"chain_network::data::block::block"],[7939,"futures_core::stream"],[7940,"core::marker"],[7941,"chain_crypto::hash"],[7942,"chain_crypto::key"],[7943,"jormungandr_lib::interfaces::vote"],[7944,"jormungandr_lib::interfaces::peer_stats"],[7945,"jormungandr_lib::interfaces::rewards_info"],[7946,"jormungandr_lib::interfaces::settings"],[7947,"jormungandr_lib::interfaces::stake_distribution"],[7948,"jormungandr_lib::interfaces::stake_pool_stats"],[7949,"jormungandr_lib::interfaces::stats"],[7950,"jormungandr_lib::interfaces::updates"],[7951,"jormungandr_lib::interfaces::transaction_output"],[7952,"jormungandr_lib::interfaces::vote"],[7953,"jormungandr_lib::interfaces::vote"],[7954,"std::io::error"],[7955,"clap_builder::parser::matches::arg_matches"],[7956,"clap_builder"],[7957,"clap_builder::util::id"],[7958,"tracing_core::metadata"],[7959,"serde_json::error"],[7960,"jormungandr_lib::multiaddr"],[7961,"chain_crypto::bech32"],[7962,"keynesis::key::ed25519"],[7963,"jormungandr_lib::interfaces::config::node"],[7964,"poldercast::gossip"],[7965,"poldercast::gossip"],[7966,"poldercast::profile"],[7967,"poldercast::topic"],[7968,"poldercast::topic"],[7969,"poldercast::layer"],[7970,"jormungandr_lib::interfaces::config::node"],[7971,"poldercast::layer"],[7972,"keynesis::key::ed25519"],[7973,"tokio::time::error"],[7974,"tokio_util::time::delay_queue"],[7975,"tokio::runtime::runtime"],[7976,"tokio::runtime::handle"]],"d":["","","","","","","","","","","","","","","","","","","","","","Bootstrap phase","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","new module to prepare for the new leadership scheduling of …","","Main entrypoint for the <code>jormungandr</code> binary","","all the network related actions and processes","REST API of the node","","","","","","","","","","","","","","This module is responsible for discovering peers and …","","","","","","","","","","","","","","","","","","","","","","<code>Block</code> is an element of the blockchain it contains multiple …","","Seconds elapsed since 1-Jan-1970 (unix time)","","","","","Non unique identifier of the transaction position in the …","","","","","","","","","Block Contents","","","","","The epoch reward information.","","","","","All possible messages recordable in the content","","","","","","","","","","","Finalized BFT Header","Header Builder (finalize BFT part)","Finalized BFT Header","","This is the data extracted from a header related to …","Header description","Finalized Genesis-Praos Header","Header Builder (finalize Genesis-Praos part)","","","","","","","","","Leadership represent a given epoch and their associated …","Overall ledger structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Control what information will be extracted from the …","","","","","","","","","","","","Unspent transaction value.","","","","","","","Amount added to each account. structure can be empty.","","Add a state to the multiverse. Return a <code>Ref</code> object that …","","","Try to apply messages to a State, and return the new State …","Try to apply a message to the State, and return the new …","","","","","","","","","Applies transaction to the account ledger by validating …","","","","","","","","","","","","","","","","","","","","","","","","","","Create a block from a block version, content and a header …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the consensus associated with the <code>Leadership</code>","","","","","","Date of the block.","","","","","Create a Block date given a leadership and a relative …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This need to be called before the <em>first</em> block of a new …","Total Drawn from reward escrow pot for this epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the epoch associated to the <code>Leadership</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the TimeEra associated to the <code>Leadership</code>","","","","Fees contributed into the pot this epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Once the state are old in the timeline, they are less and …","","","","","","Get the authenticated data of a BFT header being built","","","","","","","","","","","","access the ledger static parameters","","","","","","","","","","","","","","Identifier of the block, currently the hash of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a state to the multiverse. Return a Ref object that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tentatively transition to a BFT Header builder","Tentatively transition to a Genesis-Praos Header builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalized to an unsigned header","","Test that the given leader object is able to create a …","","","","","","","","","","","","Create a new Header builder starting from the full content.","","","","","","","recommended to use new(), this is only for test","Get the slot following this one.","","","","","Return the number of states stored in memory.","","","Params used","Id of the parent block.","","","","","","","","","set multiple messages in the block to build","","","","","","","","","","","","","","","","","","","","Set the date of this block","Set the header as a genesis header:","Set the header as a general block, with a specific depth …","Set the signature in the BFT header and return the …","Set the signature in the Genesis-Praos header and return a …","","","","","","","","","Just a helper to set the signature directly from what the …","","","","","","","","Divide a value by n equals parts, with a potential …","","Amount added to each pool id. structure can be empty.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value added to the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify whether this header has been produced by a leader …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Seconds elapsed since 1-Jan-1970 (unix time)","","","","","","","","","","","","","","","Possible errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","result when the given header is already present in the …","","","","","","","","","","","","blockchain object, can be safely shared across multiple …","","","the data that is contained in a branch","","","","list of pre-computed checkpoints from a given <code>Ref</code>.","","","","","","The parent’s is already present in the local storage and …","","","","","","the parent is missing from the local storage","","","","","","","","","a reference to a block in the blockchain","","","","","","","","","","","","","","","","","","","","","","","chose which of the two Ref is the most interesting to keep …","the leadership used to validate the current header’s …","If present, this is the rewards info distributed at the …","","","keep the Block header in memory, this will avoid retrieving","","","","Reference holder for the object in the <code>Multiverse&lt;Ledger&gt;</code>.","","","","","","holder to the previous epoch state or more precisely the …","","","","","reference to the block where the branch points to","","","","","","","","","","","","the time frame applicable in the current branch of the …","","","the cached reference if it was already cached.","return the Header so we can avoid doing clone of the data …","return back the Header so we can avoid doing a clone of …","return back the Header so we can avoid doing a clone of …","return the locally stored parent’s Ref. Already cached …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","the data that is contained in a branch","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","create the branch data with the current <code>last_updated</code> to …","reference to the block where the branch points to","","","","","","","","","","","","","","Consumes headers from the stream, filtering out those that …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Reads the stream and skips blocks that are already present …","","","","","","","result when the given header is already present in the …","","","","","","","","","blockchain object, can be safely shared across multiple …","","","","","","Contains the error value","","","","The parent’s is already present in the local storage and …","","","","","the parent is missing from the local storage","","","","","Contains the success value","","","","","","","","","","","","Apply the block on the blockchain from a post checked …","Apply the block generated by this node. This should …","Apply the given block0 in the blockchain (updating the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create and store a reference of this leader to the new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","get <code>Ref</code> of the given header hash","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","function to do the initial application of the block0 in …","returns a future that will propagate the initial states …","load the header’s parent <code>Ref</code>.","","","","","","","check the header cryptographic properties and leadership’…","load the header’s parent and perform some simple …","Performs lightweight sanity checks on information fields …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the cached reference if it was already cached.","return the Header so we can avoid doing clone of the data …","return back the Header so we can avoid doing a clone of …","return back the Header so we can avoid doing a clone of …","return the locally stored parent’s Ref. Already cached …","","","","","","","","","","chose which of the two Ref is the most interesting to keep …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","list of pre-computed checkpoints from a given <code>Ref</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","create a new list of checkpoints from the given starting …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","run the garbage collection of the multiverse","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The blockchain process is comprised mainly of two parts:","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a reference to a block in the blockchain","clone all active vote plans at this given state","retrieve the block date of the <code>Ref</code>","access the reference’s parent hash","","","retrieve the chain length, the number of blocks created …","","","","","","retrieve the time of the slot of the block. If the block …","","the leadership used to validate the current header’s …","access the rewards info that were distributed at the end …","If present, this is the rewards info distributed at the …","Returns the argument unchanged.","","retrieve the header hash of the <code>Ref</code>","access the <code>Header</code> of the block pointed by this <code>Ref</code>","keep the Block header in memory, this will avoid retrieving","","Calls <code>U::from(self)</code>.","","","","","Reference holder for the object in the <code>Multiverse&lt;Ledger&gt;</code>.","create a new <code>Ref</code>","holder to the previous epoch state or more precisely the …","get the chain_time’s <code>Slot</code>. This allows to compute an …","retrieve the time of the associated block.","get the time frame in application in the current branch of …","the time frame applicable in the current branch of the …","","","","","","object that store the <code>Ref</code> in a cache. Every time a <code>Ref</code> is …","","","","","","","","Returns the argument unchanged.","","return a future to get a <code>Ref</code> from the cache","","","return a future that will attempt to insert the given <code>Ref</code> …","Calls <code>U::from(self)</code>.","","","create a new <code>RefCache</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Stream a branch ending at <code>to</code> and starting from the ancestor","Like <code>send_branch</code>, but with a transformation function …","","","","","Return values:","","","","","","","","","","","","","","","","","","","","","","","Handles updates to the tip. Only one of this structs …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","process a new candidate block on top of the blockchain, …","this function will re-process the tip against the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","All possible messages recordable in the content","","","","","","","","","","","","","","","","","","","","the fee of the accumulated ancestor fragments does not …","the size of the accumulated ancestor fragments Does not …","","","","","","","","the fee of the accumulated descendant fragments does not …","the size of the accumulated descendant fragments Does not …","","","","","","","","","","","","","fee of the fragment, does not include the fee of …","","size of the fragment in the memory pool","","Returns the argument unchanged.","","The ID of a message is a hash of its serialization <em>without</em> …","","The ID of a fragment is a hash of its serialization <em>without</em>…","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","time when the entry was added to the pool","","","","","","","","","","the fee of the accumulated ancestor fragments does not …","the size of the accumulated ancestor fragments Does not …","","","","","the fee of the accumulated descendant fragments does not …","the size of the accumulated descendant fragments Does not …","","","fee of the fragment, does not include the fee of …","","","","size of the fragment in the memory pool","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","time when the entry was added to the pool","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns number of registered fragments","Returns true if fragment was registered","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Synchronizes the persistent log file contents and metadata …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns number of registered fragments. Setting <code>fail_fast</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Sets the persistent log to a file. The file must be opened …","","","","","","","","","","","","Queue with the possibility to remove elements from the …","","A wrapper around the pointer to the key of the queue …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns clones of registered fragments","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A untrusted block Header has been received from the …","","General Block Message for the block task","","The stream of headers for missing chain blocks has been …","Client messages, mainly requests from connected peers to …","","The error values passed via intercom messages.","","","","","","","","","","A trusted Block has been received from the leadership task","","","","A stream of untrusted blocks has been received from the …","Messages to the network task.","","","","","","Propagation requests for the network task.","","","","","","","","","","","","","","","","","","","Messages to the topology task","…","An adapter for outbound client streaming requests","","Messages to the notifier task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this stream into an infallible stream for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","represent the client side of an enclave. From there we …","","","leadership log handle. will allow to update the status of …","all leadership logs, allow for following up on the …","","","","","","","","","","TODO: we will need to remove this to instead query data to …","","","","","","","","","","","","","","","","","","represent the client side of an enclave. From there we …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","TODO: we will need to remove this to instead query data to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","create a new enclave structure. This will need to change …","ask the leader associated to the <code>LeaderEvent</code> to finalize …","ask the leader associated to the <code>LeaderEvent</code> to finalize …","ask the enclave to attempt computing some leadership …","","","","","","","","","","","","","leadership log handle. will allow to update the status of …","the status of a leadership log","all leadership logs, allow for following up on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","make a leadership event as finished.","","make a leadership event as triggered.","create a Leadership Logs. Logs will be removed once the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","all the different channels the network may need to talk to","","","","","","Global state shared between all network tasks.","","","","","","","","","","An IPv4 socket address.","An IPv6 socket address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the local (to the task) connection details","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries the trusted peers for a block identified with the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The global state shared between all connections","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Try to get sufficient peers to do a netboot from","the network global state","","","","","","","","","","","Infallible util function to obtain local IP addr","","","","","","","","","","","","","the timeout to wait for unbefore the connection replies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error type to signal that the connection was not …","","The future that drives P2P client to establish a …","Handle used to monitor the P2P client in process of …","","","","","","","","","","","","","","Initiates a client connection, returning a connection …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Checks if the client has connected and established …","","","","","","","","","","","","","","","","","","","Conversion from a chain-network byte container data type …","Conversion from an application data object to a …","","","","","","","","","","","","","","","","","The inbound subscription stream of block events.","","","","","The inbound subscription stream of fragments.","","","The inbound subscription stream of P2P gossip.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","At the logical level, every peer is identified by its …","An IPv4 socket address.","An IPv6 socket address.","This module is responsible for handling active peers and …","","","","","","","Handle used by the per-peer communication tasks to produce …","Options for Peers::add_connecting","","","Future for executing async address lookup for the given …","","","","Stream used as the outbound half of a subscription stream.","State of the communication streams that a single peer …","","","The collection of currently connected peer nodes.","","","","","","","Indicates whether this subscription belongs to a client or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a handle with the <code>Client</code> direction and an item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The to number of client connections that need to be removed","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block announcement to send once the subscription is …","Fragment to send once the subscription is established","Gossip to send once the subscription is established","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a stream to use as an outbound half of the …","","","returns <code>None</code> if the handshake process was not completed …","","","","returns <code>None</code> if the handshake process was not completed …","","returns <code>None</code> if the handshake process was not completed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates this handle with the subscription state from …","","","","","","","","","","","","","","","","","","","Peer authentication is checked during the handshake. For …","","","","","","","","","","","","","","","","","","","","","","for clearing the peer map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Inserts peer and returns associated metadata","","","","","","Returns metadata of most recent peer interaction with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles client ID authentication.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Ingests inbound subscription stream, the node_id refers to …","Possible states for FragmentProcessor::poll_send_fragments.","Fetch the address of the inbound peer from which the …","","","Future returned by trust-dns-resolver reverse lookup.","Executes a reverse DNS lookup query on the inbound peer …","Checks the inbound peer address and (if resolved to any) …","","Wait for the message box to have capacity to send at least …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conditionally filter gossip from non-public IP addresses","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends fragments to the fragments task.","","","","","Signals interaction with peer has occurred, this context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Convert rejections to actual HTTP errors","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Convert rejections to actual HTTP errors","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","hold the node’s bft secret setting","","the genesis praos setting","","Node Secret’s Public parts","Node Secret(s)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","display full version details (software version, source …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Set format of the log emitted. Can be “json” or “…","Set log messages minimum severity. If not configured …","Set where the log will be emitted. Can be “stdout”, “…","","","report all the rewards in the reward distribution history","display the sources version, allowing to check the source…","","","Initialize the storage and exit, useful to check that the …","","Enable the OTLP trace data exporter and set the collector…","","","","","","","","","","","","","","","","","","","","","set the genesis block hash (the hash of the block0) so we …","Path to the genesis block (the block0) of the blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","display full version details (software version, source …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","REST API listening address. If not configured anywhere, …","JRPC API listening address. If not configured anywhere, …","Specifies the address the node will listen to to receive …","load the command arguments from the command line args","Set format of the log emitted. Can be “json” or “…","Set log messages minimum severity. If not configured …","","Set where the log will be emitted. Can be “stdout”, “…","Set the node config (in YAML format) to use as general …","Enable the Prometheus metrics exporter.","The address to listen from and accept connection from. …","","report all the rewards in the reward distribution history","Set the secret node config (in YAML format).","display the sources version, allowing to check the source…","","Path to the blockchain pool storage directory","Initialize the storage and exit, useful to check that the …","Enable the OTLP trace data exporter and set the collector…","set a trusted peer in the multiformat format (e.g.: ‘…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the logger.","","Output of the logger.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Overall Settings for node","","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","maximum number of entries in the fragment logs","","If none provided, CORS responses won’t be cached","","","","","path to the persistent log of all incoming fragments","maximum number of entries in the mempool","Path to server private key file, must be PKCS8 with single …","","","","","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","","","","","","","","","","","","","Load the settings","","","","","","","","","","","","","","","","","","","","Start up connection configuration","","","Jörmungandr provides multiple additional layers to the …","","","","","","Configuration item for a trusted peer.","The peer’s routable host address and TCP port as a …","Whether to allow non-public IP addresses on the network. …","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If given, specifies the address of the DNS server to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","interval to start gossiping with new nodes, changing the …","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","settings for the different custom layers","","","","","The socket address to listen on, if different from the …","","the number of entries allowed in the leadership logs, …","If none provided, CORS responses won’t be cached","The number of times to retry bootstrapping from trusted …","Limit on the number of simultaneous client connections. If …","Limit on the number of simultaneous connections. If not …","This setting is not used and is left for backward …","setting of the mempool, fragment logs and related data","if no gossip has been received in the last interval, try …","the time interval with no blockchain updates after which …","File with the secret key used to advertise and …","","","setting for the policy","","Path to server private key file, must be PKCS8 with single …","","The public address to which other peers may connect to","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","the rendezvous points for the peer to connect to in order …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","contains addrs of nodes which we can accept fragments from","","","The network static configuration settings","The limit on the number of simultaneous P2P client …","The limit on the number of simultaneous P2P connections …","The default timeout for connections","","","","","represent a connection peer","","Protocol to use for a connection.","","Trusted peer with DNS address resolved.","","","","","Whether to allow non-public IP addresses in gossip","Whether to limit bootstrap to trusted peers (which …","","","","","","","","","","","","","","","","","","","","","","","the connection to connect to","connection to listen to and start accepting connection from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the listener configuration, if the options …","Local socket address to listen to, if different from …","","Maximum allowed number of client connections.","Maximum allowed number of peer connections.","","","","","","Network protocol to use for this connection.","Network protocol to use for this connection.","the protocol to utilise for the p2p network","","","","","","Whether to skip bootstrap, not recommended in normal …","","a timeout in case of inactivity or timout between request.","timeout of the connected peers. Will be set for when/if we …","the default value for the timeout for inactive connection","","","","","","","list of trusted addresses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to fetch the block0_id from the HTTP base URL …","","loading the block 0 is not as trivial as it seems, there …","prepare the block storage from the given settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Unique identifier of a node in the topology","object holding the P2pTopology of the Node","This represents a peer and its public key used for …","","","Forgive nodes we demoted after some time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","limits for the property::{Serialize/Deserialize} …","","","","","","","","","","","A report will be lifted after ‘report_duration’","To avoid cycling down nodes back and and forth(and as such …","","","","","","","","","","","","","topics definition for p2p interest subscriptions","module defining the p2p topology management objects","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Check if the bind address is a global address Note: This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","This layer always return a view containing only a subset …","","","","","","","actual peers that are known to the topology","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the preferred peers list","","","a pseudo random number generator, this will help with …","","","","","","","","","","","","","","the max number of entries to add in the list of the view","","","","","","","","This layer is very similar to poldercast::Rings, but …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","the max number of entries to add in the list of the view","","","","","","","","","","","","","","","","","","","","limit the gossip size to 512 bytes (limit per gossip).","limit the ID size to 32 bytes. Right now the Node ID are …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","default number of records is 24_000","default max quarantine is 2 days","default quarantine duration is 10min","","","","","","Forgive nodes we demoted after some time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A report will be lifted after ‘report_duration’","To avoid cycling down nodes back and and forth(and as such …","Returns whether the node has been quarantined or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object holding the P2pTopology of the Node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This returns the peers known to the node which are not …","","","","","","register that we were able to establish an handshake with …","","register a strike against the given peer","","","","","","","","","","","","","","","","","update our gossip so that other nodes can see that we are …","Returns a list of neighbors selected in this turn to …","","","","","Multiple producer, single-consumer in-memory FIFO channels …","","Task management","The output end of an in-memory FIFO channel.","The input end of an in-memory FIFO channel. This can be …","The error type for <code>Sender</code>s used as <code>Sink</code>s.","The error type returned from <code>try_send</code>.","","","","","","","","","Constructs an in-memory channel and returns the output and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the message that was attempted to be sent but …","","","","","","","","","Drops the message and converts into a <code>SendError</code>.","","","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the channel …","Returns <code>true</code> if this error is a result of the channel …","","","","","","Polls the channel to determine if there is guaranteed to …","","","","Sends a message on the channel.","","","","","","","","","","","","","","","Sends a message over the channel.","","","","","","","","","","","","","","","","","Schedule for fire-forget tasks","","","","","","","","","","","","","","","","","","","","","","","","Size of command channel between <code>FireForgetScheduler</code> and …","","","","","Declares all tasks with given TID completed. Queued …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","How many tasks can be run in parallel","","How many tasks with the same TID can be run in prallel","Launcher controls how tasks will be started. It must be …","","","","","Schedules a task to be launched. If task with same TID and …","","","","","","","","","","Launched task timeout after which it’s considered failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input for the different task with input service","input for the task","","wrap up a service","","","hold onto the different services created","the service has been required to shutdown","","the current future service information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","get the name of this Service","get the name of this Service","this is the name of the service task, useful for logging …","","create a new set of services","","","","","Access the service’s handle","","","","Access the parent service span","","spawn a std::future within the service’s tokio handle","just like spawn but instead log an error on Result::Err","Spawn the given Future in a new dedicated runtime","Spawn the given Future in a new dedicated runtime","just like spawn but add a timeout","just like spawn_failable but add a timeout","","","","","","","","","","","","","","","","","","","","","get the time this service has been running since","get the time this service has been running since","provides us with information regarding the up time of the …","","","","","","","","select on all the started services. this function will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,2,1,1,2,12,0,0,2,12,2,12,0,0,2,12,1,2,12,1,1,0,0,2,12,1,2,12,1,2,12,1,0,2,12,1,0,2,12,1,2,12,1,0,2,12,0,0,2,12,1,2,2,12,12,1,1,0,0,0,0,0,0,0,0,2,1,0,2,12,1,0,0,0,0,1,0,0,2,12,1,2,12,1,2,12,1,0,2,12,1,0,56,56,0,533,134,59,0,0,0,0,56,0,0,56,0,0,89,0,0,0,56,0,56,0,0,56,60,0,0,56,33,33,56,0,0,69,69,60,0,533,134,59,0,0,0,0,0,0,0,0,0,0,0,0,0,33,56,60,0,0,0,0,0,56,89,33,0,69,92,92,92,92,92,134,33,69,33,56,56,33,33,56,33,56,56,56,56,56,56,56,0,56,0,56,33,33,56,56,56,59,33,33,0,0,33,33,33,19,19,29,19,25,28,29,19,19,35,19,19,19,19,19,19,19,19,19,19,19,19,19,19,8,56,57,34,58,30,59,60,19,28,61,28,59,28,59,19,97,74,74,0,59,59,59,35,31,35,59,59,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,28,19,8,59,59,19,31,19,28,28,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,34,28,61,59,34,28,61,30,30,0,78,31,19,31,8,8,8,59,19,73,19,78,25,58,70,75,28,19,19,19,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,59,8,59,28,8,56,58,59,19,28,74,19,29,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,30,86,8,59,78,78,34,8,56,57,34,58,30,71,72,59,60,74,19,28,69,61,8,8,8,8,56,56,56,56,57,57,57,57,34,34,34,34,58,58,58,58,30,30,30,30,71,71,71,71,72,72,72,72,59,59,59,59,60,60,60,60,74,74,74,74,19,19,19,19,28,28,28,28,69,69,69,69,61,61,61,61,78,19,78,19,29,35,34,89,89,92,92,8,31,56,57,34,34,58,30,59,73,73,60,74,19,35,75,29,28,28,69,69,61,61,8,8,70,380,131,120,121,119,434,442,97,97,134,78,25,89,89,89,92,8,31,56,56,56,56,56,56,56,56,57,34,34,34,58,58,58,30,30,70,71,72,59,73,60,74,19,19,35,75,29,28,28,28,28,69,61,61,34,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,59,34,34,60,25,71,72,97,25,60,120,121,59,59,59,34,28,61,25,60,19,59,19,19,19,34,59,28,61,182,86,230,8,8,8,73,8,71,72,59,59,73,61,19,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,0,78,25,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,131,131,380,380,131,131,120,120,121,121,119,119,434,434,442,442,97,97,134,134,78,78,25,25,89,89,92,92,8,8,31,31,56,56,57,57,34,34,58,58,30,30,70,70,71,71,72,72,59,59,73,73,60,60,74,74,19,19,35,35,75,75,29,29,28,28,69,69,61,61,131,30,78,58,30,19,30,74,19,35,30,19,19,19,131,78,25,58,70,19,29,131,34,61,34,442,380,25,61,19,29,8,59,34,28,61,19,59,58,70,70,19,75,75,75,28,28,8,56,58,59,19,28,8,56,58,59,28,120,121,131,131,131,120,121,29,29,19,35,19,434,442,120,121,59,534,8,34,534,8,89,28,78,29,534,8,25,25,19,19,28,28,28,60,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,59,89,92,34,73,28,69,61,60,19,19,19,29,29,19,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,28,69,61,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,19,19,19,19,19,78,8,59,19,442,380,131,120,121,119,434,442,97,134,78,25,89,92,8,31,56,57,34,58,30,70,71,72,59,73,60,74,19,35,75,29,28,69,61,28,56,162,56,162,0,56,162,56,162,98,0,56,162,56,162,56,162,56,162,0,56,162,161,98,56,162,161,56,162,56,162,56,162,56,162,56,162,56,162,56,162,56,162,56,162,0,56,162,56,162,98,56,162,56,162,98,0,0,56,162,56,162,56,162,98,161,162,162,163,98,161,162,163,98,161,162,163,98,161,162,163,98,161,162,163,98,161,162,163,98,161,162,163,98,161,162,163,98,161,162,98,98,98,98,161,161,161,161,162,162,162,162,98,98,161,162,98,98,161,161,162,162,163,98,161,162,163,162,162,162,163,98,161,162,163,98,161,162,163,163,98,98,161,161,162,162,163,163,162,163,163,163,163,163,163,163,98,161,162,163,98,98,161,162,162,163,98,161,162,163,98,161,162,163,98,161,162,163,535,536,535,536,535,536,535,536,205,202,185,185,185,185,202,170,185,170,202,185,0,170,0,0,185,202,0,0,0,202,196,0,0,205,185,170,0,185,0,205,202,185,0,185,0,173,173,170,0,185,202,196,0,185,0,0,0,185,195,167,176,176,0,0,0,168,0,0,0,0,0,0,169,169,176,176,169,207,195,175,169,167,0,176,0,195,169,175,0,167,0,181,0,175,167,9,0,175,176,0,167,9,175,169,0,176,537,537,538,539,539,170,170,170,0,170,170,0,170,170,170,170,170,170,170,170,170,170,170,170,170,0,170,170,170,170,170,170,0,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,183,183,0,183,0,183,0,183,0,186,183,186,183,0,0,186,183,186,183,186,183,183,183,186,183,183,183,186,186,183,186,183,186,186,183,183,0,186,186,186,186,183,186,183,186,183,186,183,186,183,186,183,188,188,0,188,188,188,188,188,188,188,188,188,188,188,188,188,188,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,205,0,185,185,185,185,184,185,185,0,185,184,0,196,0,540,0,194,0,205,185,0,185,0,205,185,194,184,185,540,0,0,0,0,185,196,185,0,0,185,191,167,167,167,167,167,167,195,167,167,180,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,167,180,194,167,196,167,196,167,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,193,193,196,196,196,196,196,185,185,184,184,205,193,195,194,175,191,180,185,185,185,185,185,185,185,185,184,184,167,196,167,196,167,167,167,167,193,193,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,205,205,193,193,195,195,194,194,175,175,191,191,180,180,185,185,184,184,167,167,196,196,180,180,180,195,175,167,167,167,167,191,167,0,195,194,193,167,167,0,193,175,167,191,175,167,185,184,180,175,167,167,167,191,193,175,167,196,185,184,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,205,193,195,194,175,191,180,185,184,167,196,0,541,542,541,542,537,537,538,539,539,0,0,173,173,173,173,0,173,173,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,0,0,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,0,0,0,0,0,0,0,0,0,0,0,176,211,176,211,176,211,176,211,0,0,176,211,176,211,176,211,176,211,176,211,176,211,211,211,176,211,176,211,176,176,211,211,0,176,211,0,0,0,0,0,0,0,211,543,544,211,0,0,0,211,211,176,211,211,176,211,176,211,176,211,176,211,176,211,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,0,202,202,202,202,202,0,0,202,223,202,0,223,0,9,222,202,9,223,222,202,9,223,9,9,222,202,9,223,222,202,9,223,222,222,202,9,223,9,9,9,202,202,223,223,222,202,202,9,223,223,223,9,9,9,9,9,9,9,9,9,222,222,202,9,223,222,202,9,223,222,222,202,202,9,9,223,223,9,9,9,9,9,9,202,223,9,9,9,9,202,223,222,202,9,223,222,202,9,223,222,202,9,223,222,202,9,223,0,0,0,0,229,229,168,229,168,168,168,229,168,229,168,229,168,229,168,229,168,229,229,168,229,168,168,229,168,229,168,229,229,168,168,229,168,229,229,229,229,229,229,229,168,229,168,229,168,229,229,168,229,168,229,168,229,0,0,0,0,0,0,0,0,231,231,231,231,231,231,231,0,0,0,0,0,0,0,0,0,231,231,231,231,0,0,231,231,231,231,231,234,234,0,0,234,0,0,234,0,234,234,5,233,233,233,233,233,233,239,235,234,233,239,235,234,235,235,233,233,239,235,234,233,239,235,234,233,233,239,235,234,239,234,234,233,239,235,234,235,233,233,233,239,235,234,233,239,235,234,233,233,239,239,235,235,234,234,239,239,239,233,235,233,233,5,239,5,233,233,233,233,233,233,233,233,233,233,233,233,233,239,235,233,235,234,239,239,233,239,235,234,233,233,239,235,234,233,239,235,234,233,239,235,234,241,0,0,241,0,240,240,241,240,236,241,240,236,236,236,236,241,240,236,241,240,236,241,240,236,240,240,236,236,241,240,236,236,0,241,240,236,241,240,236,241,241,240,240,236,236,236,236,236,240,236,240,236,241,240,236,241,240,236,241,240,236,241,240,236,33,33,0,0,33,0,33,33,33,0,0,33,33,33,0,33,33,33,33,33,33,33,244,244,33,33,33,33,33,33,33,244,244,33,33,33,33,245,0,33,33,33,33,33,33,244,244,244,33,33,33,33,230,33,33,33,33,33,0,249,265,249,249,265,249,0,249,265,0,244,0,33,33,33,33,33,33,33,0,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,0,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,251,0,0,0,249,251,249,251,249,249,251,249,251,249,251,249,251,251,249,251,249,251,249,0,249,251,249,249,251,251,0,0,249,249,249,249,249,249,249,249,249,249,249,251,251,249,251,249,251,249,251,249,249,251,0,0,0,0,0,259,545,261,263,258,259,545,261,263,258,258,258,258,258,259,259,545,261,263,258,259,545,261,263,258,259,545,261,263,258,263,261,258,261,261,261,261,258,258,258,258,259,545,261,263,258,258,261,261,259,258,259,259,545,261,263,258,263,259,545,261,263,258,259,259,545,545,261,261,263,263,258,258,545,259,263,263,263,259,263,545,258,259,545,259,259,263,263,259,258,259,545,261,263,258,259,545,261,263,258,259,545,261,263,258,258,545,259,545,261,263,258,0,264,264,0,265,264,265,264,265,264,265,264,265,264,264,264,265,264,264,265,264,265,264,265,265,264,264,265,265,265,265,264,265,264,265,264,265,264,265,264,265,264,0,546,271,0,0,0,0,0,256,546,271,546,546,0,271,546,547,266,271,270,256,546,547,266,271,270,256,547,266,546,547,266,271,270,256,546,547,266,271,270,256,546,547,266,271,270,256,256,546,547,266,271,270,256,546,547,266,271,270,256,546,547,266,271,270,256,546,546,547,547,266,266,271,271,270,270,256,256,547,270,266,547,548,266,270,0,546,547,266,271,270,256,546,547,266,271,270,256,546,547,266,271,270,256,546,547,266,271,270,256,549,550,337,178,278,0,199,178,0,337,0,278,232,232,212,232,199,212,199,278,178,337,337,337,178,0,209,209,212,337,212,0,232,232,232,212,199,0,0,0,0,0,0,0,0,0,0,0,199,199,0,0,0,337,0,282,284,201,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,226,201,201,273,273,201,201,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,201,201,275,275,232,201,201,276,225,225,226,273,215,199,278,212,281,275,282,284,285,280,232,178,337,209,201,201,201,276,225,226,273,215,199,278,212,273,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,551,285,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,281,282,275,281,281,275,275,282,282,284,284,285,285,280,280,232,232,178,178,337,337,209,209,201,201,276,276,225,225,226,226,273,273,215,215,199,199,278,278,212,212,275,215,284,284,285,285,201,275,282,226,280,201,281,282,280,273,284,285,280,273,284,285,280,273,273,281,284,215,276,226,215,276,226,276,280,276,273,275,201,280,273,226,0,0,273,275,201,225,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,281,282,284,285,273,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,0,201,284,281,275,282,284,285,280,232,178,337,209,201,276,225,226,273,215,199,278,212,552,552,552,553,553,554,554,553,553,554,554,554,287,0,287,0,287,287,287,287,287,287,287,287,287,289,287,289,287,289,287,289,287,289,287,287,287,289,287,287,287,287,287,287,287,289,287,289,287,289,289,287,287,289,287,0,287,289,287,289,287,289,287,289,287,290,0,0,0,0,0,0,0,301,308,301,308,0,301,308,291,295,0,301,308,295,301,308,0,301,308,301,301,308,301,308,301,290,0,0,0,0,290,291,290,291,290,291,290,291,290,291,290,291,290,291,290,290,290,291,290,291,290,291,291,290,291,290,290,291,291,291,291,291,291,290,291,290,290,291,290,291,290,291,290,291,296,0,0,0,296,296,294,295,296,294,295,296,294,295,296,294,295,296,296,296,294,295,296,294,295,296,296,294,295,296,296,296,296,296,296,296,294,295,296,294,295,296,296,296,294,295,296,294,0,295,294,295,296,294,294,295,295,296,296,294,295,294,295,294,295,294,296,296,294,295,294,295,296,294,295,296,294,295,296,294,295,296,294,295,296,555,555,555,556,0,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,302,302,302,302,0,302,0,302,0,0,302,301,301,301,301,301,301,301,301,308,301,308,304,301,308,302,304,301,308,302,301,301,304,301,308,302,304,301,308,302,304,301,308,302,301,308,301,301,304,301,301,301,302,302,304,301,308,302,302,302,304,301,308,302,304,304,301,308,302,304,304,301,301,308,308,302,302,304,301,308,301,301,308,0,301,308,301,301,301,308,301,301,302,301,301,308,301,302,0,304,301,308,302,304,301,308,302,304,301,308,302,304,301,308,302,301,301,557,558,0,0,0,0,0,0,310,311,216,311,216,311,216,311,216,311,216,0,216,310,216,310,216,310,310,216,216,216,310,216,310,216,310,216,310,216,310,216,216,310,216,310,216,216,310,310,0,0,311,216,311,216,311,216,311,216,311,216,311,216,311,216,216,216,310,216,310,216,310,216,310,0,0,314,314,314,314,314,314,314,314,317,314,314,314,314,317,314,317,314,314,314,314,317,317,317,0,314,0,314,317,317,317,314,317,314,317,317,314,0,0,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,559,314,314,0,0,0,317,317,317,317,317,560,560,560,317,560,317,560,317,560,0,560,560,560,317,317,560,317,560,317,560,317,560,317,560,317,560,317,560,317,317,560,560,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,560,317,317,560,317,560,317,317,317,560,317,317,560,0,0,0,0,0,328,331,0,0,0,330,330,0,0,0,328,0,0,561,561,326,322,323,0,0,324,320,323,322,333,340,320,329,330,331,324,328,323,322,333,340,320,329,330,331,324,328,0,329,340,0,323,322,323,324,323,324,0,322,0,322,333,0,322,323,322,333,340,320,329,330,331,324,328,323,322,333,340,320,329,330,331,324,328,322,323,322,333,340,320,329,330,331,324,328,0,329,329,330,330,331,331,328,328,323,322,333,340,320,329,330,330,330,331,324,328,323,324,333,340,0,0,0,322,323,322,333,340,320,329,330,331,324,328,320,340,323,322,333,340,320,329,330,331,324,328,323,323,322,322,333,333,340,340,320,320,329,329,330,330,331,331,324,324,328,328,0,322,0,322,333,0,322,322,0,333,322,326,0,326,0,0,0,329,329,330,322,333,322,333,322,0,0,333,323,324,329,330,331,328,323,324,323,0,323,322,333,340,320,329,330,331,324,328,323,322,333,340,320,329,330,331,324,328,323,322,333,340,320,329,330,331,324,328,323,322,333,340,320,329,330,331,324,328,340,562,321,321,321,321,321,0,321,321,0,321,321,321,321,321,0,321,321,321,321,321,321,321,321,321,321,321,321,321,0,321,321,321,321,321,321,0,0,0,0,0,0,0,0,0,0,0,0,342,342,0,0,0,341,341,346,348,348,348,345,346,341,342,348,345,346,341,342,348,345,348,342,342,0,0,348,345,346,341,342,348,345,346,341,342,348,345,346,341,342,348,346,348,345,346,341,342,342,348,346,348,348,348,348,348,345,346,341,342,348,348,345,346,341,342,348,348,348,345,345,346,346,341,341,342,342,348,346,348,348,348,348,348,348,348,348,348,348,348,345,342,348,345,346,341,342,348,345,346,341,342,348,345,346,341,342,348,348,345,346,341,342,353,353,353,0,0,0,0,353,353,353,353,353,353,353,351,352,353,351,352,353,0,351,352,353,351,352,353,351,352,353,353,353,351,352,353,351,352,353,351,352,353,352,351,351,352,352,353,353,0,352,351,352,353,352,353,351,351,352,353,351,352,353,352,351,352,353,0,351,352,353,563,563,0,0,0,0,358,393,0,393,358,564,0,0,0,0,0,0,0,0,0,0,0,0,362,0,0,0,362,362,0,362,362,565,566,567,362,362,0,0,362,362,0,362,0,362,362,362,362,565,566,567,568,569,362,362,362,569,362,362,362,362,362,362,570,570,571,572,573,0,0,0,0,367,367,0,0,0,0,0,0,370,0,0,0,0,0,0,574,369,0,0,0,0,0,574,0,370,369,574,369,0,0,369,366,373,347,347,347,377,368,574,347,374,366,372,369,370,327,371,373,377,368,574,347,374,366,372,369,370,327,371,373,347,366,368,347,366,368,369,370,371,369,370,371,371,371,368,327,371,377,368,574,347,374,366,372,369,370,327,371,373,377,368,574,347,374,366,372,369,370,327,371,373,368,368,377,368,574,347,374,366,372,369,370,327,371,373,369,369,369,369,369,327,575,576,577,372,369,369,371,373,347,347,377,368,574,347,374,366,372,369,370,327,371,373,369,370,371,366,366,347,347,347,373,366,377,368,574,347,374,366,372,369,370,327,371,373,366,377,382,383,384,377,368,574,347,374,366,372,369,370,327,371,373,374,372,377,377,368,368,574,574,347,347,374,374,366,366,372,372,369,369,370,370,327,327,371,371,373,373,377,377,368,368,372,372,372,371,371,371,371,371,371,371,374,366,347,366,374,0,327,327,327,374,377,377,366,366,366,366,366,366,366,366,347,347,366,366,347,347,347,366,366,368,373,575,576,577,368,347,347,366,347,347,347,366,347,366,369,370,371,369,377,368,574,347,374,366,372,369,370,327,371,373,377,368,574,347,374,366,372,369,370,327,371,373,377,368,347,347,347,377,368,574,347,374,366,372,369,370,327,371,373,368,347,366,371,371,371,0,377,368,574,347,374,366,372,369,370,327,371,373,0,0,386,385,0,386,0,0,375,375,387,385,375,388,386,387,385,375,388,386,387,375,375,375,385,375,386,388,385,375,388,385,385,375,388,386,387,385,375,388,386,387,385,375,388,386,387,375,385,375,375,385,375,388,386,387,385,375,385,375,385,375,388,386,387,387,385,375,388,386,387,385,385,375,375,388,388,386,386,387,387,375,375,375,388,375,375,375,385,387,375,375,388,388,375,387,385,375,388,386,387,385,375,388,386,387,385,375,388,386,387,388,387,385,375,388,386,387,0,0,0,389,389,389,389,389,389,389,389,389,389,389,578,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,0,389,389,389,389,389,389,389,0,0,578,389,389,389,389,389,389,389,0,401,0,0,0,399,0,0,0,399,399,401,399,400,401,402,399,396,397,400,401,402,399,396,397,396,396,397,397,400,401,402,399,396,397,400,401,402,399,396,397,400,401,402,399,396,397,0,399,400,401,402,399,396,397,400,402,396,0,400,401,402,399,396,397,400,401,402,399,396,397,400,400,401,401,402,402,399,399,396,396,397,397,400,402,396,400,400,402,396,400,402,396,402,400,402,396,400,402,396,397,396,400,402,396,400,396,400,402,396,396,0,0,0,400,396,396,397,400,402,396,399,400,401,402,399,396,397,400,401,402,399,396,397,400,401,402,399,396,397,400,401,402,399,396,397,579,580,580,581,581,0,407,407,407,407,407,0,407,407,407,407,407,407,407,407,0,0,0,0,0,407,407,407,407,0,0,407,0,0,0,0,0,0,408,408,408,408,408,408,408,408,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,408,408,408,408,0,0,408,408,408,408,410,410,410,0,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,410,410,410,410,0,0,0,0,0,410,410,410,410,410,410,0,0,0,0,0,428,428,428,428,428,428,428,428,0,0,0,0,0,428,428,428,428,0,428,428,428,428,431,431,0,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,0,0,0,0,0,431,431,431,431,0,0,431,431,431,431,431,431,0,439,0,439,0,0,0,0,433,433,438,435,436,437,433,438,439,435,436,437,433,438,439,435,436,437,433,438,435,436,437,433,438,435,436,437,433,438,439,435,436,437,433,438,439,435,436,437,433,435,436,437,433,438,439,0,439,439,435,436,437,433,438,439,439,439,435,436,437,433,438,433,433,435,436,437,433,438,439,435,436,437,433,438,439,435,435,436,436,437,437,433,433,438,438,439,439,433,436,436,435,439,435,436,437,433,438,439,435,436,437,433,438,439,435,436,437,433,438,439,435,436,437,433,438,439,436,435,436,437,433,438,439,0,0,0,303,293,292,303,293,292,292,292,292,292,293,293,303,303,293,292,303,293,292,303,293,292,293,293,293,303,293,292,292,303,293,292,303,293,292,303,303,293,293,292,292,292,293,293,292,293,303,293,293,292,303,293,292,303,293,292,303,293,292,303,293,292,0,0,0,443,0,443,444,444,443,444,443,443,443,0,444,444,443,444,443,444,443,443,444,443,443,449,444,443,444,443,444,444,443,443,449,449,449,449,0,449,449,449,0,449,449,443,449,444,443,444,443,444,443,444,443,0,0,0,0,446,447,448,449,446,447,448,449,446,446,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,449,446,447,448,449,446,447,448,449,446,447,448,449,446,446,447,447,448,448,449,449,449,447,448,446,449,449,449,0,449,446,446,446,449,449,446,449,449,446,449,449,446,0,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,446,447,448,449,0,457,460,460,460,460,456,0,0,0,0,456,457,457,459,459,456,457,458,460,459,456,457,458,460,456,457,458,456,457,458,456,457,458,459,456,457,458,460,459,456,457,458,460,456,457,459,459,456,457,458,460,456,457,458,456,456,456,456,457,457,457,457,458,458,458,458,456,456,457,458,460,460,458,459,456,457,458,460,456,457,458,456,457,459,456,457,458,460,458,459,456,457,458,460,459,459,456,456,457,457,458,458,460,460,458,458,456,457,460,456,457,458,456,460,458,459,456,457,458,460,459,456,457,458,460,459,456,457,458,460,459,456,457,458,460,582,582,583,465,465,0,0,0,0,465,465,465,465,0,0,0,0,0,0,464,464,464,10,10,10,470,461,462,463,404,464,465,10,470,461,462,463,404,464,465,404,461,462,463,404,464,461,462,463,404,464,470,0,470,462,461,464,10,470,461,462,463,404,464,465,10,470,461,462,463,404,464,465,461,462,463,404,464,10,470,461,462,463,404,464,465,462,463,404,464,462,462,462,462,463,463,463,463,404,404,404,404,464,464,464,464,461,462,463,404,464,465,465,10,470,461,462,463,404,464,465,465,465,465,465,465,461,462,463,404,464,0,10,470,461,462,463,404,464,465,10,470,461,462,463,404,464,465,10,10,470,470,461,461,462,462,463,463,404,404,464,464,465,465,10,470,10,462,463,470,461,470,464,10,0,10,10,461,461,404,10,0,10,470,10,10,461,462,463,404,464,465,10,462,461,462,463,404,464,465,10,470,461,462,463,404,464,465,10,470,461,462,463,404,464,465,470,10,470,461,462,463,404,464,465,10,470,461,462,463,404,464,465,0,0,0,0,0,0,0,0,0,0,0,0,0,454,476,464,464,464,469,474,469,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,404,472,454,473,474,475,476,477,478,472,454,473,474,475,476,477,478,474,462,472,474,475,476,477,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,476,472,454,469,473,474,475,476,477,478,478,473,477,478,473,473,473,473,477,477,477,477,478,478,478,478,0,472,454,469,473,474,475,476,477,478,473,472,454,469,473,474,475,476,477,478,472,454,473,474,475,476,477,478,476,469,454,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,472,472,454,454,469,469,473,473,474,474,475,475,476,476,477,477,478,478,469,474,469,473,462,463,476,469,477,464,475,476,476,476,469,476,469,475,473,469,474,472,404,469,476,469,469,472,454,473,477,478,469,469,462,472,454,473,474,475,476,477,478,472,473,475,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,472,454,469,473,474,475,476,477,478,476,0,0,0,0,0,0,479,480,0,479,0,0,0,480,0,471,332,363,319,319,319,479,332,363,319,471,480,479,332,363,319,471,480,479,332,363,319,471,479,332,363,319,471,332,363,479,332,363,319,471,480,479,332,363,319,471,480,479,332,363,319,479,332,363,319,471,480,479,332,363,479,479,479,479,332,332,332,332,363,363,363,363,479,332,363,480,480,479,332,363,319,471,480,480,479,332,363,319,471,479,471,319,479,471,319,471,479,332,363,319,471,480,479,332,363,319,471,480,479,479,332,332,363,363,319,319,471,471,480,480,319,319,319,319,319,319,319,332,363,319,319,332,363,319,319,471,479,332,363,319,480,332,363,319,479,332,363,319,471,480,319,479,332,363,319,471,480,479,332,363,319,471,480,479,332,363,319,471,480,479,332,363,319,471,480,319,332,482,3,3,3,482,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,584,584,585,586,585,586,482,3,3,3,482,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,482,3,482,3,3,482,3,482,3,482,3,482,482,3,3,482,3,3,3,3,3,3,3,3,3,3,3,482,3,482,3,482,482,3,3,3,482,3,482,3,482,3,482,3,482,3,584,584,585,586,585,586,0,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,0,0,0,0,0,0,0,0,0,0,0,0,418,213,213,418,213,418,213,418,213,418,487,213,418,213,418,213,418,213,213,418,213,213,213,213,418,418,418,418,213,213,418,213,213,418,418,213,418,213,418,0,213,418,418,213,418,487,213,418,213,213,418,418,511,418,0,0,507,507,487,517,0,0,511,507,507,418,508,508,508,508,517,213,418,0,487,511,418,213,418,213,0,0,511,487,213,213,418,213,418,213,418,213,418,0,0,0,489,489,398,398,488,489,398,488,489,398,488,398,488,398,488,489,398,488,489,398,398,398,488,489,398,488,398,488,398,398,398,398,488,488,488,488,398,488,489,489,398,398,488,488,488,489,489,489,398,488,398,398,398,398,398,488,489,398,488,489,398,398,488,488,489,489,398,398,489,398,488,489,398,488,489,398,488,489,398,488,489,398,488,489,0,0,0,0,501,492,492,492,492,492,492,492,492,492,492,492,492,492,501,493,0,492,0,492,492,492,492,492,493,492,0,0,494,493,494,493,493,493,494,494,493,494,493,494,493,494,493,493,494,493,494,493,494,494,493,493,494,494,494,493,494,494,494,494,494,494,493,494,493,494,493,494,493,494,494,494,493,494,493,0,0,0,0,0,0,501,502,501,466,502,501,466,501,501,501,502,501,466,502,501,466,502,501,466,466,466,502,501,466,501,502,501,466,502,502,501,466,502,502,501,501,466,466,501,502,502,502,502,502,502,502,502,501,466,502,501,501,466,502,501,466,502,501,466,502,502,502,501,466,0,0,0,0,0,0,0,505,487,505,487,487,505,487,505,487,505,487,505,487,505,505,505,487,487,505,505,487,505,505,487,487,505,487,505,505,0,487,505,487,505,487,505,487,505,487,505,487,0,0,0,510,510,0,0,0,0,510,510,508,506,507,510,508,506,507,506,507,506,507,508,507,510,508,506,507,510,508,506,507,507,510,508,506,507,506,507,510,508,506,507,508,506,507,510,508,506,507,510,508,506,507,510,510,508,508,506,506,507,507,508,507,507,506,507,507,508,508,508,508,508,506,508,508,507,506,507,510,508,506,507,510,508,506,507,510,508,506,507,510,508,506,507,0,0,512,0,512,0,0,512,512,0,514,511,517,511,512,514,517,511,512,514,512,512,512,512,517,511,512,514,514,517,511,512,514,517,511,512,514,517,511,512,512,514,517,511,512,514,511,517,511,512,514,517,517,511,511,512,512,514,514,511,511,511,511,511,511,511,517,511,511,511,0,517,511,511,517,511,512,514,517,511,512,514,517,511,512,514,511,511,517,511,512,514,0,0,0,0,0,0,0,198,200,210,179,198,200,210,179,0,198,200,210,198,200,210,198,200,210,179,198,200,210,179,198,200,210,179,198,200,198,198,198,198,200,200,200,200,200,198,198,200,200,210,179,198,200,210,179,198,200,210,198,200,210,179,198,200,210,179,200,198,198,200,200,210,210,179,179,200,179,179,198,200,198,200,198,210,179,210,179,210,210,179,210,210,198,200,210,198,200,198,200,210,179,198,200,210,179,179,210,198,200,210,179,200,198,200,210,179,0,519,519,527,0,0,0,0,0,527,0,0,519,518,525,214,527,523,524,520,519,518,525,214,527,523,524,520,519,214,214,525,518,518,523,518,214,518,518,525,214,527,523,524,520,519,518,525,214,527,523,524,520,519,518,525,214,527,523,524,520,519,519,519,518,525,214,527,523,524,520,519,519,519,214,518,525,214,527,523,524,520,519,518,525,214,527,523,524,520,519,518,518,518,525,525,214,214,527,527,523,523,524,524,520,520,519,519,523,524,524,523,524,523,518,525,518,525,518,518,518,518,518,214,518,518,214,519,518,523,524,520,518,525,524,518,214,523,519,523,518,525,214,527,523,524,520,519,518,525,214,527,523,524,520,519,518,518,214,518,525,214,527,523,524,520,519,523,518,525,214,527,523,524,520,519,523,524,520,587,588,483,0,589,483,0,483,0,0,589,0,0,15,15,529,177,528,589,483,15,529,177,528,589,483,528,528,15,529,177,528,589,483,15,529,177,528,589,483,15,529,177,528,589,483,15,483,483,15,529,177,528,589,483,528,177,15,529,177,528,589,483,15,529,177,528,589,483,15,15,529,529,177,177,528,528,589,589,483,483,529,177,529,177,15,529,177,177,15,177,528,15,483,177,177,177,177,15,15,177,177,528,483,15,529,177,528,589,483,15,529,177,528,589,483,15,529,177,528,589,483,529,177,529,177,15,529,177,528,589,483,15,0,0,0,0,0,590,0,532,364,364,532,532,590,364,532,590,364,364,364,532,590,364,532,590,364,532,590,364,591,532,590,364,364,0,532,590,364,592,532,590,364,532,532,590,590,364,364,364,364,364,532,532,532,591,364,364,532,364,364,532,590,364,532,590,364,532,590,364,532,590,364,593,593],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[[6,[5]],7,8,9,10,11],[[4,[12,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],0,[13,14],[13,14],[13,14],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[[15,11],14],0,0,[[],[[4,[1,3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,[[],14],0,0,0,0,0,0,0,0,0,0,[[],[[4,[14,3]]]],[2,[[4,[14,3]]]],0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,[[21,[20,14]]]],0,0,[19,[[24,[22,23]]]],[[[25,[19]],26,19],[[27,[19]]]],[[28,28]],[[29,20,28],14],[[19,30,31],[[4,[19,32]]]],[[19,33,34],[[4,[19,32]]]],[[35,33],[[4,[35,32]]]],[[19,36,37,38],[[4,[19,32]]]],[[19,39],[[4,[19,32]]]],[[19,39,40,41],[[4,[19,32]]]],[[19,42,40,41],[[4,[19,32]]]],[[19,43,40,41],[[4,[19,32]]]],[19,[[4,[19,32]]]],[[19,44],[[4,[19,32]]]],[[19,26,[45,[-1]]],[[4,[[14,[19,28]],32]]],46],[[19,47],[[4,[19,32]]]],[[19,26,47,40,48,34],[[4,[19,32]]]],[[19,49,40,48],[[4,[19,32]]]],[[19,20,50],[[4,[19,32]]]],[[19,[45,[51]],34,51,52],[[4,[19,32]]]],[[19,53,40,54],[[4,[19,32]]]],[-1,8,55],[-1,56,55],[-1,57,55],[-1,34,55],[-1,58,55],[-1,30,55],[-1,59,55],[-1,60,55],[-1,19,55],[-1,28,55],[-1,61,55],[[]],[59,[[63,[62]]]],[28,64],[59,[[63,[62]]]],[[19,61,34],[[4,[35,32]]]],0,0,0,[[60,30,-1],[[4,[8,-2]]],65,[]],[59,26],[59,66],[59,34],[35,34],0,0,[59,26],[59,60],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,[[67,[62]]]],[19,68],[8],[59,61],[59],[19,61],0,0,[[28,28],[[4,[28,69]]]],[[28,28],[[4,[28,69]]]],[8,8],[31,31],[56,56],[57,57],[34,34],[58,58],[30,30],[70,70],[71,71],[72,72],[59,59],[73,73],[60,60],[74,74],[19,19],[35,35],[75,75],[29,29],[28,28],[69,69],[61,61],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[34,34],76],[[28,28],76],[[61,61],76],[59,77],[[-1,-2],76,[],[]],[[-1,-2],76,[],[]],[[-1,-2],76,[],[]],[30,26],[30,[[14,[26,66]]]],0,[78,79],0,[19,80],0,[8,30],0,[8],[59],[19,34],0,0,[[78,66],34],[[],[[25,[-1]]],[]],[[],58],[[],70],[[],75],[[],28],[19,81],0,[19,81],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[59,73],[[[82,[-1]]],[[4,[8,83]]],84],[[[82,[-1]]],[[4,[59,83]]],84],[[[82,[-1]]],[[4,[28,83]]],84],[[[82,[[63,[62]]]]],[[4,[-1,83]]],[]],[[[82,[[63,[62]]]]],[[4,[56,83]]]],[[[82,[[63,[62]]]]],[[4,[58,83]]]],[[[82,[[63,[62]]]]],[[4,[-1,83]]],[]],[[[82,[[63,[62]]]]],[[4,[19,83]]]],[[[82,[[63,[62]]]]],[[4,[-1,83]]],[]],0,[[19,85,75],[[4,[[14,[19,29]],32]]]],0,[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[],30],[86],[8],[59],[78,66],0,0,[[8,8],68],[[56,56],68],[[57,57],68],[[34,34],68],[[58,58],68],[[30,30],68],[[71,71],68],[[72,72],68],[[59,59],68],[[60,60],68],[[74,74],68],[[19,19],68],[[28,28],68],[[69,69],68],[[61,61],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[78,87],[19,87],0,0,0,[[35,88],19],[[],34],[[89,90],91],[[89,90],91],[[92,90],91],[[92,90],91],[[8,90],[[4,[14,93]]]],[[31,90],[[4,[14,93]]]],[[56,90],[[4,[14,93]]]],[[57,90],[[4,[14,93]]]],[[34,90],[[4,[14,93]]]],[[34,90],[[4,[14,93]]]],[[58,90],[[4,[14,93]]]],[[30,90],[[4,[14,93]]]],[[59,90],[[4,[14,93]]]],[[73,90],[[4,[14,93]]]],[[73,90],[[4,[14,93]]]],[[60,90],[[4,[14,93]]]],[[74,90],[[4,[14,93]]]],[[19,90],[[4,[14,93]]]],[[35,90],[[4,[14,93]]]],[[75,90],[[4,[14,93]]]],[[29,90],[[4,[14,93]]]],[[28,90],[[4,[14,93]]]],[[28,90],[[4,[14,93]]]],[[69,90],[[4,[14,93]]]],[[69,90],[[4,[14,93]]]],[[61,90],[[4,[14,93]]]],[[61,90],[[4,[14,93]]]],[8,[[0,[94]]]],[8],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[96,[95]]],97],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[92,89],[-1,-1,[]],[98,89],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[99,56],[100,56],[101,56],[102,56],[103,56],[-1,-1,[]],[104,56],[105,56],[-1,-1,[]],[106,34],[-1,-1,[]],[107,34],[-1,-1,[]],[108,58],[109,58],[-1,-1,[]],[70,30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[110,19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[111,28],[112,28],[-1,-1,[]],[113,28],[-1,-1,[]],[66,61],[-1,-1,[]],[[66,66],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[63,[62]]],[[4,[59,114]]]],[115,[[4,[-1]]],[]],[115,[[4,[34,116]]]],[62,[[6,[60]]]],[[[25,[-1]],66],14,[]],[71,59],[72,59],0,[[[25,[-1]],26],[[6,[[117,[-1,23]]]]],[]],[60,118],[[[120,[119]]],[[63,[62]]]],[[[121,[119]]],[[63,[62]]]],[59,[[6,[122]]]],[59,88],[59,31],[[-1,-2],64,[123,124],125],[[-1,-2],64,[123,124],125],[[-1,-2],64,[123,124],125],[[[25,[-1]],26],[[6,[[27,[-1]]]]],[]],[60,118],[19,85],[59,[[6,[[127,[126,39]]]]]],[19,74],[19,[[4,[28,32]]]],0,[[34,-1],14,128],[59,26],[[28,-1],14,128],[[61,-1],14,128],0,0,0,[8],[8,59],0,0,[8],[71,26],[72,26],[59,26],[59],0,[61,61],[[19,19],[[24,[129,23]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[8,[[4,[58,92]]]],0,[[[25,[-1]],61,26,-1],[[27,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[131,[130]]],[[6,[[120,[132]]]]]],[[[131,[130]]],[[6,[[121,[132]]]]]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[131,[130]]],[[6,[133]]]],[30,68],[[78,97,34],134],[58,[[135,[56]]]],[30,[[0,[94]]]],[19,136],[30,[[135,[33]]]],0,0,0,[30,13],[[19,137],[[4,[19,32]]]],[[19,137],[[4,[19,32]]]],0,[[60,30],[[131,[138]]]],[[66,19],78],[[],[[25,[-1]]],[]],[[],58],[[],70],[[26,-1],[[4,[19,32]]],139],[75,29],[[60,26,66],[[131,[138]]]],[[34,87],34],[61,61],[34,34],0,0,[[[25,[-1]]],13,[]],[[61,66],[[6,[61]]]],0,0,[8],[59],[[34,34],[[6,[76]]]],[[28,28],[[6,[76]]]],[[61,61],[[6,[76]]]],0,[59,140],[[58,56],14],[[70,33],14],[[70,-1],70,139],[19,28],0,[[],75],0,[[28,28],28],[[28,66],[[4,[28,69]]]],[[8,[82,[-1]]],[[4,[14,141]]],142],[[56,[82,[-1]]],[[4,[14,141]]],142],[[58,[82,[-1]]],[[4,[14,141]]],142],[[59,[82,[-1]]],[[4,[14,141]]],142],[[19,[82,[-1]]],[[4,[14,141]]],142],[[28,[82,[-1]]],[[4,[14,141]]],142],[8,13],[56,13],[58,13],[59,13],[28,13],[[[120,[132]],122],[[120,[119]]]],[[[121,[132]],[127,[126,39]],143],[[121,[119]]]],[[[131,[144]],34],[[131,[130]]]],[[[131,[138]]],[[131,[144]]]],[[[131,[138]],26,61],[[131,[144]]]],[[[120,[119]],145],72],[[[121,[119]],146],71],[[29,[127,[126,39]],28,28],14],[[29,28],14],[19,147],[35,147],0,0,0,[[[120,[132]],[96,[95]]],72],[[[121,[119]],[96,[148]]],71],[59,118],[-1,[[4,[149,89]]],[]],[8,[[4,[149,89]]]],0,[-1,[[4,[66,89]]],[]],[8,[[4,[66,89]]]],[89,[[6,[150]]]],[[28,66],151],[78,[[6,[85]]]],0,[-1,[[4,[152,89]]],[]],[8,[[4,[152,89]]]],0,0,0,[19,[[24,[129,23]]]],[[28,28]],[-1,28,94],[-1,[[4,[28,69]]],94],[60,[[6,[80]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,[[153,[[63,[62]],23]]]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[60,62],[19,[[154,[14]]]],[19,155],0,[29,28],0,[19,28],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[63,[62]]],[[4,[28,69]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[19,156],0,[[19,26,62],[[6,[[158,[157]]]]]],[19,[[159,[157]]]],0,[[78,59],160],[8],[59],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,161,55],[-1,162,55],[162,115],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[161,161],[162,162],[163,163],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[[98,98],68],[[161,161],68],[[162,162],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[98,90],[[4,[14,93]]]],[[98,90],[[4,[14,93]]]],[[161,90],[[4,[14,93]]]],[[162,90],[[4,[14,93]]]],[-1,-1,[]],[83,98],[-1,-1,[]],[164,161],[56,162],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[115,[[4,[-1]]],[]],[115,[[4,[162]]]],[165,[[6,[162]]]],0,[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[],163],[163,13],0,[163,6],[163,6],[[163,13],6],[-1,[[166,[-2]]],[],[]],[163,[[14,[13,[6,[13]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[115,[[4,[162]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,168,-1,11],[[4,[[6,[[117,[169]]]],170]]],[171,172]],0,0,0,0,0,0,0,[[9,169,169],173],0,0,0,0,0,0,0,0,0,0,0,0,[[174,[117,[169]],68],175],0,0,0,0,0,0,0,0,0,0,0,[[176,177,[179,[178]]],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,168,-1,11],[[4,[[6,[[117,[169]]]],170]]],[171,172]],[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[[170,90],91],[[170,90],91],[83,170],[-1,-1,[]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[180,14],[170,[[6,[150]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[181,181],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[-1,-1,[]],[181,[[117,[169]]]],[[],13],[-1,-2,[],[]],[181,[[117,[169]]]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[117,[169]]],181],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[167,[179,[59]]],[[4,[[14,[[24,[182]],[6,[[0,[171]]]]]],183]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[183,90],91],[[183,90],91],[-1,-1,[]],[184,183],[-1,-1,[]],[185,183],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[167,-1],[[4,[[6,[[186,[-1]]]],183]]],[171,172]],0,0,[[[186,[-1]],187],[[189,[[4,[188,183]]]]],[171,172]],[[[186,[-1]],59],[[4,[14,183]]],[171,172]],[183,[[6,[150]]]],0,[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],0,[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[190,[-1]]],[[4,[[6,[[14,[59,-1]]]],183]]],[171,172]],[[-1,167],[[4,[[190,[-1]],183]]],[171,172]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[191,[-1]],8],14,192],[[167,193,8],[[4,[194,185]]]],[[167,195],[[4,[194,185]]]],[[167,8],[[4,[181,185]]]],[[167,193,19],[[4,[14,185]]]],[[167,193,8],[[4,[19,185]]]],[[167,193,19],[[117,[169]]]],0,[167,182],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,[[4,[[24,[181]],185]]]],0,[194,[[117,[169]]]],[167,167],[196,196],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[167,182,59,19,[117,[197]],[117,[78]],[6,[[117,[29]]]],[6,[[117,[169]]]]],[[117,[169]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],0,0,[[196,196],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[185,90],91],[[185,90],91],[[184,90],91],[[184,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[198,185],[[[200,[199]]],185],[184,185],[201,185],[89,185],[-1,-1,[]],[202,185],[32,185],[203,184],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[167,[117,[169]]],[[4,[14,185]]]],[[167,181],204],[[167,182],[[4,[[6,[[117,[169]]]],185]]]],[[167,8,196],[[4,[[117,[169]],185]]]],[193,59],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,0,0,0,[[167,8],[[4,[168,185]]]],[[167,8],[[4,[168,185]]]],[[167,59,68],[[4,[205,185]]]],[-1,[[191,[-1]]],192],[[182,9,13,68],167],[[174,[117,[169]],68],175],0,[194,[[6,[[117,[169]]]]]],0,[[167,59,[117,[169]],196],[[4,[193,185]]]],[[167,59,68],[[4,[205,185]]]],[[59,59],[[4,[14,184]]]],0,0,0,0,0,0,[185,[[6,[150]]]],[184,[[6,[150]]]],0,0,[167,9],0,[[167,193,8,19],[[4,[194,185]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[174,182,29],[[206,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[66,9,169,169],68],[173,173],[[-1,-2],14,[],[]],[[9,169,169],173],[13,-1,[]],[13,-1,[]],[13,14],[[173,173],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[173,90],91],[-1,-1,[]],[-1,-1,[]],[[-1,-2],64,[123,124],125],[[173,-1],14,128],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[173,173],[[6,[76]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[204,[[63,[182]]]],[204,[[63,[182]]]],[-1,-2,[],[]],[-1,-2,[],[]],[204,204],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[[204,204],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[204,90],91],[-1,-1,[]],[-1,-1,[]],[[],13],[-1,-2,[],[]],[204],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[204,[[0,[94]]]],[[[117,[169]]],204],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[207,[-1]]],[[207,[-1]]],[]],[[-1,-2],14,[],[]],[[],[[207,[-1]]],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[-1,-1,[]],[[[207,[-1]],66],14,[]],[[[207,[-1]],182],[[6,[-1]]],208],[[[207,[-1]],182],[[6,[[27,[-1]]]]],[]],[[],13],0,[[[207,[-1]],61,182,-1],[[27,[-1]]],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[],[[207,[-1]]],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[183,201],[[167,[117,[169]],8,[210,[209]]],[[4,[[6,[[117,[169]]]],185]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],0,0,[-1,-1,[]],[-1,-1,[]],0,0,0,[[211,178],14],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[185,201],0,0,[[[117,[169]],[210,[[117,[169]]]],[210,[212]]],[[4,[14,185]]]],[[167,168,59,213,[214,[182,213,204]],[214,[182,213,14]]],[[4,[14,185]]]],[[167,[215,[59,14]],[214,[182,213,204]],[210,[212]]],14],[[167,[210,[[117,[169]]]],[210,[212]],[210,[209]],195],[[4,[14,185]]]],[[167,195],[[4,[[117,[169]],185]]]],[[167,8,[210,[209]],[214,[182,213,14]]],[[4,[[6,[[117,[169]]]],185]]]],[[167,[210,[[117,[169]]]],[210,[212]],[210,[209]],[214,[182,213,14]],[215,[8,14]],216],[[4,[14,185]]]],0,0,0,0,[[[210,[212]],177],[[214,[182,213,14]]]],[[[210,[212]],177],[[214,[182,213,204]]]],[[176,177,[179,[178]]],14],[[211,[179,[178]],[179,[[117,[169]]]]],14],[[211,177],14],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[169,[[24,[22]]]],[169,34],[169,182],[-1,-2,[],[]],[-1,-2,[],[]],[169,61],[169,169],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[169,[[4,[149,217]]]],[169,[[117,[78]]]],0,[169,[[6,[[117,[29]]]]]],0,[-1,-1,[]],[-1,-1,[]],[169,182],[169,59],0,[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[169,[[6,[[117,[169]]]]]],[169,[[117,[19]]]],0,[[[27,[19]],[117,[197]],[117,[78]],[6,[[117,[29]]]],59,[6,[[117,[169]]]]],169],0,[169,218],[169,152],[169,[[117,[197]]]],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[219,219],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[-1,-1,[]],[[219,182],[[6,[[117,[169]]]]]],[[],13],0,[[219,182,[117,[169]]],14],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[13,219],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,182],[[4,[68,202]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],0,[13,14],[13,14],[13,14],[13,14],[[-1,7],[[4,[9,202]]],[[221,[220]]]],[[9,[24,[182]],182],[[4,[[6,[222]],202]]]],[[9,182,182],[[4,[182,202]]]],[[202,90],91],[[202,90],91],[[223,90],91],[[223,90],91],[-1,-1,[]],[-1,-1,[]],[224,202],[-1,-1,[]],[-1,-1,[]],[202,223],[225,223],[-1,-1,[]],[[9,66,[63,[62]]],[[4,[14,202]]]],[[9,182],[[4,[[6,[8]],202]]]],[[9,66],[[4,[[24,[8]],202]]]],[9,[[4,[[24,[182]],202]]]],[[9,182],[[6,[66]]]],[[9,182,66],[[4,[[6,[8]],202]]]],[[9,182],[[4,[[6,[182]],202]]]],[[9,115],[[4,[[6,[182]],202]]]],0,[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[9,182,182],68],[7,[[4,[9,202]]]],[[9,8],[[4,[14,202]]]],[[9,115,182],[[4,[14,202]]]],[[9,182,[6,[66]],[226,[8]]],[[4,[14,225]]]],[[9,182,[6,[66]],[226,[-1]],-2],[[4,[14,225]]],227,[228,227]],[202,[[6,[150]]]],[223,[[6,[150]]]],0,0,[[9,182,182],[[4,[[0,[171]],202]]]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,181],0,[229,229],[168,168],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[168,[[117,[169]]]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[168,167,[6,[[210,[199]]]],[6,[[210,[209]]]],216],229],[181,168],[[229,[117,[169]]],[[4,[14,185]]]],[[167,[117,[169]],[210,[[117,[169]]]]],[[4,[14,185]]]],[[229,[179,[[117,[169]]]]],14],0,[[229,[117,[169]],182],[[4,[14,185]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[229,[24,[230]],59],[[4,[14,[200,[199]]]]]],[-1,18,[]],[-1,18,[]],[[229,[117,[169]],8],[[4,[14,185]]]],[[168,[117,[169]]],14],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[[-1,[226,[-2]]],[[4,[14,225]]],139,[]],[[9,182],[[4,[8,201]]]],[168,59],[[9,[24,[182]],[226,[8]]],[[4,[14,225]]]],[[9,[24,[182]],[226,[59]]],[[4,[14,225]]]],[[9,[24,[182]],182,[226,[59]]],[[4,[14,225]]]],[[177,231,232],14],[[9,[24,[182]],182,[226,[8]]],[[4,[14,225]]]],[[9,168,[24,[182]],[226,[8]]],[[4,[14,225]]]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[9,[24,[182]],182,-1,[226,[-2]]],[[4,[14,225]]],[228,227],227],[[177,231,[179,[232]]],14],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[233,[[4,[167,234]]]],0,[233,[[4,[168,234]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[235,235],[[-1,-2],14,[],[]],[[],233],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],0,[13,14],[13,14],[13,14],[13,14],0,[[234,90],91],[[234,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[233,[[4,[236,234]]]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[[],233],[[[237,[14]]],235],[233,238],0,0,0,0,[233,14],[233,[[4,[235,234]]]],0,[[233,167],14],[[233,168],14],[[233,11],14],[[233,236],14],[[233,239],14],[[233,238],14],[[233,235],14],[[233,7],14],[233,[[4,[7,234]]]],0,0,[235,14],[233,14],[-1,-2,[],[]],[-1,129,[]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[233,[[4,[239,234]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[236,236],[[-1,-2],14,[],[]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[[240,90],91],[[240,90],91],[[236,90],[[4,[14,93]]]],[[236,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[241,[[4,[64,240]]]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[],[[4,[236,240]]]],0,[[236,-1],4,242],[240,[[6,[150]]]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,33,55],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],0,0,[[[82,[-1]]],[[4,[33,83]]],84],[[[82,[[63,[62]]]]],[[4,[-1,83]]],[]],[13,14],[33],0,0,[[33,33],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[33,90],[[4,[14,93]]]],0,0,0,[243,33],[-1,-1,[]],[-1,-1,[]],[33,26],0,[33],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,[82,[-1]]],[[4,[14,141]]],142],[33,13],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],0,0,[13,14],[244,28],0,[244,230],0,[244,13],0,[-1,-1,[]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[33,244],[244,152],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[244,[[4,[28,69]]]],[244,13],[244,[[4,[28,69]]]],[244,13],0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],0,[[245,-1],[[24,[68]]],139],[[245,230],68],[-1,-1,[]],[[],13],[[245,-1],13,139],[[245,246],68],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[245,[[0,[94]]]],[[245,-1],[[247,[230,246]]],139],[[245,230,248,106],14],[[245,-1,248,106],14,139],[13,245],[[245,106],14],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[249,14],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[249,33,230],[[4,[14,250]]]],[[251,90],91],[[251,90],91],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[249,252,[24,[33]],68],[[4,[253,251]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[33,68],[[[254,[-1]]],68,[]],[249,245],0,0,0,[[13,245,[210,[212]],[6,[255]],216],249],0,0,[[249,106],14],[[249,[24,[230]],248],14],[[249,35,256,[257,[14]],[257,[14]]],[[14,[30,35]]]],[[249,255],14],[251,[[6,[150]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[249,14],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[258,258],[[-1,-2],14,[],[]],[[258,258],76],[[-1,-2],76,[],[]],[[[259,[-1,-2]],-1],68,[260,123],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],0,[[[261,[-1]],[261,[-1]]],68,262],[[258,258],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],64,[123,124],125],[[[261,[-1]],-2],14,123,128],0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[263,-1],[[24,[[14,[33,230]]]]],139],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,[[[259,[-1,-2]]],13,[260,123],[]],[263,13],[263,13],0,[[],[[259,[-1,-2]]],[260,123],[]],[13,263],0,[[258,258],[[6,[76]]]],[[[259,[-1,-2]]],[[6,[[14,[-1,-2]]]]],[260,123],[]],0,[[[259,[-1,-2]],-1,-2],14,[260,123],[]],[[[259,[-1,-2]],-1],[[6,[-2]]],[260,123],[]],[[263,-1],14,139],[263,[[6,[[14,[33,230]]]]]],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[264,90],91],[[264,90],91],[-1,-1,[]],[251,264],[-1,-1,[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[[13,13,[210,[212]]],265],0,[264,[[6,[150]]]],[[265,177,216,[179,[199]],[6,[-1]]],[[4,[14,264]]],[[221,[220]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],266],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[256,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[[],266],0,[[-1,35,245,263,[257,[14]],[257,[14]]],[[268,[[153,[267]]]]],[]],[[266,35,245,263,[257,[14]],[257,[14]]],[[268,[[153,[267]]]]]],0,[[33,35,[269,[[257,[14]]]],[269,[[257,[14]]]],66],[[4,[270,271]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,201,[[272,[[153,[150]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,201,[[272,[[153,[150]]]]]],0,[[[273,[-1]]],[[273,[-1]]],[]],[[-1,-2],14,[],[]],[201,274],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[-1,201,[[272,[[153,[150]]]]]],[-1,201,[[272,[[153,[150]]]]]],[[[275,[-1]],90],91,[]],[[[275,[-1]],90],91,[]],[[232,90],91],[[201,90],91],[[201,90],91],[[[276,[-1]],90],91,277],[[225,90],91],[[225,90],91],[[[226,[-1]],90],91,277],[[[273,[-1]],90],91,277],[[[215,[-1,-2]],90],91,277,277],[[199,90],91],[[278,90],91],[[212,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[279,201],[-1,-1,[]],[202,201],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[275,[-1]]],[[4,[-1,201]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[275,[-1]]],225,[]],[[[215,[-1,-2]]],[[14,[[179,[-1]],[276,[-2]]]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,201,[[272,[[153,[150]]]]]],[[[275,[-1]]],68,[]],0,0,[[[280,[-1]],198,115],201,[]],[-1,201,[[272,[[153,[150]]]]]],[[[268,[[281,[-1]]]],187],[[189,[[4,[-1,201]]]]],[]],[[[268,[[282,[-1,-2]]]],187],189,[],[[283,[201]]]],[[[268,[[280,[-1]]]],187],[[189,[[4,[14,201]]]]],[]],[[[268,[[273,[-1]]]],187],[[189,[[4,[14]]]]],[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[268,[[280,[-1]]]],187],[[189,[[4,[14,201]]]]],[]],[[[268,[[273,[-1]]]],187],[[189,[[4,[14]]]]],[]],[[[268,[[284,[-1,-2]]]],187],[[189,[6]]],[],[[283,[201]]]],[[[268,[[285,[-1]]]],187],[[189,[[6,[-1]]]]],[]],[[[268,[[280,[-1]]]],187],[[189,[[4,[14,201]]]]],[]],[[[268,[[273,[-1]]]],187],[[189,[[4,[14]]]]],[]],[[[273,[-1]],187],[[189,[[4,[14,225]]]]],[]],0,0,0,[[[276,[-1]],[4,[-1,201]]],14,[]],[[[226,[-1]],[4,[[286,[[4,[-1,201]]]],201]]],14,[]],0,[[[276,[-1]],201],14,[]],[[[226,[-1]],201],14,[]],[[[276,[-1]],-1],14,[]],0,0,0,[[[275,[-1]]],[[6,[150]]],[]],[201,[[6,[150]]]],[[[268,[[280,[-1]]]],-1],[[4,[14,201]]],[]],[[[268,[[273,[-1]]]],[4,[-1,201]]],[[4,[14]]],[]],[[[226,[-1]]],[[273,[-1]]],[]],[13,[[14,[[226,[-1]],[282,[-1,-2]]]]],[],[]],[13,[[14,[[215,[-1,-2]],[280,[-1]],[281,[-2]]]]],[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[268,[-1]],187],189,[]],[[[268,[-1]],187],189,[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[273,[-1]],[4,[-1,201]]],[[4,[14,[275,[-1]]]]],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[],[[14,[[276,[-1]],[281,[-1]]]]],[]],[-1,201,[[272,[129]]]],[[[284,[-1,201]]],[[285,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[287,90],91],[[287,90],91],[-1,-1,[]],[234,287],[202,287],[[[153,[[200,[199]]]]],287],[288,287],[201,287],[-1,-1,[]],[[[153,[32]]],287],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,[287,[[6,[150]]]],[[289,5],14],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[290,290],[291,291],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[290,90],91],[[290,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[292,291],[[291,[120,[119]]],[[4,[72,290]]]],[[291,[121,[119]]],[[4,[71,290]]]],[[291,[117,[78]],66,66],[[4,[293,290]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[294,294],[295,295],[296,296],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[296,296],76],[[-1,-2],76,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[296]]],297],[13,14],[13,14],[13,14],[[296,296],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[296,90],[[4,[14,93]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],64,[123,124],125],[[296,-1],14,128],[[],13],[[],13],[[],13],[[294,298],[[4,[295,14]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[294,[[24,[298]]]],0,[[294,299],14],[295,14],[[294,299],14],[295,14],[13,294],[[296,296],[[6,[76]]]],[[296,-1],4,242],[[294,299,296],14],[[295,296],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],0,[-1,-1,[]],[[],13],[[300,298],299],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[300,[[0,[94]]]],[[300,299],14],[[300,299],14],[13,300],[[300,299,296],14],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[301,[[4,[301,302]]]],[[301,303],[[4,[301,302]]]],[[301,304],[[4,[301,302]]]],[[301,304,[257,[14]],[257,[14]]],[[4,[14,302]]]],[[301,304,305,305],[[4,[301,302]]]],[[301,[117,[78]],66,66],[[4,[301,302]]]],[301,[[4,[301,302]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[301,[[4,[218,302]]]],[301,[[4,[107,302]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],0,0,[[301,306],[[4,[307,302]]]],[[301,306],[[4,[305,302]]]],0,[[301,303],305],[[301,303,66],305],[[301,303],305],[[302,90],91],[[302,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[201,302],[-1,-1,[]],[[[153,[32]]],302],[[],13],[[],13],[[],13],[[],13],[[304,301],[[6,[307]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,[308,[[4,[301,302]]]],0,0,[[[210,[199]],35,[257,[14]],[257,[14]]],[[4,[[14,[30,35]],302]]]],0,0,[301,[[4,[14,302]]]],0,0,0,[[301,306,309],[[6,[307]]]],[[301,306,309],305],[302,[[6,[150]]]],[301,[[4,[301,302]]]],0,0,0,[-1,129,[]],[[305,305],68],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[301,[[4,[301,302]]]],[301,[[4,[307,302]]]],0,0,0,0,0,0,0,0,[[310,[117,[311]]],310],[[-1,13],14,[]],[[216,13],14],[[-1,13],14,[]],[[216,13],14],[[-1,13],14,[]],[[216,13],14],[[-1,13],14,[]],[[216,13],14],[[-1,13],14,[]],[[216,13],14],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[310,216],[[],310],[216,216],[[-1,-2],14,[],[]],[[],310],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[-1,13],14,[]],[[216,13],14],[[-1,312],14,[]],[[216,312],14],[[-1,13],14,[]],[[216,13],14],[[-1,313],14,[]],[[216,313],14],[[-1,8,169],14,[]],[[216,8,169],14],[[-1,13],14,[]],[[216,13],14],[[-1,13],14,[]],[[216,13],14],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[314,13],14],[[314,13],14],[[314,13],14],[[314,13],14],[[314,13],14],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],314],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[314,[[4,[[0,[315]],316]]]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[[],314],0,0,0,0,0,[[314,13],14],[[314,312],14],[[314,13],14],[[314,313],14],[[314,8,169],14],0,[[314,13],14],[[314,13],14],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,0,[-1,18,[]],0,0,[-1,-2,[],[]],0,0,0,[[317,13],14],[[317,13],14],[[317,13],14],[[317,13],14],[[317,13],14],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[312,312],312],0,0,0,[[],317],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[-1,-1,[]],[-1,-1,[]],[317,318],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[],317],0,0,0,[[317,13],14],[[317,312],14],[[317,13],14],[[317,313],14],[[317,8,169],14],0,0,[[317,13],14],[[317,13],14],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,0,[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[319,167,168,11,7],[[4,[320,321]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[322,13],[323,323],[324,324],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,[[325,213,326,323,327],14],0,0,0,[322,14],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],0,[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[319,182],[[4,[8,328]]]],[[329,90],91],[[329,90],91],[[330,90],91],[[330,90],91],[[331,90],91],[[331,90],91],[[328,90],91],[[328,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[198,330],[201,330],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[[179,[212]],326,323],14],[[278,326,323],[[4,[14,330]]]],[322,14],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[319,7],324],[[182,319,216,7],[[4,[322,331]]]],[[326,332,7],333],[[[6,[325]]],[[4,[334,335]]]],[322,[[6,[325]]]],[322,13],0,[333,332],0,0,[[-1,336,-2,[210,[337]]],[[4,[[24,[338]],330]]],192,208],0,[[],339],0,0,0,[329,[[6,[150]]]],[330,[[6,[150]]]],[322,7],[333,7],0,0,[[322,-1],14,[267,227]],[340,14],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],[-1,129,[]],0,0,0,[319,[[24,[325]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[332,167,168,11],[[4,[14,321]]]],[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[[321,90],91],[[321,90],91],[-1,-1,[]],[[[153,[170]]],321],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[332,[[4,[[24,[338]],321]]]],[321,[[6,[150]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[341,-1],14,65],[[[189,[[4,[342,14]]]]],341],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[342,342],[[-1,-2],14,[],[]],0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[344,[343]],345,326,346,347],348],0,[[[268,[348]],187],[[189,[14]]]],[[348,187],[[189,[14]]]],[[348,187],[[189,[[4,[342,14]]]]]],[[348,187],[[189,[[4,[342,14]]]]]],[[348,187],[[189,[[4,[342,14]]]]]],[[348,349],14],[[348,349],[[4,[14,14]]]],0,[[348,350],14],[348,7],0,0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[348,350],[[4,[14,14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[333,323,213],[[14,[351,352]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[[353,90],91],[[353,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[182,182],[[4,[14,353]]]],[[[268,[352]],187],189],0,0,[353,[[6,[150]]]],0,[-1,129,[]],[351,[[4,[[6,[347]],279]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[268,[-1]],187],189,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[354,[63,[62]]],[[4,[213,353]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,[[4,[355]]],[]],[-1,[],[]],0,[-1,[[4,[-2,355]]],[[221,[[63,[62]]]]],356],[[[284,[-1,355]]],[[357,[[284,[-1,355]]]]],358],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[332,[[4,[[344,[343]],359]]]],[[332,360],[[4,[[344,[343]],359]]]],[13,-1,[]],[13,-1,[]],[325,361],[13,14],[[332,182],[[4,[8,362]]]],[[362,90],91],[[362,90],91],[-1,-1,[]],[[],13],0,0,0,0,0,[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,[362,[[6,[150]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,[[363,326,323,[365,[364]]],[[4,[14,329]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[366,213,367,351,327],14],0,0,[347,68],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[366,14],[[[368,[-1]]],14,[]],[347,14],[[366,367],[[6,[213]]]],[-1,[[368,[-1]]],[]],[369,369],[370,370],[371,371],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[371,152],0,[[],[[368,[-1]]],[]],[[],327],[[],371],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[[[368,[-1]]],370,[]],0,[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[369,369],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],0,0,0,0,[[[372,[-1]],90],91,277],[[369,90],91],[[369,90],91],[[371,90],91],[[373,90],91],0,[347,68],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[366,367],[[67,[62]]]],[[366,213],374],0,[347,68],[347,68],0,[366,[[24,[373]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[366,[[376,[375]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[[372,[-1]]],-1,[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[368,[-1]]],68,[]],[[[368,[-1]]],68,[]],0,[[[372,[-1]]],369,[]],0,[371,152],[371,[[6,[152]]]],0,[371,[[6,[152]]]],0,[371,[[6,[152]]]],0,0,0,[367,347],[[13,216],366],0,0,0,0,0,[[[268,[374]],187],189],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[268,[[377,[-1]]]],187],[[189,[[6,[-1]]]]],[]],[[366,213,378],[[4,[14,213]]]],[[366,213,379],[[4,[14,213]]]],[[366,213,380],[[4,[14,380]]]],[[366,213,-1],[[4,[14,213]]],192],[[366,213,350,381],14],[[366,213],68],[[366,213],68],[[366,213],68],[347,367],0,[[366,213],[[6,[347]]]],[[366,367,213,-1],[[4,[14,355]]],65],[[347,378],14],[[347,379],14],[[347,380],14],[[366,350],14],[[366,213,350],14],0,0,0,0,0,[[[368,[-1]]],[[377,[-1]]],[]],[347,[[377,[378]]]],[347,382],[[366,213],[[6,[382]]]],[347,[[377,[350]]]],[347,[[377,[349]]]],[347,383],[[366,213],[[6,[383]]]],[347,384],[[366,213],[[6,[384]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[368,[-1]],-1],[[4,[14,[372,[-1]]]]],[]],[[347,378],[[4,[14,[372,[378]]]]]],[[347,379],[[4,[14,[372,[379]]]]]],[[347,380],[[4,[14,[372,[380]]]]]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[[368,[-1]],[368,[-1]]],14,[]],[[347,347],14],[[366,213],14],[[371,152],14],[[371,152],14],[[371,152],14],[[[6,[152]],152],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[375,213,367],347],[[375,213,367,351],347],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[375,14],0,[[385,367],[[6,[213]]]],[[375,367],[[6,[213]]]],[386,347],0,[[385,367,213,-1],[[4,[14,355]]],65],[[375,367,213,-1],[[4,[14,355]]],65],0,[[],385],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[[375,213],[[6,[387]]]],0,[[375,13],14],[375,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[385,367],[[67,[62]]]],[[375,367],[[67,[62]]]],0,[375,[[24,[373]]]],[[],13],[[],13],[[],13],[[],13],[[],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[375,213,367],388],0,[[13,216],375],[367,388],[375,[[6,[[14,[213,347]]]]]],[[375,213],[[6,[347]]]],[[375,213],[[6,[371]]]],[[385,367],[[6,[213]]]],[387,14],[[375,213],[[6,[347]]]],[[375,213],[[6,[347]]]],[388,347],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[388,386],[387,386],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[389,6],[[389,390,[391,[378]]],[[268,[[153,[267]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[389,390,354],[[268,[[153,[267]]]]]],[389,389],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,14],0,[389,6],[[389,390,[391,[379]]],[[268,[[153,[267]]]]]],[-1,-1,[]],[-1,-1,[]],[[389,350],[[268,[[153,[267]]]]]],[[389,392],[[268,[[153,[267]]]]]],[[389,350],[[268,[[153,[267]]]]]],0,[389,6],[[389,390,[391,[380]]],[[268,[[153,[267]]]]]],[[389,390,[63,[62]]],[[268,[[153,[267]]]]]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[391,[-1]],280,-2],[[4,[14,355]]],393,267],[[323,326],389],[[389,367],[[4,[213,355]]]],[[389,66],[[268,[[153,[267]]]]]],[[389,350,381],[[268,[[153,[267]]]]]],[[389,350],[[268,[[153,[267]]]]]],[[389,350,381],[[268,[[153,[267]]]]]],[[389,[391,[378]]],[[268,[[153,[267]]]]]],[[[210,[-1]],-1],[[4,[14,355]]],[]],[[[6,[-1]]],[[4,[[394,[-1]],355]]],171],0,[389,[[268,[[153,[267]]]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[[389,[391,[395]]],[[268,[[153,[267]]]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[396,[[24,[33]]]],[397,68],[[],397],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[398,319],68],[[399,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[198,355],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,[400,[[210,[178]]]],[[[210,[178]],213,326],400],[[[210,[337]],213,326,401],402],[[[210,[199]],213,326],396],0,0,0,0,0,0,0,[[[268,[400]],187],[[189,[[4,[14,355]]]]]],[[[268,[402]],187],[[189,[[4,[14,355]]]]]],[[[268,[396]],187],[[189,[[4,[14,355]]]]]],[[397,187],[[189,[14]]]],[[396,187],[[189,[14]]]],[[[268,[400]],187],[[189,[[4,[14,355]]]]]],[[[268,[402]],187],[[189,[[4,[14,355]]]]]],[[[268,[396]],187],[[189,[[4,[14,355]]]]]],[[400,187],[[189,[[4,[14,355]]]]]],[[396,187],[[189,[[4,[14,355]]]]]],[[[268,[400]],187],[[189,[[4,[14,355]]]]]],[[[268,[402]],187],[[189,[[4,[14,355]]]]]],[[[268,[396]],187],[[189,[[4,[14,355]]]]]],[[396,187],[[189,[[4,[14,355]]]]]],[[-1,[210,[178]],213,326],14,403],[[-1,[210,[199]],213,326],14,403],[[-1,[210,[337]],213,326],14,403],[400,14],[396,14],0,[[397,-1],14,[267,227]],[[[268,[400]],378],[[4,[14,355]]]],[[[268,[402]],380],[[4,[14,355]]]],[[[268,[396]],379],[[4,[14,355]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[13,-1,[]],[13,-1,[]],[-1,129,150],[13,14],0,[-1,-1,[]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[-1,325,[6,[404]],-2],14,[405,208,227,406],[267,227]],[[-1,407,-2],14,[405,208,227,406],[267,227]],[[-1,407,5,-2],14,[405,208,227,406],[267,227]],[[407,5],14],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],0,0,[-1,-2,[],[]],[5,[[0,[405,208]]]],[5,[[0,[405,208]]]],[316,[[4,[[0,[315]],316]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[13,-1,[]],[13,-1,[]],[-1,[[4,[408]]],297],[13,14],[-1,-1,[]],[[129,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[[129,5],[[4,[[0,[315]],316]]]],[[129,408,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[[129,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[[66,5],[[4,[[0,[315]],316]]]],[[13,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[[66,5],[[4,[[0,[315]],316]]]],[[129,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[[129,62,5],[[4,[[0,[315]],316]]]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[409,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[[410,90],91],[[410,90],91],[69,410],[411,410],[-1,-1,[]],[[[200,[199]]],410],[198,410],[412,410],[413,410],[234,410],[414,410],[201,410],[202,410],[415,410],[[233,115],[[4,[[6,[416]],410]]]],[233,[[4,[[24,[417]],410]]]],[[233,115],[[4,[[6,[[24,[62]]]],410]]]],[[233,115,13],[[4,[[6,[[24,[62]]]],410]]]],[233,[[4,[[24,[129]],410]]]],[233,[[4,[236,410]]]],[233,[[4,[[24,[298]],410]]]],[233,[[4,[[24,[246]],410]]]],[233,[[4,[[24,[418]],410]]]],[233,[[4,[[24,[418]],410]]]],[233,[[4,[[24,[418]],410]]]],[233,[[4,[[24,[325]],410]]]],[[233,115],[[4,[[24,[325]],410]]]],[233,[[4,[[24,[419]],410]]]],[[233,66],[[4,[[6,[420]],410]]]],[[233,13],[[4,[[24,[420]],410]]]],[233,[[4,[112,410]]]],[233,[[4,[421,410]]]],[233,[[4,[[6,[422]],410]]]],[[233,66],[[4,[[6,[422]],410]]]],[[233,115],[[4,[[6,[423]],410]]]],[233,[[4,[[24,[129]],410]]]],[233,[[4,[424,410]]]],[233,[[4,[129,410]]]],[[[210,[337]],336],[[4,[[24,[325]],410]]]],[233,[[4,[[247,[425,426]],410]]]],[[233,115,62],[[4,[[6,[427]],410]]]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[115,[[4,[20,410]]]],[115,[[4,[26,410]]]],[115,[[4,[230,410]]]],[[233,[63,[62]]],[[4,[253,410]]]],[233,[[4,[14,410]]]],[410,[[6,[150]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[5,[[0,[405,208]]]],[316,[[4,[[0,[315]],316]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[428]]],297],[13,14],0,[-1,-1,[]],[[129,5],[[4,[[0,[315]],316]]]],[[429,129,5],[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[5,[[4,[[0,[315]],316]]]],[[428,5],[[4,[[0,[315]],316]]]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[430,5],[[4,[[0,[315]],316]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[[431,90],91],[[431,90],91],[413,431],[414,431],[[[200,[199]]],431],[-1,-1,[]],[412,431],[234,431],[201,431],[198,431],[202,431],[411,431],[69,431],[[233,129],[[4,[[6,[[24,[432]]]],431]]]],[[233,429,129],[[4,[[6,[[24,[62]]]],431]]]],[233,[[4,[[247,[129,[24,[432]]]],431]]]],[233,[[4,[[24,[246]],431]]]],[[233,-1],[[4,[[247,[129,248]],431]]],139],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[115,[[4,[20,431]]]],[[233,430],[[4,[253,431]]]],[431,[[6,[150]]]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[433,[[6,[434]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[435,435],[436,436],[437,437],[433,433],[438,438],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[435]]],297],[-1,[[4,[436]]],297],[-1,[[4,[437]]],297],[-1,[[4,[433]]],297],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],0,[[439,90],91],[[439,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[440,439],[441,439],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[433,[[6,[442]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[4,[433,439]]],[[221,[220]]]],0,0,0,[439,[[6,[150]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[292,292],[[-1,-2],14,[],[]],[[292,[120,[119]]],[[6,[72]]]],[[292,[121,[119]]],[[6,[71]]]],0,0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],0,[293,306],[293,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[[[117,[292]],[117,[78]],66,66],293],[[[6,[97]]],292],[293,[[6,[303]]]],0,[293,[[6,[303]]]],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[443,443],[[-1,-2],14,[],[]],0,[444,[[24,[115]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[443,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[445,445],[445,445],[445,445],[445,445],[445,445],[445,445],[445,445],[445,445],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],445],[[],445],[[],445],[[],445],[[],445],[[],445],[[],445],[[],445],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[[446,90],91],[[447,90],91],[[448,90],91],[[449,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[450,[[4,[446,451]]]],[450,[[4,[447,451]]]],[450,[[4,[448,451]]]],[450,[[4,[449,451]]]],[450,[[4,[446,451]]]],[450,[[4,[447,451]]]],[450,[[4,[448,451]]]],[450,[[4,[449,451]]]],0,[[],[[6,[452]]]],[[],[[6,[452]]]],[[],[[6,[452]]]],[[],[[6,[452]]]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,[[],449],0,0,[115,[[4,[453,129]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[115,[[4,[454,455]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[446,450],[[4,[14,451]]]],[[447,450],[[4,[14,451]]]],[[448,450],[[4,[14,451]]]],[[449,450],[[4,[14,451]]]],[[446,450],[[4,[14,451]]]],[[447,450],[[4,[14,451]]]],[[448,450],[[4,[14,451]]]],[[449,450],[[4,[14,451]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[456,456],[457,457],[458,458],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[],456],[[],457],[[],458],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[456]]],297],[-1,[[4,[457]]],297],[459,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[456,456],68],[[457,457],68],[[458,458],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[456,90],91],[[456,90],91],[[457,90],91],[[458,90],91],[[460,90],91],[[460,90],91],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[115,[[4,[456]]]],[115,[[4,[457]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[458,[[4,[459,460]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[[456,-1],4,242],[[457,-1],4,242],[460,[[6,[150]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[461,461],[462,462],[463,463],[404,404],[464,464],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,0,0,[[],461],[[],464],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[461]]],297],[-1,[[4,[462]]],297],[-1,[[4,[463]]],297],[-1,[[4,[404]]],297],[-1,[[4,[464]]],297],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[462,462],68],[[463,463],68],[[404,404],68],[[464,464],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[461,90],[[4,[14,93]]]],[[462,90],[[4,[14,93]]]],[[463,90],[[4,[14,93]]]],[[404,90],[[4,[14,93]]]],[[464,90],[[4,[14,93]]]],[[465,90],91],[[465,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[441,465],[466,465],[467,465],[440,465],[468,465],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[446,[6,[469]]],[[4,[319,465]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[470,[[6,[463]]]],0,0,0,[449,[[4,[470,465]]]],0,[470,458],0,0,0,0,0,0,0,0,0,[[[63,[454]]],[[24,[471]]]],0,[470,[[6,[462]]]],0,0,[[461,-1],4,242],[[462,-1],4,242],[[463,-1],4,242],[[404,-1],4,242],[[464,-1],4,242],[465,[[6,[150]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[470,[[4,[10,465]]]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[472,472],[454,454],[473,473],[474,474],[475,475],[476,476],[477,477],[478,478],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,[[],472],[[],474],[[],475],[[],476],[[],477],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[472]]],297],[-1,[[4,[454]]],297],[-1,[[4,[469]]],297],[-1,[[4,[473]]],297],[-1,[[4,[474]]],297],[-1,[[4,[475]]],297],[-1,[[4,[476]]],297],[-1,[[4,[477]]],297],[-1,[[4,[478]]],297],0,[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],0,[[473,473],68],[[477,477],68],[[478,478],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],0,[[472,90],[[4,[14,93]]]],[[454,90],[[4,[14,93]]]],[[469,90],91],[[473,90],91],[[474,90],91],[[475,90],91],[[476,90],91],[[477,90],91],[[478,90],91],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[472,-1],4,242],[[454,-1],4,242],[[473,-1],4,242],[[477,-1],4,242],[[478,-1],4,242],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[[6,[453]]]]],297],[[[6,[453]],-1],4,242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[332,325],[363,325],[319,[[6,[367]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[479,479],[332,332],[363,363],[319,319],[471,471],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[479]]],297],[-1,[[4,[332]]],297],[-1,[[4,[363]]],297],0,[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[479,479],68],[[332,332],68],[[363,363],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[479,90],91],[[332,90],91],[[363,90],91],[[480,90],91],[[480,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[467,480],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],64,[123,124],125],[[-1,-2],64,[123,124],125],0,[[479,-1],14,128],[[471,-1],14,128],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,[319,[[6,[363]]]],0,0,0,0,0,[325,332],[325,363],0,0,0,0,0,0,[454,[[4,[471,480]]]],[[479,-1],4,242],[[332,-1],4,242],[[363,-1],4,242],0,[480,[[6,[150]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[325,149],332],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[63,[129]],86],[[6,[8]]]],[[8,9,13,68],[[4,[[14,[167,168]],3]]]],[[10,9],[[4,[8,3]]]],[10,[[4,[9,3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,481],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[[482,90],91],[[482,90],91],[[3,90],91],[[3,90],91],[-1,-1,[]],[-1,-1,[]],[483,3],[240,3],[89,3],[328,3],[321,3],[202,3],[[[153,[185]]],3],[439,3],[460,3],[465,3],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[3,[[6,[150]]]],[-1,129,[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],484],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[],484],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[168,149],14],0,0,0,0,0,0,0,0,0,0,0,0,[213,485],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[213,213],[418,418],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[213],[[213,213],68],[[418,418],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[213,90],91],[[213,90],91],[[418,90],91],[486,213],[-1,-1,[]],[-1,-1,[]],[338,418],[-1,-1,[]],[-1,-1,[]],[[-1,-2],64,[123,124],125],[[-1,-2],64,[123,124],125],0,[[213,-1],14,128],[[418,-1],14,128],0,[[],13],[[],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[213,-1],4,242],[[418,-1],4,242],[487,14],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],0,0,0,0,[-1,[[4,[-2]]],[],[]],[[[63,[62]]],[[4,[213]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[398,367],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[398,398],[488,488],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[[[82,[-1]]],[[4,[398,83]]],84],[[[82,[[63,[62]]]]],[[4,[-1,83]]],[]],[13,14],[13,14],[13,14],[398],[488],[[398,398],68],[[488,488],68],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[398,90],91],[[488,90],91],[[489,90],91],[[489,90],91],[-1,-1,[]],[490,398],[[[24,[398]]],488],[-1,-1,[]],[[[24,[490]]],488],[83,489],[-1,-1,[]],[491,489],[-1,-1,[]],[-1,-1,[]],[[-1,-2],64,[123,124],125],[398,68],[[398,-1],14,128],[398,213],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[398,68],[[398,[82,[-1]]],[[4,[14,141]]],142],[489,[[6,[150]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[492,492],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,14],[-1,-1,[]],[-1,-1,[]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[493,493],[[-1,-2],14,[],[]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[494,115],[[493,495],494],0,0,[[494,496,496],14],0,[[494,485],14],[494,14],[[494,497],14],[[494,[499,[498,497]]],14],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[494,497],14],[[494,500],14],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[501,501],[[-1,-2],14,[],[]],[[],501],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[[466,90],91],[[466,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,[502,115],[[501,503],502],[[502,496,496],14],[[502,485],14],[502,14],0,[[502,497],14],[[502,[499,[498,497]]],14],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[504,[[4,[501]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[502,497],14],[[502,500],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[-1,-1,[]],[-1,-1,[]],0,[505,14],[[],13],[[],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,0,[[505,[24,[338]]],14],[487,14],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[506,506],[507,507],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[],508],[[],507],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[4,[507]]],297],[13,14],[13,14],[13,14],[13,14],[[506,90],91],[[507,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[507,508],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[508,[[24,[418]]]],0,0,0,0,0,[[508,213],14],0,0,[[508,509,338],510],0,0,0,[508,[[24,[418]]]],[[507,-1],4,242],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[511,488],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[512,[[24,[[153,[513]]]]]],[512,[[24,[[153,[513]]]]]],[[512,62,13,13],[[24,[[153,[513]]]]]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[514,325],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[492,512],[-1,-1,[]],[[],13],[[],13],[[],13],[[],13],[[511,213],488],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[511,[[24,[338]]]],[511,[[0,[94]]]],[511,[[0,[94]]]],[511,[[24,[418]]]],[[319,216],511],[511,13],0,[[511,213],14],0,[[511,213],14],[[[515,[95]]],516],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[511,14],[[511,336],517],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,[[14,[[210,[-1]],[179,[-1]]]]],[]],[198,198],[[[200,[-1]]],[[200,[-1]]],208],[[[210,[-1]]],[[210,[-1]]],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[[198,198],68],[[[200,[-1]],[200,[-1]]],68,[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],[[-1,-2],68,[],[]],0,[[198,90],[[4,[14,93]]]],[[198,90],[[4,[14,93]]]],[[[200,[-1]],90],[[4,[14,93]]],[]],[[[200,[-1]],90],[[4,[14,93]]],[]],[[[210,[-1]],90],91,277],[[[179,[-1]],90],91,277],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[200,[-1]]],-1,[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[200,[-1]]],198,[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[198,68],[[[200,[-1]]],68,[]],[198,68],[[[200,[-1]]],68,[]],0,[[[268,[[210,[-1]]]],187],[[189,[[4,[14,198]]]]],[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[268,[[210,[-1]]]],187],[[189,[[4,[14,198]]]]],[]],[[[268,[[179,[-1]]]],187],[[189,[[6,[-1]]]]],[]],[[[210,[-1]],187],[[189,[[4,[14,198]]]]],[]],[[[268,[[210,[-1]]]],187],[[189,[[4,[14,198]]]]],[]],[[[179,[-1]]],[[14,[13,[6,[13]]]]],[]],[[[268,[[210,[-1]]]],-1],[[4,[14,198]]],[]],[[[210,[-1]],-1],[[4,[14,198]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,129,[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[268,[-1]],187],[[189,[[6,[4]]]]],[]],[[[210,[-1]],-1],[[4,[14,[200,[-1]]]]],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[214,[-1,-2,-3]]],[[214,[-1,-2,-3]]],[],[],[]],[[-1,-2],14,[],[]],0,0,0,0,[[[518,[-1,-2,-3,-4]],-1],14,[208,262],[208,262],[],192],[[[214,[-1,-2,-3]],-1],[[4,[14,519]]],[],[],[]],[[[518,[-1,-2,-3,-4]],[520,[-1,-2]]],14,[208,262],[208,262],[],192],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[519,90],91],[[519,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[521,[-1]]],519,[]],[522,519],[-1,-1,[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[523,[-1,-2,-3]],-1],68,[208,262],[208,262],[]],[[[524,[-1,-2]],-1],68,262,262],[[[524,[-1,-2]],[523,[-1,-2,-3]]],68,262,262,[]],[[[523,[-1,-2,-3]],[523,[-1,-2,-3]]],68,[208,262],[208,262],[]],[[[524,[-1,-2]],[520,[-1,-2]]],68,262,262],[[[523,[-1,-2,-3]],-4],14,[208,262],[208,262],[],192],0,0,0,0,[[525,-1],[[518,[-2,-3,-4,-1]]],192,[208,262],[208,262],[]],[[[268,[[518,[-1,-2,-3,-4]]]],187],189,[208,262,172],[208,262,172],172,[192,172]],[[[518,[-1,-2,-3,-4]]],[[6,[[523,[-1,-2,-3]]]]],[208,262],[208,262],[],192],0,[[[518,[-1,-2,-3,-4]],[523,[-1,-2,-3]]],14,[208,262],[208,262],[],192],[[[214,[-1,-2,-3]],-1,-2,-3],[[4,[14,519]]],[],[],[]],0,[[[518,[-1,-2,-3,-4]]],[[214,[-1,-2,-3]]],[208,262],[208,262],[],192],0,[519,[[6,[150]]]],[[[518,[-1,-2,-3,-4]],[523,[-1,-2,-3]]],13,[208,262],[208,262],[],192],0,0,0,0,0,0,0,[-1,-2,[],[]],[[[523,[-1,-2,-3]],526],[[524,[-1,-2]]],[208,262],[208,262],[]],[-1,129,[]],[[[523,[-1,-2,-3]]],[[520,[-1,-2]]],[208,262],[208,262],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[268,[-1]],187],189,[]],[[[518,[-1,-2,-3,-4]]],14,[208,262],[208,262],[],192],[[[214,[-1,-2,-3]],[527,[-1,-2,-3]]],[[4,[14,519]]],[],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[[523,[-1,-2,-3]],[523,[-1,-2,-3]]],14,[208,262],[208,262],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,115,-1],-2,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[528,[-1]]],[[528,[-1]]],[]],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],0,[[483,90],91],[[483,90],91],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[529,115],[177,115],0,0,[530,15],[[115,307],529],[[177,115,149,-1],14,[228,227]],[[177,115,149,-1],14,[228,227]],0,[177,531],[[[528,[-1]],-1],14,[]],0,[483,[[6,[150]]]],[177,7],0,[[177,115,-1],14,[267,227]],[[177,115,-1],14,[227,267]],[[15,115,-1],14,[65,227]],[[15,115,-1],14,[65,227]],[[177,115,149,-1],14,[267,227]],[[177,115,149,-1],14,[227,267]],[-1,-2,[],[]],[-1,129,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[529,149],[177,149],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[4,[14,483]]]],0,0,0,0,0,0,0,0,0,[364,[[268,[[153,[267]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[364,364],[[-1,-2],14,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,14],[13,14],[13,14],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[350,167,9,[273,[395]]],[[4,[14,201]]]],[[],13],[[],13],[[],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[364,[[365,[364]]]],[[59,167],[[14,[364,532]]]],0,0,[[532,177,[179,[209]]],14],0,0,[[364,350],[[268,[[153,[267]]]]]],0,0,[364,[[268,[[153,[267]]]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[3,"InitializedNode",0],[3,"BootstrappedNode",0],[4,"Error",6640],[4,"Result",7806],[6,"ContextLock",2327],[4,"Option",7807],[3,"Span",7808],[3,"Block",101],[3,"Storage",2127],[3,"Settings",5926],[3,"CancellationToken",7809],[3,"BootstrapData",0],[15,"usize"],[15,"tuple"],[3,"Services",7602],[3,"Request",7810],[3,"Request",7810],[3,"TypeId",7811],[3,"Ledger",101],[3,"Identifier",7812],[3,"Ledger",7813],[3,"VotePlanStatus",7814],[3,"Global",7815],[3,"Vec",7816],[3,"Multiverse",101],[3,"Hash",7817],[3,"Ref",7818],[3,"Value",101],[3,"EpochRewardsInfo",101],[3,"Contents",101],[3,"HeaderContentEvalContext",101],[4,"Error",7819],[4,"Fragment",2506],[3,"BlockDate",101],[3,"ApplyBlockLedger",101],[3,"UnspecifiedAccountIdentifier",7820],[4,"Witness",7821],[3,"OwnerStakeDelegation",7822],[3,"PoolRegistration",7823],[3,"TransactionBindingAuthData",7824],[4,"PoolSignature",7823],[3,"PoolRetirement",7823],[3,"PoolUpdate",7823],[3,"StakeDelegation",7822],[3,"TransactionSlice",7824],[8,"Payload",7825],[3,"UpdateProposal",7826],[3,"SingleAccountBindingSignature",7827],[3,"UpdateVote",7828],[3,"VoteCast",7829],[3,"VotePlan",7830],[3,"VotePlanProof",7830],[3,"VoteTally",7831],[4,"TallyProof",7831],[8,"Gen",7832],[4,"ConfigParam",101],[3,"Block0Date",101],[3,"ConfigParams",101],[4,"Header",101],[4,"BlockVersion",101],[3,"ChainLength",101],[15,"u8"],[15,"slice"],[15,"u64"],[8,"FnOnce",7833],[15,"u32"],[15,"array"],[15,"bool"],[4,"ValueError",101],[3,"ContentsBuilder",101],[3,"HeaderGenesisPraos",101],[3,"HeaderBft",101],[3,"HeaderDesc",101],[3,"LedgerStaticParameters",101],[3,"RewardsInfoParameters",101],[4,"Ordering",7834],[3,"Common",7835],[3,"Leadership",101],[4,"LeadershipConsensus",7836],[4,"ConsensusType",7837],[3,"PoolsState",7838],[3,"Codec",7839],[4,"ReadError",7840],[8,"Read",7841],[3,"StakeDistribution",7842],[6,"HeaderId",101],[3,"TimeEra",7843],[4,"ConsensusEvalContext",7844],[4,"Block0Error",101],[3,"Formatter",7845],[6,"Result",7845],[4,"Block0Malformed",101],[3,"Error",7845],[8,"Iterator",7846],[3,"Ed25519",7847],[3,"SecretKey",7848],[3,"Leader",101],[4,"Error",1183],[4,"ConfigParam",7849],[3,"SlotDuration",7850],[3,"ConsensusLeaderId",7851],[4,"FeesGoTo",7852],[3,"KesUpdateSpeed",7853],[3,"NumberOfSlotsPerEpoch",7854],[3,"ActiveSlotCoefficient",7855],[3,"BlockDate",7856],[3,"EpochPosition",7843],[3,"ConfigParams",7849],[3,"BlockchainConfiguration",7857],[3,"TestLedger",7858],[3,"AverageValue",7859],[3,"Value",7860],[3,"NonZeroValue",7859],[4,"HeaderError",7861],[15,"str"],[4,"BlockDateParseError",7862],[3,"Arc",7863],[3,"NonZeroUsize",7864],[4,"HeaderSetConsensusSignature",101],[3,"HeaderBftBuilder",101],[3,"HeaderGenesisPraosBuilder",101],[3,"BftLeaderId",7817],[8,"Hash",7865],[8,"Sized",7866],[8,"BuildHasher",7865],[3,"Blake2b256",7867],[3,"DigestOf",7868],[8,"Hasher",7865],[3,"String",7869],[4,"HeaderCommonDone",7870],[3,"HeaderBuilder",101],[4,"HeaderSetConsensusData",7870],[3,"HeaderUnsigned",7871],[4,"LeaderOutput",101],[3,"Iter",7872],[3,"LedgerIterator",7873],[3,"MintToken",7874],[4,"HeaderSetParenting",7870],[8,"IntoIterator",7875],[4,"Proof",7835],[4,"WriteError",7840],[8,"Write",7841],[3,"VrfProof",7876],[4,"HeaderSetDate",7870],[3,"BftSignature",7876],[3,"KesSignature",7876],[3,"Settings",7877],[3,"SumEd25519_12",7878],[3,"Duration",7879],[8,"Error",7880],[3,"SplitValueIn",7881],[3,"SystemTime",7882],[3,"Box",7883],[3,"TokenDistribution",7884],[3,"TokenTotals",7884],[3,"UpdateState",7885],[3,"Address",7886],[3,"Output",7887],[3,"Iter",7888],[4,"Verification",7836],[4,"RewardParams",1183],[4,"Tag",1183],[3,"TagIter",1183],[4,"RewardParams",7889],[15,"u16"],[3,"IterBridge",7890],[3,"Blockchain",1611],[3,"Tip",2235],[3,"Ref",2064],[4,"Error",1472],[8,"Stream",7891],[8,"Unpin",7866],[4,"ComparisonResult",1899],[6,"Epoch",101],[3,"EpochLeadership",1611],[3,"TaskData",1989],[3,"TokioServiceInfo",7602],[4,"BlockMsg",2967],[3,"MessageQueue",7308],[3,"StreamInfo",1611],[3,"Branch",1499],[6,"HeaderHash",101],[4,"Error",1522],[4,"HeaderChainVerifyError",1611],[4,"Error",1611],[3,"ChainAdvance",1522],[3,"Context",7892],[4,"Outcome",1574],[4,"Poll",7893],[3,"State",1591],[3,"StreamReporter",1611],[8,"Fn",7833],[3,"PostCheckedHeader",1611],[4,"AppliedBlock",1611],[3,"LeadershipBlock",1611],[4,"CheckHeaderProof",1611],[3,"TimeFrame",7894],[3,"SendError",7308],[4,"TransactionMsg",2967],[3,"TrySendError",7308],[3,"Error",2967],[4,"Error",2127],[3,"Error",7836],[3,"Checkpoints",1932],[4,"PreCheckedHeader",1611],[6,"Result",7895],[3,"Multiverse",1963],[8,"Clone",7896],[4,"WatchMsg",2967],[3,"MessageBox",7308],[3,"Process",1989],[4,"NetworkMsg",2967],[3,"NodeId",6730],[3,"FireForgetScheduler",7421],[3,"RequestStreamHandle",2967],[3,"Metrics",3755],[3,"SystemTimeError",7882],[3,"Slot",7894],[3,"RefCache",2104],[3,"Path",7897],[8,"AsRef",7898],[3,"Ancestor",2127],[4,"StreamingError",2127],[4,"Error",7899],[3,"ReplySendError",2967],[3,"ReplyStreamHandle",2967],[8,"Send",7866],[8,"FnMut",7833],[3,"TipUpdater",2235],[6,"FragmentId",2506],[3,"TaskData",2292],[4,"ClientMsg",2967],[3,"Context",2327],[4,"Error",2327],[3,"ServerStopper",2327],[3,"Diagnostic",2441],[3,"Sender",7900],[4,"NodeState",7901],[3,"FullContext",2327],[4,"DiagnosticError",2441],[4,"RlimitResource",2441],[8,"Serializer",7902],[3,"FragmentDef",7903],[3,"PoolEntry",2584],[3,"Logs",2616],[3,"FragmentLog",7904],[3,"HashMap",7905],[4,"FragmentStatus",7904],[3,"Pool",2642],[4,"FragmentRejectionReason",7906],[4,"Error",2642],[4,"FragmentOrigin",7904],[3,"FragmentsProcessingSummary",7906],[3,"Transaction",7824],[3,"File",7907],[4,"FragmentSelectionAlgorithmParams",2855],[3,"Receiver",7908],[3,"TimeoutQueueItem",2696],[3,"IndexedQueue",2696],[8,"Eq",7834],[3,"IndexedQueueKeyRef",2696],[8,"PartialEq",7834],[3,"Pool",2696],[4,"Error",2813],[3,"Process",2813],[3,"OldestFirst",2855],[8,"Future",7909],[3,"Pin",7910],[3,"Shared",7911],[3,"NewLedgerState",2855],[4,"ApplyFragmentError",2855],[8,"Into",7898],[3,"ReplyStreamSink",2967],[4,"Code",7912],[3,"ReplyTrySendError",2967],[3,"ReplyHandle",2967],[8,"Debug",7845],[4,"PropagateMsg",2967],[3,"Canceled",7908],[3,"RequestSink",2967],[3,"ReplyFuture",2967],[3,"ReplyStreamFuture",2967],[8,"From",7898],[3,"ReplyStream",2967],[3,"UploadStream",2967],[3,"Receiver",7900],[4,"Error",3388],[4,"LedgerError",7813],[3,"Config",3388],[4,"EnclaveError",3473],[3,"Enclave",3473],[3,"Enclave",5542],[3,"Schedule",5542],[3,"Logs",3522],[3,"LeadershipLogHandle",3522],[4,"LeadershipLogStatus",3522],[8,"Deserializer",7913],[3,"LeadershipLog",7914],[3,"LeadershipLogId",7914],[3,"Logs",3611],[3,"Module",3633],[4,"LeadershipError",3633],[3,"LeaderEvent",5542],[3,"Entry",3633],[3,"SystemTime",7915],[3,"Epoch",7843],[3,"Instant",7882],[3,"ModuleConfig",3633],[3,"EpochSlotOffset",7843],[3,"MetricsBuilder",3755],[8,"MetricsBackend",3755],[15,"f64"],[3,"SecondsSinceUnixEpoch",7915],[3,"Prometheus",3861],[8,"Reply",7916],[3,"Rejection",7917],[3,"SimpleCounter",3915],[3,"NodeStats",7901],[3,"Configuration",6424],[3,"NetworkBootstrapResult",3983],[4,"Error",4229],[3,"GlobalState",3983],[3,"Channels",3983],[3,"BootstrapPeers",3983],[4,"SocketAddr",7918],[6,"GlobalStateR",3983],[3,"ConnectOptions",4536],[4,"FetchBlockError",3983],[3,"ListenError",3983],[4,"PropagateError",3983],[4,"NewGlobalStateError",3983],[3,"Peer",6424],[3,"ConnectionState",3983],[6,"TokioAsyncResolver",7919],[3,"ResolveError",7920],[4,"Selection",7921],[4,"TopologyMsg",2967],[6,"Peer",6730],[4,"IpAddr",7922],[3,"TaskParams",3983],[3,"Progress",4271],[4,"ProcessingOutcome",4271],[3,"Channel",7923],[3,"Client",7924],[3,"ClientBuilder",4271],[3,"InboundSubscriptions",4271],[3,"PeerComms",4536],[3,"Client",4271],[3,"ChainPullRequest",7925],[6,"BlockIds",7926],[3,"ConnectHandle",4390],[3,"ConnectFuture",4390],[4,"ConnectError",4390],[3,"AuthenticatedNodeId",7927],[3,"Error",7912],[8,"DeserializeFromSlice",7840],[3,"MapOk",7928],[8,"Encode",4464],[3,"Error",7929],[3,"Builder",7924],[3,"Endpoint",7930],[4,"FetchBlockError",4482],[3,"Listen",6424],[3,"WatchClient",7733],[6,"Server",7931],[3,"Peers",4536],[6,"Address",4532],[3,"CommHandle",4536],[4,"ErrorKind",4536],[4,"SubscriptionDirection",4536],[3,"PeerStats",4536],[3,"PropagateError",4536],[3,"PeerInfo",4536],[3,"GetNodeAddress",4536],[3,"PeerMap",4863],[3,"OwnedMutexLockFuture",7932],[3,"OutboundSubscription",4536],[3,"Header",7933],[3,"Fragment",7934],[3,"Gossip",101],[3,"BlockId",7926],[6,"BlockEventSubscription",4536],[6,"FragmentSubscription",4536],[6,"GossipSubscription",4536],[3,"ClientAuth",4863],[4,"CommStatus",4863],[3,"Entry",4863],[3,"PeerData",4863],[3,"NodeService",4982],[3,"Peer",7927],[6,"PushStream",7935],[6,"FragmentIds",7936],[8,"Decode",4464],[3,"Map",7937],[3,"Block",7938],[3,"FragmentProcessor",5029],[3,"PendingProcessing",5029],[3,"Gossip",6834],[4,"FragmentProcessorSendFragmentsState",5029],[3,"BlockAnnouncementProcessor",5029],[4,"Direction",5029],[3,"GossipProcessor",5029],[8,"TryStream",7891],[3,"Tls",5926],[8,"Filter",7939],[8,"Sync",7866],[3,"Config",5180],[3,"GetBlockNextIdQuery",5212],[3,"Bytes",7940],[4,"Error",5257],[4,"Error",7867],[4,"FromHexError",7941],[4,"PublicKeyFromStrError",7848],[4,"Error",7868],[4,"FromConfigParamError",7849],[3,"AccountState",7942],[3,"VotePlanStatus",7943],[3,"PeerInfo",6730],[3,"PeerStats",7944],[3,"EpochRewardsInfo",7945],[3,"SettingsDto",7946],[3,"StakeDistributionDto",7947],[3,"StakePoolStats",7948],[3,"NodeStatsDto",7901],[3,"Hash",7949],[3,"UpdateProposalStateDef",7950],[3,"TransactionOutput",7951],[3,"GetMessageStatusesQuery",5339],[6,"VotePlanId",7943],[3,"FragmentsBatch",7952],[4,"Error",5362],[3,"AccountVotes",7943],[3,"NodeSecret",5409],[3,"BftLeader",101],[3,"Bft",5409],[3,"GenesisPraos",5409],[3,"OwnerKey",5409],[3,"NodePublic",5409],[4,"NodeSecretFromFileError",5409],[3,"Error",7953],[3,"Error",7895],[3,"GenesisLeader",101],[4,"Block0Info",5607],[3,"LOG_FILTER_LEVEL_POSSIBLE_VALUES",5607],[3,"Command",7954],[3,"StartArguments",5662],[3,"RestArguments",5662],[3,"JRpcArguments",5662],[3,"CommandLine",5662],[3,"ArgMatches",7955],[6,"Error",7956],[3,"Id",7957],[3,"LevelFilter",7958],[3,"TrustedPeer",6156],[3,"Error",7959],[4,"LogFormat",5787],[4,"LogOutput",5787],[3,"LogSettings",5787],[3,"LogGuard",5787],[4,"Error",5787],[3,"Mempool",5926],[3,"Rest",5926],[3,"JRpc",5926],[3,"Cors",5926],[4,"Error",5926],[3,"ParseError",7000],[4,"Error",7960],[4,"Error",7961],[3,"Config",6156],[3,"RawSettings",5926],[3,"TrustedPeer",6424],[3,"LayersConfig",6156],[3,"ConfigLogSettings",6156],[3,"P2pConfig",6156],[3,"Bootstrap",6156],[3,"Connection",6156],[3,"Leadership",6156],[3,"Prometheus",6156],[4,"Protocol",6424],[4,"PeerResolveError",6424],[15,"i32"],[4,"ErrorKind",6640],[4,"ServiceError",7602],[3,"State",6712],[3,"PublicKey",7962],[6,"NodeId",7963],[3,"TaskData",7072],[3,"Gossips",6834],[4,"GossipError",6834],[3,"Gossip",7964],[4,"GossipError",7964],[3,"LayersConfig",6921],[3,"PreferredListConfig",6951],[3,"PreferredListLayer",6951],[6,"ChaChaRng",7965],[3,"Profile",7966],[3,"Topic",7967],[3,"InterestLevel",7967],[3,"PriorityMap",7968],[3,"ViewBuilder",7921],[3,"RingsConfig",7000],[3,"Rings",7000],[3,"Rings",7969],[3,"TopicsOfInterest",7963],[3,"Process",7072],[3,"ReportRecord",7118],[3,"QuarantineConfig",7118],[3,"ReportRecords",7118],[3,"Topology",7970],[4,"ReportNodeStatus",7118],[3,"P2pTopology",7215],[3,"CustomLayerBuilder",7215],[8,"Layer",7921],[3,"LOCAL_ADDR",7215],[3,"SigningKey",7971],[3,"SecretKey",7962],[3,"View",7215],[3,"FireForgetSchedulerFuture",7421],[4,"Error",7421],[3,"TimedOutTask",7421],[4,"TrySendError",7972],[3,"Error",7973],[3,"ScheduledTask",7421],[3,"RunningTask",7421],[3,"FireForgetSchedulerConfig",7421],[3,"Key",7974],[4,"Command",7421],[3,"TaskMessageBox",7602],[3,"Service",7602],[3,"Runtime",7975],[3,"Handle",7976],[3,"MessageProcessor",7733],[6,"ConsensusVersion",101],[8,"Block0DataSource",101],[13,"Linear",1361],[13,"Halving",1361],[13,"AlreadyPresent",1894],[13,"MissingParent",1894],[13,"HeaderWithCache",1894],[6,"Result",1611],[13,"BlockDateBeforeParent",1890],[13,"ChainLengthNotIncremental",1890],[6,"PullHeadersScheduler",1989],[6,"GetNextBlockScheduler",1989],[3,"IndexedQueueEntry",2696],[4,"SelectionOutput",2855],[3,"FragmentSelectionResult",2855],[8,"FragmentSelectionAlgorithm",2855],[13,"Commit",2965],[13,"Reject",2965],[6,"ReplySender",2967],[13,"PullHeaders",3376],[13,"SendTransactions",3379],[13,"SelectTransactions",3379],[13,"Block",3607],[13,"Rejected",3607],[13,"CannotScheduleWithEnclave",3750],[13,"TooEarlyForTimeFrame",3750],[6,"UIntGauge",3861],[3,"BlockCounters",3915],[6,"Connection",3983],[13,"CouldNotDownloadBlock",4228],[13,"Block0Mismatch",4460],[6,"ResponseStream",4464],[6,"BlockSubscription",4482],[6,"FragmentSubscription",4482],[6,"GossipSubscription",4482],[6,"ConnectError",4482],[6,"Client",4482],[13,"UnexpectedBlock",4524],[13,"Connect",4524],[13,"GetBlocks",4524],[13,"GetBlocksStream",4524],[4,"SubscriptionState",4536],[6,"BlockEventAnnounceStream",4536],[6,"BlockEventSolicitStream",4536],[6,"BlockEventMissingStream",4536],[6,"SubscriptionStream",4982],[13,"GetIngressAddress",5175],[13,"ReverseLookup",5175],[13,"SendFragments",5175],[13,"FileError",5923],[13,"FormatNotSupported",5923],[13,"Block0Mismatch",6706],[13,"Io",6706],[13,"ParseError",6706],[13,"Schedule",7600],[13,"DeclareCompleted",7600],[4,"Input",7602],[4,"RequestMsg",7733],[6,"SubscriptionStream",7733],[6,"SubscriptionTryStream",7733],[13,"SyncMultiverse",7804]]},\
"jormungandr_automation":{"doc":"","t":"","n":["cond_println","jcli","jormungandr","testing","utils","Account","CertificateBuilder","Error","FragmentCheck","FragmentSender","FragmentsCheck","JCli","JCliCommand","TransactionBuilder","TransactionNotInBlock","TransactionsNotInBlock","UTxO","Unknown","Witness","WitnessData","WitnessType","account_spending_counter","addr_type","addr_type","address","api","block_hash","borrow","borrow_mut","certificate","certificate_builder","clone","clone_into","command","command","data","default","deref","deref_mut","drop","exe","file","fmt","fragment_sender","fragments_checker","from","genesis","genesis_hash","id","init","into","into_request","jcli","jcli","jcli","jcli","jcli","jormungandr","jormungandr","jormungandr","key","new","path","private_key_path","rest","secret_bech32","services","spending_counter","staging_dir","summary","to_owned","transaction","transaction_builder","transaction_id","try_from","try_into","type_id","votes","vzip","log_content","log_content","message_log","message_log","transaction_id","Address","Certificate","Genesis","Key","Rest","Transaction","Votes","address","certificate","genesis","key","rest","transaction","votes","Address","account","account_expect_fail","address_command","borrow","borrow_mut","delegation","delegation_expect_fail","deref","deref_mut","drop","from","info","info_expect_fail","init","into","into_request","new","single","single_expect_fail","try_from","try_into","type_id","vzip","Certificate","borrow","borrow_mut","command","deref","deref_mut","drop","fmt","from","init","into","into_request","new","new_private_vote_cast","new_private_vote_tally","new_public_vote_cast","new_public_vote_tally","new_stake_delegation","new_stake_pool_registration","new_stake_pool_retirement","new_update_proposal","new_update_vote","new_vote_plan","sign","stake_pool_id","try_from","try_into","type_id","vote_plan_id","vzip","Genesis","borrow","borrow_mut","decode","deref","deref_mut","drop","encode","encode_expect_fail","from","genesis_command","hash","hash_expect_fail","init","init","into","into_request","new","try_from","try_into","type_id","vzip","DEFAULT_KEY_TYPE","Key","borrow","borrow_mut","convert_from_bytes_string","convert_from_bytes_string_expect_fail","convert_to_bytes_file","convert_to_bytes_file_expect_fail","convert_to_public_string","convert_to_public_string_expect_fail","deref","deref_mut","drop","dump_bytes_to_file","from","generate","generate_default","generate_expect_fail","generate_with_seed","generate_with_seed_expect_fail","init","into","into_request","key_command","new","try_from","try_into","type_id","vzip","Rest","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","rest_command","try_from","try_into","type_id","v0","v0","v1","v1","vzip","RestV0","account_stats","block","block","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","leadership_log","message","message","new","node","node","settings","shutdown","stake_pool","stake_pools","tip","tip_expect_fail","try_from","try_into","type_id","utxo","utxo","v0_command","vote","vote","vzip","Block","block_command","borrow","borrow_mut","deref","deref_mut","drop","from","get","get_expect_fail","init","into","into_request","new","next","next_expect_fail","try_from","try_into","type_id","vzip","Message","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","logs","message_command","new","post","try_from","try_into","type_id","vzip","Node","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","node_command","stats","try_from","try_into","type_id","vzip","UtxO","assert_contains","borrow","borrow_mut","deref","deref_mut","drop","expect_item_not_found","expect_not_found","from","get","get_by_item","init","into","into_request","new","try_from","try_into","type_id","utxo_command","vzip","Vote","active_vote_plans","active_voting_committees","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vote_command","vzip","RestV1","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","v1_command","vote","vote","vzip","Vote","account_votes","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vote_command","vzip","Transaction","add_account","add_account_expect_fail","add_account_from_legacy","add_certificate","add_input","add_input_expect_fail","add_input_from_utxo","add_input_from_utxo_with_value","add_output","add_witness","add_witness_expect_fail","auth","borrow","borrow_mut","command","convert_to_message","convert_to_message_expect_fail","create_witness","deref","deref_mut","drop","finalize","finalize_expect_fail","finalize_with_fee","fragment_id","from","id","info","init","into","into_request","make_transaction","make_witness","make_witness_expect_fail","new","new_transaction","seal","set_expiry_date","try_from","try_into","type_id","vzip","Committee","Crs","Tally","Votes","borrow","borrow_mut","committee","committee","crs","crs","deref","deref_mut","drop","election_public_key","from","init","into","into_request","new","tally","tally","try_from","try_into","type_id","update_proposal","update_vote","votes_command","vzip","Committee","CommunicationKey","MemberKey","borrow","borrow_mut","committee_command","communication_key","communication_key","deref","deref_mut","drop","from","init","into","into_request","member_key","member_key","new","try_from","try_into","type_id","vzip","CommunicationKey","borrow","borrow_mut","communication_key_command","deref","deref_mut","drop","from","generate","init","into","into_request","new","to_public","try_from","try_into","type_id","vzip","MemberKey","borrow","borrow_mut","deref","deref_mut","drop","from","generate","init","into","into_request","member_key_command","new","to_public","try_from","try_into","type_id","vzip","Crs","borrow","borrow_mut","crs_command","deref","deref_mut","drop","from","generate","init","into","into_request","new","try_from","try_into","type_id","vzip","Tally","borrow","borrow_mut","decrypt_results","decrypt_results_expect_fail","decryption_shares","deref","deref_mut","drop","from","init","into","into_request","merge_results","merge_shares","new","tally_command","try_from","try_into","type_id","vzip","AddressCommand","CertificateCommand","GenesisCommand","JCliCommand","KeyCommand","RestCommand","TransactionCommand","VotesCommand","address","address","borrow","borrow_mut","certificate","certificate","command","deref","deref_mut","drop","from","genesis","genesis","init","into","into_request","key","key","new","rest","rest","transaction","transaction","try_from","try_into","type_id","votes","votes","vzip","AccountCommand","AddressCommand","InfoCommand","SingleCommand","account","account","borrow","borrow_mut","command","deref","deref_mut","drop","from","info","info","init","into","into_request","new","single","single","try_from","try_into","type_id","vzip","AccountCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","prefix","public_key","test_discrimination","try_from","try_into","type_id","vzip","InfoCommand","address","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","SingleCommand","borrow","borrow_mut","build","command","delegation_key","deref","deref_mut","drop","from","init","into","into_request","new","prefix","public_key","test_discrimination","try_from","try_into","type_id","vzip","CertificateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","fmt","from","init","into","into_request","new","new_stake_delegation","payload_type_to_string","private_vote_cast","private_vote_tally","public_vote_cast","public_vote_tally","retire","sign","stake_pool_id","stake_pool_registration","try_from","try_into","type_id","update_proposal","update_vote","vote","vote_plan_id","vzip","GenesisCommand","GenesisDecodeCommand","GenesisEncodeCommand","GenesisHashCommand","borrow","borrow_mut","command","decode","decode","deref","deref_mut","drop","encode","encode","from","hash","hash","init","init","into","into_request","new","try_from","try_into","type_id","vzip","GenesisDecodeCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","GenesisEncodeCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","GenesisHashCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","try_from","try_into","type_id","vzip","KeyCommand","KeyFromBytesCommand","KeyGenerateCommand","KeyToBytesCommand","KeyToPublicCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","from_bytes","from_bytes","generate","generate","init","into","into_request","new","to_bytes","to_bytes","to_public","to_public","try_from","try_into","type_id","vzip","KeyFromBytesCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","key_type","new","try_from","try_into","type_id","vzip","KeyGenerateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","key_type","new","seed","try_from","try_into","type_id","vzip","KeyToBytesCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","KeyToPublicCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","RestCommand","V0Command","V1Command","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","v0","v0","v1","v1","vzip","BlockCommand","MessageCommand","NodeCommand","UtxOCommand","V0Command","VoteCommand","account_stats","block","block","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","leadership_log","message","message","new","node","node","settings","shutdown","stake_pool","stake_pools","tip","transaction","try_from","try_into","type_id","utxo","utxo","vote","vote","vzip","BlockCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","get","init","into","into_request","new","next","try_from","try_into","type_id","vzip","MessageCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","logs","new","post","try_from","try_into","type_id","vzip","NodeCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","stats","try_from","try_into","type_id","vzip","UtxOCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","fragment_id","from","get","host","init","into","into_request","new","output_index","try_from","try_into","type_id","vzip","VoteCommand","active_committees","active_vote_plans","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","V1Command","VoteCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vote","vote","vzip","VoteCommand","account_votes","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","TransactionCommand","add_account","add_certificate","add_input","add_output","add_witness","auth","borrow","borrow_mut","build","command","deref","deref_mut","drop","finalize","finalize_with_fee","fmt","from","id","info","init","into","into_request","make_transaction","make_witness","new","new_transaction","seal","set_expiry_date","to_message","try_from","try_into","type_id","vzip","CommitteeCommand","CrsCommand","ElectionPublicKeyCommand","TallyCommand","VotesCommand","borrow","borrow_mut","build","command","committee","committee","crs","crs","deref","deref_mut","drop","election_public_key","election_public_key","fmt","from","init","into","into_request","new","tally","tally","try_from","try_into","type_id","update_proposal","update_vote","vzip","CommitteeCommand","CommunicationKeyCommand","MemberKeyCommand","borrow","borrow_mut","command","communication_key","communication_key","deref","deref_mut","drop","from","init","into","into_request","member_key","member_key","new","try_from","try_into","type_id","vzip","CommunicationKeyCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","to_public","try_from","try_into","type_id","vzip","MemberKeyCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","to_public","try_from","try_into","type_id","vzip","CrsCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","try_from","try_into","type_id","vzip","ElectionPublicKeyCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","try_from","try_into","type_id","vzip","TallyCommand","borrow","borrow_mut","build","command","decrypt_results","decryption_shares","deref","deref_mut","drop","from","init","into","into_request","merge_results","merge_shares","new","try_from","try_into","type_id","vzip","Witness","WitnessData","WitnessType","witness","Account","UTxO","Unknown","Witness","WitnessData","WitnessType","account_spending_counter","addr_type","addr_type","block_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","file","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","into_witness","new","new_account","new_utxo","private_key_path","secret_bech32","spending_counter","spending_counter","to_owned","to_string","transaction_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_witness_key","CertificateBuilder","Error","FragmentCheck","FragmentSender","FragmentsCheck","TransactionBuilder","TransactionNotInBlock","TransactionsNotInBlock","borrow","borrow_mut","certificate_builder","deref","deref_mut","drop","fmt","fmt","fragment_check","fragment_sender","fragments_check","from","init","into","into_request","to_string","transaction_builder","try_from","try_into","type_id","vzip","log_content","log_content","message_log","message_log","transaction_id","CertificateBuilder","SignedStakePoolCertBuilder","borrow","borrow","borrow_mut","borrow_mut","build","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_request","into_request","jcli","jcli","management_threshold","management_threshold","new","new","new_signed_stake_pool_cert","new_signed_stake_pool_delegation","new_signed_vote_plan","owner_pk","owner_pk","pool_kes_pk","pool_kes_pk","pool_vrf_pk","pool_vrf_pk","stake_key_file","stake_key_file","start_validity","start_validity","tax_type","tax_type","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FragmentCheck","assert_in_block","assert_in_block_with_wait","assert_log_shows_in_block","assert_log_shows_rejected","assert_rejected","assert_rejected_summary","borrow","borrow_mut","deref","deref_mut","drop","fragment_id","from","id","init","into","into_request","jcli","jormungandr","new","summary","try_from","try_into","type_id","vzip","wait_until_processed","FragmentSender","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","jcli","jormungandr","new","send","send_many","try_from","try_into","type_id","vzip","FragmentsCheck","borrow","borrow_mut","check_log_shows_in_block","deref","deref_mut","drop","from","init","into","into_request","jcli","jormungandr","new","try_from","try_into","type_id","vzip","wait_until_all_processed","wait_until_in_block","TransactionBuilder","add_account","add_account_expect_fail","add_account_from_legacy","add_auth","add_certificate","add_input","add_input_expect_fail","add_input_from_utxo","add_input_from_utxo_with_value","add_output","add_witness","add_witness_expect_fail","borrow","borrow_mut","build_transaction_from_utxo","create_witness","create_witness_default","deref","deref_mut","drop","finalize","finalize_expect_fail","finalize_with_fee","fragment_id","from","genesis_hash","info","init","into","into_request","jcli","make_and_add_witness_default","make_witness","make_witness_expect_fail","new","new_transaction","seal","seal_with_witness","seal_with_witness_data","set_expiry_date","staging_dir","staging_dir","staging_file","staging_file_path","to_message","to_message_expect_fail","transaction_id","try_from","try_into","type_id","vzip","BackwardCompatibleRest","Block0","Block0ConfigurationBuilder","CannotDeserialize","CannotGetRestStatus","CannotSendFragment","CannotSendFragmentBatch","ConfigurableNodeConfig","ConfiguredStarter","DEBUG","ERROR","EitherHashOrBlock0","EntryNotFoundInLogs","ErrorInLogs","Exited","Explorer","ExplorerError","ExplorerProcess","FaketimeConfig","File","Fixture","FragmentNode","FragmentNodeError","FsFixture","Hash","Hash","HashParseError","INFO","InMemory","InvalidBlock0Hash","Jormungandr","JormungandrBootstrapper","JormungandrError","JormungandrError","JormungandrLogger","JormungandrNotLaunched","JormungandrParams","JormungandrProcess","JormungandrRest","JormungandrStateVerifier","Leader","LeadershipMode","LegacyConfig","LegacyConfigError","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","LegacyNodeConfigManager","ListFragmentError","Log","LogLevel","MemPoolCheck","NodeAlias","NodeBlock0","NodeConfigBuilder","NodeConfigManager","NonSuccessErrorCode","Params","Passive","PersistenceMode","Persistent","PollError","PortAlreadyInUse","ProcessExited","ProcessStillActive","RawRest","ReadBytes","RemoteJormungandr","RemoteJormungandrBuilder","RequestError","ReqwestError","Rest","RestError","RestSettings","Running","SecretModelFactory","SerdeYaml","ShutdownError","StartParamsNotDefined","Starter","Starting","StartupError","StartupVerificationMode","Status","StdErr","TRACE","Temp","TestingDirectory","Timeout","Timeout","TooManyAttempts","UnknownError","UnsupportedVersion","User","Version","WARN","alias","alias","alias","alias","alias","as_communication_params","assert_accepted_rejected","assert_bad_request","benchmark","bft","blockchain_configuration","bootstrap_from_trusted_peers","borrow","borrow","borrow_mut","borrow_mut","build","certificate","child","client","clone","clone_into","cmp","cmp_precedence","collected_logs","collected_panics","compare","compare_explorer_schema","config","config","configuration","configured_starter","cors","deref","deref","deref_mut","deref_mut","deserialize","download_last_n_releases","drift","drop","drop","enable_debug","eq","equivalent","equivalent","equivalent","equivalent","explorer","file","file","fmt","fmt","fmt","fmt","fragment_id","fragment_logs","fragment_node","from","from","from_str","from_str","genesis","genesis","genesis","get_available_port","get_hash","get_jormungandr_bin","grpc","grpc","grpc","grpc_client","hash","init","init","initial","inner","into","into","into_request","into_request","jormungandr_app","jormungandr_app_path","jrpc","jrpc","leadership","leadership_mode","legacy","log","log","log_content","log_file_path","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","logger","logger","logger","logger","logs_collector","major","mempool","mempool","minimal_setup","minor","new","node_alias","node_config","node_config","node_config","node_config","node_config","node_config","node_config_path","offset","on_fail","p2p","p2p","p2p_listen_address","p2p_listen_address","p2p_public_address","p2p_public_address","panics_collector","parse","partial_cmp","patch","pre","process","raw","remote","rest","rest","rest","rest","rest","rest","rest_socket_addr","rest_socket_addr","rewards_history","rewards_history","secret","secret_path","send_batch_fragments","send_fragment","serialize","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","settings","single_log","skip_bootstrap","sleep","snapshot_before","starter","storage","storage","temp_dir","temp_dir","timeout","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","uri","uri_from_socket_addr","use_https","vec","verbose","verbose","verification_mode","verifier","version","version","version_0_8_19","vzip","vzip","write_node_config","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","error_lines","logs","stderr","checks","response","status","log_content","timeout","entry","log_content","log_content","timeout","Block0ConfigurationBuilder","EitherHashOrBlock0","NEXT_AVAILABLE_PORT_NUMBER","NodeConfigBuilder","NodeConfigManager","NodeSecretExtension","OCCUPIED_PORTS","SecretModelFactory","__private_field","__private_field","block0","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_available_port","init","init","into","into","into_request","into_request","jormungandr_config","node","secret","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block0ConfigurationBuilder","block0_config_builder","Block0ConfigurationBuilder","DEFAULT_SLOT_DURATION","blockchain_configuration","borrow","borrow_mut","build","clone","clone_into","default","default_initial","default_leaders","deref","deref_mut","deserialize","drop","fmt","from","init","initial","into","into_request","minimal_setup","minimal_setup","serialize","to_owned","try_from","try_into","type_id","vzip","with_active_slot_coeff","with_block0_consensus","with_block_content_max_size","with_certs","with_committee_ids","with_committees","with_consensus_genesis_praos_active_slot_coeff","with_consensus_leaders_ids","with_discrimination","with_epoch_stability_depth","with_fees_go_to","with_funds","with_funds_split_if_needed","with_funds_split_if_needed_recursively","with_initial","with_kes_update_speed","with_leader","with_leader_key_pair","with_leader_signing_key","with_linear_fees","with_proposal_expiration","with_reward_parameters","with_signed_certs","with_slot_duration","with_slots_per_epoch","with_some_consensus_leader","with_token","with_total_rewards_supply","with_treasury","with_treasury_parameters","with_tx_max_expiry_epochs","with_utxo","with_utxos","Block0","EitherHashOrBlock0","Hash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","NodeConfigBuilder","NodeConfigManager","manager","node_config_builder","NodeConfigManager","as_communication_params","borrow","borrow_mut","deref","deref_mut","drop","file","fmt","from","init","into","into_request","log_file_path","node_config","node_config_path","p2p_listen_address","p2p_public_address","rest_socket_addr","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","try_from","try_into","type_id","vzip","write_node_config","DEFAULT_HOST","DEFAULT_RPC_THREADS_AMOUNT","NodeConfigBuilder","borrow","borrow_mut","build","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","jrpc","log","mempool","p2p","rest","storage","to_owned","try_from","try_into","type_id","vzip","with_listen_address","with_log","with_log_level","with_mempool","with_policy","with_public_address","with_rest_cors_config","with_rest_tls_config","with_storage","with_trusted_peers","without_log","NodeSecretExtension","SecretModelFactory","bft","bft","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from","genesis","genesis","init","into","into","into_request","is_defined","to_owned","try_from","try_into","type_id","vzip","write_to_file_if_defined","write_to_file_if_defined","Bootstrap","ClientError","Explorer","ExplorerError","ExplorerProcess","LastBlockResponse","ReqwestError","SerializationError","address","block","block_by_id","blocks","blocks_at_chain_length","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client","client","client","client_mut","clone","clone_into","compare_schema","configuration","configuration","configuration","current_time","data","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_logs","drop","drop","drop","drop","enable_logs","epoch","fmt","fmt","from","from","from","from","from","from","handler","init","init","init","into","into","into","into_request","into_request","into_request","is_up","last_block","new","new","print_log","print_log","print_request","run","settings","shutdown","source","stake_pool","stake_pools","to_owned","to_string","transaction","transaction_certificates","transactions_address","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uri","verifiers","vote_plan","vote_plans","vzip","vzip","vzip","wait_to_be_up","wrappers","GraphQlClient","GraphQlClientError","ReqwestError","base_url","base_url","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","disable_print","drop","drop","enable_print","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","new","print_out","run","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExplorerConfiguration","ExplorerConfigurationBuilder","ExplorerParams","address","address_bech32_prefix","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","config","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","explorer_listen_address","explorer_listen_http_address","explorer_port","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","log_dir","logs_dir","new","node_address","params","params","query_complexity_limit","query_depth_limit","serialize","serialize","storage_dir","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Address","AllBlocks","AllStakePools","AllVotePlans","Block","BlockById","BlocksByChainLength","ChainLength","Epoch","EpochNumber","ExternalProposalId","LastBlock","NonZero","PoolId","PublicKey","Settings","Slot","StakePool","TimeOffsetSeconds","TransactionById","TransactionByIdCertificates","TransactionsByAddress","Value","VotePlanById","VotePlanId","Weight","address","all_blocks","all_stake_pools","all_vote_plans","block","block_by_id","blocks_by_chain_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block","settings","stake_pool","transaction_by_id","transaction_by_id_certificates","transactions_by_address","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_plan_by_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddressAddress","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","__QUERY_WORKAROUND","address","bech32","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","id","init","init","init","into","into","into","into_request","into_request","into_request","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vec","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","AddCommitteeId","AllBlocksTip","AllBlocksTipBlocks","AllBlocksTipBlocksEdges","AllBlocksTipBlocksEdgesNode","AllBlocksTipBlocksEdgesNodeBranches","AllBlocksTipBlocksEdgesNodeDate","AllBlocksTipBlocksEdgesNodeDateEpoch","AllBlocksTipBlocksEdgesNodeLeader","AllBlocksTipBlocksEdgesNodeLeaderOnBftLeader","AllBlocksTipBlocksEdgesNodeLeaderOnPool","AllBlocksTipBlocksEdgesNodePreviousBlock","AllBlocksTipBlocksEdgesNodeTransactions","AllBlocksTipBlocksEdgesNodeTransactionsEdges","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNode","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocks","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocksDate","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificate","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnEvmMapping","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnMintToken","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistration","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationPool","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRetirement","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolUpdate","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegation","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationAccount","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationPools","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposal","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChanges","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVote","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteCast","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlan","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanProposals","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanVoteStart","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteTally","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParams","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParamsConfigParams","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputs","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputsAddress","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputs","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputsAddress","BFT","BftLeader","Block0Date","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","KesUpdateSpeed","LinearFee","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParams","RewardPot","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","coefficient","committee_end","configParam","config_params","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","edges","epoch","epoch","epoch","epoch","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","last","leader","management_threshold","max","max_limit","max_limit","milli","min","name","node","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","registration","registration","registration","remove_bft_leader","remove_committee_id","retirement","retirement","retirement","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot","slot","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","tip","total_count","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AllStakePoolsTip","AllStakePoolsTipAllStakePools","AllStakePoolsTipAllStakePoolsEdges","AllStakePoolsTipAllStakePoolsEdgesNode","AllStakePoolsTipAllStakePoolsEdgesNodeBlocks","AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdges","AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdgesNode","AllStakePoolsTipAllStakePoolsEdgesNodeRegistration","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationPool","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardAccount","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewards","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardsRatio","AllStakePoolsTipAllStakePoolsEdgesNodeRetirement","AllStakePoolsTipAllStakePoolsNodes","AllStakePoolsTipAllStakePoolsNodesBlocks","AllStakePoolsTipAllStakePoolsNodesBlocksEdges","AllStakePoolsTipAllStakePoolsNodesBlocksEdgesNode","AllStakePoolsTipAllStakePoolsNodesRegistration","AllStakePoolsTipAllStakePoolsNodesRegistrationPool","AllStakePoolsTipAllStakePoolsNodesRegistrationRewardAccount","AllStakePoolsTipAllStakePoolsNodesRegistrationRewards","AllStakePoolsTipAllStakePoolsNodesRegistrationRewardsRatio","AllStakePoolsTipAllStakePoolsNodesRetirement","Boolean","Float","ID","Int","NonZero","OPERATION_NAME","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PublicKey","QUERY","ResponseData","TimeOffsetSeconds","Value","Variables","__QUERY_WORKAROUND","all_stake_pools","blocks","blocks","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","edges","edges","first","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","management_threshold","management_threshold","max_limit","max_limit","node","node","node","nodes","numerator","numerator","operators","operators","owners","owners","pool","pool","pool","poolInfo","pool_id","pool_id","pool_id","ratio","ratio","registration","registration","registration","registration","registration","retirement","retirement","retirement","retirement","retirement","retirement_time","retirement_time","reward_account","reward_account","rewards","rewards","serialize","start_validity","start_validity","tip","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AllVotePlansTip","AllVotePlansTipAllVotePlans","AllVotePlansTipAllVotePlansEdges","AllVotePlansTipAllVotePlansEdgesNode","AllVotePlansTipAllVotePlansEdgesNodeCommitteeEnd","AllVotePlansTipAllVotePlansEdgesNodeProposals","AllVotePlansTipAllVotePlansEdgesNodeProposalsOptions","AllVotePlansTipAllVotePlansEdgesNodeProposalsTally","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatus","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatusOptions","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatus","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatusOptions","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotes","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdges","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNode","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodeAddress","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayload","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus","AllVotePlansTipAllVotePlansEdgesNodeVoteEnd","AllVotePlansTipAllVotePlansEdgesNodeVoteStart","BlockDateEpoch","Boolean","EpochNumber","ExternalProposalId","Float","ID","Int","OPERATION_NAME","Other","PRIVATE","PUBLIC","PayloadType","QUERY","ResponseData","Slot","TallyPrivateStatus","TallyPublicStatus","Variables","VotePayloadPrivateStatus","VotePayloadPublicStatus","VotePlanId","Weight","__QUERY_WORKAROUND","address","all_vote_plans","blockDate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choice","committee_end","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","edges","encrypted_vote","end","end","end","epoch","epoch","epoch","epoch","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","node","node","options","options","options","payload","payload_type","proof","proposal_id","proposals","results","results","serialize","serialize","slot","slot","slot","slot","start","start","start","tally","tip","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vote_end","vote_start","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockBlock","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","__QUERY_WORKAROUND","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","id","id","init","init","init","into","into","into","into_request","into_request","into_request","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vec","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","AddCommitteeId","BFT","BftLeader","Block0Date","Block0Date","Block0Date","BlockByIdBlock","BlockByIdBlockBranches","BlockByIdBlockDate","BlockByIdBlockDateEpoch","BlockByIdBlockLeader","BlockByIdBlockLeaderOnBftLeader","BlockByIdBlockLeaderOnPool","BlockByIdBlockPreviousBlock","BlockByIdBlockTransactions","BlockByIdBlockTransactionsEdges","BlockByIdBlockTransactionsEdgesNode","BlockByIdBlockTransactionsEdgesNodeBlocks","BlockByIdBlockTransactionsEdgesNodeBlocksDate","BlockByIdBlockTransactionsEdgesNodeCertificate","BlockByIdBlockTransactionsEdgesNodeCertificateOnEvmMapping","BlockByIdBlockTransactionsEdgesNodeCertificateOnMintToken","BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistration","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationPool","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRetirement","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolUpdate","BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegation","BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount","BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationPools","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposal","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVote","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteCast","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlan","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanProposals","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanVoteStart","BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteTally","BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParams","BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParamsConfigParams","BlockByIdBlockTransactionsEdgesNodeInputs","BlockByIdBlockTransactionsEdgesNodeInputsAddress","BlockByIdBlockTransactionsEdgesNodeOutputs","BlockByIdBlockTransactionsEdgesNodeOutputsAddress","BlockContentMaxSize","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","KesUpdateSpeed","LinearFee","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParams","RewardPot","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","committee_end","configParam","config_params","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch","epoch","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","leader","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","registration","registration","registration","remove_bft_leader","remove_committee_id","retirement","retirement","retirement","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot","slot","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","BFT","BftLeader","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","BlocksByChainLengthBlocksByChainLength","BlocksByChainLengthBlocksByChainLengthBranches","BlocksByChainLengthBlocksByChainLengthDate","BlocksByChainLengthBlocksByChainLengthDateEpoch","BlocksByChainLengthBlocksByChainLengthLeader","BlocksByChainLengthBlocksByChainLengthLeaderOnBftLeader","BlocksByChainLengthBlocksByChainLengthLeaderOnPool","BlocksByChainLengthBlocksByChainLengthPreviousBlock","BlocksByChainLengthBlocksByChainLengthTransactions","BlocksByChainLengthBlocksByChainLengthTransactionsEdges","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNode","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocks","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocksDate","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificate","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnEvmMapping","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnMintToken","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistration","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationPool","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRetirement","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolUpdate","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegation","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationAccount","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationPools","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposal","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChanges","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVote","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteCast","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlan","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanProposals","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanVoteStart","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteTally","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputs","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputsAddress","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputs","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputsAddress","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","blocks","blocks","blocks_by_chain_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch","epoch","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","leader","length","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","registration","registration","registration","remove_bft_leader","remove_committee_id","retirement","retirement","retirement","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot","slot","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Boolean","EpochEpoch","EpochEpochFirstBlock","EpochEpochLastBlock","EpochNumber","EpochTip","EpochTipBlocksByEpoch","EpochTipBlocksByEpochEdges","EpochTipBlocksByEpochEdgesNode","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","__QUERY_WORKAROUND","blocks_by_epoch","blocks_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","first_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","id","id","id","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block","node","serialize","tip","total_blocks","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","BFT","BftLeader","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","LastBlockTip","LastBlockTipBlock","LastBlockTipBlockBranches","LastBlockTipBlockDate","LastBlockTipBlockDateEpoch","LastBlockTipBlockLeader","LastBlockTipBlockLeaderOnBftLeader","LastBlockTipBlockLeaderOnPool","LastBlockTipBlockPreviousBlock","LastBlockTipBlockTransactions","LastBlockTipBlockTransactionsEdges","LastBlockTipBlockTransactionsEdgesNode","LastBlockTipBlockTransactionsEdgesNodeBlocks","LastBlockTipBlockTransactionsEdgesNodeBlocksDate","LastBlockTipBlockTransactionsEdgesNodeCertificate","LastBlockTipBlockTransactionsEdgesNodeCertificateOnEvmMapping","LastBlockTipBlockTransactionsEdgesNodeCertificateOnMintToken","LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistration","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationPool","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRetirement","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolUpdate","LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegation","LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount","LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationPools","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposal","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVote","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteCast","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlan","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanProposals","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanVoteStart","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteTally","LastBlockTipBlockTransactionsEdgesNodeInputs","LastBlockTipBlockTransactionsEdgesNodeInputsAddress","LastBlockTipBlockTransactionsEdgesNodeOutputs","LastBlockTipBlockTransactionsEdgesNodeOutputsAddress","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch","epoch","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","leader","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","registration","registration","registration","remove_bft_leader","remove_committee_id","retirement","retirement","retirement","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot","slot","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","tip","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","SettingsSettings","SettingsSettingsEpochStabilityDepth","SettingsSettingsFees","SettingsSettingsFeesPerCertificateFees","SettingsSettingsFeesPerVoteCertificateFees","Variables","__QUERY_WORKAROUND","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","constant","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","epoch_stability_depth","epoch_stability_depth","fees","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","per_certificate_fees","per_vote_certificate_fees","serialize","settings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Boolean","Float","ID","Int","NonZero","OPERATION_NAME","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PublicKey","QUERY","ResponseData","StakePoolStakePool","StakePoolStakePoolBlocks","StakePoolStakePoolBlocksEdges","StakePoolStakePoolBlocksEdgesNode","StakePoolStakePoolRegistration","StakePoolStakePoolRegistrationPool","StakePoolStakePoolRegistrationRewardAccount","StakePoolStakePoolRegistrationRewards","StakePoolStakePoolRegistrationRewardsRatio","StakePoolStakePoolRetirement","TimeOffsetSeconds","Value","Variables","__QUERY_WORKAROUND","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","first","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","management_threshold","max_limit","node","numerator","operators","owners","pool","pool","poolInfo","pool_id","pool_id","ratio","registration","registration","registration","retirement","retirement","retirement","retirement_time","reward_account","rewards","serialize","stake_pool","start_validity","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","BFT","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","Boolean","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","NonZero","OPERATION_NAME","Other","Other","PRODUCTION","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","PoolRewardParticipationCapping","PoolRewardParticipationCapping","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","TEST","TransactionByIdTransaction","TransactionByIdTransactionBlocks","TransactionByIdTransactionBlocksDate","TransactionByIdTransactionInitialConfigurationParams","TransactionByIdTransactionInitialConfigurationParamsConfigParams","TransactionByIdTransactionInputs","TransactionByIdTransactionInputsAddress","TransactionByIdTransactionOutputs","TransactionByIdTransactionOutputsAddress","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","Value","Variables","__QUERY_WORKAROUND","add_bft_leader","add_committee_id","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","configParam","config_params","consensus_type","constant","constant","constant","date","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","fees_in_treasury","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kes_update_speed","max","max_limit","milli","min","numerator","numerator","numerator","numerator","outputs","per_certificate_fees","per_vote_certificate_fees","proposal_expiration","ratio","ratio","ratio","remove_bft_leader","remove_committee_id","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","serialize","serialize","serialize","slot","slot","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","transaction_max_expiry_epochs","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","BFT","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","Boolean","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionByIdCertificatesTransaction","TransactionByIdCertificatesTransactionBlocks","TransactionByIdCertificatesTransactionBlocksDate","TransactionByIdCertificatesTransactionCertificate","TransactionByIdCertificatesTransactionCertificateOnEvmMapping","TransactionByIdCertificatesTransactionCertificateOnMintToken","TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegation","TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegationPools","TransactionByIdCertificatesTransactionCertificateOnPoolRegistration","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationPool","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardAccount","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewards","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardsRatio","TransactionByIdCertificatesTransactionCertificateOnPoolRetirement","TransactionByIdCertificatesTransactionCertificateOnPoolUpdate","TransactionByIdCertificatesTransactionCertificateOnStakeDelegation","TransactionByIdCertificatesTransactionCertificateOnStakeDelegationAccount","TransactionByIdCertificatesTransactionCertificateOnStakeDelegationPools","TransactionByIdCertificatesTransactionCertificateOnUpdateProposal","TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChanges","TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChangesConfigParams","TransactionByIdCertificatesTransactionCertificateOnUpdateProposalProposerId","TransactionByIdCertificatesTransactionCertificateOnUpdateVote","TransactionByIdCertificatesTransactionCertificateOnUpdateVoteVoterId","TransactionByIdCertificatesTransactionCertificateOnVoteCast","TransactionByIdCertificatesTransactionCertificateOnVotePlan","TransactionByIdCertificatesTransactionCertificateOnVotePlanCommitteeEnd","TransactionByIdCertificatesTransactionCertificateOnVotePlanProposals","TransactionByIdCertificatesTransactionCertificateOnVotePlanVoteEnd","TransactionByIdCertificatesTransactionCertificateOnVotePlanVoteStart","TransactionByIdCertificatesTransactionCertificateOnVoteTally","TransactionByIdCertificatesTransactionInputs","TransactionByIdCertificatesTransactionInputsAddress","TransactionByIdCertificatesTransactionOutputs","TransactionByIdCertificatesTransactionOutputsAddress","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","epoch","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kes_update_speed","management_threshold","max","max_limit","max_limit","milli","min","name","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","registration","registration","registration","remove_bft_leader","remove_committee_id","retirement","retirement","retirement","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","transaction","transaction_max_expiry_epochs","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","BFT","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BlockDateEpoch","Boolean","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusType","ConsensusTypeEnum","Discrimination","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","KesUpdateSpeed","LinearFee","LinearFee","LinearRewardParams","Milli","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFee","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardPot","RewardPot","Slot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TransactionsByAddressTip","TransactionsByAddressTipTransactionsByAddress","TransactionsByAddressTipTransactionsByAddressEdges","TransactionsByAddressTipTransactionsByAddressEdgesNode","TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocks","TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocksDate","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificate","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnEvmMapping","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnMintToken","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegation","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegationPools","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistration","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationPool","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardAccount","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewards","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardsRatio","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRetirement","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolUpdate","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegation","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationAccount","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationPools","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposal","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChanges","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChangesConfigParams","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalProposerId","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVote","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVoteVoterId","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteCast","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlan","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanCommitteeEnd","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanProposals","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanVoteEnd","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanVoteStart","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteTally","TransactionsByAddressTipTransactionsByAddressEdgesNodeInputs","TransactionsByAddressTipTransactionsByAddressEdgesNodeInputsAddress","TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputs","TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputsAddress","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","bech32","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","changes","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kes_update_speed","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","registration","registration","registration","remove_bft_leader","remove_committee_id","retirement","retirement","retirement","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","tip","total_count","total_count","transaction_max_expiry_epochs","transactions_by_address","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockDateEpoch","Boolean","EpochNumber","ExternalProposalId","Float","ID","Int","OPERATION_NAME","Other","PRIVATE","PUBLIC","PayloadType","QUERY","ResponseData","Slot","TallyPrivateStatus","TallyPublicStatus","Variables","VotePayloadPrivateStatus","VotePayloadPublicStatus","VotePlanByIdVotePlan","VotePlanByIdVotePlanCommitteeEnd","VotePlanByIdVotePlanProposals","VotePlanByIdVotePlanProposalsOptions","VotePlanByIdVotePlanProposalsTally","VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatus","VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatusOptions","VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatus","VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatusOptions","VotePlanByIdVotePlanProposalsVotes","VotePlanByIdVotePlanProposalsVotesEdges","VotePlanByIdVotePlanProposalsVotesEdgesNode","VotePlanByIdVotePlanProposalsVotesEdgesNodeAddress","VotePlanByIdVotePlanProposalsVotesEdgesNodePayload","VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus","VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus","VotePlanByIdVotePlanVoteEnd","VotePlanByIdVotePlanVoteStart","VotePlanId","Weight","__QUERY_WORKAROUND","address","blockDate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_end","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","encrypted_vote","end","end","end","epoch","epoch","epoch","epoch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","node","options","options","options","payload","payload_type","proof","proposal_id","proposals","results","results","serialize","serialize","slot","slot","slot","slot","start","start","start","tally","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vec","vec","vec","vec","vec","vote_end","vote_plan","vote_start","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ExplorerVerifier","InvalidCertificate","Unimplemented","VerifierError","all_blocks_verifier","all_vote_plans_verifier","assert_address","assert_address_owner_delegation","assert_address_pool_registration","assert_address_pool_retirement","assert_address_pool_update","assert_address_stake_delegation","assert_address_update_proposal","assert_address_update_vote","assert_address_vote_cast","assert_address_vote_plan","assert_address_vote_tally","assert_all_block_config_param","assert_all_blocks","assert_all_blocks_owner_delegation","assert_all_blocks_pool_registration","assert_all_blocks_pool_retirement","assert_all_blocks_pool_update","assert_all_blocks_stake_delegation","assert_all_blocks_transaction_param","assert_all_blocks_update_proposal","assert_all_blocks_update_vote","assert_all_blocks_vote_cast","assert_all_blocks_vote_plan","assert_all_blocks_vote_tally","assert_all_stake_pools","assert_all_vote_plans","assert_block_by_chain_length","assert_block_by_chain_length_owner_delegation","assert_block_by_chain_length_pool_registration","assert_block_by_chain_length_pool_retirement","assert_block_by_chain_length_pool_update","assert_block_by_chain_length_stake_delegation","assert_block_by_chain_length_transaction_param","assert_block_by_chain_length_update_proposal","assert_block_by_chain_length_update_vote","assert_block_by_chain_length_vote_cast","assert_block_by_chain_length_vote_plan","assert_block_by_chain_length_vote_tally","assert_block_by_id","assert_block_config_param","assert_block_owner_delegation","assert_block_pool_registration","assert_block_pool_retirement","assert_block_pool_update","assert_block_stake_delegation","assert_block_transaction_param","assert_block_update_proposal","assert_block_update_vote","assert_block_vote_cast","assert_block_vote_plan","assert_block_vote_tally","assert_epoch_stability_depth","assert_fees","assert_last_block","assert_last_block_owner_delegation","assert_last_block_pool_registration","assert_last_block_pool_retirement","assert_last_block_pool_update","assert_last_block_stake_delegation","assert_last_block_transaction_param","assert_last_block_update_proposal","assert_last_block_update_vote","assert_last_block_vote_cast","assert_last_block_vote_plan","assert_last_block_vote_tally","assert_owner_delegation","assert_pool_registration","assert_pool_retirement","assert_pool_update","assert_stake_delegation","assert_stake_pool","assert_transaction_address_params","assert_transaction_certificates","assert_transaction_params","assert_transactions_address","assert_transactions_address_certificate","assert_update_proposal","assert_update_vote","assert_vote_cast","assert_vote_plan","assert_vote_plan_by_id","assert_vote_tally","block_by_id_verifier","blocks_by_chain_length_verifier","borrow","borrow","borrow_mut","borrow_mut","decode_bech32_pk","decode_block","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","last_block_verifier","stake_pool_verifier","to_string","transaction_by_id_verifier","transactions_by_address_verify","try_from","try_from","try_into","try_into","type_id","type_id","vote_plan_verifier","vzip","vzip","received","LastBlockResponse","block","block_date","borrow","borrow_mut","data","deref","deref_mut","drop","fmt","from","init","into","into_request","new","try_from","try_into","type_id","vzip","CannotSendFragment","CannotSendFragmentBatch","FragmentNode","FragmentNodeError","ListFragmentError","MemPoolCheck","ReqwestError","UnknownError","_DERIVE_core_fmt_Debug_FOR_FragmentNodeError","alias","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fragment_id","fragment_id","fragment_logs","from","from","from","from","init","init","into","into","into_request","into_request","log_content","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","logs","new","send_batch_fragments","send_fragment","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","JormungandrClient","JormungandrServerImpl","client","node","read_into","server","types","watch","CLIENT_RETRY_WAIT","InvalidAddressFormat","InvalidRequest","JormungandrClient","JormungandrWatchClient","MockClientError","WatchTipNotifier","addr","addr","alloc","block_stream_to_vec","block_subscription","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fragment_stream_to_vec","from","from","from","from_address","from_address","get_blocks","get_fragments","get_genesis_block_hash","handshake","hash_to_bin","hashes_to_bin_vec","headers","headers_stream_to_vec","init","init","init","inner_client","inner_client","into","into","into","into_request","into_request","into_request","message","new","new","phantom","ptr","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","rt","rt","sync_multiverse","tip","tip_subscription","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upload_blocks","vzip","vzip","vzip","wait_for_chain_length","BlockEvent","ClientAuthRequest","ClientAuthResponse","Gossip","HandshakeRequest","HandshakeResponse","PeersRequest","PeersResponse","PullBlocksRequest","PullBlocksToTipRequest","PullHeadersRequest","PushHeadersResponse","TipRequest","TipResponse","UploadBlocksResponse","block0","block_event","block_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","item","limit","node_client","node_id","node_id","node_server","nodes","nonce","nonce","peers","signature","signature","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Announce","Item","Missing","Solicit","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","encode","encoded_len","eq","fmt","from","init","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","NodeClient","accept_gzip","block_subscription","borrow","borrow_mut","client_auth","clone","clone_into","connect","deref","deref_mut","drop","fmt","fragment_subscription","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","init","inner","into","into_request","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_gzip","tip","to_owned","try_from","try_into","type_id","upload_blocks","vzip","with_interceptor","BlockSubscriptionStream","FragmentSubscriptionStream","GetBlocksStream","GetFragmentsStream","GetHeadersStream","GossipSubscriptionStream","Node","NodeServer","PullBlocksStream","PullBlocksToTipStream","PullHeadersStream","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow_mut","borrow_mut","call","call","client_auth","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fragment_subscription","from","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","init","init","inner","into","into","into_request","into_request","new","peers","poll_ready","poll_ready","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_compression_encodings","tip","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upload_blocks","vzip","vzip","with_interceptor","Bft","BlockSubscription","ClientAuth","FragmentSubscription","GenesisPraos","GetBlocks","GetFragments","GetHeaders","GetPeers","GossipSubscription","Handshake","Init","JormungandrServerImpl","MethodType","MockBuilder","MockController","MockExitCode","MockLogger","MockServerData","MockVerifier","ProtocolVersion","PullBlocks","PullBlocksToTip","PullHeaders","PushHeaders","Success","Timeout","Tip","UploadBlocks","auth_nonce","block_subscription","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","client_auth","clone","clone","clone_into","clone_into","controller","data","data","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fragment_subscription","from","from","from","from","genesis_block","genesis_hash","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","init","init","init","into","into","into","into_request","into_request","into_request","invalid_block0_hash","invalid_block0_hash","keypair","logger","logger","mock_port","new","peers","port","profile","protocol","protocol_version","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","start_thread","stop_signal","storage","tip","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upload_blocks","verifier","verifier","vzip","vzip","vzip","ChannelWriter","MockBuilder","borrow","borrow","borrow_mut","borrow_mut","build","build_data","default","deref","deref","deref_mut","deref_mut","drop","drop","flush","from","from","genesis_block","init","init","into","into","into_request","into_request","invalid_block0_hash","mock_port","protocol_version","start_thread","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_genesis_block","with_invalid_block0_hash","with_port","with_protocol_version","write","MockController","address","borrow","borrow_mut","data","deref","deref_mut","drop","finish_and_verify_that","from","genesis_hash","init","into","into_request","new","port","set_genesis","set_protocol","set_tip","set_tip_block","stop","stop_signal","try_from","try_into","type_id","verifier","vzip","AUTH_NONCE_LEN","Error","MockServerData","Read","Storage","TIP_TAG","Write","auth_nonce","block0","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","generate_auth_nonce","genesis_block","genesis_hash","genesis_hash","genesis_hash_mut","get_block","init","init","into","into","into_request","into_request","invalid_block0_hash","invalid_block0_hash","keypair","new","node_id","node_signature","profile","profile","protocol","protocol","protocol_mut","put_block","set_tip","source","storage","storage","tip","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate_peer_node_id","vzip","vzip","BlockSubscription","ChannelReader","ClientAuth","FragmentSubscription","GetBlocks","GetFragments","GetHeaders","GetPeers","GossipSubscription","Handshake","Init","MethodType","MockLogger","PullBlocks","PullBlocksToTip","PullHeaders","PushHeaders","Tip","UploadBlocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","executed_at_least_once","fmt","fmt","from","from","from","get_log_content","init","init","init","into","into","into","into_request","into_request","into_request","new","read","serialize","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MockVerifier","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","logger","method_executed_at_least_once","new","try_from","try_into","type_id","vzip","Block","BlockIds","Fragment","FragmentIds","Header","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","content","content","content","default","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","ids","ids","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BlockSubscriptionRequest","MempoolSubscriptionRequest","SyncMultiverseRequest","TipSubscriptionRequest","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","watch_client","watch_server","WatchClient","accept_gzip","block_subscription","borrow","borrow_mut","clone","clone_into","connect","deref","deref_mut","drop","fmt","from","init","inner","into","into_request","new","send_gzip","sync_multiverse","tip_subscription","to_owned","try_from","try_into","type_id","vzip","with_interceptor","BlockSubscriptionStream","SyncMultiverseStream","TipSubscriptionStream","Watch","WatchServer","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","sync_multiverse","tip_subscription","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","BackwardCompatibleRest","GITHUB_TOKEN","LegacyConfigError","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","LegacyNodeConfigManager","Log","Mempool","NodeConfig","P2p","Policy","RELEASES","Rest","TopicsOfInterest","TrustedPeer","__private_field","address","blocks","bootstrap","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","connection","cors","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","download_last_n_releases","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","file_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_jormungandr_bin","get_listen_addr","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","layers","listen","log","log_max_entries","mempool","messages","p2p","persistent_log","policy","pool_max_entries","quarantine_duration","quarantine_whitelist","rest","rest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","skip_bootstrap","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","LegacyConfigError","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","LegacyNodeConfigManager","as_communication_params","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","file","fmt","from","init","into","into_request","log_file_path","node","node_config","node_config_path","p2p_listen_address","p2p_public_address","rest_socket_addr","serialize","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","to_owned","try_from","try_into","type_id","vzip","write_node_config","Error","Fixture","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","SerdeYaml","UnsupportedVersion","based_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_node_config_after_0_12_0","build_node_config_after_0_13_0","build_node_config_before_0_8_19","config","convert","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","generate_legacy_poldercast_id","init","init","init","into","into","into","into_request","into_request","into_request","new","new","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","version","vzip","vzip","vzip","with_log","with_storage","with_trusted_peers","LegacyNodeConfig","Log","P2p","TrustedPeer","address","allow_private_addresses","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","file_path","fmt","fmt","fmt","fmt","from","from","from","from","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","jrpc","layers","listen","log","max_connections","max_inbound_connections","mempool","p2p","policy","public_address","public_id","rest","serialize","serialize","serialize","serialize","single_log","skip_bootstrap","storage","to_owned","to_owned","to_owned","to_owned","topics_of_interest","trusted_peers","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","whitelist","BackwardCompatibleRest","account_state","account_state_by_pk","account_votes","account_votes_all","account_votes_with_plan_id","block_as_bytes","borrow","borrow_mut","clone","clone_into","deref","deref_mut","disable_logger","drop","enable_logger","epoch_reward_history","fmt","fragment_logs","fragments_logs","fragments_statuses","from","init","into","into_request","leaders_log","network_stats","new","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","print_debug_response","print_response_text","raw","raw","remaining_rewards","rest_settings","reward_history","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","tip","to_owned","try_from","try_into","type_id","updates","vote_plan_statuses","vzip","Version","build","major","minor","patch","pre","version_0_13_0","version_0_8_19","DEBUG","ERROR","INFO","JormungandrLogger","Level","LogEntry","LogEntryLegacy","MESSAGE","RawFields","SUCCESFULLY_CREATED_BLOCK_MSG","TRACE","WARN","as_ref","assert_no_errors","base","block_date","block_date","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collect_available_input","collected_logs","collected_panics","contains_any_of","contains_error","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","entries","eq","equivalent","equivalent","equivalent","equivalent","error","error_contains","fields","filter_entries_with_block_creation","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get_created_blocks_counter","get_created_blocks_hashes","get_created_blocks_hashes_after","get_error_indicators","get_lines","get_lines_as_string","get_log_content","get_log_lines_with_level","get_panic_content","get_panic_lines","hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_later_than","last_validated_block_date","level","level","logs_collector","message","msg","new","panic_entries","panics_collector","partial_cmp","peer_addr","reason","reason_contains","serialize","serialize","serialize","span","spans","target","task","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_parse_line_as_entry","ts","ts","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Exited","Jormungandr","JormungandrProcess","ProcessStillActive","Running","ShutdownError","Starting","Status","Timeout","address","alias","alias","alias","alias","as_named_process","assert_no_errors_in_log","assert_no_errors_in_log_with_message","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_no_errors_in_log","check_startup_errors_in_logs","child","clone","clone_into","correct_state_verifier","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","explorer","fmt","fmt","fmt","fragment_logs","from","from","from","from","from","from","get_lines_with_error_and_invalid","grpc","grpc_client","init","init","init","into","into","into","into_request","into_request","into_request","is_running","last_block_height","log_content","log_content","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","log_stats","log_stats","logger","new","p2p_listen_addr","p2p_listen_address","p2p_public_address","p2p_public_address","pid","port_opened","ports_are_opened","process_id","rest","rest_address","rest_debug","rest_socket_addr","rest_uri","secure_rest","send_batch_fragments","send_fragment","shutdown","source","status","steal_temp_dir","stop","temp_dir","temp_dir","time_era","tip","to_owned","to_remote","to_string","to_trusted_peer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_bootstrap","wait_for_shutdown","log_content","timeout","RemoteJormungandr","RemoteJormungandrBuilder","alias","alias","alias","alias","borrow","borrow","borrow_mut","borrow_mut","build","clone_with_rest","deref","deref","deref_mut","deref_mut","drop","drop","fragment_logs","from","from","from_config","get_lines_with_error_and_invalid","grpc","grpc","grpc","init","init","into","into","into_request","into_request","is_running","last_block_height","log_content","log_content","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","log_stats","logger","logger","new","new","node_alias","node_config","node_config","node_config","rest","rest","rest","send_batch_fragments","send_fragment","tip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_grpc","with_logger","with_node_config","with_rest","with_rest_client","CannotDeserialize","HashParseError","JormungandrRest","NonSuccessErrorCode","PollError","RawRest","ReadBytes","RequestError","RestError","RestSettings","account_state","account_state_by_pk","account_state_by_pk_raw","account_votes","account_votes_all","account_votes_with_plan_id","address","block","block_as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","disable_logger","drop","drop","enable_logger","epoch_reward_history","extract_certificate","fmt","fmt","fmt","fragment_logs","fragments_statuses","from","from","from","from","from","from","from","init","init","inner","inner","into","into","into_request","into_request","leaders_log","network_stats","new","new_with_cert","new_with_custom_settings","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","raw","raw","remaining_rewards","reward_history","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","settings","shutdown","source","stake_distribution","stake_distribution_at","stake_pools","stats","tip","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","updates","uri_from_socket_addr","vote_plan_statuses","vzip","vzip","checks","response","status","ApiVersion","ORIGIN","RawRest","V0","V1","account_state","account_state_by_pk","account_votes","account_votes_all","account_votes_with_plan_id","block","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","construct_headers","construct_headers_json","deref","deref","deref_mut","deref_mut","disable_logger","drop","drop","enable_logger","epoch_reward_history","fmt","fmt","fragment_logs","fragments_logs","fragments_statuses","from","from","get","init","init","into","into","into_request","into_request","leaders_log","network_stats","new","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","path","post","print_request_path","remaining_rewards","rest_settings","rest_settings_mut","reward_history","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","send_until_ok","settings","settings","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","tip","to_owned","to_string","try_from","try_from","try_from_str","try_into","try_into","type_id","type_id","updates","uri","uri","vote_plan_statuses","vzip","vzip","RestSettings","borrow","borrow_mut","certificate","clone","clone_into","cors","default","deref","deref_mut","drop","enable_debug","fmt","from","init","into","into_request","new_use_https","to_owned","try_from","try_into","type_id","use_https","vzip","CannotGetRestStatus","CommandBuilder","CommunicationParams","ConfigurableNodeConfig","ConfiguredStarter","EntryNotFoundInLogs","FaketimeConfig","File","File","FromGenesis","FsFixture","Hash","Hash","InMemory","InvalidBlock0Hash","JormungandrBootstrapper","JormungandrError","JormungandrNotLaunched","JormungandrParams","Leader","LeadershipMode","LegacyConfig","Log","NodeBlock0","OnFail","Panic","Params","Passive","PersistenceMode","Persistent","ProcessExited","Rest","RetryOnce","RetryUnlimitedOnPortOccupied","StartParamsNotDefined","Starter","StartupError","StartupVerificationMode","TestingDirectory","Timeout","TooManyAttempts","alias","alias","alias","benchmark","benchmark","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commands","config","config","configured_starter","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drift","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish_benchmark","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_command","get_jormungandr_app_path","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jormungandr_app","jormungandr_app_option","jormungandr_app_path","new","offset","on_fail","on_fail","params","sleep","source","start","start","start_async","start_async","start_benchmark_run","start_process","start_should_fail_with_message","start_with_fail_in_logs","start_with_fail_in_logs","start_with_fail_in_stderr","temp_dir","temp_dir","testing_dir","testing_directory","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verbose","verbose","verification_mode","verify_by","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","working_dir","entry","log_content","log_content","timeout","CommandBuilder","bin","borrow","borrow_mut","command","config","config","deref","deref_mut","drop","faketime","faketime","from","genesis_block","genesis_block_hash","genesis_block_path","get_command","init","into","into_request","leader_with_secret","log_file","new","rewards_history","rewards_history","secret","stderr_to_log_file","try_from","try_into","type_id","vzip","Block0SourceNotDefined","CannotApplyMinimalSetupDueToHash","CommunicationParams","ConfigurableNodeConfig","Error","Fixture","Io","JormungandrBootstrapper","JormungandrParams","Serde","Write","as_communication_params","borrow","borrow","borrow_mut","borrow_mut","builder","comm","communication","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","genesis","genesis","get_p2p_listen_port","init","init","into","into","into_request","into_request","leadership","leadership","log_file_path","new","node_config","node_config_path","node_config_path","p2p_listen_address","p2p_public_address","recreate_log_file","refresh_instance_params","regenerate_ports","rest_socket_addr","rewards_history","rewards_history","secret_path","secret_path","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_node_config","JormungandrBootstrapper","borrow","borrow_mut","build","create_new_leader_key","default","default_with_config","deref","deref_mut","drop","fmt","from","genesis","init","into","into_request","into_starter","jormungandr_app","leadership_mode","node_config","passive","rewards_history","secret","start","try_from","try_into","type_id","verbose","verbose","vzip","with_block0_configuration","with_block0_hash","with_jormungandr","with_leader_key","with_legacy_node_config","with_node_config","with_rewards_history","with_secret","CommunicationParams","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","p2p_listen_address","p2p_public_address","rest_socket_addr","to_owned","try_from","try_into","type_id","vzip","CannotConvertToTempDir","Error","Fixture","Temp","TestingDirectory","User","borrow","borrow","borrow_mut","borrow_mut","child","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from_temp","init","init","into","into","into_persistent","into_request","into_request","new_temp","path","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","try_into","type_id","type_id","vzip","vzip","FragmentLogVerifier","JormungandrStateVerifier","NoSnapshot","NoWalletInSnapshot","RestError","StateSnapshot","StateVerifierError","ValueError","address_gained_value","address_has_the_same_value","address_lost_value","as_identifier","assert_accepted_rejected","assert_bad_request","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fragment_log","fragment_logs","from","from","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","new","new","no_changes","record_address_state","rest","snapshot_before","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_for","value_moved_between_addresses","vzip","vzip","vzip","wallets","FragmentLogVerifier","assert_accepted_rejected","assert_all_valid","assert_bad_request","assert_contains_only","assert_empty","assert_empty_ids","assert_in_block","assert_invalid","assert_invalid_id","assert_multiple_ids","assert_no_fragments","assert_not_exist","assert_not_in_block","assert_single_id","assert_size","assert_valid","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","rest","try_from","try_into","type_id","vzip","BranchCount","CachedReleases","CannotDeserialize","CannotFindReleaseWithVersion","ConsumptionBenchmarkError","ConsumptionBenchmarkRun","Download","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","Endurance","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","GitHubApiBuilder","GitHubApiError","InvalidChecksum","Io","MeasurementReportInterval","MeasurementReporter","NamedProcess","NoProcessWitId","Openssl","RateLimitExceeded","Release","RequestError","ResourcesUsage","Speed","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","StopCriteria","StorageBuilder","SyncNode","SyncNodeError","SyncWaitParams","Thresholds","Timestamp","VerificationError","VoteCastCounter","VotePlanBuilder","VotePlanExtension","WrongChecksum","against","against","as_secs","as_secs","assert","assert_equals","asserts","assets","benchmark","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","block0","blockchain_config","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collector","compare","configuration","convert_to_der","cpu_usage","cpu_usage","current_marker","decompress","default","default","definition","definition","definition","definition","definition","definition","definition","definition","definition","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","download_file","draft","draft","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration_since","efficiency","efficiency","elapsed","endurance","ensure_node_is_in_sync_with_others","ensure_nodes_are_in_sync","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exception","exception","exception","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","genrsa","get_asset_for_current_os_by_version","get_hash","get_release_for_os","green_threshold","hash","id","id","increment","increment_by","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_thresholds","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","markers","max","max","max","max","max_endurance_reached","memory_usage","memory_usage","name","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new_consumption","new_efficiency","new_endurance","new_speed","no_target","no_target","no_target","observer","panic","partial_cmp","partial_cmp","partial_cmp","pkcs8","prerelease","prerelease","print","print","print","print_with_thresholds","process","program","red_threshold","released_date","released_date","releases_per_os","releases_per_os","req","resources","settings","snapshot","source","speed","start","start","start","start_marker","start_marker","start_marker","status","stop","stop","stop","stop","storage","target","target","target","thresholds","thresholds","thresholds","thresholds","thresholds","thresholds","thresholds","time","timeout_exceeded","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","verify","version","version","version","version_str","virtual_memory_usage","virtual_memory_usage","vit","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_endpoint_url","with_thresholds","with_token","x509","yellow_threshold","error","response","InitialsAssert","VotePlanStatusAssert","assert_contains","assert_not_contain","assert_proposal_tally","node","speed_benchmark_from_log","storage_loading_benchmark_from_log","sync","speed_benchmark_from_log","storage_loading_benchmark_from_log","Long","MeasurementReportInterval","MeasurementReporter","Standard","Standard","SyncNode","SyncNodeError","SyncNodeRecord","SyncWaitParams","TimeoutWhenSyncingTargetNode","VerificationError","WithDisruption","ZeroWait","alias","alias","block_height","counter","ensure_node_is_in_sync_with_others","ensure_nodes_are_in_sync","get_lines_with_error_and_invalid","interval","is_running","last_block_height","log_content","log_stats","measure","measure_and_log_sync_time","measure_fragment_propagation_speed","measure_how_many_nodes_are_running","node","report","tip","wait","wait_for_nodes_sync","sync_nodes","target_node","timeout","longest_path_length","no_of_nodes","no_of_nodes","restart_coeff","measure_and_log_sync_time","measure_fragment_propagation_speed","measure_how_many_nodes_are_running","print_error_for_failed_leaders","SyncNode","SyncNodeError","SyncNodeRecord","TimeoutWhenSyncingTargetNode","VerificationError","alias","alias","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","get_lines_with_error_and_invalid","init","init","into","into","into_request","into_request","is_running","last_block_height","log_content","log_stats","new","source","tip","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","sync_nodes","target_node","timeout","Long","MeasurementReportInterval","MeasurementReporter","Standard","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","counter","deref","deref","deref_mut","deref_mut","do_if_interval_reached","do_if_interval_reached_and_inc","drop","drop","fmt","from","from","increment","init","init","interval","into","into","into_request","into_request","is_interval_reached","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Standard","SyncWaitParams","WithDisruption","ZeroWait","borrow","borrow_mut","calculate_wait_time","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","large_network","network_size","nodes_restart","timeout","to_owned","try_from","try_into","two_nodes","type_id","vzip","wait_time","longest_path_length","no_of_nodes","no_of_nodes","restart_coeff","Bech32Error","Block0ConfigurationExtension","Block0Error","Block0ParseError","IapyxStatsCommandError","IoError","Ledger","Read","SerdeJson","SerdeYaml","Write","borrow","borrow_mut","decode_block0","deref","deref_mut","drop","encode_block0","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_block","init","into","into_request","read_genesis_yaml","read_initials","settings","source","to_block_hash","to_string","try_from","try_into","type_id","utxo_for_address","utxos","vote_plans","vzip","write_genesis_yaml","BlockchainConfigurationExtension","reward_parameters","OutputCollector","borrow","borrow_mut","collected","deref","deref_mut","drop","from","get_available_input","init","into","into_request","new","read_input","rx","take_available_input","try_from","try_into","type_id","vzip","Block0ConfigurationBuilder","SecretModelFactory","get_app_from_current_dir","get_explorer_app","get_jcli_app","get_jormungandr_app","get_openapi_path","get_working_directory","create_new_key_pair","Event","Observable","Observer","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","finish_all","finished","fmt","from","init","into","into_request","message","new","notify","notify_all","register","to_owned","try_from","try_into","type_id","vzip","persist_dir_on_panic","ProcessOutput","as_hash","root_dir","tls_ca_crt","tls_server_crt","tls_server_private_key","SettingsDtoExtension","genesis_block_hash","BLOCK_DATA_LENGTH","BlocksCount","BranchCount","Limited","SizeInMb","StopCriteria","StorageBuilder","Unlimited","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","branches","build","criterion_met","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","end","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","new","path","stop_criteria","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","get_current_date","is_it_due","wait_for_date","wait_for_epoch","Error","VerificationFailed","assert","assert_equals","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","into_request","to_string","try_from","try_into","type_id","vzip","LoadCannotSendAnyMoreRequests","NoMoreRequestsToSentForWallet","VoteCastCounter","VoteCastCounterError","VotePlanBuilder","VotePlanExtension","VotePlanIsDrainedFromVotes","action","as_json","as_json_str","builder","member_keys","options_size","payload","proposals_builder","register","tally_end","tally_start","vote_cast_register","vote_start","voting_token","available_to_send","available_to_send","requested_batch_size","requested_batch_size","requested_batch_size","wallet_idx","ProposalsBuilder","VotePlanBuilder","action","action_type","borrow","borrow","borrow_mut","borrow_mut","build","build","count","default","default","deref","deref","deref_mut","deref_mut","drop","drop","external_ids","fmt","from","from","init","init","into","into","into_request","into_request","member_keys","member_public_key","member_public_keys","new","options_size","options_size","payload","private","proposals_builder","proposals_count","proposals_external_ids","public","tally_end","tally_end","tally_start","tally_start","try_from","try_from","try_into","try_into","type_id","type_id","vote_start","vote_start","voting_token","voting_token","vzip","vzip","with_count","with_ids","Error","LoadCannotSendAnyMoreRequests","NoMoreRequestsToSentForWallet","VoteCastCounter","VotePlanIsDrainedFromVotes","VotePlanVoteCastPosition","VotesToCast","WalletVoteCastPosition","advance_batch","advance_batch","advance_batch","advance_batch_force","advance_batch_force","advance_single","advance_single_force","advance_single_force","available_to_send","available_to_send","available_to_send","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_send_next_batch","can_send_next_batch","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","current","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","from","from","from","from","from","from_vote_plan","id","id","id","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_drained","is_drained","is_drained","limit","new","new","new","new","range","range","register","register","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","available_to_send","available_to_send","requested_batch_size","requested_batch_size","requested_batch_size","wallet_idx","MultiaddrExtension","StakePool","inner","leader","multiaddr","owner","stake_pool","to_http_addr","MultiaddrExtension","to_http_addr","StakePool","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","info","info_mut","init","inner","into","into_request","kes","leader","leader","new","owner","owner","to_owned","try_from","try_into","type_id","vrf","vzip"],"q":[[0,"jormungandr_automation"],[5,"jormungandr_automation::jcli"],[79,"jormungandr_automation::jcli::Error"],[84,"jormungandr_automation::jcli::api"],[98,"jormungandr_automation::jcli::api::address"],[122,"jormungandr_automation::jcli::api::certificate"],[152,"jormungandr_automation::jcli::api::genesis"],[174,"jormungandr_automation::jcli::api::key"],[203,"jormungandr_automation::jcli::api::rest"],[223,"jormungandr_automation::jcli::api::rest::v0"],[257,"jormungandr_automation::jcli::api::rest::v0::block"],[277,"jormungandr_automation::jcli::api::rest::v0::message"],[295,"jormungandr_automation::jcli::api::rest::v0::node"],[312,"jormungandr_automation::jcli::api::rest::v0::utxo"],[333,"jormungandr_automation::jcli::api::rest::v0::vote"],[351,"jormungandr_automation::jcli::api::rest::v1"],[369,"jormungandr_automation::jcli::api::rest::v1::vote"],[386,"jormungandr_automation::jcli::api::transaction"],[429,"jormungandr_automation::jcli::api::votes"],[457,"jormungandr_automation::jcli::api::votes::committee"],[479,"jormungandr_automation::jcli::api::votes::committee::communication_key"],[497,"jormungandr_automation::jcli::api::votes::committee::member_key"],[515,"jormungandr_automation::jcli::api::votes::crs"],[532,"jormungandr_automation::jcli::api::votes::tally"],[553,"jormungandr_automation::jcli::command"],[590,"jormungandr_automation::jcli::command::address"],[615,"jormungandr_automation::jcli::command::address::account"],[635,"jormungandr_automation::jcli::command::address::info"],[653,"jormungandr_automation::jcli::command::address::single"],[674,"jormungandr_automation::jcli::command::certificate"],[706,"jormungandr_automation::jcli::command::genesis"],[732,"jormungandr_automation::jcli::command::genesis::decode"],[751,"jormungandr_automation::jcli::command::genesis::encode"],[770,"jormungandr_automation::jcli::command::genesis::hash"],[788,"jormungandr_automation::jcli::command::key"],[816,"jormungandr_automation::jcli::command::key::from_bytes"],[835,"jormungandr_automation::jcli::command::key::generate"],[854,"jormungandr_automation::jcli::command::key::to_bytes"],[873,"jormungandr_automation::jcli::command::key::to_public"],[892,"jormungandr_automation::jcli::command::rest"],[914,"jormungandr_automation::jcli::command::rest::v0"],[954,"jormungandr_automation::jcli::command::rest::v0::block"],[973,"jormungandr_automation::jcli::command::rest::v0::message"],[992,"jormungandr_automation::jcli::command::rest::v0::node"],[1010,"jormungandr_automation::jcli::command::rest::v0::utxo"],[1031,"jormungandr_automation::jcli::command::rest::v0::vote"],[1050,"jormungandr_automation::jcli::command::rest::v1"],[1070,"jormungandr_automation::jcli::command::rest::v1::vote"],[1088,"jormungandr_automation::jcli::command::transaction"],[1122,"jormungandr_automation::jcli::command::votes"],[1154,"jormungandr_automation::jcli::command::votes::committee"],[1176,"jormungandr_automation::jcli::command::votes::committee::communication_key"],[1195,"jormungandr_automation::jcli::command::votes::committee::member_key"],[1214,"jormungandr_automation::jcli::command::votes::crs"],[1232,"jormungandr_automation::jcli::command::votes::election_public_key"],[1250,"jormungandr_automation::jcli::command::votes::tally"],[1271,"jormungandr_automation::jcli::data"],[1275,"jormungandr_automation::jcli::data::witness"],[1342,"jormungandr_automation::jcli::services"],[1371,"jormungandr_automation::jcli::services::Error"],[1376,"jormungandr_automation::jcli::services::certificate_builder"],[1426,"jormungandr_automation::jcli::services::fragment_check"],[1453,"jormungandr_automation::jcli::services::fragment_sender"],[1472,"jormungandr_automation::jcli::services::fragments_check"],[1492,"jormungandr_automation::jcli::services::transaction_builder"],[1544,"jormungandr_automation::jormungandr"],[1822,"jormungandr_automation::jormungandr::FragmentNodeError"],[1830,"jormungandr_automation::jormungandr::JormungandrError"],[1833,"jormungandr_automation::jormungandr::RestError"],[1836,"jormungandr_automation::jormungandr::ShutdownError"],[1838,"jormungandr_automation::jormungandr::StartupError"],[1842,"jormungandr_automation::jormungandr::configuration"],[1885,"jormungandr_automation::jormungandr::configuration::block0"],[1887,"jormungandr_automation::jormungandr::configuration::block0::block0_config_builder"],[1949,"jormungandr_automation::jormungandr::configuration::jormungandr_config"],[1969,"jormungandr_automation::jormungandr::configuration::node"],[1973,"jormungandr_automation::jormungandr::configuration::node::manager"],[2000,"jormungandr_automation::jormungandr::configuration::node::node_config_builder"],[2039,"jormungandr_automation::jormungandr::configuration::secret"],[2068,"jormungandr_automation::jormungandr::explorer"],[2168,"jormungandr_automation::jormungandr::explorer::client"],[2212,"jormungandr_automation::jormungandr::explorer::configuration"],[2289,"jormungandr_automation::jormungandr::explorer::data"],[2551,"jormungandr_automation::jormungandr::explorer::data::address"],[2609,"jormungandr_automation::jormungandr::explorer::data::all_blocks"],[4394,"jormungandr_automation::jormungandr::explorer::data::all_stake_pools"],[4928,"jormungandr_automation::jormungandr::explorer::data::all_vote_plans"],[5368,"jormungandr_automation::jormungandr::explorer::data::block"],[5426,"jormungandr_automation::jormungandr::explorer::data::block_by_id"],[7423,"jormungandr_automation::jormungandr::explorer::data::blocks_by_chain_length"],[9111,"jormungandr_automation::jormungandr::explorer::data::epoch"],[9278,"jormungandr_automation::jormungandr::explorer::data::last_block"],[10982,"jormungandr_automation::jormungandr::explorer::data::settings"],[11115,"jormungandr_automation::jormungandr::explorer::data::stake_pool"],[11426,"jormungandr_automation::jormungandr::explorer::data::transaction_by_id"],[12573,"jormungandr_automation::jormungandr::explorer::data::transaction_by_id_certificates"],[14308,"jormungandr_automation::jormungandr::explorer::data::transactions_by_address"],[15864,"jormungandr_automation::jormungandr::explorer::data::vote_plan_by_id"],[16309,"jormungandr_automation::jormungandr::explorer::verifiers"],[16435,"jormungandr_automation::jormungandr::explorer::verifiers::VerifierError"],[16436,"jormungandr_automation::jormungandr::explorer::wrappers"],[16455,"jormungandr_automation::jormungandr::fragment_node"],[16512,"jormungandr_automation::jormungandr::fragment_node::FragmentNodeError"],[16520,"jormungandr_automation::jormungandr::grpc"],[16528,"jormungandr_automation::jormungandr::grpc::client"],[16626,"jormungandr_automation::jormungandr::grpc::node"],[16977,"jormungandr_automation::jormungandr::grpc::node::block_event"],[17002,"jormungandr_automation::jormungandr::grpc::node::node_client"],[17041,"jormungandr_automation::jormungandr::grpc::node::node_server"],[17111,"jormungandr_automation::jormungandr::grpc::server"],[17234,"jormungandr_automation::jormungandr::grpc::server::builder"],[17276,"jormungandr_automation::jormungandr::grpc::server::controller"],[17303,"jormungandr_automation::jormungandr::grpc::server::data"],[17368,"jormungandr_automation::jormungandr::grpc::server::logger"],[17440,"jormungandr_automation::jormungandr::grpc::server::verifier"],[17457,"jormungandr_automation::jormungandr::grpc::types"],[17572,"jormungandr_automation::jormungandr::grpc::watch"],[17663,"jormungandr_automation::jormungandr::grpc::watch::watch_client"],[17690,"jormungandr_automation::jormungandr::grpc::watch::watch_server"],[17742,"jormungandr_automation::jormungandr::legacy"],[17962,"jormungandr_automation::jormungandr::legacy::config"],[17998,"jormungandr_automation::jormungandr::legacy::config::node"],[18067,"jormungandr_automation::jormungandr::legacy::config::node::data"],[18171,"jormungandr_automation::jormungandr::legacy::rest"],[18229,"jormungandr_automation::jormungandr::legacy::version"],[18237,"jormungandr_automation::jormungandr::logger"],[18375,"jormungandr_automation::jormungandr::process"],[18492,"jormungandr_automation::jormungandr::process::ShutdownError"],[18494,"jormungandr_automation::jormungandr::remote"],[18561,"jormungandr_automation::jormungandr::rest"],[18656,"jormungandr_automation::jormungandr::rest::RestError"],[18659,"jormungandr_automation::jormungandr::rest::raw"],[18744,"jormungandr_automation::jormungandr::rest::settings"],[18768,"jormungandr_automation::jormungandr::starter"],[19031,"jormungandr_automation::jormungandr::starter::StartupError"],[19035,"jormungandr_automation::jormungandr::starter::commands"],[19066,"jormungandr_automation::jormungandr::starter::params"],[19140,"jormungandr_automation::jormungandr::starter::params::builder"],[19178,"jormungandr_automation::jormungandr::starter::params::communication"],[19199,"jormungandr_automation::jormungandr::starter::testing_directory"],[19251,"jormungandr_automation::jormungandr::verifier"],[19321,"jormungandr_automation::jormungandr::verifier::fragment_log"],[19353,"jormungandr_automation::testing"],[19935,"jormungandr_automation::testing::GitHubApiError"],[19937,"jormungandr_automation::testing::asserts"],[19942,"jormungandr_automation::testing::benchmark"],[19946,"jormungandr_automation::testing::benchmark::node"],[19948,"jormungandr_automation::testing::benchmark::sync"],[19982,"jormungandr_automation::testing::benchmark::sync::SyncNodeError"],[19985,"jormungandr_automation::testing::benchmark::sync::SyncWaitParams"],[19989,"jormungandr_automation::testing::benchmark::sync::measure"],[19993,"jormungandr_automation::testing::benchmark::sync::node"],[20045,"jormungandr_automation::testing::benchmark::sync::node::SyncNodeError"],[20048,"jormungandr_automation::testing::benchmark::sync::report"],[20089,"jormungandr_automation::testing::benchmark::sync::wait"],[20117,"jormungandr_automation::testing::benchmark::sync::wait::SyncWaitParams"],[20121,"jormungandr_automation::testing::block0"],[20169,"jormungandr_automation::testing::blockchain_config"],[20171,"jormungandr_automation::testing::collector"],[20191,"jormungandr_automation::testing::configuration"],[20199,"jormungandr_automation::testing::keys"],[20200,"jormungandr_automation::testing::observer"],[20227,"jormungandr_automation::testing::panic"],[20228,"jormungandr_automation::testing::process"],[20230,"jormungandr_automation::testing::resources"],[20234,"jormungandr_automation::testing::settings"],[20236,"jormungandr_automation::testing::storage"],[20290,"jormungandr_automation::testing::time"],[20294,"jormungandr_automation::testing::verify"],[20314,"jormungandr_automation::testing::vit"],[20335,"jormungandr_automation::testing::vit::VoteCastCounterError"],[20341,"jormungandr_automation::testing::vit::builder"],[20400,"jormungandr_automation::testing::vit::vote_cast_register"],[20528,"jormungandr_automation::testing::vit::vote_cast_register::Error"],[20534,"jormungandr_automation::utils"],[20542,"jormungandr_automation::utils::multiaddr"],[20544,"jormungandr_automation::utils::stake_pool"],[20573,"core::fmt"],[20574,"core::fmt"],[20575,"std::path"],[20576,"std::path"],[20577,"core::result"],[20578,"core::any"],[20579,"core::option"],[20580,"chain_addr"],[20581,"alloc::string"],[20582,"core::convert"],[20583,"alloc::collections::btree::map"],[20584,"chain_impl_mockchain::vote::choice"],[20585,"core::convert"],[20586,"std::io::error"],[20587,"assert_fs::fixture::child"],[20588,"jormungandr_lib::interfaces::account_state"],[20589,"jormungandr_lib::interfaces::leadership_log"],[20590,"alloc::vec"],[20591,"jormungandr_lib::interfaces::settings"],[20592,"jormungandr_lib::interfaces::stake_pool_stats"],[20593,"jormungandr_lib::interfaces::fragment_log"],[20594,"jormungandr_lib::interfaces::fragments_processing_summary"],[20595,"jormungandr_lib::interfaces::utxo_info"],[20596,"core::clone"],[20597,"jormungandr_lib::interfaces::vote"],[20598,"jormungandr_lib::interfaces::committee"],[20599,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[20600,"jormungandr_lib::interfaces::value"],[20601,"assert_fs::fixture::dir"],[20602,"chain_impl_mockchain::fee"],[20603,"jormungandr_lib::interfaces::address"],[20604,"jormungandr_lib::interfaces::blockdate"],[20605,"jcli_lib::jcli_lib::vote::tally::merge_results"],[20606,"serde_json::error"],[20607,"std::process"],[20608,"chain_impl_mockchain::vote::payload"],[20609,"chain_impl_mockchain::accounting::account::spending"],[20610,"assert_fs::fixture::child"],[20611,"jortestkit::process::wait"],[20612,"jormungandr_lib::interfaces::fragments_processing_summary"],[20613,"serde::de"],[20614,"core::fmt"],[20615,"core::hash"],[20616,"core::marker"],[20617,"core::hash"],[20618,"parity_multiaddr"],[20619,"semver::parse"],[20620,"chain_impl_mockchain::fragment"],[20621,"core::sync::atomic"],[20622,"std::collections::hash::set"],[20623,"jormungandr_lib::interfaces::block0_configuration"],[20624,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[20625,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient"],[20626,"chain_impl_mockchain::chaintypes"],[20627,"jormungandr_lib::interfaces::block0_configuration::block_content_max_size"],[20628,"jormungandr_lib::interfaces::block0_configuration::epoch_stability_depth"],[20629,"jormungandr_lib::interfaces::block0_configuration::fees_go_to"],[20630,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[20631,"chain_crypto::algorithms::ed25519"],[20632,"jormungandr_lib::crypto::key"],[20633,"jormungandr_lib::crypto::key"],[20634,"jormungandr_lib::interfaces::reward_parameters"],[20635,"jormungandr_lib::interfaces::certificate"],[20636,"jormungandr_lib::interfaces::block0_configuration::slots_duration"],[20637,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch"],[20638,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[20639,"jormungandr_lib::interfaces::config::node"],[20640,"chain_crypto::algorithms::vrf"],[20641,"jormungandr_lib::interfaces::config::secret"],[20642,"graphql_client"],[20643,"reqwest::error"],[20644,"core::fmt"],[20645,"std::process"],[20646,"chain_impl_mockchain::certificate::delegation"],[20647,"chain_impl_mockchain::transaction::transaction"],[20648,"chain_impl_mockchain::certificate::pool"],[20649,"chain_impl_mockchain::certificate::pool"],[20650,"chain_impl_mockchain::certificate::update_vote"],[20651,"chain_impl_mockchain::certificate::vote_cast"],[20652,"chain_impl_mockchain::certificate::vote_plan"],[20653,"chain_impl_mockchain::certificate::vote_tally"],[20654,"chain_impl_mockchain::fragment::config"],[20655,"chain_impl_mockchain::block"],[20656,"chain_impl_mockchain::testing::data::wallet"],[20657,"chain_time::timeline"],[20658,"jormungandr_lib::interfaces::fragment_log"],[20659,"core::iter::traits::iterator"],[20660,"chain_ser::deser"],[20661,"tonic::codec::decode"],[20662,"tonic::status"],[20663,"std::sync::mpsc"],[20664,"tonic::transport::channel"],[20665,"chain_impl_mockchain::key"],[20666,"chain_impl_mockchain::header::header"],[20667,"chain_impl_mockchain::chaintypes"],[20668,"bytes::buf::buf_mut"],[20669,"prost::encoding"],[20670,"prost::encoding"],[20671,"bytes::buf::buf_impl"],[20672,"tonic::body"],[20673,"tonic::client::service"],[20674,"tonic::response"],[20675,"tonic::request"],[20676,"tonic::transport::channel::endpoint"],[20677,"core::convert"],[20678,"http::request"],[20679,"tower_service"],[20680,"tonic::service::interceptor"],[20681,"alloc::boxed"],[20682,"core::pin"],[20683,"http_body"],[20684,"core::marker"],[20685,"core::task::poll"],[20686,"std::sync::rwlock"],[20687,"alloc::sync"],[20688,"std::io::error"],[20689,"tokio::sync::oneshot"],[20690,"chain_ser::deser"],[20691,"chain_storage::block_store"],[20692,"poldercast::profile"],[20693,"std::sync::mpsc"],[20694,"assert_fs::fixture::errors"],[20695,"rand_core::os"],[20696,"jormungandr_lib::crypto::account"],[20697,"jormungandr_lib::interfaces::vote"],[20698,"jormungandr_lib::time"],[20699,"std::io"],[20700,"jormungandr_lib::interfaces::stats"],[20701,"std::process"],[20702,"std::process"],[20703,"reqwest::tls"],[20704,"jortestkit::process::wait"],[20705,"jormungandr_lib::interfaces::peer_stats"],[20706,"jormungandr_lib::interfaces::peer_stats"],[20707,"jormungandr_lib::interfaces::stats"],[20708,"http::header::map"],[20709,"chain_impl_mockchain::account"],[20710,"jortestkit::process"],[20711,"chain_impl_mockchain::value"],[20712,"jortestkit::measurement::status"],[20713,"jortestkit::github"],[20714,"alloc::alloc"],[20715,"jortestkit::measurement::benchmark::consumption_benchmark"],[20716,"jortestkit::github"],[20717,"jortestkit::web"],[20718,"jortestkit::measurement::attribute::efficiency"],[20719,"jortestkit::measurement::benchmark::consumption_benchmark"],[20720,"std::time"],[20721,"os_info::os_type"],[20722,"core::slice::iter"],[20723,"jortestkit::measurement::marker::counter"],[20724,"core::cmp"],[20725,"std::collections::hash::map"],[20726,"jormungandr_lib::interfaces::block0_configuration"],[20727,"chain_impl_mockchain::rewards"],[20728,"chain_crypto::key"],[20729,"core::cmp"],[20730,"chain_impl_mockchain::certificate::vote_plan"],[20731,"chain_impl_mockchain::certificate::vote_plan"],[20732,"chain_impl_mockchain::tokens::identifier"],[20733,"chain_impl_mockchain::certificate::vote_plan"],[20734,"chain_impl_mockchain::certificate::pool"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Legacy tolerant rest api This layer returns raw strings …","","","","","","","Abstraction over different versions of the node …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","","","Used to build configuration for legacy nodes. It uses …","","","","","","","","","","","","","","","","","","","","struct intends to return raw reqwest response can be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>SemVer version</strong> as defined by https://semver.org.","","","","","","","","","","","","","","","","","","","","","","","","","Compare the major, minor, patch, and pre-release value of …","","","","","","","","","","","","","","","","Clock drift (1 = no drift, 2 = double speed)","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Create <code>Version</code> with an empty pre-release and build …","","","","","","","","","Offset from the real clock in seconds","","","","","","","","","Create <code>Version</code> by parsing from string representation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get an explorer client configured to use this instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Element of the subscription stream returned by …","Request message for method ClientAuth.","Response message for method ClientAuth.","Gossip message with information on nodes in the network.","Request message for method Handshake.","Response message for method Handshake.","Request for peers","Responses as a bunch of peers, similar to Gossip","Request message for method PullBlocks","Request message for method PullBlocksToTip.","Request message for method PullHeaders. This message can …","Response message for method PushHeaders.","Request message for method Tip.","Response message for method Tip.","Response message for method UploadBlocks.","The identifier of the genesis block. This can be used by …","Nested message and enum types in <code>BlockEvent</code>.","Serialized content of the tip block headereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Generated client implementations.","Node ID of the server, the public key of a key pair.","Node ID of the client, the public key of a key pair.","Generated server implementations.","Serialized descriptions of nodes.","Nonce for the server to authenticate its node ID with.","Nonce for the client to authenticate its node ID with.","","Signature of the client’s nonce using the private key in …","Signature of the server’s nonce sent in …","The identifier of the end block.","The identifier of the end block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the protocol implemented by the server.","","","","","","","","","","","","","","","","Announcement of a new block, carrying the block’s header.","","Solicitation to push the chain of block headers with a …","Solicitation to upload identified blocks with an …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","Establishes a bidirectional stream to exchange information …","","","Optional authentication of the client node. Called after …","","","Attempt to create a new client by connecting to a given …","","","","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","","Calls <code>U::from(self)</code>.","","","Requests for some peers","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","Compress requests with <code>gzip</code>.","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","Server streaming response type for the BlockSubscription …","Server streaming response type for the …","Server streaming response type for the GetBlocks method.","Server streaming response type for the GetFragments method.","Server streaming response type for the GetHeaders method.","Server streaming response type for the GossipSubscription …","Generated trait containing gRPC methods that should be …","","Server streaming response type for the PullBlocks method.","Server streaming response type for the PullBlocksToTip …","Server streaming response type for the PullHeaders method.","","","Establishes a bidirectional stream to exchange information …","","","","","","","Optional authentication of the client node. Called after …","","","","","","","","","","","","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Requests for some peers","","","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","","","","","","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","block_id must refer to a valid block already in the storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","block_id must refer to a valid block already in the storage","","Raw access to the storage. Can be used to play with raw …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Representation of a block.","A sequence of block identifiers used in fetch requests and …","Representation of a block fragment, that is, a transaction …","A sequence of fragment identifiers used in fetch requests.","Representation of a block header.","","","","","","","","","","","","","","","","","","","","","","","","","","The serialized content of the block.","The serialized content of the block header.","The serialized content of the fragment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks for loading.","The identifiers of fragments.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Block IDs to start synchronization from.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","Enable decompressing responses with <code>gzip</code>.","get a stream of blocks succesfully processed by the node, …","","","","","Attempt to create a new client by connecting to a given …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","Server streaming response type for the BlockSubscription …","Server streaming response type for the SyncMultiverse …","Server streaming response type for the TipSubscription …","Generated trait containing gRPC methods that should be …","","","","get a stream of blocks succesfully processed by the node, …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","","","","","","","","","","","","","","","","","policy module","","","","Configuration item for a trusted peer.","","The peer’s routable host address and TCP port as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","maximum number of entries in the fragment logs","","","","path to the persistent log of all incoming fragments","","maximum number of entries in the mempool","","","","","","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Used to build configuration for legacy nodes. It uses …","","","","","","","","","","","","","","","","0.8.19 is a breaking point where in trusted peer id was …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The public address to which other peers may connect to","","","","","","","","","","","","","","","the rendezvous points for the peer to connect to in order …","","","","","","","","","","","","","","","","","","Legacy tolerant rest api This layer returns raw strings …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>SemVer version</strong> as defined by https://semver.org.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","struct intends to return raw reqwest response can be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clock drift (1 = no drift, 2 = double speed)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Offset from the real clock in seconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Abstraction over different versions of the node …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Collected available input up to the point in time when …","","Calls <code>U::from(self)</code>.","","","","","Collecte available input up to the point in time when this …","","","","","","","Get executable from current environment","Get explorer executable from current environment","Get jcli executable from current environment","Get jormungandr executable from current environment","","Gets working directory Uses std::env::current_exe() for …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,106,0,0,0,0,0,0,0,0,110,110,106,106,0,0,0,71,73,71,1,0,71,1,1,1,1,1,1,0,92,0,1,1,1,1,1,71,1,1,1,1,1,20,112,1,1,1,4,112,10,11,20,112,10,11,1,1,1,71,1,73,0,73,20,112,1,1,1,71,1,1,1,1,1,1138,1139,1138,1139,1138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,0,17,17,0,41,0,41,41,41,41,41,41,41,41,41,41,41,0,41,41,0,41,41,41,41,41,41,41,41,41,41,0,41,41,0,41,41,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,23,23,0,23,0,23,23,23,23,23,23,23,23,23,23,0,23,23,23,23,23,23,23,23,0,0,0,79,79,79,0,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,0,0,0,0,92,92,92,0,92,92,92,92,92,92,0,92,92,92,92,0,92,92,0,92,0,92,92,92,92,0,92,92,0,0,0,0,0,30,30,30,30,30,30,30,30,0,30,30,30,30,30,0,30,30,30,30,30,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,38,38,38,0,38,38,38,38,0,38,38,0,38,38,38,38,38,38,38,38,38,38,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,0,0,0,0,39,39,39,39,39,39,39,0,39,0,39,39,39,39,39,0,39,0,39,39,39,39,39,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,0,40,40,0,0,0,0,0,0,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,0,48,48,48,48,48,48,48,48,48,48,0,48,0,48,48,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,66,66,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,81,81,81,81,0,81,0,81,81,81,81,0,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,0,0,0,85,85,85,0,85,85,85,85,85,85,85,85,0,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,0,0,106,106,106,0,0,0,71,73,71,71,73,106,71,73,106,71,106,106,73,106,71,73,106,71,73,106,71,71,106,106,71,73,106,71,73,106,71,73,106,71,73,106,71,73,71,73,73,71,73,73,73,106,106,71,73,106,71,73,106,71,73,106,71,73,106,71,0,0,0,0,0,0,0,110,110,110,110,0,110,110,110,110,110,0,0,0,110,110,110,110,110,0,110,110,110,110,1138,1139,1138,1139,1138,0,0,4,111,4,111,111,4,111,4,111,4,111,4,111,4,111,4,111,4,111,4,111,111,111,4,111,4,4,4,111,111,111,111,111,111,111,111,111,111,111,111,4,111,4,111,4,111,4,111,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,163,0,119,1023,128,128,0,0,1009,1009,0,1023,126,1017,0,0,0,0,1047,995,0,0,1023,163,1047,119,1009,1046,1023,1019,0,0,1023,0,1023,0,0,0,0,1045,0,1023,0,0,0,0,0,128,1025,0,0,0,0,0,0,119,1023,1045,0,1046,119,126,1023,1019,0,119,0,0,119,128,1025,0,0,1017,0,995,0,1023,0,1017,0,0,0,126,1009,1022,0,1019,1023,1023,128,995,1022,0,1009,1103,9,1027,1043,1054,1056,0,0,1043,173,143,994,121,126,121,126,121,1007,9,1008,121,121,121,121,1010,1010,121,0,993,1043,0,1043,1007,121,126,121,126,121,0,1044,121,126,1007,121,121,121,121,121,0,164,992,121,121,126,126,120,1103,0,121,126,121,121,173,1057,1050,0,121,0,0,1027,1029,9,121,121,126,143,1024,121,126,121,126,1057,1043,165,994,1050,1057,0,165,994,1103,1056,1103,1103,1103,0,9,1027,1029,1010,121,165,994,143,121,121,1029,164,1027,1029,992,1057,1050,1056,1044,1054,165,994,1056,9,1056,9,1010,121,121,121,121,0,1003,0,0,1027,1029,1018,165,994,1056,9,1057,1050,1057,1050,1103,1103,121,1056,1056,1056,1008,994,994,1054,1018,0,165,994,9,1043,1054,121,121,126,121,126,121,126,121,126,1008,0,1007,116,1054,1057,1054,0,993,996,0,121,126,1056,1140,1141,1140,1141,1140,1141,1140,1141,1142,1142,1143,1144,1144,1144,1145,1145,1146,1147,1146,1147,0,0,0,0,0,0,0,0,139,141,0,139,141,139,141,139,139,141,141,139,141,139,141,139,141,0,139,141,139,141,139,141,0,0,0,139,141,139,141,139,141,139,141,0,0,0,0,143,143,143,143,143,143,143,0,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,163,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,0,0,0,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,0,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,0,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,1148,173,180,180,0,0,0,0,180,180,177,177,177,177,177,186,180,177,186,180,177,0,186,186,177,186,177,177,0,0,186,186,177,0,191,186,180,177,186,180,177,177,186,186,180,177,177,177,180,180,186,180,180,180,180,177,186,186,180,177,186,180,177,186,180,177,186,177,186,177,177,177,177,177,177,186,180,177,177,177,180,177,177,177,186,180,177,186,180,177,186,180,177,177,0,177,177,186,180,177,186,0,0,0,189,207,207,207,189,207,189,207,207,207,189,207,189,207,207,189,207,189,189,207,189,189,207,189,207,189,207,189,207,207,207,189,207,189,207,189,207,189,207,189,207,189,0,0,0,208,209,208,187,209,208,187,209,208,208,187,209,208,187,209,208,208,187,209,208,187,209,208,187,209,187,209,208,187,209,187,187,187,208,187,209,208,187,209,208,187,209,208,187,209,208,187,209,208,187,209,187,208,187,209,209,187,209,187,208,187,209,208,187,209,208,187,209,208,187,209,208,187,209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,0,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,0,0,0,0,0,0,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,199,1167,1168,1169,1170,1171,1172,1173,0,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,0,0,0,0,0,0,0,0,0,0,178,211,210,178,211,210,178,211,210,178,211,210,178,211,210,178,210,178,211,210,178,210,178,211,210,210,178,211,210,178,211,210,178,211,211,210,178,211,210,178,211,210,178,211,1174,210,178,211,1175,1176,294,1175,1176,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,212,249,1175,1176,294,1175,1176,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1175,1176,294,0,1175,1176,294,0,0,1175,1176,294,235,0,1175,1176,294,0,212,270,0,0,1175,1176,294,1175,1176,294,270,1175,1176,294,235,0,0,212,213,214,235,214,213,214,0,1175,1176,294,1175,1176,294,249,0,0,0,0,0,235,235,1175,1176,294,235,1175,1176,294,0,0,1175,1176,294,1175,1176,294,0,1175,1176,294,1175,1176,294,1175,1176,294,1175,1176,294,0,1175,1176,294,1175,1176,294,235,213,0,1175,1176,294,1175,1176,294,1175,1176,294,235,235,0,0,235,235,0,235,0,234,285,259,215,238,240,238,240,293,0,286,1177,1178,1179,242,255,301,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,252,242,281,265,280,265,280,265,280,257,279,257,279,252,221,281,225,0,220,236,291,267,269,281,241,252,229,261,266,268,273,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,292,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,244,254,1180,1181,1182,1183,251,296,267,269,288,267,269,224,264,230,274,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,1177,1178,1179,217,219,228,233,237,239,241,242,245,246,247,248,250,252,282,284,295,298,301,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,242,242,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,252,277,302,252,231,260,230,274,287,260,216,243,253,229,261,266,268,273,231,242,231,225,281,281,231,299,0,226,227,297,232,234,252,278,218,223,225,221,230,267,269,274,1177,1178,1179,301,283,258,1177,1178,1179,301,227,231,262,263,271,272,231,212,213,214,302,1180,1181,1182,1183,251,296,289,290,226,231,184,244,254,300,252,252,256,252,276,275,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,225,222,223,225,218,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,184,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,323,1195,1196,311,320,328,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,308,317,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,305,314,322,329,309,318,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,1195,1196,303,307,311,312,316,320,325,328,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,310,319,309,318,304,313,321,322,308,317,310,319,310,319,310,319,326,0,306,315,324,309,318,1195,1196,311,320,328,1195,1196,311,320,328,306,315,310,319,310,319,329,310,319,201,322,327,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,1197,1198,1199,1200,1201,1202,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,201,324,325,326,327,328,329,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,330,330,330,0,0,0,0,342,342,0,333,333,0,0,0,335,348,0,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,332,345,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,337,347,331,338,340,343,1203,1204,1205,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,334,345,349,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,336,346,339,341,344,335,345,331,344,345,339,341,330,351,1203,1204,1205,350,338,340,343,344,206,337,347,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,1206,1207,1208,1209,1210,1211,345,345,344,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,206,349,350,351,0,0,0,0,0,0,0,0,0,0,181,352,181,353,352,181,353,352,181,353,352,181,353,352,181,352,181,353,352,181,352,181,353,352,353,352,181,353,352,181,353,352,181,353,353,352,181,353,352,181,353,352,181,353,1212,352,181,353,1213,1214,433,1213,1214,433,354,391,1213,1214,433,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1213,1214,433,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1213,1214,433,0,1213,1214,433,0,0,1213,1214,433,377,0,1213,1214,433,0,354,409,0,0,1213,1214,433,1213,1214,433,409,1213,1214,433,377,0,0,354,355,356,377,356,355,356,0,1213,1214,433,1213,1214,433,391,0,0,0,0,0,377,377,1213,1214,433,377,1213,1214,433,0,0,1213,1214,433,1213,1214,433,0,1213,1214,433,1213,1214,433,1213,1214,433,1213,1214,433,0,1213,1214,433,1213,1214,433,377,355,0,1213,1214,433,1213,1214,433,1213,1214,433,377,377,0,0,377,377,0,377,0,376,424,398,357,380,382,380,382,182,432,0,425,1215,1216,1217,384,440,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,394,384,420,404,419,404,419,404,419,396,418,396,418,394,363,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,420,367,0,362,378,430,406,408,420,383,394,371,400,405,407,412,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,431,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,386,1218,1219,1220,1221,393,435,406,408,427,406,408,366,403,372,413,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,1215,1216,1217,359,361,370,375,379,381,383,384,387,388,389,390,392,394,421,423,434,437,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,384,384,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,394,416,394,373,399,372,413,426,399,358,385,371,400,405,407,412,373,384,373,367,420,420,373,438,0,368,369,436,374,376,394,417,360,365,367,363,372,406,408,413,1215,1216,1217,440,422,397,1215,1216,1217,440,369,373,401,402,410,411,373,354,355,356,441,1218,1219,1220,1221,393,435,428,429,368,373,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,386,439,394,394,395,394,415,414,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,367,364,365,367,360,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,182,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,1233,520,1233,520,442,478,1233,520,1233,520,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1233,520,0,1233,520,0,0,1233,520,465,0,1233,520,0,442,496,0,0,1233,520,1233,520,496,1233,520,465,0,0,442,443,444,465,444,443,444,0,1233,520,1233,520,478,0,0,0,0,0,465,465,1233,520,465,1233,520,0,0,1233,520,1233,520,0,1233,520,1233,520,1233,520,1233,520,0,1233,520,1233,520,465,443,0,1233,520,1233,520,1233,520,465,465,0,0,465,465,0,465,0,464,511,485,445,467,469,467,469,519,0,512,1234,1235,1236,471,527,185,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,481,471,507,491,506,491,506,491,506,483,505,483,505,481,451,507,455,0,450,517,493,495,507,470,481,459,487,492,494,499,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,518,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,473,1237,1238,1239,1240,480,522,493,495,514,493,495,454,490,460,500,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,1234,1235,1236,447,449,458,463,466,468,470,471,474,475,476,477,479,481,508,510,521,524,527,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,471,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,481,503,481,528,461,486,460,500,513,486,446,472,459,487,492,494,499,461,471,461,455,507,507,461,525,0,456,457,523,462,464,481,504,448,453,455,451,460,493,495,500,1234,1235,1236,527,509,484,1234,1235,1236,527,457,461,488,489,497,498,461,442,443,444,528,1237,1238,1239,1240,480,522,515,516,456,461,473,526,481,481,482,481,502,501,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,455,452,453,455,448,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,185,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,532,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,529,530,531,532,533,534,535,188,536,531,188,535,529,530,531,532,533,534,535,188,529,530,531,532,533,534,535,188,536,529,533,534,535,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,535,530,536,188,535,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,529,530,531,532,533,534,535,188,536,1252,1253,529,530,531,532,533,534,535,188,536,1254,617,1254,617,537,573,1254,617,1254,617,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1254,617,0,1254,617,0,0,1254,617,560,0,1254,617,0,537,593,0,0,1254,617,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1254,617,593,1254,617,560,0,0,537,538,539,560,539,538,539,0,1254,617,1254,617,573,0,0,0,0,0,560,560,1254,617,560,1254,617,0,0,1254,617,1254,617,0,1254,617,1254,617,1254,617,1254,617,0,1254,617,1254,617,560,538,0,1254,617,1254,617,1254,617,560,560,0,0,560,560,0,560,0,559,608,582,540,562,564,562,564,577,616,0,609,1255,1256,1257,566,624,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,576,566,604,588,603,588,603,588,603,580,602,580,602,576,546,604,550,0,545,614,590,592,604,565,576,554,584,589,591,596,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,615,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,568,1258,1259,1260,1261,575,619,590,592,611,590,592,549,587,555,597,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,1255,1256,1257,542,544,553,558,561,563,565,566,569,570,571,572,574,576,605,607,618,621,624,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,566,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,576,600,576,556,583,555,597,610,583,541,567,554,584,589,591,596,556,566,556,550,604,604,556,622,0,551,552,620,557,559,576,601,543,548,550,546,555,590,592,597,1255,1256,1257,624,606,581,1255,1256,1257,624,552,556,585,586,594,595,556,537,538,539,625,1258,1259,1260,1261,575,619,612,613,551,556,578,568,623,576,576,579,576,599,598,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,550,547,548,550,543,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,626,627,628,629,630,196,631,626,627,628,629,630,196,631,628,627,627,627,626,626,628,628,626,627,628,629,630,196,631,626,627,628,629,630,196,631,626,627,628,629,630,196,626,627,628,629,630,196,631,629,630,630,626,627,628,629,630,196,626,627,628,629,630,196,631,626,627,628,629,630,196,631,626,627,628,629,630,196,631,626,627,628,629,630,196,631,628,628,631,196,626,627,628,629,630,196,631,626,627,628,629,630,196,631,626,627,628,629,630,196,631,1273,626,627,628,629,630,196,631,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1274,640,645,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,637,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,634,646,638,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,1274,632,636,640,642,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,639,638,633,637,639,639,639,643,0,635,641,638,1274,640,645,1274,640,645,635,639,639,646,200,639,644,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,1275,1276,1277,1278,1279,1280,632,633,634,635,636,637,638,639,640,200,641,642,643,644,645,646,1281,694,1281,694,647,1281,694,1281,694,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1281,694,0,1281,694,0,0,1281,694,1281,694,0,647,670,0,0,1281,694,1281,694,670,1281,694,0,0,647,648,648,1281,694,1281,694,1281,694,1281,694,0,0,1281,694,1281,694,0,1281,694,1281,694,1281,694,1281,694,0,1281,694,1281,694,648,0,0,0,0,0,0,0,0,0,1281,694,1281,694,1281,694,0,0,0,685,659,650,652,650,652,693,0,686,655,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,681,665,680,665,680,665,680,657,679,657,679,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,681,0,654,691,667,669,681,653,661,666,668,673,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,692,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,1282,696,667,669,688,667,669,664,674,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,649,651,653,655,682,684,695,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,655,655,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,677,660,674,687,660,661,666,668,673,655,681,681,678,667,669,674,683,658,662,663,671,672,647,648,697,1282,696,689,690,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,202,656,676,675,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,1283,1284,1285,1286,1287,1288,647,648,649,650,651,652,653,654,655,202,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,1289,766,1289,766,698,1289,766,1289,766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1289,766,0,1289,766,0,0,1289,766,721,0,1289,766,0,698,742,0,0,1289,766,1289,766,742,1289,766,721,0,0,698,699,700,721,700,699,700,0,1289,766,1289,766,0,0,0,0,0,721,721,1289,766,721,1289,766,0,0,1289,766,1289,766,0,1289,766,1289,766,1289,766,1289,766,0,1289,766,1289,766,721,699,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1289,766,1289,766,1289,766,721,721,0,0,721,721,0,721,0,720,757,731,701,723,725,723,725,765,0,758,1290,1291,1292,727,773,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,727,753,737,752,737,752,737,752,729,751,729,751,707,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,753,711,0,706,763,739,741,753,726,715,733,738,740,745,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,764,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,1293,1294,1295,1296,768,739,741,760,739,741,710,736,716,746,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,1290,1291,1292,703,705,714,719,722,724,726,727,754,756,767,770,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,727,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,749,717,732,716,746,759,732,702,715,733,738,740,745,717,727,717,711,753,753,717,771,0,712,713,769,718,720,750,704,709,711,707,716,739,741,746,1290,1291,1292,773,755,730,1290,1291,1292,773,713,717,734,735,743,744,717,698,699,700,774,1293,1294,1295,1296,768,761,762,712,717,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,772,203,728,748,747,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,711,708,709,711,704,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,203,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,1307,846,1307,846,775,1307,846,1307,846,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1307,846,0,1307,846,0,0,1307,846,798,0,1307,846,0,775,822,0,0,1307,846,1307,846,822,1307,846,798,0,0,775,776,777,798,777,776,777,0,1307,846,1307,846,0,0,0,0,0,798,798,1307,846,798,1307,846,0,0,1307,846,1307,846,0,1307,846,1307,846,1307,846,1307,846,0,1307,846,1307,846,798,776,0,1307,846,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1307,846,1307,846,798,798,0,0,798,798,0,798,0,797,837,811,778,800,802,800,802,854,845,0,838,1308,1309,1310,804,853,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,804,833,817,832,817,832,817,832,809,831,809,831,784,833,788,0,783,843,819,821,833,803,792,813,818,820,825,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,844,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,806,1311,1312,1313,1314,848,819,821,840,819,821,787,816,793,826,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,1308,1309,1310,780,782,791,796,799,801,803,804,834,836,847,850,853,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,804,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,829,794,812,793,826,839,812,779,805,792,813,818,820,825,794,804,794,788,833,833,794,851,0,789,790,849,795,797,830,781,786,788,784,793,819,821,826,1308,1309,1310,853,835,810,1308,1309,1310,853,790,794,814,815,823,824,794,775,776,777,854,1311,1312,1313,1314,848,841,842,789,794,204,806,852,808,807,828,827,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,788,785,786,788,781,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,204,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,0,0,0,0,0,0,0,0,855,855,855,0,0,0,0,867,867,0,858,858,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,860,0,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,857,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,870,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,862,856,863,865,868,1325,1326,1327,872,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,859,870,871,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,861,864,866,869,860,870,856,869,870,864,866,855,873,1325,1326,1327,872,863,865,868,869,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,862,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,1328,1329,1330,1331,1332,1333,870,205,870,869,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,205,871,872,873,0,876,876,0,0,0,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,1334,0,0,1334,876,1334,876,1334,1334,1334,876,1334,876,1334,876,876,876,1334,876,1334,876,1334,876,1334,876,0,0,876,0,0,1334,876,1334,876,1334,876,0,1334,876,1335,0,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,128,128,0,0,128,0,128,128,0,1103,128,120,128,120,120,120,128,120,128,120,128,120,128,128,120,120,120,1103,128,128,120,120,128,120,128,120,128,120,1103,1103,1103,1103,128,120,1103,1103,128,120,128,128,120,128,120,128,120,128,120,1140,1141,1140,1141,1140,1141,1140,1141,0,0,0,0,0,0,0,0,0,898,898,0,0,0,0,895,899,910,895,899,895,899,898,895,899,898,895,899,895,899,895,899,895,899,898,895,899,898,895,899,898,898,898,898,898,898,895,899,898,898,895,895,899,898,895,899,895,895,895,895,895,895,895,895,895,899,898,895,899,895,899,898,895,899,898,898,895,899,910,910,895,895,895,895,895,899,899,895,899,895,899,898,895,899,898,895,899,898,895,899,898,895,895,899,898,895,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,907,0,917,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,920,921,922,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,926,918,0,907,914,0,925,913,907,919,907,914,920,922,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,907,913,907,914,915,916,917,918,919,920,921,922,923,924,925,926,927,0,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,0,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,951,951,951,951,951,951,0,0,951,951,951,0,950,951,954,950,954,950,950,950,951,954,950,954,950,954,950,954,950,954,950,954,950,951,954,950,951,951,951,951,951,954,950,950,954,950,954,950,950,951,950,950,951,951,951,951,950,951,954,950,954,950,954,950,954,950,951,954,950,950,959,976,976,976,959,976,976,976,976,976,976,976,0,0,0,0,0,0,0,0,0,976,976,976,976,958,958,976,976,960,957,957,958,959,957,958,959,0,957,958,959,958,959,0,0,963,957,957,958,959,957,958,959,957,958,959,958,958,958,958,958,958,959,959,957,957,958,959,959,964,960,957,957,957,957,957,957,958,959,957,958,959,957,958,959,964,960,960,0,979,964,957,957,963,960,960,964,957,957,957,957,0,963,960,957,958,959,959,957,958,959,957,958,959,957,958,959,957,0,963,957,958,959,0,0,964,965,964,965,964,964,964,964,965,964,965,964,965,965,964,965,964,964,965,964,965,964,965,964,964,964,0,964,965,964,965,964,965,964,965,964,964,964,964,965,0,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,0,0,0,970,970,960,970,960,0,960,970,960,970,960,970,960,970,960,970,970,970,960,970,970,970,970,960,960,960,960,960,960,960,970,960,970,960,970,960,960,960,960,960,960,960,960,960,960,960,960,960,970,960,960,960,970,960,970,960,970,960,970,960,960,970,976,0,976,976,976,976,976,976,976,976,976,0,0,976,976,976,976,976,976,968,978,976,968,978,976,968,978,976,968,978,976,976,968,978,976,976,976,976,976,976,968,976,976,968,978,976,968,968,978,976,968,978,976,968,978,976,968,978,976,976,968,978,976,968,978,976,968,978,976,968,978,976,0,979,979,979,979,979,979,979,979,979,979,979,979,979,979,979,979,0,0,0,0,0,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,896,909,905,941,942,0,0,0,0,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,980,981,982,983,0,0,0,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,985,985,985,0,0,0,984,985,986,984,986,984,984,984,986,984,986,984,986,984,986,984,986,984,986,984,986,984,986,984,984,986,984,986,984,984,984,984,984,985,985,986,984,986,984,986,984,986,984,986,984,984,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,990,172,989,988,166,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,167,168,987,988,989,169,172,166,0,988,987,168,167,168,987,988,989,169,172,166,990,990,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,0,167,168,987,988,989,169,172,166,990,987,987,987,987,987,167,167,168,987,988,989,169,172,166,167,168,987,988,989,169,172,166,990,0,988,172,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,990,166,988,987,166,168,166,989,166,168,988,168,169,169,0,166,167,168,987,988,989,169,172,166,166,166,987,167,168,987,988,989,169,172,166,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,990,167,168,987,988,989,169,172,166,990,0,167,168,987,988,989,169,172,166,990,0,0,0,0,0,992,992,992,992,992,992,992,992,992,992,992,992,992,992,992,0,992,992,992,992,992,992,992,992,992,992,992,992,992,992,992,0,995,0,0,0,995,995,993,993,996,995,993,996,995,993,996,996,996,993,996,0,993,993,996,995,993,996,995,993,996,995,995,995,993,996,995,995,995,996,993,996,995,993,996,995,993,996,995,993,996,995,995,993,996,995,993,996,995,993,996,995,993,996,993,996,995,993,993,993,0,0,0,0,1001,1000,994,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,1000,1001,1002,994,1002,1000,1001,1002,994,1000,1001,1002,994,1001,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,994,1000,1000,994,1000,1000,994,994,1000,1000,1000,994,1000,1001,1002,994,994,994,994,1000,1001,1002,994,1000,1000,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,1001,1002,994,1000,0,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,1003,0,121,121,121,121,121,0,0,1009,1009,1009,0,0,0,0,1011,0,0,1009,1009,1009,1010,1336,1011,1012,1010,1009,1011,1012,1010,1009,1011,1012,1009,1011,1009,1011,1010,1010,1010,1010,1010,1009,1010,1009,1011,1012,1010,1009,1011,1012,1009,1011,1012,1010,1009,1011,1012,1010,1009,1009,1009,1009,1009,1012,1011,1011,1010,1009,1009,1011,1011,1012,1010,1009,1011,1011,1012,1009,1010,1010,1010,1010,1010,1010,1010,1010,1010,1010,1012,1010,1009,1011,1012,1010,1009,1011,1012,1010,1009,1011,1012,1011,1010,1011,1012,1010,1011,1012,1010,1010,1010,1009,1012,1012,1011,1009,1011,1012,1011,1011,1011,1012,1009,1011,1009,1011,1010,1009,1011,1012,1010,1009,1011,1012,1010,1011,1012,1010,1009,1011,1012,1010,1009,1011,1012,1017,1019,0,1019,1017,0,1017,0,1019,9,9,9,9,9,9,9,9,9,1017,1019,9,1017,1019,9,9,9,1017,1017,9,9,1017,1019,9,1017,1019,9,9,1017,1019,1017,9,1017,1019,1019,9,9,1017,1017,1019,1019,1019,9,9,9,9,1017,1019,9,1017,1019,9,1017,1019,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1019,9,9,9,9,9,9,9,1017,9,1019,9,9,1017,1019,9,1017,1019,9,1017,1019,9,1017,1019,9,9,1145,1145,0,0,1027,1027,1027,1027,1027,1029,1027,1029,1029,1027,1027,1029,1027,1029,1027,1029,1027,1027,1029,1029,1027,1027,1027,1029,1027,1029,1027,1029,1027,1029,1027,1027,1027,1027,1027,1027,1027,1027,1027,1029,1027,1029,1029,1027,1027,1029,1027,1027,1029,1027,1027,1027,1027,1029,1027,1029,1027,1029,1027,1029,1029,1029,1029,1029,1029,119,119,0,119,119,0,119,119,0,0,1024,1024,1024,1024,1024,1024,1024,1024,1024,119,1024,119,1024,1024,1024,119,1024,119,1024,1024,119,1024,1024,1024,1024,119,119,1024,1024,1024,119,119,119,119,119,119,1024,119,1024,1024,1024,119,1024,119,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,0,1024,1024,1024,1024,1024,1024,1024,1024,0,1024,1024,119,1024,1024,1024,1024,1024,1024,119,119,1024,119,1024,119,1024,1024,0,1024,119,1024,1144,1144,1144,0,0,0,1041,1041,1008,1008,1008,1008,1008,1008,1041,1008,1041,1008,1008,1008,1008,1008,1008,1041,1008,1041,1008,1008,1041,1008,1008,1008,1041,1008,1008,1008,1008,1041,1008,1008,1041,1008,1041,1008,1041,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1008,1041,1041,1008,1008,1041,1008,1041,1008,1008,1008,1008,1008,1041,1008,0,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1023,0,0,0,0,1023,0,1047,1048,0,1023,1047,1048,1046,1023,0,1023,1023,0,1045,0,1023,1025,0,0,1049,1023,1045,0,1046,1023,1025,1049,1049,1023,0,0,0,0,1023,1023,1043,1043,1054,1043,1043,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1044,1045,1046,1047,1048,1049,1044,1045,1046,1047,1048,1049,0,1043,1043,1043,1043,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1044,1045,1046,1044,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1045,1046,1045,1045,1045,1045,1046,1046,1046,1046,0,1023,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1023,1023,1023,1023,1023,1023,1023,1044,1045,1046,1047,1048,1049,0,1043,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1043,1043,1043,1054,1044,1043,1054,0,1054,1023,1043,1054,1043,1054,1043,1054,1043,1043,1054,1054,1043,1043,1043,0,1043,1054,1044,1045,1046,1047,1048,1049,1023,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1043,1054,1054,1043,1025,1043,1054,1023,1044,1045,1046,1047,1048,1049,1043,1146,1147,1146,1147,0,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,0,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1055,1053,1053,0,0,0,1053,1053,0,0,1053,1053,1056,1050,1053,1050,1053,0,1050,0,1050,1053,1050,1053,1050,1053,1050,1053,1053,1050,1053,1053,1053,1053,1053,1050,1050,1050,1050,1053,1050,1053,1050,1053,1050,1050,1056,1050,1050,1056,1050,1056,1056,1050,1050,1050,1056,1050,1050,1050,1050,1056,1056,1056,1053,1053,1050,1053,1050,1053,1050,1053,1050,1053,1056,0,1057,1057,1057,0,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,1057,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,1058,0,1058,1022,0,1022,1022,1058,1022,1058,1022,1022,1022,1022,1022,1058,1022,1058,1022,1022,1058,1022,1058,1058,1022,1022,1022,1058,1058,1022,1022,1058,1022,1058,1022,1022,1058,1022,1022,1022,1058,1022,1058,1022,1058,1022,1022,1058,1022,1058,1022,1058,0,0,1059,1059,1059,0,0,1059,1018,1018,1018,0,0,0,1018,1062,1059,1018,1062,1059,1018,1062,1059,1018,1062,1059,1018,1062,1059,1059,1059,0,1018,1018,1062,1059,1059,1059,1018,1062,1059,1018,1062,1059,1018,1062,1059,1018,1062,1018,1018,1018,1018,1059,1059,1018,1062,1059,1018,1062,1059,1018,1062,1059,1062,1018,1018,1062,1059,1062,0,0,1060,0,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,1060,0,0,1088,1088,0,0,1088,0,0,0,0,0,0,0,0,0,1088,1088,0,0,0,1089,0,1088,0,1088,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1088,1063,1066,1063,1066,0,0,0,124,0,0,0,0,0,0,0,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,1073,124,1016,1063,1066,1075,1070,1071,1076,1072,1077,1078,1064,124,1016,1063,1066,1075,1070,1071,1076,1072,1077,1078,1064,1077,0,1077,0,1079,1077,1077,1084,0,1073,1078,1081,1051,1084,1081,1085,1051,1087,1075,1076,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,0,124,124,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,1078,1081,1081,1078,1076,0,0,1016,1063,1066,1077,1016,1016,1016,1016,1077,1077,1077,1077,1084,1085,1075,1081,1087,1088,1088,124,1016,1016,1063,1063,1066,1066,1089,1089,1076,1077,1077,1078,1064,1064,991,1073,1084,1081,1085,1051,1087,1079,1088,1088,1088,1088,1088,124,1016,1063,1063,1066,1066,1089,1075,1070,1071,1076,1072,1077,1078,1078,1078,1064,1064,1078,1078,1079,991,1016,124,1064,1016,1016,1016,1084,1084,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,991,1064,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1066,1089,1075,1070,1071,1076,1072,1077,1078,1078,1064,991,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,0,1075,1070,1064,1070,1064,1085,1077,1077,1016,1070,1071,1072,1016,1070,1071,1072,991,1073,1087,1079,1016,1063,1066,1070,1071,1072,1077,1078,1064,1064,1064,1064,1064,1070,1071,1072,0,0,1063,1066,1077,1079,124,124,1081,1087,1076,1076,0,1079,1064,124,124,124,124,1079,0,0,1075,1088,1087,1070,1071,1072,1084,1085,1051,1081,1084,1085,1051,1075,0,1070,1071,1072,1070,1071,1072,1064,1070,1071,1072,0,1051,124,1016,1063,1066,1075,1070,1071,1076,1072,1077,1078,1064,1081,1087,1088,1016,1063,1066,1089,1076,1077,1064,1073,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,1073,0,1079,124,124,124,1077,1077,0,991,1073,1084,1081,1085,1051,1087,1079,1088,124,1016,1063,1066,1089,1075,1070,1071,1076,1072,1077,1078,1064,1073,1072,1073,1079,1064,1337,1337,0,0,1338,1338,1339,0,0,0,0,0,0,1102,0,0,1102,1092,0,0,0,0,1099,1099,1092,1092,1100,1104,1104,1105,0,0,1100,1105,1100,1100,1100,1100,0,0,0,0,0,0,1100,0,0,1340,1340,1340,1341,1341,1342,1342,0,0,0,0,0,0,0,1099,1099,1100,1104,1104,1104,1099,1104,1099,1104,1104,1104,1099,1104,1099,1104,1099,1104,1104,1099,1099,1104,1099,1099,1100,1104,1099,1104,1099,1104,1099,1100,1100,1100,1100,1104,1099,1100,1104,1104,1099,1104,1099,1104,1099,1104,1099,1104,1099,1340,1340,1340,1102,0,0,1102,1105,1102,1105,1102,1102,1102,1105,1105,1102,1105,1102,1105,1105,1105,1102,1102,1105,1102,1105,1105,1102,1105,1105,1102,1105,1102,1105,1105,1102,1105,1102,1105,1102,1105,1102,1105,1102,1092,0,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1092,1341,1341,1342,1342,1106,0,0,1106,1106,1106,1106,1106,1106,1106,1106,1106,1106,0,1106,1106,1106,0,1106,1106,1106,1106,1106,1106,1106,1106,1106,1106,1106,1106,0,1106,1106,1106,0,0,1343,1106,1343,1106,1106,1106,1106,1343,1343,1343,1106,0,0,1344,0,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,0,0,0,0,0,0,0,0,0,0,0,0,1113,1113,1113,1113,1113,1113,1113,1345,1114,1113,1113,1113,1113,1113,1113,1113,1114,1345,1345,1113,1113,1113,1113,1113,0,0,1346,0,0,0,0,0,1347,0,1117,0,1118,1117,0,0,1118,1118,1117,1116,1118,1117,1116,1116,1116,1117,1118,1117,1116,1118,1117,1116,1118,1117,1116,1117,1118,1117,1116,1118,1117,1116,1118,1117,1116,1118,1117,1116,1116,1116,1116,1118,1117,1116,1118,1117,1116,1118,1117,1116,1118,1117,1116,0,0,0,0,0,1101,0,0,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1101,1131,1131,0,0,0,0,1131,1121,1348,1348,0,1121,1121,1121,1121,1129,1121,1121,0,1121,1121,1349,1350,1349,1351,1350,1351,0,0,1121,1121,1121,1123,1121,1123,1121,1123,1123,1121,1123,1121,1123,1121,1123,1121,1123,1123,1123,1121,1123,1121,1123,1121,1123,1121,1123,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1123,1121,1123,1121,1123,1121,1121,1121,1121,1121,1123,1123,1123,0,1131,1131,0,1131,0,0,0,1129,1132,1133,1132,1133,1129,1132,1133,1129,1132,1133,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1132,1133,1129,1132,1133,1130,1129,1132,1133,1130,1130,1133,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1130,1130,1130,1130,1130,1130,1133,1130,1131,1131,1129,1132,1133,1130,1131,1129,1133,1130,1133,1130,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1129,1132,1133,1133,1129,1132,1133,1130,1130,1130,1129,1132,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1129,1132,1133,1130,1131,1349,1350,1349,1351,1350,1351,0,0,888,888,0,888,0,1352,0,1352,0,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,3],[1,4],[1,1],[[-1,-2],5,[],[]],0,0,0,[[],1],[6,-1,[]],[6,-1,[]],[6,5],0,0,[[1,7],8],[[1,9],10],[[1,9],11],[-1,-1,[]],[1,12],0,0,[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,[1,14],[15,1],[1,16],0,[1,17],0,0,0,0,0,[-1,-2,[],[]],[1,18],[[1,19],20],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[1,23],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,-1,[24,[-1]],25],26,[[27,[26]]]],[[2,-1,[24,[-1]],25,28],5,[[27,[26]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[2,-1,-2,25],26,[[27,[26]]],[[27,[26]]]],[[2,-1,-2,25,28],5,[[27,[26]]],[[27,[26]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[2,-1],[[29,[26,26]]],[[27,[26]]]],[[2,-1,28],5,[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[30,2],[[2,-1,[24,[-1]],25],26,[[27,[26]]]],[[2,-1,[24,[-1]],25,28],5,[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[[3,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[31,3],[[3,-1,6,32,6,-2],26,[[27,[26]]],[[27,[26]]]],[[3,-1,-2,-3],26,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[[3,-1,6,32],26,[[27,[26]]]],[[3,-1],26,[[27,[26]]]],[[3,-1,-2],26,[[27,[26]]],[[27,[26]]]],[[3,28,28,34,34,28,[24,[35]]],26],[[3,28],26],[[3,28,-1],26,[[33,[16]]]],[[3,28,28],26],[[3,-1],26,[[33,[16]]]],[[3,-1,-2,-3],26,[[33,[16]]],[[33,[16]]],[[33,[16]]]],[[3,-1],[[21,[26,36]]],[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[3,-1],[[21,[26,36]]],[[27,[26]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[12,-1,37],5,[[33,[16]]]],[6,-1,[]],[6,-1,[]],[6,5],[[12,-1,37],5,[[33,[16]]]],[[12,-1,28],5,[[33,[16]]]],[-1,-1,[]],0,[[12,-1],19,[[33,[16]]]],[[12,-1,28],5,[[33,[16]]]],[12,26],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[38,12],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[14,-1,-2],26,[[27,[26]]],[[33,[16]]]],[[14,-1,-2,28],5,[[27,[26]]],[[33,[16]]]],[[14,-1,-2],5,[[33,[16]]],[[33,[16]]]],[[14,-1,-2,28],5,[[33,[16]]],[[33,[16]]]],[[14,-1],26,[[27,[26]]]],[[14,-1,28],5,[[27,[26]]]],[6,-1,[]],[6,-1,[]],[6,5],[[14,-1,-2],5,[[27,[26]]],[[33,[16]]]],[-1,-1,[]],[[14,-1],26,[[27,[26]]]],[14,26],[[14,-1,28],5,[[27,[26]]]],[[14,-1,-1],26,[[27,[26]]]],[[14,-1,-1,28],5,[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[39,14],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[40,17],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[17,41],0,[17,42],[-1,-2,[],[]],0,[[41,-1,-2],43,[[27,[26]]],[[27,[26]]]],0,[41,44],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[41,-1],[[46,[45]]],[[27,[26]]]],0,[41,47],[48,41],0,[41,49],[[41,-1],50,[[27,[26]]]],[[41,-1],5,[[27,[26]]]],[[41,-1,-2],51,[[27,[26]]],[[27,[26]]]],[[41,-1],[[46,[26]]],[[27,[26]]]],[[41,-1],26,[[27,[26]]]],[[41,-1,28],5,[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[41,52],0,0,[41,53],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[44,-1,-2],26,[[27,[26]]],[[27,[26]]]],[[44,-1,-2,28],5,[[27,[26]]],[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[54,44],[[44,-1,34,-2],[[46,[19]]],[[27,[26]]],[[27,[26]]]],[[44,-1,34,-2,28],5,[[27,[26]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[47,-1],[[46,[55]]],[[27,[26]]]],0,[56,47],[[47,28,-1],57,[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[58,49],0,[[49,-1],[[29,[26,26]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[[52,59,-1],5,[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[52,59,-1],5,[[27,[26]]]],[[52,-1,60,-1],5,[[27,[26]]]],[-1,-1,[]],[[52,-1,60,-1],59,[61,[27,[26]]]],[[52,59,-1],59,[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[62,52],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[-1,-2,[],[]],0,[[53,-1],[[46,[63]]],[[27,[26]]]],[[53,-1],[[46,[64]]],[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[65,53],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[66,42],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,0,[42,67],[-1,-2,[],[]],0,[[67,-1,-2,-3],[[46,[60]]],[[27,[26]]],[[27,[26]]],[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[68,67],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[-1,-2,[],[]],0,[[18,28,28,-1],5,[[33,[16]]]],[[18,28,28,-1,28],5,[[33,[16]]]],[[18,69,-1],5,[[33,[16]]]],[[18,-1,-2],5,[[27,[26]]],[[33,[16]]]],[[18,19,60,28,-1],5,[[33,[16]]]],[[18,19,60,28,-1,28],5,[[33,[16]]]],[[18,59,-1],5,[[33,[16]]]],[[18,59,70,-1],5,[[33,[16]]]],[[18,28,70,-1],5,[[33,[16]]]],[[18,71,-1],5,[[33,[16]]]],[[18,71,-1,28],5,[[33,[16]]]],[[18,-1,-2],5,[[33,[16]]],[[33,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[18,-1],26,[[33,[16]]]],[[18,-1,28],5,[[33,[16]]]],[[18,72,19,73,-1],71,[[33,[16]]]],[6,-1,[]],[6,-1,[]],[6,5],[[18,-1],5,[[33,[16]]]],[[18,-1,28],5,[[33,[16]]]],[[18,28,74,-1],5,[[33,[16]]]],[[18,-1],19,[[33,[16]]]],[-1,-1,[]],[[18,-1],19,[[33,[16]]]],[[18,28,-1],26,[[33,[16]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[18,26,75,[24,[75]],70,26,76,-1,-2,77],5,[[33,[16]]],[[33,[16]]]],[[18,71],5],[[18,71,28],5],[78,18],[[18,-1],5,[[33,[16]]]],[[18,-1],5,[[33,[16]]]],[[18,76,-1],5,[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[23,79],0,[23,80],[6,-1,[]],[6,-1,[]],[6,5],[[23,-1],[[21,[26,36]]],[[27,[26]]]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[81,23],0,[23,82],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[23,-1,-2],26,[[33,[16]]],[[33,[16]]]],[[23,-1,-2],26,[[27,[26]]],[[33,[16]]]],0,[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[79,83],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[79,84],[85,79],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[83,26],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[86,83],[[83,26],[[21,[26,36]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[84,-1,-2,34,34,[24,[26]]],26,[[33,[16]]],[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[87,84],[[84,-1],[[21,[26,36]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[80,26],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[88,80],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[82,-1,-2,-3,34],26,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[[82,-1,-2,-3,34,28],5,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[[82,-1,-2,-3],26,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[82,-1],[[21,[[46,[89]],90]]],[[33,[16]]]],[[82,[46,[-1]]],26,[[33,[16]]]],[91,82],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[92,30],[-1,-2,[],[]],[-1,-2,[],[]],0,[92,31],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],0,[92,38],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[92,39],[93,92],0,[92,40],0,[92,78],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[92,81],[-1,-2,[],[]],0,0,0,0,0,[30,94],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],0,[30,95],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,30],0,[30,96],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[94,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,94],[[94,-1],94,[[27,[26]]]],[[94,-1],94,[[27,[26]]]],[94,94],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[[95,-1],95,[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[95,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,95],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[96,93],0,[[96,-1],96,[[27,[26]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,96],[[96,-1],96,[[27,[26]]]],[[96,-1],96,[[27,[26]]]],[96,96],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[31,93],0,[6,-1,[]],[6,-1,[]],[6,5],[[31,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,31],[[31,-1,-2],31,[[27,[26]]],[[27,[26]]]],[97,28],[[31,60,6,6,26,-1],31,[[33,[16]]]],[[31,-1,-2,-3],31,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[[31,26,6,60],31],[[31,-1],31,[[27,[26]]]],[[31,-1,98],31,[[27,[26]]]],[[31,-1,-2,-3],31,[[33,[16]]],[[33,[16]]],[[33,[16]]]],[[31,-1,-2],31,[[33,[16]]],[[33,[16]]]],[[31,-1,-2,34,34,-3,[24,[35]]],31,[[27,[26]]],[[27,[26]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[31,-1,-2],31,[[27,[26]]],[[33,[16]]]],[[31,-1,-2],31,[[27,[26]]],[[27,[26]]]],[[31,-1],31,[[33,[16]]]],[[31,-1,-2],31,[[33,[16]]],[[33,[16]]]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[38,99],[6,-1,[]],[6,-1,[]],[6,5],0,[38,100],[-1,-1,[]],0,[38,101],[[],6],[38,93],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,38],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[99,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[99,-1],99,[[33,[16]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,99],[[99,-1],99,[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[100,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[100,-1],100,[[33,[16]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,100],[[100,-1],100,[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[101,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[101,-1],101,[[33,[16]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,101],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],0,[39,102],0,[39,103],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,39],0,[39,104],0,[39,105],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[102,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[102,-1],102,[[33,[16]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[102,-1],102,[[27,[26]]]],[93,102],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[103,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[103,-1],103,[[27,[26]]]],[93,103],[[103,-1],103,[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[104,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[104,-1],104,[[33,[16]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,104],[[104,-1],104,[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[105,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[[105,-1],105,[[33,[16]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,105],[[105,-1],105,[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,40],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[40,48],0,[40,66],[-1,-2,[],[]],0,0,0,0,0,0,[[48,-1,-2],48,[[27,[26]]],[[27,[26]]]],0,[48,54],[-1,-2,[],[]],[-1,-2,[],[]],[48,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[48,-1],48,[[27,[26]]]],0,[48,56],[93,48],0,[48,58],[[48,-1],48,[[27,[26]]]],[[48,-1],48,[[27,[26]]]],[[48,-1,-2],48,[[27,[26]]],[[27,[26]]]],[[48,-1],48,[[27,[26]]]],[[48,-1],48,[[27,[26]]]],[48,78],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[48,62],0,[48,65],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[54,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[54,-1,-2],54,[[27,[26]]],[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,54],[[54,-1,34,-2],54,[[27,[26]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[56,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[56,-1],56,[[27,[26]]]],[93,56],[[56,-1,-2],56,[[33,[16]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[58,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,58],[[58,-1],58,[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[62,93],0,[6,-1,[]],[6,-1,[]],[6,5],[[62,-1],62,[[27,[26]]]],[-1,-1,[]],[62,62],[[62,-1],62,[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,62],[[62,60],62],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[[65,-1],65,[[27,[26]]]],[[65,-1],65,[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[65,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,65],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[66,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,66],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[66,68],[-1,-2,[],[]],0,[[68,-1,-2,-3],68,[[27,[26]]],[[27,[26]]],[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[68,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,68],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[[78,28,28,-1],78,[[33,[16]]]],[[78,-1,-2],78,[[27,[26]]],[[33,[16]]]],[[78,28,60,28,-1],78,[[33,[16]]]],[[78,28,28,-1],78,[[33,[16]]]],[[78,-1,-2],78,[[33,[16]]],[[33,[16]]]],[[78,-1,-2],78,[[33,[16]]],[[33,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[78,93],0,[6,-1,[]],[6,-1,[]],[6,5],[[78,-1],78,[[33,[16]]]],[[78,28,74,-1],78,[[33,[16]]]],[[78,7],8],[-1,-1,[]],[[78,-1],78,[[33,[16]]]],[[78,28,-1],78,[[33,[16]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[78,26,75,[24,[75]],70,26,76,-1,-2,77],78,[[33,[16]]],[[33,[16]]]],[[78,28,28,106,[24,[107]],-1,-2],78,[[33,[16]]],[[33,[16]]]],[93,78],[[78,-1],78,[[33,[16]]]],[[78,-1],78,[[33,[16]]]],[[78,28,-1],78,[[33,[16]]]],[[78,-1],78,[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[81,93],0,0,[81,85],0,[81,88],[6,-1,[]],[6,-1,[]],[6,5],0,[[81,-1,-2],81,[[27,[26]]],[[33,[16]]]],[[81,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,81],0,[81,91],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[81,-1,-2],81,[[33,[16]]],[[33,[16]]]],[[81,-1,-2],81,[[27,[26]]],[[33,[16]]]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[85,86],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[85,87],[93,85],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[86,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[86,86],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,86],[[86,-1,-2],86,[[33,[16]]],[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[87,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[87,-1,-2,34,34,[24,[26]]],87,[[33,[16]]],[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,87],[[87,-1,-2],87,[[33,[16]]],[[33,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[88,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[88,88],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,88],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[108,93],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[108,108],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[93,108],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[91,93],0,[[91,-1,-2,-3,34],91,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[[91,-1,-2,-3],91,[[33,[16]]],[[27,[26]]],[[33,[16]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[91,-1],91,[[33,[16]]]],[[91,[46,[-1]]],91,[[33,[16]]]],[93,91],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[106,106],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],0,[[106,7],8],[[106,7],8],[[71,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[73,72,19,19],71],[[-1,19,19,106,28,[24,[107]]],71,109],[[28,107],73],[28,73],0,0,[73,[[24,[107]]]],0,[-1,-2,[],[]],[-1,26,[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,28],15,109],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[[110,7],8],[[110,7],8],0,0,0,[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,26,[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,5],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,[[111,34],111],0,[1,4],[1,111],[4,111],[[4,28,28,16],[[21,[26,36]]]],[[4,-1,-2],15,[[33,[16]]],[[33,[16]]]],[[111,-1],111,[[27,[26]]]],0,[[111,-1],111,[[27,[26]]]],0,[[111,-1],111,[[27,[26]]]],0,[[111,-1],111,[[33,[16]]]],0,[[111,34],111],0,[[111,35],111],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[112,113],[[112,114],113],[112,113],[[112,28],5],[[112,28],5],[112,5],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[112,113],[-1,-1,[]],0,[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,0,[[1,9,113,57],112],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[112,114],[[21,[113,110]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,0,[[1,9],10],[[10,28],112],[[10,[115,[26]]],11],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[11,[[21,[5,110]]]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,0,[[1,9],11],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[11,114],[[21,[5,110]]]],[11,[[21,[5,110]]]],0,[[20,28,70],20],[[20,28,28,28],20],[[20,69],20],[[20,-1],20,[[33,[16]]]],[[20,28],20],[[20,19,60,28],20],[[20,19,60,28,28],20],[[20,59],20],[[20,59,70],20],[[20,28,70],20],[[20,71],20],[[20,71,28],5],[-1,-2,[],[]],[-1,-2,[],[]],[[20,59,70,73,70,75,76],26],[[20,73],71],[[20,106,[24,[107]]],71],[6,-1,[]],[6,-1,[]],[6,5],[20,20],[[20,28],5],[[20,28,74],20],[20,19],[-1,-1,[]],0,[[20,28],26],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[[20,73],20],[[20,71],20],[[20,71,28],20],[[1,19],20],[20,20],[20,20],[[20,71],20],[[20,73],20],[[20,76],20],[20,72],0,[20,37],[20,15],[20,26],[[20,28],5],[20,19],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,116,[]],0,0,0,0,[-1,117,[]],[[[46,[113]],[46,[[5,[113,118]]]],[21,[57,119]]],[[46,[120]]]],[[[21,[57,119]]],[[46,[120]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[121,121],[[-1,-2],5,[],[]],[[121,121],122],[[121,121],122],0,0,[[-1,-2],122,[],[]],0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[121]]],123],[34,[[46,[124]]]],0,[6,5],[6,5],0,[[121,121],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],0,0,0,[[121,7],[[21,[5,125]]]],[[121,7],[[21,[5,125]]]],[[126,7],8],[[126,7],8],0,[-1,[[21,[[127,[113,55]],128]]],[]],0,[-1,-1,[]],[-1,-1,[]],[28,[[21,[-1]]],[]],[28,[[21,[121]]]],0,0,0,[[],129],[[-1,-2],98,[130,131],132],[[124,-1],15,109],0,0,0,0,[[121,-1],5,133],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,[-1,[[46,[26]]],[]],[-1,[[24,[16]]],[]],[[-1,113,76,19],5,[]],[[-1,113],5,[]],[[-1,113,26],5,[]],0,0,0,0,0,0,0,0,0,0,[[98,98,98],121],0,0,0,0,0,0,0,[-1,15,[]],0,0,0,0,[-1,134,[]],0,[-1,135,[]],0,0,[28,[[21,[121,136]]]],[[121,121],[[24,[122]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,134,[]],0,0,0,0,0,[[-1,[46,[137]],77],[[21,[57,128]]],[]],[[-1,137],[[21,[120,128]]],[]],[[121,-1],21,138],[[-1,15],5,[]],[[-1,135],5,[]],[[-1,134],5,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,26,[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],0,[134,26],0,0,0,0,0,0,0,0,[[],121],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,140],[6,-1,[]],[6,-1,[]],[141,[[142,[129]]]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[-1,-1,[]],[-1,-1,[]],[[],129],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[143,144],[143,143],[[-1,-2],5,[],[]],[[],143],[25,[[46,[145]]]],[[],[[46,[146]]]],[6,-1,[]],[6,-1,[]],[-1,[[21,[143]]],123],[6,5],[[143,7],8],[-1,-1,[]],[[],6],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[],143],0,[[143,-1],21,138],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[143,147],143],[[143,148],143],[[143,149],143],[[143,[46,[145]]],143],[[143,[46,[64]]],143],[[143,[115,[64]]],143],[[143,147],143],[[143,[46,[146]]],143],[[143,25],143],[[143,150],143],[[143,[24,[151]]],143],[[143,[46,[145]]],143],[[143,[46,[152]]],143],[[143,[115,[152]]],143],[[143,[46,[145]]],143],[[143,153],143],[[143,146],143],[[143,[155,[154]]],143],[[143,[156,[154]]],143],[[143,74],143],[[143,157],143],[[143,[24,[158]]],143],[[143,[46,[159]]],143],[[143,160],143],[[143,161],143],[143,143],[[143,162],143],[[143,[24,[70]]],143],[[143,70],143],[[143,[24,[35]]],143],[[143,60],143],[[143,152],143],[[143,[46,[152]]],143],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[163,163],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[163,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,[164,117],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],0,[[164,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[164,[[24,[16]]]],0,[164,15],[164,134],[164,135],[164,134],[[164,15],5],[[164,135],5],[[164,134],5],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[164,5],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[165,166],[165,165],[[-1,-2],5,[],[]],[[],165],[6,-1,[]],[6,-1,[]],[6,5],[[165,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[165,26],165],[[165,167],165],[[165,-1],165,[[27,[26]]]],[[165,168],165],[[165,169],165],[[165,26],165],[[165,170],165],[[165,171],165],[[165,15],165],[[165,[46,[172]]],165],[165,165],0,0,[[[156,[154]]],173],0,[-1,-2,[],[]],[-1,-2,[],[]],[173,173],[[-1,-2],5,[],[]],[[],173],[6,-1,[]],[6,-1,[]],[6,5],[[173,7],8],[[[155,[154]]],173],[-1,-1,[]],[[[156,[174]],[156,[175]],28],173],0,[[],6],[-1,-2,[],[]],[173,176],[-1,[[13,[-2]]],[],[]],[173,77],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[-1,-2],[[24,[15]]],[],109],[[173,-1],[[24,[15]]],109],0,0,0,0,0,0,0,0,[[177,-1],[[21,[[179,[178]],180]]],[[27,[26]]]],[[177,19],[[21,[[179,[181]],180]]]],[[177,26],[[21,[[179,[182]],180]]]],[[177,183],[[21,[[179,[184]],180]]]],[[177,34],[[21,[[179,[185]],180]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[186,177],0,0,[186,177],[177,177],[[-1,-2],5,[],[]],[-1,5,[[33,[16]]]],0,[186,187],0,[177,76],0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[177,5],[186,5],[6,5],[6,5],[6,5],[177,5],[[177,34,183],[[21,[[179,[188]],180]]]],[[180,7],8],[[180,7],8],[-1,-1,[]],[-1,-1,[]],[189,180],[90,180],[190,180],[-1,-1,[]],0,[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[186,77],[177,[[21,[191,180]]]],[187,[[21,[186,180]]]],[26,177],[[177,-1],5,192],0,[[177,[193,[-1]]],5,194],[[177,[193,[-1]]],[[21,[195,180]]],194],[177,[[21,[[179,[196]],180]]]],[186,[[24,[197]]]],[180,[[24,[198]]]],[[177,199,183],[[21,[[179,[200]],180]]]],[[177,183],[[21,[[179,[201]],180]]]],[-1,-2,[],[]],[-1,26,[]],[[177,19],[[21,[[179,[202]],180]]]],[[177,19],[[21,[[179,[203]],180]]]],[[177,-1],[[21,[[179,[204]],180]]],[[27,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[177,26],0,[[177,26],[[21,[[179,[205]],180]]]],[[177,183],[[21,[[179,[206]],180]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[186,98,98],77],0,0,0,0,[207,26],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,207],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[207,5],[6,5],[6,5],[207,5],[[189,7],8],[[189,7],8],[-1,-1,[]],[190,189],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,207,[[27,[26]]]],0,[[207,[193,[-1]]],[[21,[195,189]]],194],[189,[[24,[198]]]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[208,26],208],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[208,187],[208,208],[187,187],[209,209],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[],208],[[],187],[[],209],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[187]]],123],[-1,[[21,[209]]],123],[6,5],[6,5],[6,5],0,[187,26],0,[[208,7],8],[[187,7],8],[[209,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[208,[24,[15]]],208],0,[[-1,-2,-3],209,[[27,[[24,[98]]]]],[[27,[[24,[98]]]]],[[27,[[24,[26]]]]]],0,[[208,209],208],0,0,0,[[187,-1],21,138],[[209,-1],21,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[[],193],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[210]]],123],[-1,[[21,[178]]],123],[6,5],[6,5],[6,5],[[210,7],8],[[178,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[211,-1],21,138],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[212]]],123],[-1,[[21,[213]]],123],[-1,[[21,[214]]],123],[-1,[[21,[215]]],123],[-1,[[21,[216]]],123],[-1,[[21,[217]]],123],[-1,[[21,[218]]],123],[-1,[[21,[219]]],123],[-1,[[21,[220]]],123],[-1,[[21,[221]]],123],[-1,[[21,[222]]],123],[-1,[[21,[223]]],123],[-1,[[21,[224]]],123],[-1,[[21,[225]]],123],[-1,[[21,[226]]],123],[-1,[[21,[227]]],123],[-1,[[21,[228]]],123],[-1,[[21,[229]]],123],[-1,[[21,[230]]],123],[-1,[[21,[231]]],123],[-1,[[21,[232]]],123],[-1,[[21,[233]]],123],[-1,[[21,[234]]],123],[-1,[[21,[235]]],123],[-1,[[21,[236]]],123],[-1,[[21,[237]]],123],[-1,[[21,[238]]],123],[-1,[[21,[239]]],123],[-1,[[21,[240]]],123],[-1,[[21,[241]]],123],[-1,[[21,[242]]],123],[-1,[[21,[243]]],123],[-1,[[21,[244]]],123],[-1,[[21,[245]]],123],[-1,[[21,[246]]],123],[-1,[[21,[247]]],123],[-1,[[21,[248]]],123],[-1,[[21,[249]]],123],[-1,[[21,[250]]],123],[-1,[[21,[251]]],123],[-1,[[21,[252]]],123],[-1,[[21,[253]]],123],[-1,[[21,[254]]],123],[-1,[[21,[255]]],123],[-1,[[21,[184]]],123],[-1,[[21,[256]]],123],[-1,[[21,[257]]],123],[-1,[[21,[258]]],123],[-1,[[21,[259]]],123],[-1,[[21,[260]]],123],[-1,[[21,[261]]],123],[-1,[[21,[262]]],123],[-1,[[21,[263]]],123],[-1,[[21,[264]]],123],[-1,[[21,[265]]],123],[-1,[[21,[266]]],123],[-1,[[21,[267]]],123],[-1,[[21,[268]]],123],[-1,[[21,[269]]],123],[-1,[[21,[270]]],123],[-1,[[21,[271]]],123],[-1,[[21,[272]]],123],[-1,[[21,[273]]],123],[-1,[[21,[274]]],123],[-1,[[21,[275]]],123],[-1,[[21,[276]]],123],[-1,[[21,[277]]],123],[-1,[[21,[278]]],123],[-1,[[21,[279]]],123],[-1,[[21,[280]]],123],[-1,[[21,[281]]],123],[-1,[[21,[282]]],123],[-1,[[21,[283]]],123],[-1,[[21,[284]]],123],[-1,[[21,[285]]],123],[-1,[[21,[286]]],123],[-1,[[21,[287]]],123],[-1,[[21,[288]]],123],[-1,[[21,[289]]],123],[-1,[[21,[290]]],123],[-1,[[21,[291]]],123],[-1,[[21,[292]]],123],[-1,[[21,[293]]],123],[-1,[[21,[294]]],123],[-1,[[21,[295]]],123],[-1,[[21,[296]]],123],[-1,[[21,[297]]],123],[-1,[[21,[298]]],123],[-1,[[21,[299]]],123],[-1,[[21,[300]]],123],[-1,[[21,[301]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[212,7],8],[[213,7],8],[[214,7],8],[[215,7],8],[[216,7],8],[[217,7],8],[[218,7],8],[[219,7],8],[[220,7],8],[[221,7],8],[[222,7],8],[[223,7],8],[[224,7],8],[[225,7],8],[[226,7],8],[[227,7],8],[[228,7],8],[[229,7],8],[[230,7],8],[[231,7],8],[[232,7],8],[[233,7],8],[[234,7],8],[[235,7],8],[[236,7],8],[[237,7],8],[[238,7],8],[[239,7],8],[[240,7],8],[[241,7],8],[[242,7],8],[[243,7],8],[[244,7],8],[[245,7],8],[[246,7],8],[[247,7],8],[[248,7],8],[[249,7],8],[[250,7],8],[[251,7],8],[[252,7],8],[[253,7],8],[[254,7],8],[[255,7],8],[[184,7],8],[[256,7],8],[[257,7],8],[[258,7],8],[[259,7],8],[[260,7],8],[[261,7],8],[[262,7],8],[[263,7],8],[[264,7],8],[[265,7],8],[[266,7],8],[[267,7],8],[[268,7],8],[[269,7],8],[[270,7],8],[[271,7],8],[[272,7],8],[[273,7],8],[[274,7],8],[[275,7],8],[[276,7],8],[[277,7],8],[[278,7],8],[[279,7],8],[[280,7],8],[[281,7],8],[[282,7],8],[[283,7],8],[[284,7],8],[[285,7],8],[[286,7],8],[[287,7],8],[[288,7],8],[[289,7],8],[[290,7],8],[[291,7],8],[[292,7],8],[[293,7],8],[[294,7],8],[[295,7],8],[[296,7],8],[[297,7],8],[[298,7],8],[[299,7],8],[[300,7],8],[[301,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[212,-1],21,138],[[213,-1],21,138],[[214,-1],21,138],[[302,-1],21,138],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[303]]],123],[-1,[[21,[304]]],123],[-1,[[21,[305]]],123],[-1,[[21,[306]]],123],[-1,[[21,[307]]],123],[-1,[[21,[308]]],123],[-1,[[21,[309]]],123],[-1,[[21,[310]]],123],[-1,[[21,[311]]],123],[-1,[[21,[312]]],123],[-1,[[21,[313]]],123],[-1,[[21,[314]]],123],[-1,[[21,[315]]],123],[-1,[[21,[316]]],123],[-1,[[21,[317]]],123],[-1,[[21,[318]]],123],[-1,[[21,[319]]],123],[-1,[[21,[320]]],123],[-1,[[21,[321]]],123],[-1,[[21,[322]]],123],[-1,[[21,[323]]],123],[-1,[[21,[201]]],123],[-1,[[21,[324]]],123],[-1,[[21,[325]]],123],[-1,[[21,[326]]],123],[-1,[[21,[327]]],123],[-1,[[21,[328]]],123],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,[[303,7],8],[[304,7],8],[[305,7],8],[[306,7],8],[[307,7],8],[[308,7],8],[[309,7],8],[[310,7],8],[[311,7],8],[[312,7],8],[[313,7],8],[[314,7],8],[[315,7],8],[[316,7],8],[[317,7],8],[[318,7],8],[[319,7],8],[[320,7],8],[[321,7],8],[[322,7],8],[[323,7],8],[[201,7],8],[[324,7],8],[[325,7],8],[[326,7],8],[[327,7],8],[[328,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[329,-1],21,138],0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[330]]],123],[-1,[[21,[331]]],123],[-1,[[21,[332]]],123],[-1,[[21,[333]]],123],[-1,[[21,[334]]],123],[-1,[[21,[335]]],123],[-1,[[21,[336]]],123],[-1,[[21,[337]]],123],[-1,[[21,[338]]],123],[-1,[[21,[339]]],123],[-1,[[21,[340]]],123],[-1,[[21,[341]]],123],[-1,[[21,[342]]],123],[-1,[[21,[343]]],123],[-1,[[21,[344]]],123],[-1,[[21,[345]]],123],[-1,[[21,[346]]],123],[-1,[[21,[347]]],123],[-1,[[21,[348]]],123],[-1,[[21,[206]]],123],[-1,[[21,[349]]],123],[-1,[[21,[350]]],123],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,[[330,7],8],[[331,7],8],[[332,7],8],[[333,7],8],[[334,7],8],[[335,7],8],[[336,7],8],[[337,7],8],[[338,7],8],[[339,7],8],[[340,7],8],[[341,7],8],[[342,7],8],[[343,7],8],[[344,7],8],[[345,7],8],[[346,7],8],[[347,7],8],[[348,7],8],[[206,7],8],[[349,7],8],[[350,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[330,-1],21,138],[[351,-1],21,138],0,0,0,0,0,0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[352]]],123],[-1,[[21,[181]]],123],[6,5],[6,5],[6,5],[[352,7],8],[[181,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[353,-1],21,138],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[354,354],[355,355],[356,356],[357,357],[358,358],[359,359],[360,360],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[368,368],[369,369],[370,370],[371,371],[372,372],[373,373],[374,374],[375,375],[376,376],[377,377],[378,378],[379,379],[380,380],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[387,387],[388,388],[389,389],[390,390],[391,391],[392,392],[393,393],[394,394],[182,182],[395,395],[396,396],[397,397],[398,398],[399,399],[400,400],[401,401],[402,402],[403,403],[404,404],[405,405],[406,406],[407,407],[408,408],[409,409],[410,410],[411,411],[412,412],[413,413],[414,414],[415,415],[416,416],[417,417],[418,418],[419,419],[420,420],[421,421],[422,422],[423,423],[424,424],[425,425],[426,426],[427,427],[428,428],[429,429],[430,430],[431,431],[432,432],[433,433],[434,434],[435,435],[436,436],[437,437],[438,438],[439,439],[440,440],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[354]]],123],[-1,[[21,[355]]],123],[-1,[[21,[356]]],123],[-1,[[21,[357]]],123],[-1,[[21,[358]]],123],[-1,[[21,[359]]],123],[-1,[[21,[360]]],123],[-1,[[21,[361]]],123],[-1,[[21,[362]]],123],[-1,[[21,[363]]],123],[-1,[[21,[364]]],123],[-1,[[21,[365]]],123],[-1,[[21,[366]]],123],[-1,[[21,[367]]],123],[-1,[[21,[368]]],123],[-1,[[21,[369]]],123],[-1,[[21,[370]]],123],[-1,[[21,[371]]],123],[-1,[[21,[372]]],123],[-1,[[21,[373]]],123],[-1,[[21,[374]]],123],[-1,[[21,[375]]],123],[-1,[[21,[376]]],123],[-1,[[21,[377]]],123],[-1,[[21,[378]]],123],[-1,[[21,[379]]],123],[-1,[[21,[380]]],123],[-1,[[21,[381]]],123],[-1,[[21,[382]]],123],[-1,[[21,[383]]],123],[-1,[[21,[384]]],123],[-1,[[21,[385]]],123],[-1,[[21,[386]]],123],[-1,[[21,[387]]],123],[-1,[[21,[388]]],123],[-1,[[21,[389]]],123],[-1,[[21,[390]]],123],[-1,[[21,[391]]],123],[-1,[[21,[392]]],123],[-1,[[21,[393]]],123],[-1,[[21,[394]]],123],[-1,[[21,[182]]],123],[-1,[[21,[395]]],123],[-1,[[21,[396]]],123],[-1,[[21,[397]]],123],[-1,[[21,[398]]],123],[-1,[[21,[399]]],123],[-1,[[21,[400]]],123],[-1,[[21,[401]]],123],[-1,[[21,[402]]],123],[-1,[[21,[403]]],123],[-1,[[21,[404]]],123],[-1,[[21,[405]]],123],[-1,[[21,[406]]],123],[-1,[[21,[407]]],123],[-1,[[21,[408]]],123],[-1,[[21,[409]]],123],[-1,[[21,[410]]],123],[-1,[[21,[411]]],123],[-1,[[21,[412]]],123],[-1,[[21,[413]]],123],[-1,[[21,[414]]],123],[-1,[[21,[415]]],123],[-1,[[21,[416]]],123],[-1,[[21,[417]]],123],[-1,[[21,[418]]],123],[-1,[[21,[419]]],123],[-1,[[21,[420]]],123],[-1,[[21,[421]]],123],[-1,[[21,[422]]],123],[-1,[[21,[423]]],123],[-1,[[21,[424]]],123],[-1,[[21,[425]]],123],[-1,[[21,[426]]],123],[-1,[[21,[427]]],123],[-1,[[21,[428]]],123],[-1,[[21,[429]]],123],[-1,[[21,[430]]],123],[-1,[[21,[431]]],123],[-1,[[21,[432]]],123],[-1,[[21,[433]]],123],[-1,[[21,[434]]],123],[-1,[[21,[435]]],123],[-1,[[21,[436]]],123],[-1,[[21,[437]]],123],[-1,[[21,[438]]],123],[-1,[[21,[439]]],123],[-1,[[21,[440]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[354,7],8],[[355,7],8],[[356,7],8],[[357,7],8],[[358,7],8],[[359,7],8],[[360,7],8],[[361,7],8],[[362,7],8],[[363,7],8],[[364,7],8],[[365,7],8],[[366,7],8],[[367,7],8],[[368,7],8],[[369,7],8],[[370,7],8],[[371,7],8],[[372,7],8],[[373,7],8],[[374,7],8],[[375,7],8],[[376,7],8],[[377,7],8],[[378,7],8],[[379,7],8],[[380,7],8],[[381,7],8],[[382,7],8],[[383,7],8],[[384,7],8],[[385,7],8],[[386,7],8],[[387,7],8],[[388,7],8],[[389,7],8],[[390,7],8],[[391,7],8],[[392,7],8],[[393,7],8],[[394,7],8],[[182,7],8],[[395,7],8],[[396,7],8],[[397,7],8],[[398,7],8],[[399,7],8],[[400,7],8],[[401,7],8],[[402,7],8],[[403,7],8],[[404,7],8],[[405,7],8],[[406,7],8],[[407,7],8],[[408,7],8],[[409,7],8],[[410,7],8],[[411,7],8],[[412,7],8],[[413,7],8],[[414,7],8],[[415,7],8],[[416,7],8],[[417,7],8],[[418,7],8],[[419,7],8],[[420,7],8],[[421,7],8],[[422,7],8],[[423,7],8],[[424,7],8],[[425,7],8],[[426,7],8],[[427,7],8],[[428,7],8],[[429,7],8],[[430,7],8],[[431,7],8],[[432,7],8],[[433,7],8],[[434,7],8],[[435,7],8],[[436,7],8],[[437,7],8],[[438,7],8],[[439,7],8],[[440,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[354,-1],21,138],[[355,-1],21,138],[[356,-1],21,138],[[441,-1],21,138],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[442]]],123],[-1,[[21,[443]]],123],[-1,[[21,[444]]],123],[-1,[[21,[445]]],123],[-1,[[21,[446]]],123],[-1,[[21,[447]]],123],[-1,[[21,[448]]],123],[-1,[[21,[449]]],123],[-1,[[21,[450]]],123],[-1,[[21,[451]]],123],[-1,[[21,[452]]],123],[-1,[[21,[453]]],123],[-1,[[21,[454]]],123],[-1,[[21,[455]]],123],[-1,[[21,[456]]],123],[-1,[[21,[457]]],123],[-1,[[21,[458]]],123],[-1,[[21,[459]]],123],[-1,[[21,[460]]],123],[-1,[[21,[461]]],123],[-1,[[21,[462]]],123],[-1,[[21,[463]]],123],[-1,[[21,[464]]],123],[-1,[[21,[465]]],123],[-1,[[21,[466]]],123],[-1,[[21,[467]]],123],[-1,[[21,[468]]],123],[-1,[[21,[469]]],123],[-1,[[21,[470]]],123],[-1,[[21,[471]]],123],[-1,[[21,[472]]],123],[-1,[[21,[473]]],123],[-1,[[21,[474]]],123],[-1,[[21,[475]]],123],[-1,[[21,[476]]],123],[-1,[[21,[477]]],123],[-1,[[21,[478]]],123],[-1,[[21,[479]]],123],[-1,[[21,[480]]],123],[-1,[[21,[481]]],123],[-1,[[21,[185]]],123],[-1,[[21,[482]]],123],[-1,[[21,[483]]],123],[-1,[[21,[484]]],123],[-1,[[21,[485]]],123],[-1,[[21,[486]]],123],[-1,[[21,[487]]],123],[-1,[[21,[488]]],123],[-1,[[21,[489]]],123],[-1,[[21,[490]]],123],[-1,[[21,[491]]],123],[-1,[[21,[492]]],123],[-1,[[21,[493]]],123],[-1,[[21,[494]]],123],[-1,[[21,[495]]],123],[-1,[[21,[496]]],123],[-1,[[21,[497]]],123],[-1,[[21,[498]]],123],[-1,[[21,[499]]],123],[-1,[[21,[500]]],123],[-1,[[21,[501]]],123],[-1,[[21,[502]]],123],[-1,[[21,[503]]],123],[-1,[[21,[504]]],123],[-1,[[21,[505]]],123],[-1,[[21,[506]]],123],[-1,[[21,[507]]],123],[-1,[[21,[508]]],123],[-1,[[21,[509]]],123],[-1,[[21,[510]]],123],[-1,[[21,[511]]],123],[-1,[[21,[512]]],123],[-1,[[21,[513]]],123],[-1,[[21,[514]]],123],[-1,[[21,[515]]],123],[-1,[[21,[516]]],123],[-1,[[21,[517]]],123],[-1,[[21,[518]]],123],[-1,[[21,[519]]],123],[-1,[[21,[520]]],123],[-1,[[21,[521]]],123],[-1,[[21,[522]]],123],[-1,[[21,[523]]],123],[-1,[[21,[524]]],123],[-1,[[21,[525]]],123],[-1,[[21,[526]]],123],[-1,[[21,[527]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[442,7],8],[[443,7],8],[[444,7],8],[[445,7],8],[[446,7],8],[[447,7],8],[[448,7],8],[[449,7],8],[[450,7],8],[[451,7],8],[[452,7],8],[[453,7],8],[[454,7],8],[[455,7],8],[[456,7],8],[[457,7],8],[[458,7],8],[[459,7],8],[[460,7],8],[[461,7],8],[[462,7],8],[[463,7],8],[[464,7],8],[[465,7],8],[[466,7],8],[[467,7],8],[[468,7],8],[[469,7],8],[[470,7],8],[[471,7],8],[[472,7],8],[[473,7],8],[[474,7],8],[[475,7],8],[[476,7],8],[[477,7],8],[[478,7],8],[[479,7],8],[[480,7],8],[[481,7],8],[[185,7],8],[[482,7],8],[[483,7],8],[[484,7],8],[[485,7],8],[[486,7],8],[[487,7],8],[[488,7],8],[[489,7],8],[[490,7],8],[[491,7],8],[[492,7],8],[[493,7],8],[[494,7],8],[[495,7],8],[[496,7],8],[[497,7],8],[[498,7],8],[[499,7],8],[[500,7],8],[[501,7],8],[[502,7],8],[[503,7],8],[[504,7],8],[[505,7],8],[[506,7],8],[[507,7],8],[[508,7],8],[[509,7],8],[[510,7],8],[[511,7],8],[[512,7],8],[[513,7],8],[[514,7],8],[[515,7],8],[[516,7],8],[[517,7],8],[[518,7],8],[[519,7],8],[[520,7],8],[[521,7],8],[[522,7],8],[[523,7],8],[[524,7],8],[[525,7],8],[[526,7],8],[[527,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[442,-1],21,138],[[443,-1],21,138],[[444,-1],21,138],[[528,-1],21,138],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[529]]],123],[-1,[[21,[530]]],123],[-1,[[21,[531]]],123],[-1,[[21,[532]]],123],[-1,[[21,[533]]],123],[-1,[[21,[534]]],123],[-1,[[21,[535]]],123],[-1,[[21,[188]]],123],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,[[529,7],8],[[530,7],8],[[531,7],8],[[532,7],8],[[533,7],8],[[534,7],8],[[535,7],8],[[188,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,[[536,-1],21,138],0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[537]]],123],[-1,[[21,[538]]],123],[-1,[[21,[539]]],123],[-1,[[21,[540]]],123],[-1,[[21,[541]]],123],[-1,[[21,[542]]],123],[-1,[[21,[543]]],123],[-1,[[21,[544]]],123],[-1,[[21,[545]]],123],[-1,[[21,[546]]],123],[-1,[[21,[547]]],123],[-1,[[21,[548]]],123],[-1,[[21,[549]]],123],[-1,[[21,[550]]],123],[-1,[[21,[551]]],123],[-1,[[21,[552]]],123],[-1,[[21,[553]]],123],[-1,[[21,[554]]],123],[-1,[[21,[555]]],123],[-1,[[21,[556]]],123],[-1,[[21,[557]]],123],[-1,[[21,[558]]],123],[-1,[[21,[559]]],123],[-1,[[21,[560]]],123],[-1,[[21,[561]]],123],[-1,[[21,[562]]],123],[-1,[[21,[563]]],123],[-1,[[21,[564]]],123],[-1,[[21,[565]]],123],[-1,[[21,[566]]],123],[-1,[[21,[567]]],123],[-1,[[21,[568]]],123],[-1,[[21,[569]]],123],[-1,[[21,[570]]],123],[-1,[[21,[571]]],123],[-1,[[21,[572]]],123],[-1,[[21,[573]]],123],[-1,[[21,[574]]],123],[-1,[[21,[575]]],123],[-1,[[21,[576]]],123],[-1,[[21,[577]]],123],[-1,[[21,[578]]],123],[-1,[[21,[579]]],123],[-1,[[21,[580]]],123],[-1,[[21,[581]]],123],[-1,[[21,[582]]],123],[-1,[[21,[583]]],123],[-1,[[21,[584]]],123],[-1,[[21,[585]]],123],[-1,[[21,[586]]],123],[-1,[[21,[587]]],123],[-1,[[21,[588]]],123],[-1,[[21,[589]]],123],[-1,[[21,[590]]],123],[-1,[[21,[591]]],123],[-1,[[21,[592]]],123],[-1,[[21,[593]]],123],[-1,[[21,[594]]],123],[-1,[[21,[595]]],123],[-1,[[21,[596]]],123],[-1,[[21,[597]]],123],[-1,[[21,[598]]],123],[-1,[[21,[599]]],123],[-1,[[21,[600]]],123],[-1,[[21,[601]]],123],[-1,[[21,[602]]],123],[-1,[[21,[603]]],123],[-1,[[21,[604]]],123],[-1,[[21,[605]]],123],[-1,[[21,[606]]],123],[-1,[[21,[607]]],123],[-1,[[21,[608]]],123],[-1,[[21,[609]]],123],[-1,[[21,[610]]],123],[-1,[[21,[611]]],123],[-1,[[21,[612]]],123],[-1,[[21,[613]]],123],[-1,[[21,[614]]],123],[-1,[[21,[615]]],123],[-1,[[21,[616]]],123],[-1,[[21,[617]]],123],[-1,[[21,[618]]],123],[-1,[[21,[619]]],123],[-1,[[21,[620]]],123],[-1,[[21,[621]]],123],[-1,[[21,[622]]],123],[-1,[[21,[623]]],123],[-1,[[21,[624]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[537,7],8],[[538,7],8],[[539,7],8],[[540,7],8],[[541,7],8],[[542,7],8],[[543,7],8],[[544,7],8],[[545,7],8],[[546,7],8],[[547,7],8],[[548,7],8],[[549,7],8],[[550,7],8],[[551,7],8],[[552,7],8],[[553,7],8],[[554,7],8],[[555,7],8],[[556,7],8],[[557,7],8],[[558,7],8],[[559,7],8],[[560,7],8],[[561,7],8],[[562,7],8],[[563,7],8],[[564,7],8],[[565,7],8],[[566,7],8],[[567,7],8],[[568,7],8],[[569,7],8],[[570,7],8],[[571,7],8],[[572,7],8],[[573,7],8],[[574,7],8],[[575,7],8],[[576,7],8],[[577,7],8],[[578,7],8],[[579,7],8],[[580,7],8],[[581,7],8],[[582,7],8],[[583,7],8],[[584,7],8],[[585,7],8],[[586,7],8],[[587,7],8],[[588,7],8],[[589,7],8],[[590,7],8],[[591,7],8],[[592,7],8],[[593,7],8],[[594,7],8],[[595,7],8],[[596,7],8],[[597,7],8],[[598,7],8],[[599,7],8],[[600,7],8],[[601,7],8],[[602,7],8],[[603,7],8],[[604,7],8],[[605,7],8],[[606,7],8],[[607,7],8],[[608,7],8],[[609,7],8],[[610,7],8],[[611,7],8],[[612,7],8],[[613,7],8],[[614,7],8],[[615,7],8],[[616,7],8],[[617,7],8],[[618,7],8],[[619,7],8],[[620,7],8],[[621,7],8],[[622,7],8],[[623,7],8],[[624,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[537,-1],21,138],[[538,-1],21,138],[[539,-1],21,138],[[625,-1],21,138],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[626]]],123],[-1,[[21,[627]]],123],[-1,[[21,[628]]],123],[-1,[[21,[629]]],123],[-1,[[21,[630]]],123],[-1,[[21,[196]]],123],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,[[626,7],8],[[627,7],8],[[628,7],8],[[629,7],8],[[630,7],8],[[196,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,[[631,-1],21,138],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[632]]],123],[-1,[[21,[633]]],123],[-1,[[21,[634]]],123],[-1,[[21,[635]]],123],[-1,[[21,[636]]],123],[-1,[[21,[637]]],123],[-1,[[21,[638]]],123],[-1,[[21,[639]]],123],[-1,[[21,[640]]],123],[-1,[[21,[200]]],123],[-1,[[21,[641]]],123],[-1,[[21,[642]]],123],[-1,[[21,[643]]],123],[-1,[[21,[644]]],123],[-1,[[21,[645]]],123],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,[[632,7],8],[[633,7],8],[[634,7],8],[[635,7],8],[[636,7],8],[[637,7],8],[[638,7],8],[[639,7],8],[[640,7],8],[[200,7],8],[[641,7],8],[[642,7],8],[[643,7],8],[[644,7],8],[[645,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[646,-1],21,138],0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[647,647],[648,648],[649,649],[650,650],[651,651],[652,652],[653,653],[654,654],[655,655],[202,202],[656,656],[657,657],[658,658],[659,659],[660,660],[661,661],[662,662],[663,663],[664,664],[665,665],[666,666],[667,667],[668,668],[669,669],[670,670],[671,671],[672,672],[673,673],[674,674],[675,675],[676,676],[677,677],[678,678],[679,679],[680,680],[681,681],[682,682],[683,683],[684,684],[685,685],[686,686],[687,687],[688,688],[689,689],[690,690],[691,691],[692,692],[693,693],[694,694],[695,695],[696,696],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[647]]],123],[-1,[[21,[648]]],123],[-1,[[21,[649]]],123],[-1,[[21,[650]]],123],[-1,[[21,[651]]],123],[-1,[[21,[652]]],123],[-1,[[21,[653]]],123],[-1,[[21,[654]]],123],[-1,[[21,[655]]],123],[-1,[[21,[202]]],123],[-1,[[21,[656]]],123],[-1,[[21,[657]]],123],[-1,[[21,[658]]],123],[-1,[[21,[659]]],123],[-1,[[21,[660]]],123],[-1,[[21,[661]]],123],[-1,[[21,[662]]],123],[-1,[[21,[663]]],123],[-1,[[21,[664]]],123],[-1,[[21,[665]]],123],[-1,[[21,[666]]],123],[-1,[[21,[667]]],123],[-1,[[21,[668]]],123],[-1,[[21,[669]]],123],[-1,[[21,[670]]],123],[-1,[[21,[671]]],123],[-1,[[21,[672]]],123],[-1,[[21,[673]]],123],[-1,[[21,[674]]],123],[-1,[[21,[675]]],123],[-1,[[21,[676]]],123],[-1,[[21,[677]]],123],[-1,[[21,[678]]],123],[-1,[[21,[679]]],123],[-1,[[21,[680]]],123],[-1,[[21,[681]]],123],[-1,[[21,[682]]],123],[-1,[[21,[683]]],123],[-1,[[21,[684]]],123],[-1,[[21,[685]]],123],[-1,[[21,[686]]],123],[-1,[[21,[687]]],123],[-1,[[21,[688]]],123],[-1,[[21,[689]]],123],[-1,[[21,[690]]],123],[-1,[[21,[691]]],123],[-1,[[21,[692]]],123],[-1,[[21,[693]]],123],[-1,[[21,[694]]],123],[-1,[[21,[695]]],123],[-1,[[21,[696]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,[[647,7],8],[[648,7],8],[[649,7],8],[[650,7],8],[[651,7],8],[[652,7],8],[[653,7],8],[[654,7],8],[[655,7],8],[[202,7],8],[[656,7],8],[[657,7],8],[[658,7],8],[[659,7],8],[[660,7],8],[[661,7],8],[[662,7],8],[[663,7],8],[[664,7],8],[[665,7],8],[[666,7],8],[[667,7],8],[[668,7],8],[[669,7],8],[[670,7],8],[[671,7],8],[[672,7],8],[[673,7],8],[[674,7],8],[[675,7],8],[[676,7],8],[[677,7],8],[[678,7],8],[[679,7],8],[[680,7],8],[[681,7],8],[[682,7],8],[[683,7],8],[[684,7],8],[[685,7],8],[[686,7],8],[[687,7],8],[[688,7],8],[[689,7],8],[[690,7],8],[[691,7],8],[[692,7],8],[[693,7],8],[[694,7],8],[[695,7],8],[[696,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[647,-1],21,138],[[648,-1],21,138],[[697,-1],21,138],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[698,698],[699,699],[700,700],[701,701],[702,702],[703,703],[704,704],[705,705],[706,706],[707,707],[708,708],[709,709],[710,710],[711,711],[712,712],[713,713],[714,714],[715,715],[716,716],[717,717],[718,718],[719,719],[720,720],[721,721],[722,722],[723,723],[724,724],[725,725],[726,726],[727,727],[203,203],[728,728],[729,729],[730,730],[731,731],[732,732],[733,733],[734,734],[735,735],[736,736],[737,737],[738,738],[739,739],[740,740],[741,741],[742,742],[743,743],[744,744],[745,745],[746,746],[747,747],[748,748],[749,749],[750,750],[751,751],[752,752],[753,753],[754,754],[755,755],[756,756],[757,757],[758,758],[759,759],[760,760],[761,761],[762,762],[763,763],[764,764],[765,765],[766,766],[767,767],[768,768],[769,769],[770,770],[771,771],[772,772],[773,773],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[698]]],123],[-1,[[21,[699]]],123],[-1,[[21,[700]]],123],[-1,[[21,[701]]],123],[-1,[[21,[702]]],123],[-1,[[21,[703]]],123],[-1,[[21,[704]]],123],[-1,[[21,[705]]],123],[-1,[[21,[706]]],123],[-1,[[21,[707]]],123],[-1,[[21,[708]]],123],[-1,[[21,[709]]],123],[-1,[[21,[710]]],123],[-1,[[21,[711]]],123],[-1,[[21,[712]]],123],[-1,[[21,[713]]],123],[-1,[[21,[714]]],123],[-1,[[21,[715]]],123],[-1,[[21,[716]]],123],[-1,[[21,[717]]],123],[-1,[[21,[718]]],123],[-1,[[21,[719]]],123],[-1,[[21,[720]]],123],[-1,[[21,[721]]],123],[-1,[[21,[722]]],123],[-1,[[21,[723]]],123],[-1,[[21,[724]]],123],[-1,[[21,[725]]],123],[-1,[[21,[726]]],123],[-1,[[21,[727]]],123],[-1,[[21,[203]]],123],[-1,[[21,[728]]],123],[-1,[[21,[729]]],123],[-1,[[21,[730]]],123],[-1,[[21,[731]]],123],[-1,[[21,[732]]],123],[-1,[[21,[733]]],123],[-1,[[21,[734]]],123],[-1,[[21,[735]]],123],[-1,[[21,[736]]],123],[-1,[[21,[737]]],123],[-1,[[21,[738]]],123],[-1,[[21,[739]]],123],[-1,[[21,[740]]],123],[-1,[[21,[741]]],123],[-1,[[21,[742]]],123],[-1,[[21,[743]]],123],[-1,[[21,[744]]],123],[-1,[[21,[745]]],123],[-1,[[21,[746]]],123],[-1,[[21,[747]]],123],[-1,[[21,[748]]],123],[-1,[[21,[749]]],123],[-1,[[21,[750]]],123],[-1,[[21,[751]]],123],[-1,[[21,[752]]],123],[-1,[[21,[753]]],123],[-1,[[21,[754]]],123],[-1,[[21,[755]]],123],[-1,[[21,[756]]],123],[-1,[[21,[757]]],123],[-1,[[21,[758]]],123],[-1,[[21,[759]]],123],[-1,[[21,[760]]],123],[-1,[[21,[761]]],123],[-1,[[21,[762]]],123],[-1,[[21,[763]]],123],[-1,[[21,[764]]],123],[-1,[[21,[765]]],123],[-1,[[21,[766]]],123],[-1,[[21,[767]]],123],[-1,[[21,[768]]],123],[-1,[[21,[769]]],123],[-1,[[21,[770]]],123],[-1,[[21,[771]]],123],[-1,[[21,[772]]],123],[-1,[[21,[773]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[698,7],8],[[699,7],8],[[700,7],8],[[701,7],8],[[702,7],8],[[703,7],8],[[704,7],8],[[705,7],8],[[706,7],8],[[707,7],8],[[708,7],8],[[709,7],8],[[710,7],8],[[711,7],8],[[712,7],8],[[713,7],8],[[714,7],8],[[715,7],8],[[716,7],8],[[717,7],8],[[718,7],8],[[719,7],8],[[720,7],8],[[721,7],8],[[722,7],8],[[723,7],8],[[724,7],8],[[725,7],8],[[726,7],8],[[727,7],8],[[203,7],8],[[728,7],8],[[729,7],8],[[730,7],8],[[731,7],8],[[732,7],8],[[733,7],8],[[734,7],8],[[735,7],8],[[736,7],8],[[737,7],8],[[738,7],8],[[739,7],8],[[740,7],8],[[741,7],8],[[742,7],8],[[743,7],8],[[744,7],8],[[745,7],8],[[746,7],8],[[747,7],8],[[748,7],8],[[749,7],8],[[750,7],8],[[751,7],8],[[752,7],8],[[753,7],8],[[754,7],8],[[755,7],8],[[756,7],8],[[757,7],8],[[758,7],8],[[759,7],8],[[760,7],8],[[761,7],8],[[762,7],8],[[763,7],8],[[764,7],8],[[765,7],8],[[766,7],8],[[767,7],8],[[768,7],8],[[769,7],8],[[770,7],8],[[771,7],8],[[772,7],8],[[773,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[698,-1],21,138],[[699,-1],21,138],[[700,-1],21,138],[[774,-1],21,138],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[775]]],123],[-1,[[21,[776]]],123],[-1,[[21,[777]]],123],[-1,[[21,[778]]],123],[-1,[[21,[779]]],123],[-1,[[21,[780]]],123],[-1,[[21,[781]]],123],[-1,[[21,[782]]],123],[-1,[[21,[783]]],123],[-1,[[21,[784]]],123],[-1,[[21,[785]]],123],[-1,[[21,[786]]],123],[-1,[[21,[787]]],123],[-1,[[21,[788]]],123],[-1,[[21,[789]]],123],[-1,[[21,[790]]],123],[-1,[[21,[791]]],123],[-1,[[21,[792]]],123],[-1,[[21,[793]]],123],[-1,[[21,[794]]],123],[-1,[[21,[795]]],123],[-1,[[21,[796]]],123],[-1,[[21,[797]]],123],[-1,[[21,[798]]],123],[-1,[[21,[799]]],123],[-1,[[21,[800]]],123],[-1,[[21,[801]]],123],[-1,[[21,[802]]],123],[-1,[[21,[803]]],123],[-1,[[21,[804]]],123],[-1,[[21,[805]]],123],[-1,[[21,[806]]],123],[-1,[[21,[807]]],123],[-1,[[21,[204]]],123],[-1,[[21,[808]]],123],[-1,[[21,[809]]],123],[-1,[[21,[810]]],123],[-1,[[21,[811]]],123],[-1,[[21,[812]]],123],[-1,[[21,[813]]],123],[-1,[[21,[814]]],123],[-1,[[21,[815]]],123],[-1,[[21,[816]]],123],[-1,[[21,[817]]],123],[-1,[[21,[818]]],123],[-1,[[21,[819]]],123],[-1,[[21,[820]]],123],[-1,[[21,[821]]],123],[-1,[[21,[822]]],123],[-1,[[21,[823]]],123],[-1,[[21,[824]]],123],[-1,[[21,[825]]],123],[-1,[[21,[826]]],123],[-1,[[21,[827]]],123],[-1,[[21,[828]]],123],[-1,[[21,[829]]],123],[-1,[[21,[830]]],123],[-1,[[21,[831]]],123],[-1,[[21,[832]]],123],[-1,[[21,[833]]],123],[-1,[[21,[834]]],123],[-1,[[21,[835]]],123],[-1,[[21,[836]]],123],[-1,[[21,[837]]],123],[-1,[[21,[838]]],123],[-1,[[21,[839]]],123],[-1,[[21,[840]]],123],[-1,[[21,[841]]],123],[-1,[[21,[842]]],123],[-1,[[21,[843]]],123],[-1,[[21,[844]]],123],[-1,[[21,[845]]],123],[-1,[[21,[846]]],123],[-1,[[21,[847]]],123],[-1,[[21,[848]]],123],[-1,[[21,[849]]],123],[-1,[[21,[850]]],123],[-1,[[21,[851]]],123],[-1,[[21,[852]]],123],[-1,[[21,[853]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[775,7],8],[[776,7],8],[[777,7],8],[[778,7],8],[[779,7],8],[[780,7],8],[[781,7],8],[[782,7],8],[[783,7],8],[[784,7],8],[[785,7],8],[[786,7],8],[[787,7],8],[[788,7],8],[[789,7],8],[[790,7],8],[[791,7],8],[[792,7],8],[[793,7],8],[[794,7],8],[[795,7],8],[[796,7],8],[[797,7],8],[[798,7],8],[[799,7],8],[[800,7],8],[[801,7],8],[[802,7],8],[[803,7],8],[[804,7],8],[[805,7],8],[[806,7],8],[[807,7],8],[[204,7],8],[[808,7],8],[[809,7],8],[[810,7],8],[[811,7],8],[[812,7],8],[[813,7],8],[[814,7],8],[[815,7],8],[[816,7],8],[[817,7],8],[[818,7],8],[[819,7],8],[[820,7],8],[[821,7],8],[[822,7],8],[[823,7],8],[[824,7],8],[[825,7],8],[[826,7],8],[[827,7],8],[[828,7],8],[[829,7],8],[[830,7],8],[[831,7],8],[[832,7],8],[[833,7],8],[[834,7],8],[[835,7],8],[[836,7],8],[[837,7],8],[[838,7],8],[[839,7],8],[[840,7],8],[[841,7],8],[[842,7],8],[[843,7],8],[[844,7],8],[[845,7],8],[[846,7],8],[[847,7],8],[[848,7],8],[[849,7],8],[[850,7],8],[[851,7],8],[[852,7],8],[[853,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[775,-1],21,138],[[776,-1],21,138],[[777,-1],21,138],[[854,-1],21,138],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[855,855],[856,856],[857,857],[858,858],[859,859],[860,860],[861,861],[862,862],[863,863],[864,864],[865,865],[866,866],[867,867],[868,868],[869,869],[870,870],[205,205],[871,871],[872,872],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[855]]],123],[-1,[[21,[856]]],123],[-1,[[21,[857]]],123],[-1,[[21,[858]]],123],[-1,[[21,[859]]],123],[-1,[[21,[860]]],123],[-1,[[21,[861]]],123],[-1,[[21,[862]]],123],[-1,[[21,[863]]],123],[-1,[[21,[864]]],123],[-1,[[21,[865]]],123],[-1,[[21,[866]]],123],[-1,[[21,[867]]],123],[-1,[[21,[868]]],123],[-1,[[21,[869]]],123],[-1,[[21,[870]]],123],[-1,[[21,[205]]],123],[-1,[[21,[871]]],123],[-1,[[21,[872]]],123],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],0,0,0,0,0,0,0,0,0,[[855,7],8],[[856,7],8],[[857,7],8],[[858,7],8],[[859,7],8],[[860,7],8],[[861,7],8],[[862,7],8],[[863,7],8],[[864,7],8],[[865,7],8],[[866,7],8],[[867,7],8],[[868,7],8],[[869,7],8],[[870,7],8],[[205,7],8],[[871,7],8],[[872,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,[[855,-1],21,138],[[873,-1],21,138],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[75,210],5],[[[875,[874]],795],[[21,[5,876]]]],[[[875,[877]],794],5],[[[875,[878]],790],5],[[[875,[879]],789],5],[[[875,[880]],797],[[21,[5,876]]]],[[[875,[881]],784],5],[[[875,[882]],781],5],[[[875,[883]],786],5],[[[875,[884]],788],5],[[[875,[885]],785],5],[[886,[46,[294]]],5],[[887,252],[[21,[5,876]]]],[[[875,[874]],232],[[21,[5,876]]]],[[[875,[877]],231],5],[[[875,[878]],227],5],[[[875,[879]],226],5],[[[875,[880]],234],[[21,[5,876]]]],[[[875,[-1]],242],[[21,[5,876]]],[]],[[[875,[881]],221],5],[[[875,[882]],218],5],[[[875,[883]],223],5],[[[875,[884]],225],5],[[[875,[885]],222],5],[[[46,[888]],322],5],[[[46,[346]],[46,[63]],[127,[26,[127,[26,[46,[[5,[889,32]]]]]]]]],5],[[887,481],[[21,[5,876]]]],[[[875,[874]],462],[[21,[5,876]]]],[[[875,[877]],461],5],[[[875,[878]],457],5],[[[875,[879]],456],5],[[[875,[880]],464],[[21,[5,876]]]],[[[875,[-1]],471],[[21,[5,876]]],[]],[[[875,[881]],451],5],[[[875,[882]],448],5],[[[875,[883]],453],5],[[[875,[884]],455],5],[[[875,[885]],452],5],[[887,394],[[21,[5,876]]]],[[886,[46,[433]]],5],[[[875,[874]],374],[[21,[5,876]]]],[[[875,[877]],373],5],[[[875,[878]],369],5],[[[875,[879]],368],5],[[[875,[880]],376],[[21,[5,876]]]],[[[875,[-1]],384],[[21,[5,876]]],[]],[[[875,[881]],363],5],[[[875,[882]],360],5],[[[875,[883]],365],5],[[[875,[884]],367],5],[[[875,[885]],364],5],[[34,183],5],[[74,628],5],[[887,576],[[21,[5,876]]]],[[[875,[874]],557],[[21,[5,876]]]],[[[875,[877]],556],5],[[[875,[878]],552],5],[[[875,[879]],551],5],[[[875,[880]],559],[[21,[5,876]]]],[[[875,[-1]],566],[[21,[5,876]]],[]],[[[875,[881]],546],5],[[[875,[882]],543],5],[[[875,[883]],548],5],[[[875,[884]],550],5],[[[875,[885]],547],5],[[[875,[874]],718],[[21,[5,876]]]],[[[875,[877]],717],5],[[[875,[878]],713],5],[[[875,[879]],712],5],[[[875,[880]],720],[[21,[5,876]]]],[[888,640,[24,[890]]],5],[[[875,[-1]],804],[[21,[5,876]]],[]],[[137,727],[[21,[5,876]]]],[[[875,[-1]],727],[[21,[5,876]]],[]],[[[127,[26,[5,[137,891]]]],806],5],[[804,137],[[21,[5,876]]]],[[[875,[881]],707],5],[[[875,[882]],704],5],[[[875,[883]],709],5],[[[875,[884]],711],5],[[870,63,[127,[26,[46,[[5,[889,32]]]]]]],5],[[[875,[885]],708],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,[[892,[154]]]],[26,887],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[876,7],8],[[876,7],8],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,[-1,26,[]],0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[191,576],[191,76],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[[191,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[[179,[578]]],191],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,116,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,120],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[128,7],8],[[128,7],8],[[120,7],8],[120,113],0,[-1,[[21,[[127,[113,55]],128]]],[]],[190,128],[-1,-1,[]],[113,120],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[46,[26]]],[]],[[-1,113,76,19],5,[]],[[-1,113],5,[]],[[-1,113,26],5,[]],[128,[[0,[893]]]],[113,120],[[-1,[46,[137]],77],[[21,[57,128]]],[]],[[-1,137],[[21,[120,128]]],[]],[128,[[24,[198]]]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[115,[60]]],-1,894],0,0,0,0,0,0,0,0,0,0,0,0,0,[[895,[897,[896]]],[[21,[[46,[887]],898]]]],[[899,[901,[[21,[887,900]]]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[895,[[903,[902]]]],[899,[[904,[902]]]],[895,895],[899,899],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[[898,898],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[895,7],8],[[899,7],8],[[898,7],8],[[898,7],8],[[895,[897,[905]]],[[21,[[46,[137]],898]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,[[21,[895,898]]]],[28,[[21,[899,898]]]],[[895,[115,[906]]],[[21,[[46,[887]],898]]]],[[895,[46,[906]]],[[21,[[46,[137]],898]]]],[895,906],[[895,[115,[60]]],907],[[895,906],[[46,[60]]]],[[895,[115,[906]]],[[46,[[46,[60]]]]]],[[895,[115,[906]]],[[21,[[46,[908]],898]]]],[[895,[897,[909]]],[[21,[[46,[908]],898]]]],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[898,26],[134,895],[134,899],0,0,[[895,[115,[906]],906],[[21,[[46,[887]],898]]]],[[895,906],[[21,[[46,[887]],898]]]],[[895,[115,[906]],906],[[21,[[46,[908]],898]]]],[[895,908],[[21,[5,898]]]],0,0,[[899,[46,[906]]],[[46,[887]]]],[895,908],[899,910],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[895,887],[[21,[5,898]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[895,911,912],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[913,5],[907,5],[914,5],[915,5],[916,5],[917,5],[918,5],[919,5],[920,5],[921,5],[922,5],[923,5],[924,5],[925,5],[926,5],[913,913],[907,907],[914,914],[915,915],[916,916],[917,917],[918,918],[919,919],[920,920],[921,921],[922,922],[923,923],[924,924],[925,925],[926,926],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],913],[[],907],[[],914],[[],915],[[],916],[[],917],[[],918],[[],919],[[],920],[[],921],[[],922],[[],923],[[],924],[[],925],[[],926],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[913,6],[907,6],[914,6],[915,6],[916,6],[917,6],[918,6],[919,6],[920,6],[921,6],[922,6],[923,6],[924,6],[925,6],[926,6],[[913,913],77],[[907,907],77],[[914,914],77],[[915,915],77],[[916,916],77],[[917,917],77],[[918,918],77],[[919,919],77],[[920,920],77],[[921,921],77],[[922,922],77],[[923,923],77],[[924,924],77],[[925,925],77],[[926,926],77],[[913,7],8],[[907,7],8],[[914,7],8],[[915,7],8],[[916,7],8],[[917,7],8],[[918,7],8],[[919,7],8],[[920,7],8],[[921,7],8],[[922,7],8],[[923,7],8],[[924,7],8],[[925,7],8],[[926,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[927,927],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[927,-1],5,928],[927,6],[[927,927],77],[[927,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[[24,[927]],34,929,-1,930],[[21,[5,931]]],932],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,[[[903,[-1]]],[[903,[-1]]],[[934,[933]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[926]]]],900]]],[[934,[933]]],936],[-1,-2,[],[]],[-1,-2,[],[]],[[[903,[-1]],-2],[[21,[[935,[915]],900]]],[[934,[933]]],[[937,[914]]]],[[[903,[-1]]],[[903,[-1]]],61],[[-1,-2],5,[],[]],[-1,[[21,[[903,[902]],938]]],[[940,[939]]]],[6,-1,[]],[6,-1,[]],[6,5],[[[903,[-1]],7],8,192],[[[903,[-1]],-2],[[21,[[935,[[897,[905]]]],900]]],[[934,[933]]],936],[-1,-1,[]],[[[903,[-1]],-2],[[21,[[935,[[897,[896]]]],900]]],[[934,[933]]],[[937,[941]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[905]]]],900]]],[[934,[933]]],[[937,[942]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[909]]]],900]]],[[934,[933]]],[[937,[941]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[925]]]],900]]],[[934,[933]]],936],[[[903,[-1]],-2],[[21,[[935,[907]],900]]],[[934,[933]]],[[937,[913]]]],[[],6],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[903,[-1]]],[[934,[933]]]],[[[903,[-1]],-2],[[21,[[935,[919]],900]]],[[934,[933]]],[[937,[918]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[896]]]],900]]],[[934,[933]]],[[937,[922]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[896]]]],900]]],[[934,[933]]],[[937,[921]]]],[[[903,[-1]],-2],[[21,[[935,[[897,[909]]]],900]]],[[934,[933]]],[[937,[920]]]],[[[903,[-1]],-2],[[21,[[935,[923]],900]]],[[934,[933]]],936],[[[903,[-1]]],[[903,[-1]]],[[934,[933]]]],[[[903,[-1]],-2],[[21,[[935,[917]],900]]],[[934,[933]]],[[937,[916]]]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[[903,[-1]],-2],[[21,[[935,[924]],900]]],[[934,[933]]],936],[-1,-2,[],[]],[[-1,-2],[[903,[[943,[-1,-2]]]]],[[945,[[944,[933]]]],[934,[933]]],946],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,[13,[[897,[909]]]]],[[949,[[948,[947]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[950,[-1]],[944,[-2]]],[],951,[952,953]],[[-1,[944,[-2]]],[],[],[]],[[-1,[13,[914]]],[[949,[[948,[947]]]]],[]],[[[954,[-1]]],[[954,[-1]]],951],[[[950,[-1]]],[[950,[-1]]],951],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[[954,[-1]],7],8,192],[[[950,[-1]],7],8,[192,951]],[[-1,[13,[[897,[905]]]]],[[949,[[948,[947]]]]],[]],[-1,-1,[]],[-1,-1,[]],[[-1,[13,[941]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[942]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[941]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[[897,[925]]]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[913]]],[[949,[[948,[947]]]]],[]],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[950,[-1]]],951],[[-1,[13,[918]]],[[949,[[948,[947]]]]],[]],[[[950,[-1]],955],[[956,[[21,[5]]]]],951],[[-1,955],[[956,[[21,[5]]]]],[]],[[-1,[13,[922]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[921]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[920]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[[897,[909]]]]],[[949,[[948,[947]]]]],[]],0,[[-1,[13,[916]]],[[949,[[948,[947]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[[-1,[13,[[897,[896]]]]],[[949,[[948,[947]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[943,[[950,[-1]],-2]]],951,946],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[957,[13,[[897,[909]]]]],[[949,[[948,[947]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[957,[13,[914]]],[[949,[[948,[947]]]]]],[958,958],[959,959],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[[958,958],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[958,7],8],[[959,7],8],[[959,7],8],[[957,[13,[[897,[905]]]]],[[949,[[948,[947]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[148,959],0,0,[[957,[13,[941]]],[[949,[[948,[947]]]]]],[[957,[13,[942]]],[[949,[[948,[947]]]]]],[[957,[13,[941]]],[[949,[[948,[947]]]]]],[[957,[13,[[897,[925]]]]],[[949,[[948,[947]]]]]],[[957,[13,[913]]],[[949,[[948,[947]]]]]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,[[[962,[[961,[960]]]]],957],[[957,[13,[918]]],[[949,[[948,[947]]]]]],0,0,0,0,[[957,[13,[922]]],[[949,[[948,[947]]]]]],[[957,[13,[921]]],[[949,[[948,[947]]]]]],[[957,[13,[920]]],[[949,[[948,[947]]]]]],[[957,[13,[[897,[909]]]]],[[949,[[948,[947]]]]]],[[[962,[[961,[960]]]]],963],0,0,[[957,[13,[916]]],[[949,[[948,[947]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[957,[13,[[897,[896]]]]],[[949,[[948,[947]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[964,963],[964,[[962,[[961,[960]]]]]],[[],964],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[965,[[966,[5]]]],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,[[[962,[[961,[960]]]]],963],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[964,887],964],[[964,77],964],[[964,129],964],[[964,959],964],[[965,[115,[60]]],[[966,[6]]]],0,[963,26],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[[963,-1],958,[967,953]],[-1,-1,[]],[963,906],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[968,[969,[5]],[962,[[961,[960]]]],129],963],0,[[963,906],5],[[963,959],5],[[963,908],5],[[963,887],5],[963,5],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[],887],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[970,7],8],[[970,7],8],[-1,-1,[]],[971,970],[972,970],[973,970],[-1,-1,[]],[960,[[115,[60]]]],[960,887],[960,906],0,[960,906],[[960,906],[[21,[887,970]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[960,77],0,0,[[906,959,134,974,77],960],[960,[[115,[60]]]],[[960,[115,[60]]],[[46,[60]]]],[960,975],0,[960,959],0,[960,959],[[960,887],[[21,[5,970]]]],[[960,[115,[60]]],[[21,[5,970]]]],[970,[[24,[198]]]],[960,974],0,[960,[[21,[908,970]]]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[[960,[115,[60]],[115,[60]]],77],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[976]]],123],[6,5],[6,5],[6,5],[[976,976],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[968,976],77],[[976,7],8],[[976,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[968,26],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[977,[[46,[60]]]]],968],[[978,[115,[60]]],[[966,[6]]]],[[976,-1],21,138],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[[979,976],77],[968,979],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[896,5],[909,5],[905,5],[941,5],[942,5],[896,896],[909,909],[905,905],[941,941],[942,942],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,[[],896],[[],909],[[],905],[[],941],[[],942],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[6,5],[6,5],[896,6],[909,6],[905,6],[941,6],[942,6],[[896,896],77],[[909,909],77],[[905,905],77],[[941,941],77],[[942,942],77],[[896,7],8],[[909,7],8],[[905,7],8],[[941,7],8],[[942,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[980,5],[981,5],[982,5],[983,5],[980,980],[981,981],[982,982],[983,983],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],980],[[],981],[[],982],[[],983],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[6,5],[980,6],[981,6],[982,6],[983,6],[[980,980],77],[[981,981],77],[[982,982],77],[[983,983],77],[[980,7],8],[[981,7],8],[[982,7],8],[[983,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[904,[-1]]],[[904,[-1]]],[[934,[933]]]],[[[904,[-1]],-2],[[21,[[935,[[897,[896]]]],900]]],[[934,[933]]],[[937,[980]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[904,[-1]]],[[904,[-1]]],61],[[-1,-2],5,[],[]],[-1,[[21,[[904,[902]],938]]],[[940,[939]]]],[6,-1,[]],[6,-1,[]],[6,5],[[[904,[-1]],7],8,192],[-1,-1,[]],[[],6],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[904,[-1]]],[[934,[933]]]],[[[904,[-1]]],[[904,[-1]]],[[934,[933]]]],[[[904,[-1]],-2],[[21,[[935,[[897,[896]]]],900]]],[[934,[933]]],[[937,[983]]]],[[[904,[-1]],-2],[[21,[[935,[[897,[909]]]],900]]],[[934,[933]]],[[937,[981]]]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[-1,-2],[[904,[[943,[-1,-2]]]]],[[945,[[944,[933]]]],[934,[933]]],946],0,0,0,0,0,0,0,[[-1,[13,[980]]],[[949,[[948,[947]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[984,[-1]],[944,[-2]]],[],985,[952,953]],[[-1,[944,[-2]]],[],[],[]],[[[986,[-1]]],[[986,[-1]]],985],[[[984,[-1]]],[[984,[-1]]],985],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[[986,[-1]],7],8,192],[[[984,[-1]],7],8,[192,985]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[984,[-1]]],985],[[[984,[-1]],955],[[956,[[21,[5]]]]],985],[[-1,955],[[956,[[21,[5]]]]],[]],0,[[-1,[13,[983]]],[[949,[[948,[947]]]]],[]],[[-1,[13,[981]]],[[949,[[948,[947]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[943,[[984,[-1]],-2]]],985,946],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,167],[168,168],[987,987],[988,988],[989,989],[169,169],[172,172],[166,166],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,[[],168],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[990,991],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[167]]],123],[-1,[[21,[168]]],123],[-1,[[21,[987]]],123],[-1,[[21,[988]]],123],[-1,[[21,[989]]],123],[-1,[[21,[169]]],123],[-1,[[21,[172]]],123],[-1,[[21,[166]]],123],[34,[[46,[124]]]],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[[987,987],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[167,[[24,[16]]]],[[167,7],[[21,[5,125]]]],[[168,7],[[21,[5,125]]]],[[987,7],[[21,[5,125]]]],[[988,7],[[21,[5,125]]]],[[989,7],[[21,[5,125]]]],[[169,7],[[21,[5,125]]]],[[172,7],[[21,[5,125]]]],[[166,7],[[21,[5,125]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[124,-1],15,109],[988,[[24,[134]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,-1],21,138],[[168,-1],21,138],[[987,-1],21,138],[[988,-1],21,138],[[989,-1],21,138],[[169,-1],21,138],[[172,-1],21,138],[[166,-1],21,138],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[992,117],[-1,-2,[],[]],[-1,-2,[],[]],[992,992],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],0,[[992,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[992,[[24,[16]]]],0,0,[992,15],[992,134],[992,135],[992,134],[[992,-1],21,138],[[992,15],5],[[992,135],5],[[992,134],5],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[992,5],0,0,0,0,0,0,0,[[993,166],993],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[993,[[21,[994,995]]]],[[996,166],994],[[996,166],994],[[996,166],994],0,[[996,166],[[21,[994,995]]]],0,[[],993],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[[995,7],8],[[995,7],8],[-1,-1,[]],[-1,-1,[]],[997,995],[-1,-1,[]],[998,995],[999,26],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[121,993],[121,996],[995,[[24,[198]]]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[993,167],993],[[993,15],993],[[993,[46,[172]]],993],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1000,1000],[1001,1001],[1002,1002],[994,994],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[1000]]],123],[-1,[[21,[1001]]],123],[-1,[[21,[1002]]],123],[-1,[[21,[994]]],123],0,[6,5],[6,5],[6,5],[6,5],[1002,[[24,[16]]]],[[1000,7],8],[[1001,7],8],[[1002,7],8],[[994,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[1000,-1],21,138],[[1001,-1],21,138],[[1002,-1],21,138],[[994,-1],21,138],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[1003,1004],[[21,[26,190]]]],[[1003,28],[[21,[26,190]]]],[[1003,75],[[21,[26,190]]]],[1003,[[21,[26,190]]]],[[1003,1005,75],[[21,[26,190]]]],[[1003,1006],[[21,[[46,[60]],119]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1003,1003],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[1003,5],[6,5],[1003,5],[[1003,34],[[21,[26,190]]]],[[1003,7],8],[1003,[[21,[[127,[113,55]],119]]]],[1003,[[21,[[127,[113,55]],119]]]],[[1003,[46,[26]]],[[21,[[127,[26,891]],119]]]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[[26,1007],1003],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[[1003,195],5],[[1003,28],5],[1003,1008],0,[1003,[[21,[26,190]]]],[1003,1007],[[1003,34],[[21,[26,190]]]],[[1003,137],[[21,[120,190]]]],[[1003,[46,[137]],77],[[21,[57,119]]]],[[1003,[46,[60]]],[[21,[195,190]]]],[[1003,[46,[[46,[60]]]]],[[21,[5,190]]]],[[1003,-1],5,[[27,[26]]]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[[1003,34],[[21,[26,190]]]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[1003,[[21,[19,119]]]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[1003,[[21,[26,190]]]],[1003,[[21,[26,190]]]],[-1,-2,[],[]],0,0,0,0,0,0,[[],121],[[],121],0,0,0,0,0,0,0,0,0,0,0,0,[1009,28],[[1010,28],5],0,[1011,[[24,[76]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1009,1009],[1011,1011],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[1010,5],0,0,[[1010,[115,[28]]],77],[1010,77],[[],1009],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[1009]]],123],[-1,[[21,[1011]]],123],[-1,[[21,[1012]]],123],[6,5],[6,5],[6,5],[6,5],[1010,[[1013,[[46,[1011]]]]]],[[1009,1009],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],0,[[1011,28],77],0,[1010,[[0,[893]]]],[[1009,7],8],[[1009,7],8],[[1011,7],8],[[1011,7],8],[[1012,7],8],[-1,-1,[]],[-1,-1,[]],[1012,1011],[-1,-1,[]],[-1,-1,[]],[28,[[21,[1009]]]],[1010,6],[1010,[[46,[906]]]],[[1010,1014],[[46,[906]]]],[[],[[46,[28]]]],[1010,[[46,[1011]]]],[1010,[[46,[26]]]],[1010,26],[[1010,1009],[[0,[893]]]],[1010,26],[1010,[[46,[26]]]],0,[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[1011,1014],77],[1010,[[24,[76]]]],0,0,0,[1011,26],0,[[-1,-2],1010,[1015,953],[1015,953]],[1010,[[1013,[[46,[26]]]]]],0,[[1009,1009],[[24,[122]]]],0,0,[[1011,28],77],[[1009,-1],21,138],[[1011,-1],21,138],[[1012,-1],21,138],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[28,[[21,[1011,90]]]],0,0,[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[9,134],[9,116],[9,116],[9,116],0,[9,1016],[9,5],[[9,28],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[21,[5,126]]]],[9,[[21,[5,126]]]],0,[1017,1017],[[-1,-2],5,[],[]],[9,1018],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[9,5],[6,5],[6,5],[6,5],[[1017,1017],77],[[9,209],[[21,[186,180]]]],[[1017,7],8],[[1019,7],8],[[1019,7],8],[9,[[21,[[127,[113,55]],128]]]],[-1,-1,[]],[1020,1017],[-1,-1,[]],[-1,-1,[]],[36,1019],[126,1019],[9,[[46,[26]]]],[9,895],0,[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[9,77],[9,34],[9,26],[9,[[46,[26]]]],[[9,113,76,19],5],[[9,113],5],[[9,113,26],5],[9,5],[9,5],0,[[1021,117,[24,[1022]],26],[[21,[9,1023]]]],[9,134],0,[9,135],0,[9,34],[[9,129],77],[9,77],[9,34],[9,1024],[9,134],[9,1024],0,[9,26],[[9,-1],1024,[[33,[16]]]],[[9,[46,[137]],77],[[21,[57,128]]]],[[9,137],[[21,[120,128]]]],[9,5],[1019,[[24,[198]]]],[[9,1025],[[21,[1017,1023]]]],[9,[[24,[1022]]]],[9,5],[9,[[24,[15]]]],0,[9,1026],[9,19],[-1,-2,[],[]],[9,1027],[-1,26,[]],[9,172],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,1025,912],[[21,[5,1023]]]],[[9,912],[[21,[[24,[1028]],1019]]]],0,0,0,0,[1027,116],[1027,116],[1027,116],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1029,1027],[1027,1027],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[1027,[[21,[[127,[113,55]],128]]]],[-1,-1,[]],[-1,-1,[]],[[1029,15],1029],[1027,[[46,[26]]]],[1027,895],0,0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1027,77],[1027,34],[1027,[[46,[26]]]],[1027,26],[[1027,113,76,19],5],[[1027,113],5],[[1027,113,26],5],[1027,5],0,0,[[[24,[1024]],[24,[895]],[24,[1010]],[24,[166]],116],1027],[116,1029],0,[1027,166],0,0,[1027,1024],0,0,[[1027,[46,[137]],77],[[21,[57,128]]]],[[1027,137],[[21,[120,128]]]],[1027,19],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1029,-1],1029,[[27,[26]]]],[[1029,1021],1029],[[1029,15],1029],[[1029,134],1029],[[1029,1024],1029],0,0,0,0,0,0,0,0,0,0,[[1024,1004],[[21,[43,119]]]],[[1024,28],[[21,[43,119]]]],[[1024,28],[[21,[26,119]]]],[[1024,75],[[21,[[24,[[46,[1030]]]],119]]]],[1024,[[21,[[127,[26,[46,[1030]]]],119]]]],[[1024,1005,75],[[21,[[24,[[46,[60]]]],119]]]],[1024,26],[[1024,1006],[[21,[887,119]]]],[[1024,1006],[[21,[[46,[60]],119]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1024,1024],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[1024,5],[6,5],[6,5],[1024,5],[[1024,34],[[21,[1031,119]]]],[-1,1032,[[33,[16]]]],[[119,7],8],[[119,7],8],[[1024,7],8],[1024,[[21,[[127,[113,55]],119]]]],[[1024,[46,[26]]],[[21,[[127,[26,891]],119]]]],[190,119],[972,119],[90,119],[1033,119],[1034,119],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[1024,1003],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1024,[[21,[[46,[45]],119]]]],[1024,[[21,[[46,[1035]],119]]]],[26,1024],[[26,-1],1024,[[33,[16]]]],[[26,1007],1024],[1024,[[21,[[46,[1036]],119]]]],[1024,[[21,[[46,[1036]],119]]]],[1024,[[21,[[46,[1036]],119]]]],[1024,[[21,[[46,[26]],119]]]],0,[1024,1008],[1024,[[21,[70,119]]]],[[1024,34],[[21,[[46,[1031]],119]]]],[[1024,137],[[21,[120,119]]]],[[1024,[46,[137]],77],[[21,[57,119]]]],[[1024,[46,[60]]],[[21,[5,119]]]],[[1024,[46,[[46,[60]]]]],[[21,[5,119]]]],[[1024,-1],5,[[27,[26]]]],0,[1024,[[21,[50,119]]]],[1024,[[21,[26,119]]]],[119,[[24,[198]]]],[1024,[[21,[1037,119]]]],[[1024,34],[[21,[1037,119]]]],[1024,[[21,[[46,[26]],119]]]],[1024,[[21,[1038,119]]]],[1024,[[21,[19,119]]]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[1024,[[21,[[127,[19,1039]],119]]]],[134,26],[1024,[[21,[[46,[63]],119]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[1008,1004],[[21,[195,190]]]],[[1008,28],[[21,[195,190]]]],[[1008,75],[[21,[195,190]]]],[1008,[[21,[195,190]]]],[[1008,1005,75],[[21,[195,190]]]],[[1008,1006],[[21,[195,190]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1008,1008],[[-1,-2],5,[],[]],[1008,1040],[1008,1040],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[1008,5],[6,5],[6,5],[1008,5],[[1008,34],[[21,[195,190]]]],[[1041,7],8],[[1008,7],8],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[[1008,[46,[26]]],[[21,[195,190]]]],[-1,-1,[]],[-1,-1,[]],[[1008,28],[[21,[195,190]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[[26,1007],1008],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[[1008,1041,28],26],[[1008,28,[46,[60]]],[[21,[195,190]]]],[[1008,28],5],[1008,[[21,[195,190]]]],[1008,1007],[1008,1007],[[1008,34],[[21,[195,190]]]],[[1008,137],[[21,[195,190]]]],[[1008,[46,[137]],77],[[21,[195,190]]]],[[1008,[46,[60]]],[[21,[195,190]]]],[[1008,[46,[[46,[60]]]]],[[21,[5,190]]]],[[1008,-1,114],[[21,[5,119]]],967],[1008,[[21,[195,190]]]],0,[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[[1008,34],[[21,[195,190]]]],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[1008,[[21,[195,190]]]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[28,1042],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[1008,[[21,[195,190]]]],[1008,26],0,[1008,[[21,[195,190]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1007,1007],[[-1,-2],5,[],[]],0,[[],1007],[6,-1,[]],[6,-1,[]],[6,5],0,[[1007,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[],1007],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1043,26],1043],0,0,[[1043,28],1043],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1044,1044],[1045,1045],[1046,1046],[1047,1047],[1048,1048],[1049,1049],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[1043,1050],1043],0,0,[[],1043],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[1044]]],123],[-1,[[21,[1045]]],123],[-1,[[21,[1046]]],123],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[[1045,1045],77],[[1046,1046],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[[24,[1051]]],5],[[1023,7],8],[[1023,7],8],[[1044,7],8],[[1045,7],8],[[1046,7],8],[[1047,7],8],[[1048,7],8],[[1049,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[995,1023],[998,1023],[126,1023],[1052,1023],[1034,1023],[1053,1023],[119,1023],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[1043,15],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[1043,15],1043],[[1043,[24,[15]]],1043],0,[-1,1054,[[27,[26]]]],0,[[1043,1049],1043],0,0,0,[1023,[[24,[198]]]],[1043,[[21,[9,1023]]]],[[1054,1050,[24,[1022]],93],[[21,[9,1023]]]],[1043,[[21,[9,1023]]]],[[1054,117,[24,[1022]],93],[[21,[9,1023]]]],[1043,[[24,[1051]]]],[[1054,93],1021],[[1043,28],[[21,[5,1023]]]],[[1043,28],[[21,[5,1023]]]],[[1054,117,[24,[1022]],28,93],[[21,[5,1023]]]],[[1054,93,28],5],[[1043,72],1043],0,[[1043,1022],1043],0,[[1043,912],1043],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[1043,77],1043],0,0,[[1043,1025],1043],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1043,16],1043],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1055,93],[[1055,16],1055],0,[6,-1,[]],[6,-1,[]],[6,5],[[1055,1044],1055],0,[-1,-1,[]],0,[[1055,19],1055],[[1055,16],1055],[[1050,-1,1045],93,[[33,[16]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[1055,16],1055],0,[16,1055],[[1055,77],1055],0,0,[[1055,16],1055],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,117,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1050,117],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[1050,7],8],[[1053,7],8],[[1053,7],8],[-1,-1,[]],[971,1053],[997,1053],[36,1053],[-1,-1,[]],[998,1053],[1050,1047],0,[1050,129],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1050,1045],0,[-1,[[24,[16]]],[]],[[[948,[1056]],1047,[24,[15]],1045,77],1050],0,[-1,15,[]],[1050,15],[-1,134,[]],[-1,135,[]],[1050,5],[1050,5],[1050,5],[-1,134,[]],[1050,77],0,[1050,[[24,[15]]]],0,[[-1,15],5,[]],[[-1,135],5,[]],[[-1,134],5,[]],[1053,[[24,[198]]]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[1057,-1],[[21,[1050,1053]]],109],[[],[[155,[154]]]],[[],1057],[166,1057],[6,-1,[]],[6,-1,[]],[6,5],[[1057,7],8],[-1,-1,[]],0,[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[[1057,72],[[21,[1043,1053]]]],0,0,0,[1057,1057],0,0,[[1057,72],[[21,[9,1023]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[1057,1057],0,[-1,-2,[],[]],[[1057,144],1057],[[1057,19],1057],[[1057,-1],1057,[[33,[16]]]],[[1057,[155,[154]]],1057],[[1057,994],1057],[[1057,166],1057],[1057,1057],[[1057,173],1057],0,[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[117,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1022,-1],37,[[33,[16]]]],[1022,1022],[[-1,-2],5,[],[]],[[],1022],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[21,[1022]]],123],[6,5],[6,5],[[1022,7],8],[[1058,7],8],[[1058,7],8],[-1,-1,[]],[[[24,[15]]],1022],[15,1022],[998,1058],[-1,-1,[]],[72,1022],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[1022,1022],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[],[[21,[1022,998]]]],[1022,16],[[1022,-1],21,138],[1058,[[24,[198]]]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[1022,[[21,[72]]]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[1018,75,70],[[21,[5,1059]]]],[[1018,75],[[21,[5,1059]]]],[[1018,75,70],[[21,[5,1059]]]],[75,1004],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[[1059,7],8],[[1059,7],8],0,[1018,1060],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1061,1059],[119,1059],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1024,1018],[[[127,[26,43]]],1062],[[1018,[46,[75]]],[[21,[5,1059]]]],[[1018,[46,[75]]],1018],0,0,[1059,[[24,[198]]]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[1062,75],[[21,[70,1059]]]],[[1018,75,75,70],[[21,[5,1059]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[46,[113]],[46,[[5,[113,118]]]],[21,[57,119]]],[[46,[120]]]],[[1060,[115,[120]]],1060],[[[21,[57,119]]],[[46,[120]]]],[[1060,906],1060],[1060,1060],[[1060,[46,[26]],28],1060],[[1060,891],5],[[1060,120],1060],[[1060,26,28],1060],[[1060,[46,[26]],28],1060],[1060,1060],[[1060,120],1060],[[1060,891],5],[[1060,26,28],1060],[[1060,6],1060],[[1060,120],1060],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[1024,1060],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1063,[1064,[1063]]],1065],[[1066,[1064,[1066]]],1065],[1063,98],[1066,98],0,0,0,[124,[[46,[1067,1068]]]],0,[-1,1069,[[27,[26]]]],[-1,1070,[[27,[26]]]],[-1,1071,[[27,[26]]]],[-1,1072,[[27,[26]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1073,1074],[124,124],[1016,1016],[1063,1063],[1066,1066],[1075,1075],[1070,1070],[1071,1071],[1076,1076],[1072,1072],[1077,1077],[1078,1078],[[[1064,[-1]]],[[1064,[-1]]],61],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[1077,1077],122],0,[[-1,-2],122,[],[]],0,[[1079,37,37],[[21,[26,36]]]],[1077,34],0,0,[[16,16],[[21,[5,1080]]]],[[],1073],[[],1078],[1081,1070],[1051,1072],0,0,0,0,0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[26,16],[[21,[5,1082]]]],[124,77],0,[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[[1078,1078],912],[1081,1083],0,[1078,912],0,0,0,[[1016,1016],77],[[1063,1063],77],[[1066,1066],77],[[1077,1077],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[1084,26],1081],[[1085,26],1076],[[1075,26],1086],[[1081,7],[[21,[5,125]]]],[[1087,7],[[21,[5,125]]]],[[1088,7],[[21,[5,125]]]],[[1088,7],[[21,[5,125]]]],[[124,7],[[21,[5,125]]]],[[1016,7],[[21,[5,125]]]],[[1016,7],[[21,[5,125]]]],[[1063,7],[[21,[5,125]]]],[[1063,7],[[21,[5,125]]]],[[1066,7],[[21,[5,125]]]],[[1066,7],[[21,[5,125]]]],[[1089,7],[[21,[5,125]]]],[[1089,7],[[21,[5,125]]]],[[1076,7],[[21,[5,125]]]],[[1077,7],[[21,[5,125]]]],[[1077,7],[[21,[5,125]]]],[[1078,7],[[21,[5,125]]]],[[[1064,[-1]],7],[[21,[5,125]]],[]],[[[1064,[-1]],7],[[21,[5,125]]],192],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[36,1088],[1090,1088],[1082,1088],[190,1088],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[912,1063],[-1,-1,[]],[-1,-1,[]],[912,1066],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1011,1078],[1091,1078],[1092,[[1064,[1066]]]],[-1,-1,[]],[28,[[21,[1078]]]],[28,[[21,[-1]]],[]],[[1079,34,37],[[21,[26,36]]]],[[991,26],[[21,[[24,[1067]],1088]]]],[[-1,-2],98,[130,131],132],[[124,1093],[[24,[1067]]]],[[[1064,[-1]]],-1,[]],[[1016,-1],5,133],[1016,6],0,[1084,1084],[[1084,34],1084],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1066,912],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1078,1091],[-1,-2,[],[]],[-1,-2,[],[]],[991,[[1094,[124]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,0,[1070,1095],[[[1064,[-1]]],-1,[]],0,0,[1085,77],[1077,34],0,[1016,26],[1070,26],[1071,26],[1072,26],0,0,0,0,[[[46,[124,1068]]],991],[[],1073],[[1072,1066],1087],[[],[[21,[1079,36]]]],[[26,6],1016],[[1078,1078],1063],[[1078,1078],1066],[26,1070],[26,1071],[26,1072],[[34,34,34],1077],[[],1078],[[-1,-1,-1,-1],[[1064,[-1]]],[1096,61]],[1077,[[1064,[1097]]]],[34,[[1064,[1083]]]],[912,[[1064,[1063]]]],[912,[[1064,[1066]]]],[1070,1070],[1071,1071],[1072,1072],0,0,[[1063,1063],[[24,[122]]]],[[1066,1066],[[24,[122]]]],[[1077,1077],[[24,[122]]]],[[1079,37,37],[[21,[26,36]]]],[124,77],0,[1081,5],[1087,5],[1076,5],[[1076,[1064,[1063]]],5],0,0,[[[1064,[-1]]],-1,[]],[124,[[24,[1091]]]],0,[124,[[127,[1093,1067,1098]]]],0,[[1079,37,37],[[21,[26,36]]]],0,0,[1075,[[21,[5,1089]]]],[1088,[[24,[198]]]],0,[1070,1084],[1071,1085],[1072,1051],0,0,0,[1081,1065],[1084,1081],[1085,1076],[1051,1087],[1075,1086],0,[[1070,34],1070],[[1071,912],1071],[[1072,912],1072],[1070,[[24,[[1064,[1083]]]]]],[1071,[[24,[[1064,[1063]]]]]],[1072,[[24,[[1064,[1066]]]]]],[[[1064,[-1]]],[[46,[[5,[1065,-1]],1068]]],[]],0,0,0,0,[1051,77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,[1079,[[21,[26,36]]]],[124,121],0,[124,26],[1077,34],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1073,-1],1073,[[27,[26]]]],[[1072,[1064,[1066]]],1072],[[1073,[24,[-1]]],1073,[[27,[26]]]],[[1079,37,37,37],[[21,[26,36]]]],[[[1064,[-1]]],-1,[]],0,0,0,0,[[-1,152],5,[]],[[-1,152],5,[]],[[-1,26,60,[46,[98]]],5,[]],0,0,0,0,[[1010,28,912,28,28],1087],[[1010,28,912],1087],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,116,[]],0,0,0,[[-1,[46,[-2]],[1064,[1066]],28],[[21,[5,1099]]],[1100,953],[1100,953]],[[1092,[115,[-1]]],[[21,[5,1101]]],[1100,131]],[-1,[[46,[26]]],[]],0,[-1,77,[]],[-1,34,[]],[-1,26,[]],[-1,5,[]],0,[[[115,[-1]],[1064,[1066]],28,1102],[[21,[5,1101]]],[1100,131]],[[113,[115,[-1]],[1064,[1066]],28,1102],[[21,[5,1101]]],[1103,131]],[[[115,[-1]],28],5,[1100,131]],0,0,[-1,19,[]],0,[1092,5],0,0,0,0,0,0,0,[[[115,[-1]],[1064,[1066]],28,1102],[[21,[5,1101]]],[1100,131]],[[113,[115,[-1]],[1064,[1066]],28,1102],[[21,[5,1101]]],[1103,131]],[[[115,[-1]],28],5,[1100,131]],[[[46,[34]],[115,[-1]]],5,[1100,131]],0,0,0,0,0,[-1,116,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1104,1104],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[[1104,7],8],[[1104,7],8],[[1099,7],8],[[1099,7],8],[-1,-1,[]],[-1,-1,[]],[1101,1099],[-1,[[46,[26]]],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,77,[]],[-1,34,[]],[-1,26,[]],[-1,5,[]],[[26,34],1104],[1099,[[24,[198]]]],[-1,19,[]],[-1,-2,[],[]],[-1,26,[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1102,1102],[[-1,-2],5,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[1105,-1],5,[967,953]],[[1105,-1],5,[967,953]],[6,5],[6,5],[[1102,7],8],[-1,-1,[]],[-1,-1,[]],[1105,5],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1105,77],[1102,1105],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1092,98],[1092,1092],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[1092,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[98,1092],[[98,98],1092],[98,1092],[1092,912],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[],1092],[-1,22,[]],[-1,-2,[],[]],[1092,912],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[60]],-1],[[21,[5,1106]]],[[33,[16]]]],[6,-1,[]],[6,-1,[]],[6,5],[[-1,-2],[[21,[5,1106]]],[[33,[16]]],[[33,[16]]]],[[1106,7],8],[[1106,7],8],[90,1106],[190,1106],[36,1106],[997,1106],[1107,1106],[972,1106],[1108,1106],[971,1106],[-1,-1,[]],[1109,1106],[-1,[[21,[144,1106]]],[[27,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[21,[144,1106]]],[[33,[16]]]],[-1,[[21,[[46,[145]],1106]]],[[33,[16]]]],[-1,50,[]],[1106,[[24,[198]]]],[-1,19,[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[[-1,75],59,[]],[-1,[[46,[59]]],[]],[-1,[[46,[884]]],[]],[-1,-2,[],[]],[[144,-1],[[21,[5,1106]]],[[33,[16]]]],0,[-1,[[24,[1110]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,5],[-1,-1,[]],[1111,[[115,[26]]]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,1111,[1015,953]],[1111,5],0,[1111,[[46,[26]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,[28,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],[[155,[-1]]],1112],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1113,1113],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[-1,5,[]],[-1,5,[]],[[1113,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],0,[-1,1113,[[27,[26]]]],[[-1,1113],5,[]],[[-1,1113],5,[]],[[-1,[1115,[1114]]],-1,[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],[[[24,[1022]],[46,[[5,[-1,-2]]]]],5,[[33,[28]]],[[33,[28]]]],0,[-1,19,[]],[[],15],[[],15],[[],15],[[],15],0,[-1,19,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1116,5],[[1117,34],77],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[1117,34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[1118,1117,-1],1116,[[33,[16]]]],0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1024,76],[[76,76],77],[[76,1024],5],[[34,1024],5],0,0,[[77,28],[[21,[5,1101]]]],[[-1,-1,28],[[21,[5,1101]]],[192,1119]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[1101,7],8],[[1101,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,1120,[]],[-1,26,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1121,1122],1121],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1121,884],[[1123,60,1122],1124],0,[[],1121],[[],1123],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],0,[[1123,7],8],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,[[1121,1125],1121],[[1121,[46,[1125]]],1121],[[],1121],[[1121,60],1121],0,0,[1121,1121],0,[[1121,6],1121],[[1121,[46,[1126]]],1121],[1121,1121],[[1121,1127],1121],0,[[1121,1127],1121],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[[1121,1127],1121],0,[[1121,1128],1121],0,[-1,-2,[],[]],[-1,-2,[],[]],[[1123,6],1123],[[1123,[46,[1126]]],1123],0,0,0,0,0,0,0,0,[[1129,6,6],[[21,[[46,[1130]],1131]]]],[[1132,6],[[21,[[46,[1130]],1131]]]],[[1133,6],1130],[[1132,6],[[21,[[46,[1130]],1131]]]],[[1133,6],[[21,[1130,1131]]]],[[1129,6],[[21,[[46,[1130]],1131]]]],[1132,[[21,[[46,[1130]],1131]]]],[1133,[[21,[1130,1131]]]],[1129,6],[1132,6],[1133,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1132,6],77],[[1133,6],77],[1129,1129],[1132,1132],[1133,1133],[1130,1130],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[1130,6],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,5],[6,5],[6,5],[6,5],[6,5],[[1130,1130],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[1130,60],[[1133,7],8],[[1130,7],8],[[1131,7],8],[[1131,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[6,884],1129],[1133,1134],[1130,1134],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[1129,77],[1132,77],[1133,77],0,[[6,[46,[[5,[1134,60]]]]],1129],[[[46,[[5,[1134,60]]]]],1132],[[1134,60],1133],[[1134,[1135,[6]]],1130],[1130,[[1135,[6]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,26,[]],0,[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[888,888],[[-1,-2],5,[],[]],[6,-1,[]],[6,-1,[]],[6,5],[[888,7],8],[-1,-1,[]],[888,1136],[888,877],[888,877],[[],6],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[888,[[155,[174]]]],[888,[[155,[154]]]],0,[[[1137,[154]]],888],[888,[[1137,[154]]]],0,[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[888,[[155,[175]]]],[-1,-2,[],[]]],"c":[],"p":[[3,"JCli",5],[3,"Address",98],[3,"Certificate",122],[3,"CertificateBuilder",1376],[15,"tuple"],[15,"usize"],[3,"Formatter",20573],[6,"Result",20573],[3,"JormungandrProcess",18375],[3,"FragmentSender",1453],[3,"FragmentsCheck",1472],[3,"Genesis",152],[3,"Request",20574],[3,"Key",174],[3,"PathBuf",20575],[3,"Path",20575],[3,"Rest",203],[3,"Transaction",386],[3,"Hash",20576],[3,"TransactionBuilder",1492],[4,"Result",20577],[3,"TypeId",20578],[3,"Votes",429],[4,"Option",20579],[4,"Discrimination",20580],[3,"String",20581],[8,"Into",20582],[15,"str"],[3,"BTreeMap",20583],[3,"AddressCommand",590],[3,"CertificateCommand",674],[3,"Choice",20584],[8,"AsRef",20582],[15,"u32"],[3,"TaxType",20585],[3,"Error",20586],[3,"ChildPath",20587],[3,"GenesisCommand",706],[3,"KeyCommand",788],[3,"RestCommand",892],[3,"RestV0",223],[3,"RestV1",351],[3,"AccountState",20588],[3,"Block",257],[3,"LeadershipLog",20589],[3,"Vec",20590],[3,"Message",277],[3,"V0Command",914],[3,"Node",295],[3,"SettingsDto",20591],[3,"StakePoolStats",20592],[3,"UtxO",312],[3,"Vote",333],[3,"BlockCommand",954],[3,"FragmentLog",20593],[3,"MessageCommand",973],[3,"FragmentsProcessingSummary",20594],[3,"NodeCommand",992],[3,"UTxOInfo",20595],[15,"u8"],[8,"Clone",20596],[3,"UtxOCommand",1010],[3,"VotePlanStatus",20597],[3,"CommitteeIdDef",20598],[3,"VoteCommand",1031],[3,"V1Command",1050],[3,"Vote",369],[3,"VoteCommand",1070],[3,"LegacyUTxO",20599],[3,"Value",20600],[3,"Witness",1275],[3,"TempDir",20601],[3,"WitnessData",1275],[3,"LinearFee",20602],[3,"Address",20603],[3,"BlockDate",20604],[15,"bool"],[3,"TransactionCommand",1088],[3,"Committee",457],[3,"Crs",515],[3,"VotesCommand",1122],[3,"Tally",532],[3,"CommunicationKey",479],[3,"MemberKey",497],[3,"CommitteeCommand",1154],[3,"CommunicationKeyCommand",1176],[3,"MemberKeyCommand",1195],[3,"CrsCommand",1214],[3,"MergedVotePlan",20605],[3,"Error",20606],[3,"TallyCommand",1250],[3,"JCliCommand",553],[3,"Command",20607],[3,"AccountCommand",615],[3,"InfoCommand",635],[3,"SingleCommand",653],[4,"PayloadType",20608],[15,"u64"],[3,"GenesisDecodeCommand",732],[3,"GenesisEncodeCommand",751],[3,"GenesisHashCommand",770],[3,"KeyFromBytesCommand",816],[3,"KeyGenerateCommand",835],[3,"KeyToBytesCommand",854],[3,"KeyToPublicCommand",873],[4,"WitnessType",1275],[3,"SpendingCounter",20609],[3,"ElectionPublicKeyCommand",1232],[8,"PathChild",20587],[4,"Error",1342],[3,"SignedStakePoolCertBuilder",1376],[3,"FragmentCheck",1426],[6,"FragmentId",20610],[3,"Wait",20611],[15,"slice"],[6,"NodeAlias",1544],[3,"CommunicationParams",19178],[4,"FragmentRejectionReason",20594],[4,"RestError",18561],[3,"MemPoolCheck",16455],[3,"Version",1544],[4,"Ordering",20612],[8,"Deserializer",20613],[3,"Release",19353],[3,"Error",20573],[4,"JormungandrError",1544],[3,"HashMap",20614],[4,"FragmentNodeError",16455],[15,"u16"],[8,"Hash",20615],[8,"Sized",20616],[8,"BuildHasher",20615],[8,"Hasher",20615],[4,"SocketAddr",20617],[3,"Multiaddr",20618],[3,"Error",20619],[4,"Fragment",20610],[8,"Serializer",20620],[3,"NEXT_AVAILABLE_PORT_NUMBER",1842],[3,"AtomicU16",20621],[3,"OCCUPIED_PORTS",1842],[3,"HashSet",20622],[3,"Block0ConfigurationBuilder",1887],[3,"Block0Configuration",20623],[4,"Initial",20599],[3,"ConsensusLeaderId",20624],[3,"ActiveSlotCoefficient",20625],[6,"ConsensusVersion",20626],[3,"BlockContentMaxSize",20627],[3,"EpochStabilityDepth",20628],[4,"FeesGoTo",20629],[3,"InitialUTxO",20599],[3,"KesUpdateSpeed",20630],[3,"Ed25519",20631],[3,"KeyPair",20632],[3,"SigningKey",20632],[3,"ProposalExpiration",20633],[4,"RewardParams",20634],[3,"SignedCertificate",20635],[3,"SlotDuration",20636],[3,"NumberOfSlotsPerEpoch",20637],[3,"InitialToken",20599],[4,"EitherHashOrBlock0",1949],[3,"NodeConfigManager",1973],[3,"NodeConfigBuilder",2000],[3,"NodeConfig",17742],[3,"Log",17742],[3,"Mempool",17742],[3,"Policy",17742],[3,"Cors",20638],[3,"Tls",20638],[3,"TrustedPeer",17742],[3,"SecretModelFactory",2039],[3,"SumEd25519_12",20639],[3,"RistrettoGroup2HashDh",20640],[3,"NodeSecret",20641],[3,"Explorer",2068],[3,"ResponseData",2551],[3,"Response",20642],[4,"ExplorerError",2068],[3,"ResponseData",5368],[3,"ResponseData",5426],[15,"i64"],[3,"ResponseData",2609],[3,"ResponseData",7423],[3,"ExplorerProcess",2068],[3,"ExplorerConfiguration",2212],[3,"ResponseData",9111],[4,"GraphQlClientError",2168],[3,"Error",20643],[3,"LastBlockResponse",16436],[8,"Debug",20573],[3,"QueryBody",20642],[8,"Serialize",20620],[3,"Response",20644],[3,"ResponseData",10982],[3,"Output",20607],[8,"Error",20645],[6,"PoolId",2289],[3,"ResponseData",11115],[3,"ResponseData",4394],[3,"ResponseData",11426],[3,"ResponseData",12573],[3,"ResponseData",14308],[3,"ResponseData",15864],[3,"ResponseData",4928],[3,"GraphQlClient",2168],[3,"ExplorerConfigurationBuilder",2212],[3,"ExplorerParams",2212],[3,"AddressAddress",2551],[3,"Variables",2551],[4,"ConsensusTypeEnum",2609],[4,"DiscriminationEnum",2609],[4,"PayloadType",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnEvmMapping",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnMintToken",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVoteVoterId",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVote",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalProposerId",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChanges",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposal",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteTally",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteCast",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanProposals",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlan",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolUpdate",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRetirement",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewards",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistration",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegation",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationAccount",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegation",2609],[4,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificate",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParams",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputsAddress",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputs",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputsAddress",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputs",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocks",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNode",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdges",2609],[3,"AllBlocksTipBlocksEdgesNodeTransactions",2609],[3,"AllBlocksTipBlocksEdgesNodeBranches",2609],[3,"AllBlocksTipBlocksEdgesNodePreviousBlock",2609],[3,"AllBlocksTipBlocksEdgesNodeLeaderOnBftLeader",2609],[3,"AllBlocksTipBlocksEdgesNodeLeaderOnPool",2609],[4,"AllBlocksTipBlocksEdgesNodeLeader",2609],[3,"AllBlocksTipBlocksEdgesNodeDateEpoch",2609],[3,"AllBlocksTipBlocksEdgesNodeDate",2609],[3,"AllBlocksTipBlocksEdgesNode",2609],[3,"AllBlocksTipBlocksEdges",2609],[3,"AllBlocksTipBlocks",2609],[3,"AllBlocksTip",2609],[3,"ConfigParamOnTransactionMaxExpiryEpochs",2609],[3,"ConfigParamOnPerVoteCertificateFee",2609],[3,"ConfigParamOnRemoveCommitteeId",2609],[3,"ConfigParamOnAddCommitteeId",2609],[3,"ConfigParamOnPoolRewardParticipationCapping",2609],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",2609],[3,"ConfigParamOnRewardLimitByAbsoluteStake",2609],[3,"ConfigParamOnRewardLimitNone",2609],[3,"ConfigParamOnFeesInTreasury",2609],[3,"ConfigParamOnPerCertificateFee",2609],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",2609],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",2609],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",2609],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",2609],[4,"ConfigParamOnRewardParamsRewardParams",2609],[3,"ConfigParamOnRewardParams",2609],[3,"ConfigParamOnRewardPot",2609],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",2609],[3,"ConfigParamOnTreasuryParamsTreasuryParams",2609],[3,"ConfigParamOnTreasuryParams",2609],[3,"ConfigParamOnTreasuryAdd",2609],[3,"ConfigParamOnKesUpdateSpeed",2609],[3,"ConfigParamOnProposalExpiration",2609],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",2609],[3,"ConfigParamOnLinearFeePerCertificateFees",2609],[3,"ConfigParamOnLinearFee",2609],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",2609],[3,"ConfigParamOnRemoveBftLeader",2609],[3,"ConfigParamOnAddBftLeaderAddBftLeader",2609],[3,"ConfigParamOnAddBftLeader",2609],[3,"ConfigParamOnBlockContentMaxSize",2609],[3,"ConfigParamOnMilli",2609],[3,"ConfigParamOnEpochStabilityDepth",2609],[3,"ConfigParamOnSlotDuration",2609],[3,"ConfigParamOnSlotsPerEpoch",2609],[3,"ConfigParamOnConsensusType",2609],[3,"ConfigParamOnDiscrimination",2609],[3,"ConfigParamOnBlock0Date",2609],[4,"configParam",2609],[3,"BlockDateEpoch",2609],[3,"blockDate",2609],[3,"PoolInfoRetirement",2609],[3,"PoolInfoRegistrationPool",2609],[3,"PoolInfoRegistration",2609],[3,"PoolInfoBlocks",2609],[3,"poolInfo",2609],[3,"Variables",2609],[3,"AllStakePoolsTipAllStakePoolsNodesBlocksEdgesNode",4394],[3,"AllStakePoolsTipAllStakePoolsNodesBlocksEdges",4394],[3,"AllStakePoolsTipAllStakePoolsNodesBlocks",4394],[3,"AllStakePoolsTipAllStakePoolsNodesRetirement",4394],[3,"AllStakePoolsTipAllStakePoolsNodesRegistrationRewardAccount",4394],[3,"AllStakePoolsTipAllStakePoolsNodesRegistrationRewardsRatio",4394],[3,"AllStakePoolsTipAllStakePoolsNodesRegistrationRewards",4394],[3,"AllStakePoolsTipAllStakePoolsNodesRegistration",4394],[3,"AllStakePoolsTipAllStakePoolsNodes",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdgesNode",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdges",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeBlocks",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRetirement",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardAccount",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardsRatio",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewards",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistration",4394],[3,"AllStakePoolsTipAllStakePoolsEdgesNode",4394],[3,"AllStakePoolsTipAllStakePoolsEdges",4394],[3,"AllStakePoolsTipAllStakePools",4394],[3,"AllStakePoolsTip",4394],[3,"PoolInfoRetirement",4394],[3,"PoolInfoRegistrationPool",4394],[3,"PoolInfoRegistration",4394],[3,"PoolInfoBlocks",4394],[3,"poolInfo",4394],[3,"Variables",4394],[4,"PayloadType",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus",4928],[4,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayload",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodeAddress",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNode",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdges",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotes",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatusOptions",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatus",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatusOptions",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatus",4928],[4,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTally",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsOptions",4928],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposals",4928],[3,"AllVotePlansTipAllVotePlansEdgesNode",4928],[3,"AllVotePlansTipAllVotePlansEdges",4928],[3,"AllVotePlansTipAllVotePlans",4928],[3,"AllVotePlansTip",4928],[3,"BlockDateEpoch",4928],[3,"blockDate",4928],[3,"Variables",4928],[3,"BlockBlock",5368],[3,"Variables",5368],[4,"ConsensusTypeEnum",5426],[4,"DiscriminationEnum",5426],[4,"PayloadType",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnEvmMapping",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnMintToken",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVote",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposal",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteTally",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteCast",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanProposals",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlan",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolUpdate",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRetirement",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistration",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount",5426],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegation",5426],[4,"BlockByIdBlockTransactionsEdgesNodeCertificate",5426],[3,"BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParams",5426],[3,"BlockByIdBlockTransactionsEdgesNodeOutputsAddress",5426],[3,"BlockByIdBlockTransactionsEdgesNodeOutputs",5426],[3,"BlockByIdBlockTransactionsEdgesNodeInputsAddress",5426],[3,"BlockByIdBlockTransactionsEdgesNodeInputs",5426],[3,"BlockByIdBlockTransactionsEdgesNodeBlocks",5426],[3,"BlockByIdBlockTransactionsEdgesNode",5426],[3,"BlockByIdBlockTransactionsEdges",5426],[3,"BlockByIdBlockTransactions",5426],[3,"BlockByIdBlockBranches",5426],[3,"BlockByIdBlockPreviousBlock",5426],[3,"BlockByIdBlockLeaderOnBftLeader",5426],[3,"BlockByIdBlockLeaderOnPool",5426],[4,"BlockByIdBlockLeader",5426],[3,"BlockByIdBlockDateEpoch",5426],[3,"BlockByIdBlockDate",5426],[3,"BlockByIdBlock",5426],[3,"ConfigParamOnTransactionMaxExpiryEpochs",5426],[3,"ConfigParamOnPerVoteCertificateFee",5426],[3,"ConfigParamOnRemoveCommitteeId",5426],[3,"ConfigParamOnAddCommitteeId",5426],[3,"ConfigParamOnPoolRewardParticipationCapping",5426],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",5426],[3,"ConfigParamOnRewardLimitByAbsoluteStake",5426],[3,"ConfigParamOnRewardLimitNone",5426],[3,"ConfigParamOnFeesInTreasury",5426],[3,"ConfigParamOnPerCertificateFee",5426],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",5426],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",5426],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",5426],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",5426],[4,"ConfigParamOnRewardParamsRewardParams",5426],[3,"ConfigParamOnRewardParams",5426],[3,"ConfigParamOnRewardPot",5426],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",5426],[3,"ConfigParamOnTreasuryParamsTreasuryParams",5426],[3,"ConfigParamOnTreasuryParams",5426],[3,"ConfigParamOnTreasuryAdd",5426],[3,"ConfigParamOnKesUpdateSpeed",5426],[3,"ConfigParamOnProposalExpiration",5426],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",5426],[3,"ConfigParamOnLinearFeePerCertificateFees",5426],[3,"ConfigParamOnLinearFee",5426],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",5426],[3,"ConfigParamOnRemoveBftLeader",5426],[3,"ConfigParamOnAddBftLeaderAddBftLeader",5426],[3,"ConfigParamOnAddBftLeader",5426],[3,"ConfigParamOnBlockContentMaxSize",5426],[3,"ConfigParamOnMilli",5426],[3,"ConfigParamOnEpochStabilityDepth",5426],[3,"ConfigParamOnSlotDuration",5426],[3,"ConfigParamOnSlotsPerEpoch",5426],[3,"ConfigParamOnConsensusType",5426],[3,"ConfigParamOnDiscrimination",5426],[3,"ConfigParamOnBlock0Date",5426],[4,"configParam",5426],[3,"BlockDateEpoch",5426],[3,"blockDate",5426],[3,"PoolInfoRetirement",5426],[3,"PoolInfoRegistrationPool",5426],[3,"PoolInfoRegistration",5426],[3,"PoolInfoBlocks",5426],[3,"poolInfo",5426],[3,"Variables",5426],[4,"ConsensusTypeEnum",7423],[4,"DiscriminationEnum",7423],[4,"PayloadType",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnEvmMapping",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnMintToken",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVoteVoterId",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVote",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalProposerId",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChanges",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposal",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteTally",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteCast",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanProposals",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlan",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolUpdate",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRetirement",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewards",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistration",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegation",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationAccount",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegation",7423],[4,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificate",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputsAddress",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputs",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputsAddress",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputs",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocks",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNode",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdges",7423],[3,"BlocksByChainLengthBlocksByChainLengthTransactions",7423],[3,"BlocksByChainLengthBlocksByChainLengthBranches",7423],[3,"BlocksByChainLengthBlocksByChainLengthPreviousBlock",7423],[3,"BlocksByChainLengthBlocksByChainLengthLeaderOnBftLeader",7423],[3,"BlocksByChainLengthBlocksByChainLengthLeaderOnPool",7423],[4,"BlocksByChainLengthBlocksByChainLengthLeader",7423],[3,"BlocksByChainLengthBlocksByChainLengthDateEpoch",7423],[3,"BlocksByChainLengthBlocksByChainLengthDate",7423],[3,"BlocksByChainLengthBlocksByChainLength",7423],[3,"ConfigParamOnTransactionMaxExpiryEpochs",7423],[3,"ConfigParamOnPerVoteCertificateFee",7423],[3,"ConfigParamOnRemoveCommitteeId",7423],[3,"ConfigParamOnAddCommitteeId",7423],[3,"ConfigParamOnPoolRewardParticipationCapping",7423],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",7423],[3,"ConfigParamOnRewardLimitByAbsoluteStake",7423],[3,"ConfigParamOnRewardLimitNone",7423],[3,"ConfigParamOnFeesInTreasury",7423],[3,"ConfigParamOnPerCertificateFee",7423],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",7423],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",7423],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",7423],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",7423],[4,"ConfigParamOnRewardParamsRewardParams",7423],[3,"ConfigParamOnRewardParams",7423],[3,"ConfigParamOnRewardPot",7423],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",7423],[3,"ConfigParamOnTreasuryParamsTreasuryParams",7423],[3,"ConfigParamOnTreasuryParams",7423],[3,"ConfigParamOnTreasuryAdd",7423],[3,"ConfigParamOnKesUpdateSpeed",7423],[3,"ConfigParamOnProposalExpiration",7423],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",7423],[3,"ConfigParamOnLinearFeePerCertificateFees",7423],[3,"ConfigParamOnLinearFee",7423],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",7423],[3,"ConfigParamOnRemoveBftLeader",7423],[3,"ConfigParamOnAddBftLeaderAddBftLeader",7423],[3,"ConfigParamOnAddBftLeader",7423],[3,"ConfigParamOnBlockContentMaxSize",7423],[3,"ConfigParamOnMilli",7423],[3,"ConfigParamOnEpochStabilityDepth",7423],[3,"ConfigParamOnSlotDuration",7423],[3,"ConfigParamOnSlotsPerEpoch",7423],[3,"ConfigParamOnConsensusType",7423],[3,"ConfigParamOnDiscrimination",7423],[3,"ConfigParamOnBlock0Date",7423],[4,"configParam",7423],[3,"BlockDateEpoch",7423],[3,"blockDate",7423],[3,"PoolInfoRetirement",7423],[3,"PoolInfoRegistrationPool",7423],[3,"PoolInfoRegistration",7423],[3,"PoolInfoBlocks",7423],[3,"poolInfo",7423],[3,"Variables",7423],[3,"EpochTipBlocksByEpochEdgesNode",9111],[3,"EpochTipBlocksByEpochEdges",9111],[3,"EpochTipBlocksByEpoch",9111],[3,"EpochTip",9111],[3,"EpochEpochLastBlock",9111],[3,"EpochEpochFirstBlock",9111],[3,"EpochEpoch",9111],[3,"Variables",9111],[4,"ConsensusTypeEnum",9278],[4,"DiscriminationEnum",9278],[4,"PayloadType",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnEvmMapping",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnMintToken",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVote",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposal",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteTally",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteCast",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanProposals",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlan",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolUpdate",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRetirement",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistration",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegation",9278],[4,"LastBlockTipBlockTransactionsEdgesNodeCertificate",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeOutputsAddress",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeOutputs",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeInputsAddress",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeInputs",9278],[3,"LastBlockTipBlockTransactionsEdgesNodeBlocks",9278],[3,"LastBlockTipBlockTransactionsEdgesNode",9278],[3,"LastBlockTipBlockTransactionsEdges",9278],[3,"LastBlockTipBlockTransactions",9278],[3,"LastBlockTipBlockBranches",9278],[3,"LastBlockTipBlockPreviousBlock",9278],[3,"LastBlockTipBlockLeaderOnBftLeader",9278],[3,"LastBlockTipBlockLeaderOnPool",9278],[4,"LastBlockTipBlockLeader",9278],[3,"LastBlockTipBlockDateEpoch",9278],[3,"LastBlockTipBlockDate",9278],[3,"LastBlockTipBlock",9278],[3,"LastBlockTip",9278],[3,"ResponseData",9278],[3,"ConfigParamOnTransactionMaxExpiryEpochs",9278],[3,"ConfigParamOnPerVoteCertificateFee",9278],[3,"ConfigParamOnRemoveCommitteeId",9278],[3,"ConfigParamOnAddCommitteeId",9278],[3,"ConfigParamOnPoolRewardParticipationCapping",9278],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",9278],[3,"ConfigParamOnRewardLimitByAbsoluteStake",9278],[3,"ConfigParamOnRewardLimitNone",9278],[3,"ConfigParamOnFeesInTreasury",9278],[3,"ConfigParamOnPerCertificateFee",9278],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",9278],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",9278],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",9278],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",9278],[4,"ConfigParamOnRewardParamsRewardParams",9278],[3,"ConfigParamOnRewardParams",9278],[3,"ConfigParamOnRewardPot",9278],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",9278],[3,"ConfigParamOnTreasuryParamsTreasuryParams",9278],[3,"ConfigParamOnTreasuryParams",9278],[3,"ConfigParamOnTreasuryAdd",9278],[3,"ConfigParamOnKesUpdateSpeed",9278],[3,"ConfigParamOnProposalExpiration",9278],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",9278],[3,"ConfigParamOnLinearFeePerCertificateFees",9278],[3,"ConfigParamOnLinearFee",9278],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",9278],[3,"ConfigParamOnRemoveBftLeader",9278],[3,"ConfigParamOnAddBftLeaderAddBftLeader",9278],[3,"ConfigParamOnAddBftLeader",9278],[3,"ConfigParamOnBlockContentMaxSize",9278],[3,"ConfigParamOnMilli",9278],[3,"ConfigParamOnEpochStabilityDepth",9278],[3,"ConfigParamOnSlotDuration",9278],[3,"ConfigParamOnSlotsPerEpoch",9278],[3,"ConfigParamOnConsensusType",9278],[3,"ConfigParamOnDiscrimination",9278],[3,"ConfigParamOnBlock0Date",9278],[4,"configParam",9278],[3,"BlockDateEpoch",9278],[3,"blockDate",9278],[3,"PoolInfoRetirement",9278],[3,"PoolInfoRegistrationPool",9278],[3,"PoolInfoRegistration",9278],[3,"PoolInfoBlocks",9278],[3,"poolInfo",9278],[3,"Variables",9278],[3,"SettingsSettingsFeesPerVoteCertificateFees",10982],[3,"SettingsSettingsFeesPerCertificateFees",10982],[3,"SettingsSettingsFees",10982],[3,"SettingsSettingsEpochStabilityDepth",10982],[3,"SettingsSettings",10982],[3,"Variables",10982],[3,"StakePoolStakePoolBlocksEdgesNode",11115],[3,"StakePoolStakePoolBlocksEdges",11115],[3,"StakePoolStakePoolBlocks",11115],[3,"StakePoolStakePoolRetirement",11115],[3,"StakePoolStakePoolRegistrationRewardAccount",11115],[3,"StakePoolStakePoolRegistrationRewardsRatio",11115],[3,"StakePoolStakePoolRegistrationRewards",11115],[3,"StakePoolStakePoolRegistration",11115],[3,"StakePoolStakePool",11115],[3,"PoolInfoRetirement",11115],[3,"PoolInfoRegistrationPool",11115],[3,"PoolInfoRegistration",11115],[3,"PoolInfoBlocks",11115],[3,"poolInfo",11115],[3,"Variables",11115],[4,"ConsensusTypeEnum",11426],[4,"DiscriminationEnum",11426],[3,"TransactionByIdTransactionOutputsAddress",11426],[3,"TransactionByIdTransactionOutputs",11426],[3,"TransactionByIdTransactionInputsAddress",11426],[3,"TransactionByIdTransactionInputs",11426],[3,"TransactionByIdTransactionBlocks",11426],[3,"TransactionByIdTransactionInitialConfigurationParams",11426],[3,"TransactionByIdTransaction",11426],[3,"ConfigParamOnTransactionMaxExpiryEpochs",11426],[3,"ConfigParamOnPerVoteCertificateFee",11426],[3,"ConfigParamOnRemoveCommitteeId",11426],[3,"ConfigParamOnAddCommitteeId",11426],[3,"ConfigParamOnPoolRewardParticipationCapping",11426],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",11426],[3,"ConfigParamOnRewardLimitByAbsoluteStake",11426],[3,"ConfigParamOnRewardLimitNone",11426],[3,"ConfigParamOnFeesInTreasury",11426],[3,"ConfigParamOnPerCertificateFee",11426],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",11426],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",11426],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",11426],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",11426],[4,"ConfigParamOnRewardParamsRewardParams",11426],[3,"ConfigParamOnRewardParams",11426],[3,"ConfigParamOnRewardPot",11426],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",11426],[3,"ConfigParamOnTreasuryParamsTreasuryParams",11426],[3,"ConfigParamOnTreasuryParams",11426],[3,"ConfigParamOnTreasuryAdd",11426],[3,"ConfigParamOnKesUpdateSpeed",11426],[3,"ConfigParamOnProposalExpiration",11426],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",11426],[3,"ConfigParamOnLinearFeePerCertificateFees",11426],[3,"ConfigParamOnLinearFee",11426],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",11426],[3,"ConfigParamOnRemoveBftLeader",11426],[3,"ConfigParamOnAddBftLeaderAddBftLeader",11426],[3,"ConfigParamOnAddBftLeader",11426],[3,"ConfigParamOnBlockContentMaxSize",11426],[3,"ConfigParamOnMilli",11426],[3,"ConfigParamOnEpochStabilityDepth",11426],[3,"ConfigParamOnSlotDuration",11426],[3,"ConfigParamOnSlotsPerEpoch",11426],[3,"ConfigParamOnConsensusType",11426],[3,"ConfigParamOnDiscrimination",11426],[3,"ConfigParamOnBlock0Date",11426],[4,"configParam",11426],[3,"BlockDateEpoch",11426],[3,"blockDate",11426],[3,"Variables",11426],[4,"ConsensusTypeEnum",12573],[4,"DiscriminationEnum",12573],[4,"PayloadType",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnEvmMapping",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnMintToken",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateVoteVoterId",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateVote",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposalProposerId",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChanges",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposal",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnVoteTally",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnVoteCast",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnVotePlanProposals",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnVotePlan",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolUpdate",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRetirement",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardAccount",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardsRatio",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewards",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistration",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegation",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnStakeDelegationAccount",12573],[3,"TransactionByIdCertificatesTransactionCertificateOnStakeDelegation",12573],[4,"TransactionByIdCertificatesTransactionCertificate",12573],[3,"TransactionByIdCertificatesTransactionOutputsAddress",12573],[3,"TransactionByIdCertificatesTransactionOutputs",12573],[3,"TransactionByIdCertificatesTransactionInputsAddress",12573],[3,"TransactionByIdCertificatesTransactionInputs",12573],[3,"TransactionByIdCertificatesTransactionBlocks",12573],[3,"TransactionByIdCertificatesTransaction",12573],[3,"ConfigParamOnTransactionMaxExpiryEpochs",12573],[3,"ConfigParamOnPerVoteCertificateFee",12573],[3,"ConfigParamOnRemoveCommitteeId",12573],[3,"ConfigParamOnAddCommitteeId",12573],[3,"ConfigParamOnPoolRewardParticipationCapping",12573],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",12573],[3,"ConfigParamOnRewardLimitByAbsoluteStake",12573],[3,"ConfigParamOnRewardLimitNone",12573],[3,"ConfigParamOnFeesInTreasury",12573],[3,"ConfigParamOnPerCertificateFee",12573],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",12573],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",12573],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",12573],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",12573],[4,"ConfigParamOnRewardParamsRewardParams",12573],[3,"ConfigParamOnRewardParams",12573],[3,"ConfigParamOnRewardPot",12573],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",12573],[3,"ConfigParamOnTreasuryParamsTreasuryParams",12573],[3,"ConfigParamOnTreasuryParams",12573],[3,"ConfigParamOnTreasuryAdd",12573],[3,"ConfigParamOnKesUpdateSpeed",12573],[3,"ConfigParamOnProposalExpiration",12573],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",12573],[3,"ConfigParamOnLinearFeePerCertificateFees",12573],[3,"ConfigParamOnLinearFee",12573],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",12573],[3,"ConfigParamOnRemoveBftLeader",12573],[3,"ConfigParamOnAddBftLeaderAddBftLeader",12573],[3,"ConfigParamOnAddBftLeader",12573],[3,"ConfigParamOnBlockContentMaxSize",12573],[3,"ConfigParamOnMilli",12573],[3,"ConfigParamOnEpochStabilityDepth",12573],[3,"ConfigParamOnSlotDuration",12573],[3,"ConfigParamOnSlotsPerEpoch",12573],[3,"ConfigParamOnConsensusType",12573],[3,"ConfigParamOnDiscrimination",12573],[3,"ConfigParamOnBlock0Date",12573],[4,"configParam",12573],[3,"BlockDateEpoch",12573],[3,"blockDate",12573],[3,"PoolInfoRetirement",12573],[3,"PoolInfoRegistrationPool",12573],[3,"PoolInfoRegistration",12573],[3,"PoolInfoBlocks",12573],[3,"poolInfo",12573],[3,"Variables",12573],[4,"ConsensusTypeEnum",14308],[4,"DiscriminationEnum",14308],[4,"PayloadType",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnEvmMapping",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnMintToken",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVoteVoterId",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVote",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalProposerId",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChanges",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposal",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteTally",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteCast",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanProposals",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlan",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolUpdate",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRetirement",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardAccount",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardsRatio",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewards",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistration",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegation",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationAccount",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegation",14308],[4,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificate",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputsAddress",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputs",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeInputsAddress",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeInputs",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocks",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNode",14308],[3,"TransactionsByAddressTipTransactionsByAddressEdges",14308],[3,"TransactionsByAddressTipTransactionsByAddress",14308],[3,"TransactionsByAddressTip",14308],[3,"ConfigParamOnTransactionMaxExpiryEpochs",14308],[3,"ConfigParamOnPerVoteCertificateFee",14308],[3,"ConfigParamOnRemoveCommitteeId",14308],[3,"ConfigParamOnAddCommitteeId",14308],[3,"ConfigParamOnPoolRewardParticipationCapping",14308],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake",14308],[3,"ConfigParamOnRewardLimitByAbsoluteStake",14308],[3,"ConfigParamOnRewardLimitNone",14308],[3,"ConfigParamOnFeesInTreasury",14308],[3,"ConfigParamOnPerCertificateFee",14308],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio",14308],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams",14308],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio",14308],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams",14308],[4,"ConfigParamOnRewardParamsRewardParams",14308],[3,"ConfigParamOnRewardParams",14308],[3,"ConfigParamOnRewardPot",14308],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio",14308],[3,"ConfigParamOnTreasuryParamsTreasuryParams",14308],[3,"ConfigParamOnTreasuryParams",14308],[3,"ConfigParamOnTreasuryAdd",14308],[3,"ConfigParamOnKesUpdateSpeed",14308],[3,"ConfigParamOnProposalExpiration",14308],[3,"ConfigParamOnLinearFeePerVoteCertificateFees",14308],[3,"ConfigParamOnLinearFeePerCertificateFees",14308],[3,"ConfigParamOnLinearFee",14308],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader",14308],[3,"ConfigParamOnRemoveBftLeader",14308],[3,"ConfigParamOnAddBftLeaderAddBftLeader",14308],[3,"ConfigParamOnAddBftLeader",14308],[3,"ConfigParamOnBlockContentMaxSize",14308],[3,"ConfigParamOnMilli",14308],[3,"ConfigParamOnEpochStabilityDepth",14308],[3,"ConfigParamOnSlotDuration",14308],[3,"ConfigParamOnSlotsPerEpoch",14308],[3,"ConfigParamOnConsensusType",14308],[3,"ConfigParamOnDiscrimination",14308],[3,"ConfigParamOnBlock0Date",14308],[4,"configParam",14308],[3,"BlockDateEpoch",14308],[3,"blockDate",14308],[3,"PoolInfoRetirement",14308],[3,"PoolInfoRegistrationPool",14308],[3,"PoolInfoRegistration",14308],[3,"PoolInfoBlocks",14308],[3,"poolInfo",14308],[3,"Variables",14308],[4,"PayloadType",15864],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus",15864],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus",15864],[4,"VotePlanByIdVotePlanProposalsVotesEdgesNodePayload",15864],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNodeAddress",15864],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNode",15864],[3,"VotePlanByIdVotePlanProposalsVotesEdges",15864],[3,"VotePlanByIdVotePlanProposalsVotes",15864],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatusOptions",15864],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatus",15864],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatusOptions",15864],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatus",15864],[4,"VotePlanByIdVotePlanProposalsTally",15864],[3,"VotePlanByIdVotePlanProposalsOptions",15864],[3,"VotePlanByIdVotePlanProposals",15864],[3,"VotePlanByIdVotePlan",15864],[3,"BlockDateEpoch",15864],[3,"blockDate",15864],[3,"Variables",15864],[3,"OwnerStakeDelegation",20646],[3,"Transaction",20647],[4,"VerifierError",16309],[3,"PoolRegistration",20648],[3,"PoolRetirement",20648],[3,"PoolUpdate",20648],[3,"StakeDelegation",20646],[3,"UpdateProposal",20649],[3,"UpdateVote",20650],[3,"VoteCast",20651],[3,"VotePlan",20652],[3,"VoteTally",20653],[3,"ConfigParams",20654],[3,"Block",20655],[3,"StakePool",20544],[3,"Wallet",20656],[3,"TimeOffsetSeconds",20657],[4,"FragmentStatus",20593],[3,"PublicKey",20658],[8,"Iterator",20659],[8,"DeserializeFromSlice",20660],[3,"JormungandrClient",16528],[3,"Block",17457],[3,"Streaming",20661],[4,"MockClientError",16528],[3,"JormungandrWatchClient",16528],[3,"Status",20662],[3,"Sender",20663],[3,"Channel",20664],[3,"NodeClient",17002],[3,"WatchClient",17663],[3,"Fragment",17457],[3,"Hash",20665],[3,"HandshakeResponse",16626],[4,"Header",20666],[3,"Header",17457],[6,"WatchTipNotifier",16528],[3,"ChainLength",20626],[3,"Duration",20667],[3,"HandshakeRequest",16626],[3,"ClientAuthRequest",16626],[3,"ClientAuthResponse",16626],[3,"TipRequest",16626],[3,"TipResponse",16626],[3,"PeersRequest",16626],[3,"PeersResponse",16626],[3,"PullHeadersRequest",16626],[3,"PullBlocksToTipRequest",16626],[3,"PullBlocksRequest",16626],[3,"PushHeadersResponse",16626],[3,"UploadBlocksResponse",16626],[3,"Gossip",16626],[3,"BlockEvent",16626],[4,"Item",16977],[8,"BufMut",20668],[4,"WireType",20669],[3,"DecodeContext",20669],[3,"DecodeError",20670],[8,"Buf",20671],[6,"BoxBody",20672],[8,"GrpcService",20673],[3,"Response",20674],[8,"IntoStreamingRequest",20574],[8,"IntoRequest",20574],[3,"Error",20675],[3,"Endpoint",20676],[8,"TryInto",20582],[3,"BlockIds",17457],[3,"FragmentIds",17457],[3,"InterceptedService",20677],[3,"Request",20678],[8,"Service",20679],[8,"Interceptor",20677],[8,"Future",20680],[3,"Box",20681],[3,"Pin",20682],[3,"NodeServer",17041],[8,"Node",17041],[8,"Body",20683],[8,"Send",20616],[3,"_Inner",17041],[3,"Context",20684],[4,"Poll",20685],[3,"JormungandrServerImpl",17111],[4,"MockExitCode",17111],[4,"ProtocolVersion",17111],[3,"MockServerData",17303],[3,"RwLock",20686],[3,"Arc",20687],[3,"MockController",17276],[3,"MockBuilder",17234],[3,"ChannelWriter",17234],[6,"Result",20586],[8,"Fn",20688],[3,"MockLogger",17368],[3,"Sender",20689],[4,"Error",17303],[4,"WriteError",20660],[4,"ReadError",20660],[4,"Error",20690],[3,"BlockStore",20691],[3,"Profile",20692],[4,"MethodType",17368],[3,"Receiver",20663],[3,"ChannelReader",17368],[3,"MockVerifier",17440],[3,"BlockSubscriptionRequest",17572],[3,"TipSubscriptionRequest",17572],[3,"MempoolSubscriptionRequest",17572],[3,"SyncMultiverseRequest",17572],[3,"WatchServer",17690],[8,"Watch",17690],[3,"_Inner",17690],[3,"Rest",17742],[3,"P2p",17742],[3,"TopicsOfInterest",17742],[3,"RELEASES",17742],[3,"CachedReleases",19353],[3,"LegacyNodeConfigManager",17962],[3,"LegacyNodeConfigBuilder",17998],[3,"LegacyNodeConfig",18067],[4,"Error",17998],[3,"LegacyNodeConfigConverter",17998],[3,"Error",20693],[3,"FixtureError",20694],[3,"OsRng",20695],[3,"P2p",18067],[3,"TrustedPeer",18067],[3,"Log",18067],[3,"BackwardCompatibleRest",18171],[3,"Identifier",20696],[6,"VotePlanId",20597],[6,"HeaderId",20626],[3,"RestSettings",18744],[3,"RawRest",18659],[4,"Level",18237],[3,"JormungandrLogger",18237],[3,"LogEntry",18237],[3,"LogEntryLegacy",18237],[3,"Ref",20697],[3,"SystemTime",20698],[8,"Read",20699],[3,"NamedProcess",19353],[4,"Status",18375],[3,"JormungandrStateVerifier",19251],[4,"ShutdownError",18375],[4,"NodeState",20700],[3,"Child",20607],[4,"TestingDirectory",19199],[4,"StartupError",18768],[3,"JormungandrRest",18561],[4,"StartupVerificationMode",18768],[3,"TimeEra",20701],[3,"RemoteJormungandr",18494],[3,"ExitStatus",20607],[3,"RemoteJormungandrBuilder",18494],[3,"AccountVotes",20597],[3,"EpochRewardsInfo",20702],[3,"Certificate",20703],[4,"Error",20611],[4,"Error",20704],[3,"PeerStats",20705],[3,"PeerRecord",20705],[3,"StakeDistributionDto",20706],[3,"NodeStatsDto",20700],[3,"UpdateProposalStateDef",20707],[3,"HeaderMap",20708],[4,"ApiVersion",18659],[3,"Identifier",20709],[3,"Starter",18768],[3,"FaketimeConfig",18768],[4,"LeadershipMode",18768],[4,"PersistenceMode",18768],[4,"NodeBlock0",18768],[4,"FromGenesis",18768],[4,"OnFail",18768],[3,"JormungandrParams",19066],[3,"SpeedBenchmarkRun",19353],[4,"ProcessError",20710],[4,"Error",19066],[3,"ConfiguredStarter",18768],[3,"CommandBuilder",19035],[8,"ConfigurableNodeConfig",19066],[3,"JormungandrBootstrapper",19140],[4,"Error",19199],[4,"StateVerifierError",19251],[3,"FragmentLogVerifier",19321],[4,"ValueError",20711],[3,"StateSnapshot",19251],[3,"Endurance",19353],[3,"Thresholds",19353],[4,"Status",20712],[3,"Speed",19353],[3,"Asset",20713],[3,"Global",20714],[3,"ConsumptionBenchmarkDef",20715],[3,"EfficiencyBenchmarkDef",19353],[3,"EnduranceBenchmarkDef",19353],[3,"SpeedBenchmarkDef",19353],[3,"GitHubApiBuilder",19353],[3,"GitHubApi",20713],[3,"ConsumptionBenchmarkRun",19353],[3,"EnduranceBenchmarkFinish",19353],[3,"ResourcesUsage",19353],[3,"Timestamp",19353],[3,"Openssl",19353],[4,"DecompressError",20716],[3,"EfficiencyBenchmarkFinish",19353],[4,"WebError",20717],[3,"Efficiency",20718],[3,"EfficiencyBenchmarkRun",19353],[3,"EnduranceBenchmarkRun",19353],[3,"ConsumptionBenchmarkFinish",20715],[3,"SpeedBenchmarkFinish",19353],[4,"GitHubApiError",19353],[4,"ConsumptionBenchmarkError",19353],[4,"FromHexError",20719],[3,"SystemTime",20720],[4,"SyncWaitParams",20089],[4,"Type",20721],[3,"Iter",20722],[3,"Counter",20723],[8,"PartialOrd",20612],[3,"Consumption",20724],[3,"RandomState",20614],[4,"SyncNodeError",19993],[8,"SyncNode",19993],[4,"Error",20294],[4,"MeasurementReportInterval",20048],[8,"FragmentNode",16455],[3,"SyncNodeRecord",19993],[3,"MeasurementReporter",20048],[4,"Block0Error",20121],[4,"Error",20725],[4,"Block0ConfigurationError",20623],[4,"Error",20726],[3,"Parameters",20727],[3,"OutputCollector",20171],[8,"AsymmetricKey",20658],[3,"Event",20200],[8,"Observer",20200],[3,"Rc",20728],[3,"StorageBuilder",20236],[4,"StopCriteria",20236],[4,"BranchCount",20236],[8,"PartialEq",20612],[4,"JsonValue",20729],[3,"VotePlanBuilder",20341],[4,"VoteAction",20652],[3,"ProposalsBuilder",20341],[3,"Proposals",20652],[3,"MemberPublicKey",20730],[6,"ExternalProposalId",20652],[3,"BlockDate",20731],[3,"TokenIdentifier",20732],[3,"VoteCastCounter",20400],[3,"VotesToCast",20400],[4,"Error",20400],[3,"WalletVoteCastPosition",20400],[3,"VotePlanVoteCastPosition",20400],[6,"VotePlanId",20652],[3,"Range",20733],[6,"PoolId",20648],[3,"Identifier",20632],[13,"TransactionNotInBlock",1371],[13,"TransactionsNotInBlock",1371],[13,"CannotSendFragment",16512],[13,"CannotSendFragmentBatch",16512],[13,"ErrorInLogs",1830],[13,"StdErr",1830],[13,"NonSuccessErrorCode",18656],[13,"Timeout",18492],[13,"EntryNotFoundInLogs",19031],[13,"Timeout",19031],[8,"NodeSecretExtension",2039],[3,"Address",2289],[3,"TransactionsByAddress",2289],[3,"AllBlocks",2289],[3,"Block",2289],[3,"AllStakePools",2289],[3,"BlocksByChainLength",2289],[3,"Epoch",2289],[3,"LastBlock",2289],[3,"StakePool",2289],[3,"Settings",2289],[3,"TransactionById",2289],[3,"TransactionByIdCertificates",2289],[3,"AllVotePlans",2289],[3,"BlockById",2289],[3,"VotePlanById",2289],[6,"EpochNumber",2289],[6,"Slot",2289],[6,"ChainLength",2289],[6,"Value",2289],[6,"VotePlanId",2289],[6,"NonZero",2289],[6,"TimeOffsetSeconds",2289],[6,"PublicKey",2289],[6,"ExternalProposalId",2289],[6,"Weight",2289],[6,"ID",2551],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParamsConfigParams",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationPools",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationPool",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocksDate",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanVoteStart",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanVoteEnd",2609],[6,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd",2609],[6,"ID",2609],[6,"ChainLength",2609],[6,"EpochNumber",2609],[6,"ExternalProposalId",2609],[6,"NonZero",2609],[6,"PoolId",2609],[6,"PublicKey",2609],[6,"Slot",2609],[6,"TimeOffsetSeconds",2609],[6,"Value",2609],[6,"VotePlanId",2609],[6,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationPool",4394],[6,"AllStakePoolsTipAllStakePoolsNodesRegistrationPool",4394],[6,"ID",4394],[6,"NonZero",4394],[6,"PoolId",4394],[6,"PublicKey",4394],[6,"TimeOffsetSeconds",4394],[6,"Value",4394],[6,"AllVotePlansTipAllVotePlansEdgesNodeVoteStart",4928],[6,"AllVotePlansTipAllVotePlansEdgesNodeVoteEnd",4928],[6,"AllVotePlansTipAllVotePlansEdgesNodeCommitteeEnd",4928],[6,"ID",4928],[6,"EpochNumber",4928],[6,"ExternalProposalId",4928],[6,"Slot",4928],[6,"VotePlanId",4928],[6,"Weight",4928],[6,"ID",5368],[6,"BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParamsConfigParams",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationPools",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationPool",5426],[6,"BlockByIdBlockTransactionsEdgesNodeBlocksDate",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanVoteStart",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanVoteEnd",5426],[6,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd",5426],[6,"ID",5426],[6,"ChainLength",5426],[6,"EpochNumber",5426],[6,"ExternalProposalId",5426],[6,"NonZero",5426],[6,"PoolId",5426],[6,"PublicKey",5426],[6,"Slot",5426],[6,"TimeOffsetSeconds",5426],[6,"Value",5426],[6,"VotePlanId",5426],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationPools",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationPool",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocksDate",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanVoteStart",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanVoteEnd",7423],[6,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd",7423],[6,"ID",7423],[6,"ChainLength",7423],[6,"EpochNumber",7423],[6,"ExternalProposalId",7423],[6,"NonZero",7423],[6,"PoolId",7423],[6,"PublicKey",7423],[6,"Slot",7423],[6,"TimeOffsetSeconds",7423],[6,"Value",7423],[6,"VotePlanId",7423],[6,"ID",9111],[6,"EpochNumber",9111],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationPools",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationPool",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeBlocksDate",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanVoteStart",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanVoteEnd",9278],[6,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd",9278],[6,"ID",9278],[6,"ChainLength",9278],[6,"EpochNumber",9278],[6,"ExternalProposalId",9278],[6,"NonZero",9278],[6,"PoolId",9278],[6,"PublicKey",9278],[6,"Slot",9278],[6,"TimeOffsetSeconds",9278],[6,"Value",9278],[6,"VotePlanId",9278],[6,"ID",10982],[6,"StakePoolStakePoolRegistrationPool",11115],[6,"ID",11115],[6,"NonZero",11115],[6,"PoolId",11115],[6,"PublicKey",11115],[6,"TimeOffsetSeconds",11115],[6,"Value",11115],[6,"TransactionByIdTransactionInitialConfigurationParamsConfigParams",11426],[6,"TransactionByIdTransactionBlocksDate",11426],[6,"ID",11426],[6,"EpochNumber",11426],[6,"NonZero",11426],[6,"PublicKey",11426],[6,"Slot",11426],[6,"Value",11426],[6,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChangesConfigParams",12573],[6,"TransactionByIdCertificatesTransactionCertificateOnStakeDelegationPools",12573],[6,"TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegationPools",12573],[6,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationPool",12573],[6,"TransactionByIdCertificatesTransactionBlocksDate",12573],[6,"TransactionByIdCertificatesTransactionCertificateOnVotePlanVoteStart",12573],[6,"TransactionByIdCertificatesTransactionCertificateOnVotePlanVoteEnd",12573],[6,"TransactionByIdCertificatesTransactionCertificateOnVotePlanCommitteeEnd",12573],[6,"ID",12573],[6,"EpochNumber",12573],[6,"ExternalProposalId",12573],[6,"NonZero",12573],[6,"PoolId",12573],[6,"PublicKey",12573],[6,"Slot",12573],[6,"TimeOffsetSeconds",12573],[6,"Value",12573],[6,"VotePlanId",12573],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChangesConfigParams",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationPools",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegationPools",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationPool",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocksDate",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanVoteStart",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanVoteEnd",14308],[6,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanCommitteeEnd",14308],[6,"ID",14308],[6,"EpochNumber",14308],[6,"ExternalProposalId",14308],[6,"NonZero",14308],[6,"PoolId",14308],[6,"PublicKey",14308],[6,"Slot",14308],[6,"TimeOffsetSeconds",14308],[6,"Value",14308],[6,"VotePlanId",14308],[6,"VotePlanByIdVotePlanVoteStart",15864],[6,"VotePlanByIdVotePlanVoteEnd",15864],[6,"VotePlanByIdVotePlanCommitteeEnd",15864],[6,"ID",15864],[6,"EpochNumber",15864],[6,"ExternalProposalId",15864],[6,"Slot",15864],[6,"VotePlanId",15864],[6,"Weight",15864],[3,"ExplorerVerifier",16309],[13,"InvalidCertificate",16435],[6,"RawFields",18237],[13,"CannotDeserialize",19935],[8,"InitialsAssert",19937],[8,"VotePlanStatusAssert",19937],[13,"TimeoutWhenSyncingTargetNode",20045],[13,"Standard",20117],[13,"WithDisruption",20117],[8,"Block0ConfigurationExtension",20121],[8,"BlockchainConfigurationExtension",20169],[8,"Observable",20200],[8,"ProcessOutput",20228],[8,"SettingsDtoExtension",20234],[8,"VotePlanExtension",20314],[13,"NoMoreRequestsToSentForWallet",20528],[13,"VotePlanIsDrainedFromVotes",20528],[13,"LoadCannotSendAnyMoreRequests",20528],[8,"MultiaddrExtension",20542]]},\
"jormungandr_integration_tests":{"doc":"","t":"AADDDLMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMMLLLLLMMLLLLLLLLLMLLLDDDMLLLMMMLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMFLLLLLLLLLMLLLLLLLLLLLLLLL","n":["context","startup","ActorsTestContext","LegacyTestContext","TestContext","alice","alice","block0_config","block0_config","block0_config","block0_config","bob","bob","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","jormungandr_app","legacy_node_config","node_config","node_config","restart_node","reward_history","secret_factory","start_node","start_node","start_node","starter","starter","test_context","test_context","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","ActorsTestBootstrapper","LegacySingleNodeTestBootstrapper","SingleNodeTestBootstrapper","alice","as_bft_leader","as_bft_leader","as_genesis_praos_stake_pool","block0_builder","bob","bootstrapper","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","create_new_account_address","create_new_delegation_address","create_new_delegation_address_for","create_new_leader_key","create_new_utxo_address","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from","init","init","init","inner","into","into","into","into_request","into_request","into_request","jormungandr_app","legacy_node_config","node_config_builder","reward_history","secret","start_stake_pool","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","with_alice","with_bft_leader_node","with_bft_secret","with_block0_config","with_block0_config","with_bob_without_funds","with_jormungandr_app","with_node_config","with_node_config","with_rewards_history","with_rewards_history","with_version"],"q":[[0,"jormungandr_integration_tests"],[2,"jormungandr_integration_tests::context"],[67,"jormungandr_integration_tests::startup"],[147,"thor::wallet"],[148,"jormungandr_lib::interfaces::block0_configuration"],[149,"tonic::request"],[150,"jormungandr_lib::interfaces::config::node"],[151,"jormungandr_automation::jormungandr::process"],[152,"jormungandr_automation::jormungandr::starter"],[153,"core::result"],[154,"assert_fs::fixture::dir"],[155,"jormungandr_automation::jormungandr::starter"],[156,"thor::stake_pool"],[157,"jormungandr_automation::jormungandr::legacy::config::node"],[158,"chain_crypto::algorithms::ed25519"],[159,"jormungandr_lib::crypto::key"],[160,"jormungandr_lib::crypto::key"],[161,"jormungandr_automation::jormungandr::configuration::block0::block0_config_builder"],[162,"jormungandr_automation::jormungandr::configuration::node::node_config_builder"],[163,"alloc::vec"],[164,"jormungandr_lib::interfaces::value"],[165,"jormungandr_lib::crypto::key"],[166,"jormungandr_automation::jormungandr::legacy::config::node"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,3,1,5,3,1,1,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,5,5,3,3,3,3,3,3,1,5,3,5,1,5,3,1,5,3,1,5,3,1,5,5,3,1,5,0,0,0,20,16,17,17,17,20,20,16,20,17,16,20,17,16,20,17,0,0,0,0,0,20,17,16,20,17,16,20,17,16,20,17,16,16,20,17,16,20,17,16,16,20,17,16,20,17,16,16,17,17,17,0,16,20,17,16,20,17,16,20,17,16,16,20,17,20,20,17,16,17,20,16,16,17,16,17,16],"f":[0,0,0,0,0,[1,2],0,[3,4],[1,4],[5,4],0,[1,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,7],[6,7],[6,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,[3,9],0,[[3,10],[[12,[10,11]]]],0,0,[[3,13],[[12,[10,11]]]],[[1,13],[[12,[10,11]]]],[[5,13],[[12,[10,11]]]],[[3,13],[[12,[14,11]]]],[[5,13],[[12,[14,11]]]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[16,16],[17,17],[[17,18],17],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[12,[5,19]]]],[20,1],[17,3],[[],2],[[],2],[[[22,[21]]],2],[[],[[23,[21]]]],[[],2],[[],20],[[],17],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,7],[6,7],[6,7],[24,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,[[[25,[2]],[25,[2]],26,27],[[12,[[7,[10,[28,[18]]]],11]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,29],20],[20,20],[[17,[30,[21]]],17],[[16,26],16],[[17,26],17],[20,20],[[16,31],16],[[16,32],16],[[17,27],17],[16,16],[17,17],[[16,24],16]],"c":[],"p":[[3,"ActorsTestContext",2],[4,"Wallet",147],[3,"TestContext",2],[3,"Block0Configuration",148],[3,"LegacyTestContext",2],[15,"usize"],[15,"tuple"],[3,"Request",149],[3,"NodeConfig",150],[3,"JormungandrProcess",151],[4,"StartupError",152],[4,"Result",153],[3,"TempDir",154],[3,"Starter",152],[3,"TypeId",155],[3,"LegacySingleNodeTestBootstrapper",67],[3,"SingleNodeTestBootstrapper",67],[3,"StakePool",156],[4,"Error",157],[3,"ActorsTestBootstrapper",67],[3,"Ed25519",158],[3,"Identifier",159],[3,"KeyPair",159],[3,"Version",160],[15,"slice"],[3,"Block0ConfigurationBuilder",161],[3,"NodeConfigBuilder",162],[3,"Vec",163],[3,"Value",164],[3,"SigningKey",159],[3,"PathBuf",165],[3,"LegacyNodeConfigBuilder",157]]},\
"jormungandr_lib":{"doc":"","t":"AAAAAAAADNNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMMMMFLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLNDDDDNNNDNDNNDENDDNDDNDNRNNDEEEDEDDNDNEDDRRRRRRRNDNENDDNDENNNDNNDNDDEEEDDENDNNNNNNNENDDNNNNNNNNNNNDNDNNDDDENDNNDDDDERRRRRRRRDNNNDGDEDDNDNDDDEEDDNNDNDNDDDDNDNDNNNNNENDNNNDDNNDNNDNDNNENNDNNRDDDNNNDDDDDNNNNDEDDDDNDDNDDDENDDNNNDEDEEEDDDDNDDEDGDDDMAAMMAMMMMMMMMMMMMMMAFMAMMMMMMMMAMMMMMAMMMMMMMAMMMMMMMAAMFMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMAMMAAMAAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMAMMMMFMMMMMMMMMMMMMMAMMMMAMMMMMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMAMMFMMMMMMMMMMAMMMAMMAAAAAAMMMMMMMMMAMAAMMAMMMMMMMAMAMMMMMMMMMAAAMMMMMFMMMMMAMAAMMMMMMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDNRRNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMLLLLLLLMLLLLLLLLLLMLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCDECCNCCCCCCNCNCCCCCCCCCCCCCCAFAMLLLLLLALLLLLLLALALLLLLLLLLLMAALLAAAAALALLLLLLCLLLLLLDNNSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDEENENNNNNNNGNMMMLLLLLLLLLLMMMLLLLLLLLLLLMLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLMMLLLMMMLLLLLLLLLMLLLLLLLLMMNNDENNEDDNDNNNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMLLLLLMLLLLLLLMFLLLLLLFLLLLLLLLLLLLMMMLLLLLLNNDSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLNNSSDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLNNSSDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLNRDEEENNNNNNRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCCCCCCCCCCCCCAAAANDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLDDDDRDDDDDGDDDDDDDDMMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLMMMMMMMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLMMLLLLLLLLLLLLMLLLNNNNNEDNNNNNNENNNNNNNNNNNNNNNNNNNNLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLFLLLLDEENNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLMLMLLLLMLLLLLLLLLLLLLLLMMMMDDDDLLLLLLLLMMLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLFFLLFMMLLMLLLLLLLLLLLLLLLLLDLLLLLLMLMLLLLLLLLNNEDNNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLNDDENNLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLMLLLLMLLLLLLLLLLLLLLLLMMMMMDDDLLLLLLMMMMMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMFMLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLLLLLLLLLLMLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLMLLLMMMMMLLLMLLLMLLLLLLLLLLLLNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLLLMMMMMMMMDLMLLLLLMLLMLLMLLLLLLLMMLLLLFFFFFFFFFFNEENENNDNDDDDNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMMMMLLLLLLLLMMLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLMLLMLLLLLLLLMLLDDLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLMLLMLLLLLLMMMLLNEDDNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLMMLLLLLLLLLMMLLLMMMLLLDLLLLLLLLLLMLLLLLMMLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLNRDENLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLDLMLLLLLLLLLLLLLLLLLLLLLLMLNRNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDLLLLMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMLLDDLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLMLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNDNNNNEENNNENNNNDEDNNEEEDGDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMLMAAAAALLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMFFFFFFFFDDLLLLLLLLFLLLLLLLLLLFLLLLLLLLLENNNNNLLLLLLLLLLFLLFLLLLDDSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["crypto","interfaces","multiaddr","time","account","hash","key","serde","Identifier","InvalidBech32Encoding","InvalidSecretKey","SigningKey","SigningKeyParseError","UnexpectedHrp","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bech32_str","from_bech32_str","from_hex","from_str","from_str","generate","generate_extended","hash","identifier","init","init","init","into","into","into","partial_cmp","serialize","serialize","source","to_address","to_bech32_str","to_bech32_str","to_hex","to_hex","to_inner","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","hrp","Hash","as_ref","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","deserialize","drop","eq","equivalent","fmt","fmt","from","from","from","from","from","from_hex","from_str","from_str","hash","hash","init","into","into_digest","into_digest_of","into_hash","partial_cmp","serialize","serialize","to_hex","to_owned","to_string","try_from","try_into","type_id","vzip","Identifier","KeyPair","Signature","SigningKey","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","coerce","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bech32_str","from_bech32_str","from_bech32_str","from_hex","from_hex","from_str","from_str","generate","generate","hash","hash","identifier","identifier","init","init","init","init","into","into","into","into","into_public_key","into_secret_key","partial_cmp","public_key","serialize","serialize","serialize","sign","signing_key","to_account_address","to_bech32_str","to_bech32_str","to_bech32_str","to_group_address","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_single_address","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","PublicKeyVisitor","SecretKeyVisitor","SignatureVisitor","_marker","_marker","_marker_1","_marker_2","bech32_error_to_serde","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize_hash","deserialize_public","deserialize_secret","deserialize_signature","drop","drop","drop","expecting","expecting","expecting","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","new","new","new","serialize_hash","serialize_public","serialize_secret","serialize_signature","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_bytes","visit_str","visit_str","visit_str","vzip","vzip","vzip","Account","AccountIdentifier","AccountState","AccountVotes","ActiveSlotCoefficient","ActiveSlotCoefficient","AddBftLeader","AddCommitteeId","Address","Bech32","Bft","Bft","Block","Block0Configuration","Block0ConfigurationError","Block0Date","Block0DateDef","BlockContentMaxSize","BlockContentMaxSize","BlockDate","BlockchainConfiguration","BlockchainConfiguration","Bootstrap","Bootstrapping","CERTIFICATE_HRP","CannotParseAddress","Cert","Certificate","CertificateFromBech32Error","CertificateFromStrError","CertificateToBech32Error","CommitteeIdDef","ConfigParam","ConfigParams","Connection","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusLeaderId","ConsensusVersion","ConsensusVersionDef","Cors","CorsOrigin","DEFAULT_ACTIVE_SLOT_COEFFICIENT","DEFAULT_BLOCK_CONTENT_MAX_SIZE","DEFAULT_EPOCH_STABILITY_DEPTH","DEFAULT_KES_SPEED_UPDATE","DEFAULT_NUMBER_OF_SLOTS_PER_EPOCH","DEFAULT_PROPOSAL_EXPIRATION","DEFAULT_SLOT_DURATION","Decrypted","Destination","Discrimination","DiscriminationDef","Encrypted","EpochRewardsInfo","EpochStabilityDepth","EpochStabilityDepth","EvmTransaction","FeesGoTo","FeesGoTo","FeesInTreasury","File","FileFragments","FirstBlock0MessageNotInit","FragmentAlreadyInLog","FragmentDef","FragmentInvalid","FragmentLog","FragmentLogDeserializeError","FragmentOrigin","FragmentRejectionReason","FragmentStatus","FragmentsBatch","FragmentsProcessingSummary","FromConfigParamError","Fund","GenesisPraos","GenesisPraos","Halving","InABlock","Incompatible","Incompatible","Incompatible","Incompatible","Initial","InitialFragments","InitialToken","InitialUTxO","Invalid","Invalid","Invalid","Invalid","InvalidBase32","InvalidBech32","InvalidCertificate","InvalidCertificate","InvalidHrp","InvalidInt","Io","JRpc","JRpc","KesUpdateSpeed","KesUpdateSpeed","KesUpdateSpeed","LayersConfig","LeadershipLog","LeadershipLogId","LeadershipLogStatus","LegacyFund","LegacyUTxO","Linear","LinearFee","LinearFeeDef","Log","LogEntry","LogMaxEntries","LogOutput","MAXIMUM_ACTIVE_SLOT_COEFFICIENT","MAXIMUM_KES_SPEED_UPDATE_IN_SECONDS","MAXIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MAXIMUM_SLOT_DURATION","MINIMUM_ACTIVE_SLOT_COEFFICIENT","MINIMUM_KES_SPEED_UPDATE_IN_SECONDS","MINIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MINIMUM_SLOT_DURATION","Mempool","MissingDenominator","MissingNumerator","Network","NodeConfig","NodeId","NodeSecret","NodeState","NodeStats","NodeStatsDto","NotAccountOrMulti","NumberOfSlotsPerEpoch","NumberOfSlotsPerEpoch","OldAddress","P2p","ParametersDef","ParseAccountIdentifierError","ParseRatioError","PeerRecord","PeerStats","Pending","Pending","PerCertificateFeeDef","PerCertificateFees","PerVoteCertificateFeeDef","PerVoteCertificateFees","PersistentFragmentLog","PersistentLog","Policy","PoolMaxEntries","PoolOverflow","PoolParticipationCapping","PoolRewardParticipationCapping","PreferredListConfig","PreparingBlock0","PreparingStorage","PreviousFragmentInvalid","Private","Private","PrivateTallyState","Production","ProposalExpiration","ProposalExpiration","Public","Public","Ratio","RatioDef","Rejected","Rejected","RejectedFragmentInfo","RemoveBftLeader","RemoveCommitteeId","Rest","Rest","RewardConstraints","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardParams","RewardPot","Rewards","Rewards","Running","SIGNED_CERTIFICATE_HRP","SettingsDto","SignedCertificate","SlotDuration","SlotDuration","SlotDuration","SlotsPerEpoch","Stake","StakeDef","StakeDistribution","StakeDistributionDto","StakePoolStats","StartingRestServer","StartingWorkers","Stderr","Stdout","Subscription","Tally","TallyResult","TaxType","TaxTypeDef","TaxTypeSerde","Test","TimeEraDef","Tls","Token","TokenIdentifier","TopicsOfInterest","TransactionInput","TransactionInputType","TransactionMaxExpiryEpochs","TransactionOutput","TransactionWitness","Treasury","TreasuryAdd","TreasuryParams","TrustedPeer","TryFromActiveSlotCoefficientError","TryFromFeesGoToError","TryFromKesUpdateSpeedError","TryFromNumberOfSlotsPerEpochError","TryFromSlotDurationError","UTxOInfo","UTxOOutputInfo","UpdateProposalDef","UpdateProposalStateDef","Utxo","Value","ValueDef","VotePayload","VotePlan","VotePlanId","VotePlanStatus","VotePrivacy","VoteProposalStatus","accepted","account_identifier","account_state","accounts","addr","address","address","address","address","address","address","address","address","address","allow_private_addresses","allowed_headers","allowed_methods","allowed_origins","associated_fund","bft","block0_configuration","block0_configuration_documented_example","block0_consensus","block0_date","block0_date","block0_hash","block0_time","block_content_max_size","block_content_max_size","block_content_size_avg","block_recv_cnt","blockchain_configuration","blockdate","blocks","bootstrap","bootstrap_from_trusted_peers","cause","cert_file","certificate","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","committee","committee_end","committee_end","committee_member_keys","committee_member_public_keys","committees","compounding_ratio","compounding_type","config","config_params","config_params","config_params_documented_example","connection","consensus_genesis_praos_active_slot_coeff","consensus_leader_ids","consensus_version","constant","cors","counters","created_at_time","curr_slot_start_time","dangling","delegation","denominator","dir","discrimination","discrimination","dns_server_address","drawn","entry","epoch","epoch","epoch","epoch_rate","epoch_stability_depth","epoch_stability_depth","epoch_start","epoch_start","established_at","evm_transaction","fail_fast","fees","fees","fees_go_to","file","file_path","finished_at_time","fixed","fixed","format","fragment","fragment","fragment_id","fragment_log","fragment_log_persistent","fragments","fragments_batch","fragments_processing_summary","genesis","gossip_interval","hash","id","id","id","id","index","index_in_transaction","initial","initial_value","input","interest","jrpc","kes_public_key","kes_update_speed","last_block_content_size","last_block_date","last_block_fees","last_block_hash","last_block_height","last_block_received","last_block_sum","last_block_time","last_block_tx","last_fragment_received","last_gossip_received","last_received_block_time","last_rewards","last_update","last_updated_at","layers","leadership_log","level","linear_fee","linear_fees","listen","listen","listen","load_persistent_fragments_logs_from_folder_path","log","log_max_entries","max","max_age_secs","max_bootstrap_attempts","max_connections","max_inbound_connections","max_limit","max_limit","mempool","mempool_tx_count","mempool_usage_ratio","messages","min","mint_token","network_stuck_check","node_id","node_key_file","numerator","old_address","options","options","output","owners","p2p","payload","payload_type","peer_available_cnt","peer_connected_cnt","peer_quarantined_cnt","peer_stats","peer_total_cnt","peers","per_certificate_fees","per_vote_certificate_fees","persistent_log","policy","policy","pool_max_entries","pool_participation_capping","pool_participation_capping","pools","preferred_list","priv_key_file","proposal","proposal_date","proposal_expiration","proposal_id","proposals","proposals","proposer_id","public_address","quarantine_duration","quarantine_whitelist","quarantined","ratio","ratio","ratio","read_persistent_fragment_logs_from_file_path","reader","reason","received_at","received_from","rejected","rest","results","reward_constraints","reward_drawing_limit_max","reward_drawing_limit_max","reward_parameters","reward_parameters","reward_params","rewards","rewards_info","scheduled_at_date","scheduled_at_time","serde_base64_bytes","serde_choices","serde_committee_member_public_keys","serde_external_proposal_id","serde_proposals","settings","sig_key","signing_key","skip_bootstrap","slot_duration","slot_duration","slot_start","slots_per_epoch","slots_per_epoch","slots_per_epoch","stake","stake","stake_distribution","stake_pool_stats","stake_pools","state","stats","stats","status","status","storage","subscriptions","tally","tax","tax_type","time","time_era","tls","to","token_id","tokens","topic","topics_of_interest","total_reward_supply","total_stake","transaction_id","transaction_input","transaction_output","transaction_witness","treasury","treasury","treasury_parameters","treasury_tax","trusted_peers","try_initial_fragment_from_message","tx_max_expiry_epochs","tx_max_expiry_epochs","tx_recv_cnt","tx_rejected_cnt","unassigned","updates","uptime","utxo_info","value","value","value","value","value","value","value","value","value_for_stakers","value_taxed","version","view_max","vote","vote_end","vote_end","vote_plan_id","vote_start","vote_start","votes","votes","votes_cast","votes_cast","voting_token","voting_token","vrf_key","vrf_public_key","wake_at_time","whitelist","actual","expected","addr","block","date","reason","block","chain_length","parent","reason","encrypted_tally","result","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","result","state","coefficient","speed","slots","duration","choice","encrypted_vote","proof","AccountIdentifier","CannotParseAddress","DEFAULT_DISCRIMINATION","DEFAULT_PREFIX","NotAccountOrMulti","ParseAccountIdentifierError","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_address","from_str","from_str","hash","init","init","into","into","into_address","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountState","DelegationType","LastRewards","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","counters","counters","delegation","delegation","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","epoch","epoch","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","init","init","init","into","into","into","last_rewards","last_rewards","partial_cmp","partial_cmp","pools","pools","reward","reward","serialize","serialize","serialize","to_owned","to_owned","to_owned","tokens","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value","vzip","vzip","vzip","Address","as_ref","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","from_str","from_str","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ActiveSlotCoefficient","Block0Configuration","Block0ConfigurationError","BlockContentMaxSize","BlockchainConfiguration","BlockchainConfiguration","ConsensusLeaderId","ConsensusVersionDef","Destination","DiscriminationDef","EpochStabilityDepth","FeesGoTo","FirstBlock0MessageNotInit","Initial","InitialFragments","InitialToken","InitialUTxO","KesUpdateSpeed","LegacyUTxO","NumberOfSlotsPerEpoch","PoolParticipationCapping","ProposalExpiration","RewardConstraints","SlotDuration","TryFromActiveSlotCoefficientError","TryFromFeesGoToError","TryFromKesUpdateSpeedError","TryFromNumberOfSlotsPerEpochError","TryFromSlotDurationError","active_slot_coefficient","block0_configuration_documented_example","block_content_max_size","blockchain_configuration","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default_values","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","epoch_stability_depth","eq","fees_go_to","fmt","fmt","fmt","from","from","from","from","from_block","init","init","initial","initial_config","initial_fragment","into","into","kes_update_speed","leader_id","number_of_slots_per_epoch","proposal_expiration","reward_constraint","serialize","slots_duration","source","to_block","to_owned","to_string","try_from","try_from","try_initial_fragment_from_message","try_into","try_into","type_id","type_id","vzip","vzip","ActiveSlotCoefficient","Incompatible","Invalid","MAXIMUM","MINIMUM","TryFromActiveSlotCoefficientError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","init","init","into","into","new","partial_cmp","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","coefficient","BlockContentMaxSize","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DEFAULT_ACTIVE_SLOT_COEFFICIENT","DEFAULT_BLOCK_CONTENT_MAX_SIZE","DEFAULT_EPOCH_STABILITY_DEPTH","DEFAULT_KES_SPEED_UPDATE","DEFAULT_NUMBER_OF_SLOTS_PER_EPOCH","DEFAULT_PROPOSAL_EXPIRATION","DEFAULT_SLOT_DURATION","MAXIMUM_ACTIVE_SLOT_COEFFICIENT","MAXIMUM_KES_SPEED_UPDATE_IN_SECONDS","MAXIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MAXIMUM_SLOT_DURATION","MINIMUM_ACTIVE_SLOT_COEFFICIENT","MINIMUM_KES_SPEED_UPDATE_IN_SECONDS","MINIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MINIMUM_SLOT_DURATION","EpochStabilityDepth","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","FeesGoTo","FromStrFeesGoToError","Rewards","Treasury","TryFromFeesGoToError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","hash","init","init","init","into","into","into","partial_cmp","serialize","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ActiveSlotCoefficient","Bft","BlockchainConfiguration","ConsensusVersionDef","DiscriminationDef","FeesGoTo","FromConfigParamsError","GenesisPraos","InitConfigParamDuplicate","InitConfigParamMissing","KesUpdateSpeed","NumberOfSlotsPerEpoch","Production","SlotDuration","StaticStr","Test","block0_consensus","block0_date","block_content_max_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","committees","consensus_genesis_praos_active_slot_coeff","consensus_leader_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","epoch_stability_depth","eq","equivalent","fees_go_to","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_config_params","init","init","init","init","into","into","into","into","into_config_params","kes_update_speed","linear_fees","new","proposal_expiration","reward_constraints","reward_parameters","serialize","serialize","serialize","slot_duration","slots_per_epoch","source","to_owned","to_string","total_reward_supply","treasury","treasury_parameters","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_max_expiry_epochs","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","name","name","Block0MessageUnexpected","Cert","Destination","Error","Fund","InitUtxoHasInput","Initial","InitialToken","InitialUTxO","LegacyFund","LegacyUTxO","Token","TokenIdentifierMintingPolicyHashMismatch","TokenInvalidAddressType","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","empty_auth_tx","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend_inits_with_legacy_utxo","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","pack_certificate_in_empty_tx_fragment","pack_legacy_utxo_in_message","pack_tokens_in_mint_token_fragments","pack_utxo_in_message","policy","serialize","serialize","serialize","serialize","serialize","to","to_output","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","token_id","try_extend_inits_with_tx","try_from","try_from","try_from","try_from","try_from","try_from","try_initial_fragment_from_message","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","Incompatible","Invalid","KesUpdateSpeed","MAXIMUM","MINIMUM","TryFromKesUpdateSpeedError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","hash","init","init","into","into","new","partial_cmp","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","speed","ConsensusLeaderId","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","from","from","hash","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","Incompatible","Invalid","MAXIMUM","MINIMUM","NumberOfSlotsPerEpoch","TryFromNumberOfSlotsPerEpochError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","hash","init","init","into","into","new","partial_cmp","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","slots","ProposalExpiration","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","PoolParticipationCapping","RewardConstraints","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","is_none","max","min","pool_participation_capping","reward_drawing_limit_max","serialize","serialize","set_pool_participation_capping","set_reward_drawing_limit_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Incompatible","Invalid","MAXIMUM","MINIMUM","SlotDuration","TryFromSlotDurationError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","hash","init","init","into","into","new","partial_cmp","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","duration","Block0DateDef","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","BlockDate","BlockDateStructural","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","epoch","epoch","eq","equivalent","fmt","fmt","from","from","from","from_str","from_str","hash","init","init","into","into","new","next","next_epoch","partial_cmp","serialize","serialize","shift_epoch","shift_slot","slot","slot_id","time_era","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Bech32","CERTIFICATE_HRP","Certificate","CertificateFromBech32Error","CertificateFromStrError","CertificateToBech32Error","InvalidBase32","InvalidBech32","InvalidCertificate","InvalidCertificate","InvalidHrp","Io","SIGNED_CERTIFICATE_HRP","SignedCertificate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bech32","from_bech32","from_str","from_str","init","init","init","init","init","into","into","into","into","into","serialize","serialize","serialize","serialize","source","source","source","strip_auth","to_bech32m","to_bech32m","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","actual","expected","COMMITTEE_ID_SIZE","CommitteeId","CommitteeIdDef","arbitrary","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_slice","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_hex","from_hex","from_str","from_str","get_bytes","hash","hash","init","init","into","into","partial_cmp","public_key","serialize","serialize","serialize","serialized_size","to_hex","to_hex","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","Bft","Bootstrap","Connection","Cors","CorsOrigin","GenesisPraos","JRpc","LayersConfig","Log","LogEntry","LogMaxEntries","LogOutput","Mempool","NodeConfig","NodeId","NodeSecret","P2p","PersistentLog","Policy","PoolMaxEntries","PreferredListConfig","Rest","Tls","TopicsOfInterest","TrustedPeer","log","mempool","node","secret","File","Log","LogEntry","LogOutput","Stderr","Stdout","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","file_path","fmt","fmt","fmt","format","from","from","from","init","init","init","into","into","into","level","output","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LogMaxEntries","Mempool","PersistentLog","PoolMaxEntries","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dir","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","init","init","init","init","into","into","into","into","log_max_entries","partial_cmp","partial_cmp","persistent_log","pool_max_entries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Bootstrap","Connection","Cors","CorsOrigin","DEFAULT_PREFERRED_VIEW_MAX","HeaderName","HttpMethod","JRpc","LayersConfig","NodeConfig","NodeId","P2p","Policy","PreferredListConfig","PreferredViewMax","Rest","Tls","TopicsOfInterest","TrustedPeer","address","allow_private_addresses","allowed_headers","allowed_methods","allowed_origins","as_ref","blocks","bootstrap","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","connection","cors","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_listen_addr","gossip_interval","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","jrpc","layers","listen","listen","listen","log","max_age_secs","max_bootstrap_attempts","max_connections","max_inbound_connections","mempool","messages","network_stuck_check","node_key_file","p2p","partial_cmp","peers","policy","preferred_list","priv_key_file","public_address","quarantine_duration","quarantine_whitelist","rest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","skip_bootstrap","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics_of_interest","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_max","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","Bft","GenesisPraos","NodeSecret","bft","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","genesis","init","init","init","into","into","into","node_id","serialize","serialize","serialize","sig_key","signing_key","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vrf_key","vzip","vzip","vzip","ActiveSlotCoefficient","AddBftLeader","AddCommitteeId","Block0Date","BlockContentMaxSize","ConfigParam","ConfigParams","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","Discrimination","EpochStabilityDepth","FeesGoTo","FeesInTreasury","FromConfigParamError","KesUpdateSpeed","KesUpdateSpeed","LinearFee","NumberOfSlotsPerEpoch","PerCertificateFees","PerVoteCertificateFees","PoolRewardParticipationCapping","ProposalExpiration","RemoveBftLeader","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","SlotDuration","SlotDuration","SlotsPerEpoch","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config_params_documented_example","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","into","into","into","new","serialize","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","EvmTransaction","EvmTransactionFromStrError","InvalidEvmTransaction","InvalidHex","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","init","init","into","into","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FragmentDef","borrow","borrow_mut","deref","deref_mut","deserialize","deserialize","deserialize_as","drop","fmt","from","from","init","into","serialize","serialize","serialize_as","serialize_fragment","try_from","try_into","type_id","vzip","FragmentLog","FragmentOrigin","FragmentStatus","InABlock","JRpc","Network","Pending","Rejected","Rest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fragment_id","fragment_id","from","from","from","hash","hash","hash","init","init","init","into","into","into","is_in_a_block","is_in_a_block","is_pending","is_pending","is_rejected","is_rejected","last_updated_at","last_updated_at","modify","new","partial_cmp","partial_cmp","partial_cmp","received_at","received_at","received_from","received_from","serialize","serialize","serialize","status","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","addr","block","date","reason","DeserializeError","FileFragments","FileFragmentsIterator","PersistentFragmentLog","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","counter","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_slice","drop","drop","drop","drop","entry","file","file_path","file_path","fmt","fmt","fmt","fragment","from","from","from","from","from_path","init","init","init","init","into","into","into","into","into_iter","into_iter","list_persistent_fragment_log_files_from_folder_path","load_persistent_fragments_logs_from_folder_path","next","par_bridge","read_persistent_fragment_logs_from_file_path","reader","reader","serialize","serialize","time","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FragmentsBatch","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fail_fast","fmt","fragments","from","init","into","serialize","try_from","try_into","type_id","vzip","FragmentAlreadyInLog","FragmentInvalid","FragmentRejectionReason","FragmentsProcessingSummary","PoolOverflow","PreviousFragmentInvalid","RejectedFragmentInfo","accepted","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fragment_ids","from","from","from","id","init","init","init","into","into","into","is_error","is_error","reason","rejected","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Block","LeadershipLog","LeadershipLogId","LeadershipLogStatus","Pending","Rejected","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","created_at_time","created_at_time","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","finished_at_time","finished_at_time","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","leadership_log_id","mark_finished","mark_wake","new","partial_cmp","partial_cmp","scheduled_at_date","scheduled_at_date","scheduled_at_time","scheduled_at_time","serialize","serialize","set_status","status","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wake_at_time","wake_at_time","block","chain_length","parent","reason","LinearFeeDef","PerCertificateFeeDef","PerVoteCertificateFeeDef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","clone","clone","clone","clone_into","clone_into","clone_into","coefficient","constant","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","per_certificate_fee_is_zero","per_certificate_fees","per_vote_certificate_fee_is_zero","per_vote_certificate_fees","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MintToken","MintingPolicy","TokenIdentifier","TokenName","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","init","init","init","init","into","into","into","into","name","partial_cmp","policy","serialize","serialize","serialize","to","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","OldAddress","as_ref","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","from_str","from_str","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","PeerRecord","PeerStats","Subscription","addr","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","established_at","fmt","fmt","fmt","from","from","from","id","init","init","init","interest","into","into","into","last_block_received","last_fragment_received","last_gossip_received","last_update","quarantined","serialize","serialize","serialize","subscriptions","to_owned","to_owned","to_owned","topic","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","InvalidInt","MissingDenominator","MissingNumerator","ParseRatioError","Ratio","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","init","init","into","into","new","new_checked","serialize","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Halving","Linear","RewardParams","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","EpochRewardsInfo","accounts","accounts","borrow","borrow_mut","deref","deref_mut","deserialize","drawn","drop","epoch","epoch","eq","equivalent","fees","fmt","from","from","init","into","serialize","stake_pools","stake_pools","treasury","try_from","try_into","type_id","vzip","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","ByStakeAbsolute","CompoundingTypeDef","DiscriminationDef","Halvening","LimitDef","Linear","None","ParametersDef","Production","RatioDef","SettingsDto","TaxTypeDef","TaxTypeSerde","Test","block0_hash","block0_time","block_content_max_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compounding_ratio","compounding_type","consensus_version","curr_slot_start_time","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","epoch_rate","epoch_stability_depth","epoch_start","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fees","fixed","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","initial_value","into","into","into","into","into","into","into","into","max_limit","numerator","pool_participation_capping","ratio","reward_drawing_limit_max","reward_params","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_owned","treasury_tax","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_max_expiry_epochs","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Stake","StakeDef","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from","from_str","from_str","init","init","into","into","partial_cmp","serialize","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StakeDistribution","StakeDistributionDto","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dangling","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","epoch","eq","eq","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","pools","serialize","serialize","stake","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unassigned","vzip","vzip","Rewards","StakePoolStats","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","epoch","eq","eq","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","kes_public_key","owners","rewards","serialize","serialize","tax","to_owned","to_owned","total_stake","try_from","try_from","try_into","try_into","type_id","type_id","value_for_stakers","value_taxed","vrf_public_key","vzip","vzip","Bootstrapping","NodeState","NodeStats","NodeStatsDto","PreparingBlock0","PreparingStorage","Running","StartingRestServer","StartingWorkers","block_content_size_avg","block_recv_cnt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","last_block_content_size","last_block_date","last_block_fees","last_block_hash","last_block_height","last_block_sum","last_block_time","last_block_tx","last_received_block_time","mempool_tx_count","mempool_usage_ratio","peer_available_cnt","peer_connected_cnt","peer_quarantined_cnt","peer_total_cnt","serialize","serialize","serialize","state","stats","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_recv_cnt","tx_rejected_cnt","type_id","type_id","type_id","uptime","version","votes_cast","vzip","vzip","vzip","TaxType","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fixed","fmt","from","from","init","into","max_limit","ratio","serialize","to_owned","try_from","try_into","type_id","vzip","EpochDef","SlotDef","TimeEraDef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","epoch_start","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","partial_cmp","partial_cmp","serialize","serialize","serialize","slot_start","slots_per_epoch","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Account","INPUT_PTR_SIZE","TransactionInput","TransactionInputType","Utxo","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","init","init","input","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","TransactionOutput","address","address","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","init","into","new","serialize","to_owned","try_from","try_into","type_id","value","value","vzip","Bech32","HRP","Invalid","InvalidHrp","TransactionWitness","TransactionWitnessFromStrError","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bech32_str","from_str","from_str","init","init","into","into","serialize","source","to_bech32_str","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","expected","got","UpdateProposalDef","UpdateProposalStateDef","borrow","borrow","borrow_mut","borrow_mut","config_params","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","proposal","proposal_date","proposer_id","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","votes","vzip","vzip","UTxOInfo","UTxOOutputInfo","address","address","address","associated_fund","associated_fund","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","index_in_transaction","index_in_transaction","init","init","into","into","into_utxo_info","new","serialize","serialize","to_owned","to_owned","transaction_id","transaction_id","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","Value","ValueDef","as_ref","as_u64","borrow","borrow","borrow_mut","borrow_mut","checked_add","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from","from_str","from_str","hash","init","init","into","into","partial_cmp","saturating_add","serialize","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountVotes","Decrypted","Encrypted","EncryptedTally","NoOp","NoOp","OffChain","Parameters","ParametersGovernanceActionDef","PayloadTypeDef","Private","Private","Private","PrivateTallyState","Public","Public","Public","RewardAdd","SerdeMemberPublicKey","Tally","TallyResult","TransferToRewards","Treasury","TreasuryGovernanceActionDef","VoteActionDef","VotePayload","VotePlan","VotePlanId","VotePlanStatus","VotePrivacy","VotePrivacyFromStrError","VoteProposalDef","VoteProposalStatus","action","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","committee_end","committee_end","committee_member_keys","committee_member_public_keys","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","hash","id","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","merge","options","options","options","partial_cmp","payload","payload_type","proposal_id","proposals","proposals","results","results","serde_base64_bytes","serde_choices","serde_committee_member_public_keys","serde_external_proposal_id","serde_proposals","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tally","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_end","vote_plan_id","vote_start","vote_start","votes","votes_cast","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","value","encrypted_tally","result","result","state","value","action","action","choice","encrypted_vote","proof","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","ProposalInternal","ProposalsList","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","from","from","init","init","into","into","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","FailedToResolve","InvalidMultiaddr","NoIp4","NoIp6","NotFound","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","resolve_dns","source","to_string","to_tcp_socket_addr","try_from","try_into","type_id","vzip","Duration","LocalDateTime","MAX","SecondsSinceUnixEpoch","SystemTime","as_micro","as_millis","as_nanos","as_ref","as_ref","as_ref","as_secs","as_secs_f64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_sub","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","duration_since","duration_since_epoch","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_millis","from_secs","from_secs_since_epoch","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","init","init","init","init","into","into","into","into","new","now","now","now","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_secs","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"jormungandr_lib"],[4,"jormungandr_lib::crypto"],[8,"jormungandr_lib::crypto::account"],[96,"jormungandr_lib::crypto::account::SigningKeyParseError"],[97,"jormungandr_lib::crypto::hash"],[138,"jormungandr_lib::crypto::key"],[256,"jormungandr_lib::crypto::serde"],[323,"jormungandr_lib::interfaces"],[871,"jormungandr_lib::interfaces::CertificateFromBech32Error"],[873,"jormungandr_lib::interfaces::FragmentOrigin"],[874,"jormungandr_lib::interfaces::FragmentStatus"],[877,"jormungandr_lib::interfaces::LeadershipLogStatus"],[881,"jormungandr_lib::interfaces::PrivateTallyState"],[883,"jormungandr_lib::interfaces::RewardParams"],[891,"jormungandr_lib::interfaces::Tally"],[893,"jormungandr_lib::interfaces::TryFromActiveSlotCoefficientError"],[894,"jormungandr_lib::interfaces::TryFromKesUpdateSpeedError"],[895,"jormungandr_lib::interfaces::TryFromNumberOfSlotsPerEpochError"],[896,"jormungandr_lib::interfaces::TryFromSlotDurationError"],[897,"jormungandr_lib::interfaces::VotePayload"],[900,"jormungandr_lib::interfaces::account_identifier"],[953,"jormungandr_lib::interfaces::account_state"],[1042,"jormungandr_lib::interfaces::address"],[1072,"jormungandr_lib::interfaces::block0_configuration"],[1157,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient"],[1205,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient::TryFromActiveSlotCoefficientError"],[1206,"jormungandr_lib::interfaces::block0_configuration::block_content_max_size"],[1234,"jormungandr_lib::interfaces::block0_configuration::default_values"],[1249,"jormungandr_lib::interfaces::block0_configuration::epoch_stability_depth"],[1277,"jormungandr_lib::interfaces::block0_configuration::fees_go_to"],[1340,"jormungandr_lib::interfaces::block0_configuration::initial_config"],[1449,"jormungandr_lib::interfaces::block0_configuration::initial_config::FromConfigParamsError"],[1451,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[1598,"jormungandr_lib::interfaces::block0_configuration::kes_update_speed"],[1647,"jormungandr_lib::interfaces::block0_configuration::kes_update_speed::TryFromKesUpdateSpeedError"],[1648,"jormungandr_lib::interfaces::block0_configuration::leader_id"],[1673,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch"],[1723,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch::TryFromNumberOfSlotsPerEpochError"],[1724,"jormungandr_lib::interfaces::block0_configuration::proposal_expiration"],[1752,"jormungandr_lib::interfaces::block0_configuration::reward_constraint"],[1802,"jormungandr_lib::interfaces::block0_configuration::slots_duration"],[1852,"jormungandr_lib::interfaces::block0_configuration::slots_duration::TryFromSlotDurationError"],[1853,"jormungandr_lib::interfaces::block0_date"],[1874,"jormungandr_lib::interfaces::blockdate"],[1929,"jormungandr_lib::interfaces::certificate"],[2051,"jormungandr_lib::interfaces::certificate::CertificateFromBech32Error"],[2053,"jormungandr_lib::interfaces::committee"],[2126,"jormungandr_lib::interfaces::config"],[2155,"jormungandr_lib::interfaces::config::log"],[2219,"jormungandr_lib::interfaces::config::mempool"],[2314,"jormungandr_lib::interfaces::config::node"],[2710,"jormungandr_lib::interfaces::config::secret"],[2774,"jormungandr_lib::interfaces::config_params"],[2872,"jormungandr_lib::interfaces::evm_transaction"],[2919,"jormungandr_lib::interfaces::fragment"],[2941,"jormungandr_lib::interfaces::fragment_log"],[3037,"jormungandr_lib::interfaces::fragment_log::FragmentOrigin"],[3038,"jormungandr_lib::interfaces::fragment_log::FragmentStatus"],[3041,"jormungandr_lib::interfaces::fragment_log_persistent"],[3120,"jormungandr_lib::interfaces::fragments_batch"],[3138,"jormungandr_lib::interfaces::fragments_processing_summary"],[3212,"jormungandr_lib::interfaces::leadership_log"],[3297,"jormungandr_lib::interfaces::leadership_log::LeadershipLogStatus"],[3301,"jormungandr_lib::interfaces::linear_fee"],[3376,"jormungandr_lib::interfaces::mint_token"],[3470,"jormungandr_lib::interfaces::old_address"],[3497,"jormungandr_lib::interfaces::peer_stats"],[3572,"jormungandr_lib::interfaces::ratio"],[3625,"jormungandr_lib::interfaces::reward_parameters"],[3649,"jormungandr_lib::interfaces::reward_parameters::RewardParams"],[3657,"jormungandr_lib::interfaces::rewards_info"],[3685,"jormungandr_lib::interfaces::serde_base64_bytes"],[3687,"jormungandr_lib::interfaces::serde_choices"],[3689,"jormungandr_lib::interfaces::serde_committee_member_public_keys"],[3691,"jormungandr_lib::interfaces::serde_external_proposal_id"],[3693,"jormungandr_lib::interfaces::serde_proposals"],[3695,"jormungandr_lib::interfaces::settings"],[3876,"jormungandr_lib::interfaces::stake"],[3921,"jormungandr_lib::interfaces::stake_distribution"],[3968,"jormungandr_lib::interfaces::stake_pool_stats"],[4019,"jormungandr_lib::interfaces::stats"],[4110,"jormungandr_lib::interfaces::tax_type"],[4135,"jormungandr_lib::interfaces::time_era"],[4203,"jormungandr_lib::interfaces::transaction_input"],[4251,"jormungandr_lib::interfaces::transaction_output"],[4278,"jormungandr_lib::interfaces::transaction_witness"],[4330,"jormungandr_lib::interfaces::transaction_witness::TransactionWitnessFromStrError"],[4332,"jormungandr_lib::interfaces::updates"],[4371,"jormungandr_lib::interfaces::utxo_info"],[4426,"jormungandr_lib::interfaces::value"],[4475,"jormungandr_lib::interfaces::vote"],[4874,"jormungandr_lib::interfaces::vote::ParametersGovernanceActionDef"],[4875,"jormungandr_lib::interfaces::vote::PrivateTallyState"],[4877,"jormungandr_lib::interfaces::vote::Tally"],[4879,"jormungandr_lib::interfaces::vote::TreasuryGovernanceActionDef"],[4880,"jormungandr_lib::interfaces::vote::VoteActionDef"],[4882,"jormungandr_lib::interfaces::vote::VotePayload"],[4885,"jormungandr_lib::interfaces::vote::serde_base64_bytes"],[4887,"jormungandr_lib::interfaces::vote::serde_choices"],[4889,"jormungandr_lib::interfaces::vote::serde_committee_member_public_keys"],[4891,"jormungandr_lib::interfaces::vote::serde_external_proposal_id"],[4893,"jormungandr_lib::interfaces::vote::serde_proposals"],[4924,"jormungandr_lib::multiaddr"],[4948,"jormungandr_lib::time"],[5088,"chain_impl_mockchain::key"],[5089,"chain_impl_mockchain::key"],[5090,"core::result"],[5091,"serde::de"],[5092,"core::fmt"],[5093,"core::fmt"],[5094,"chain_impl_mockchain::account"],[5095,"chain_crypto::key"],[5096,"chain_crypto::algorithms::ed25519"],[5097,"bech32"],[5098,"chain_crypto::bech32"],[5099,"chain_crypto::key"],[5100,"rand_core"],[5101,"core::option"],[5102,"serde::ser"],[5103,"core::error"],[5104,"chain_addr"],[5105,"chain_addr"],[5106,"core::any"],[5107,"chain_crypto::hash"],[5108,"chain_impl_mockchain::key"],[5109,"chain_crypto::hash"],[5110,"chain_crypto::sign"],[5111,"chain_crypto::sign"],[5112,"core::iter::traits::iterator"],[5113,"std::io::error"],[5114,"chain_impl_mockchain::fragment"],[5115,"chain_impl_mockchain::transaction::input"],[5116,"chain_impl_mockchain::transaction::input"],[5117,"chain_impl_mockchain::accounting::account::account_state"],[5118,"chain_impl_mockchain::accounting::account::last_rewards"],[5119,"chain_impl_mockchain::accounting::account::account_state"],[5120,"alloc::collections::btree::map"],[5121,"chain_impl_mockchain::block"],[5122,"chain_impl_mockchain::milli"],[5123,"chain_impl_mockchain::config"],[5124,"chain_impl_mockchain::fragment::content"],[5125,"chain_impl_mockchain::chaintypes"],[5126,"chain_impl_mockchain::fragment::config"],[5127,"chain_impl_mockchain::fee"],[5128,"chain_impl_mockchain::transaction::transaction"],[5129,"chain_impl_mockchain::transaction::payload"],[5130,"chain_impl_mockchain::legacy"],[5131,"chain_impl_mockchain::transaction::transfer"],[5132,"chain_impl_mockchain::transaction::payload"],[5133,"chain_impl_mockchain::config"],[5134,"chain_ser::packer"],[5135,"chain_ser::deser"],[5136,"chain_impl_mockchain::certificate"],[5137,"chain_impl_mockchain::certificate"],[5138,"quickcheck::arbitrary"],[5139,"bech32"],[5140,"core::iter::traits::collect"],[5141,"hex::error"],[5142,"bech32"],[5143,"chain_impl_mockchain::evm"],[5144,"std::io"],[5145,"rayon::iter::par_bridge"],[5146,"chain_impl_mockchain::fragment"],[5147,"chain_impl_mockchain::tokens::identifier"],[5148,"chain_impl_mockchain::tokens::minting_policy"],[5149,"chain_impl_mockchain::certificate::mint_token"],[5150,"cardano_legacy_address::address"],[5151,"chain_impl_mockchain::rewards"],[5152,"core::num::error"],[5153,"core::num::nonzero"],[5154,"chain_impl_mockchain::vote::choice"],[5155,"chain_vote::committee"],[5156,"chain_impl_mockchain::certificate::vote_plan"],[5157,"chain_impl_mockchain::certificate::vote_plan"],[5158,"chain_time::era"],[5159,"chain_impl_mockchain::transaction::input"],[5160,"chain_impl_mockchain::update"],[5161,"chain_impl_mockchain::certificate::update_proposal"],[5162,"chain_impl_mockchain::utxo"],[5163,"chain_impl_mockchain::value"],[5164,"chain_impl_mockchain::value"],[5165,"chain_impl_mockchain::certificate::vote_plan"],[5166,"chain_impl_mockchain::ledger::governance::treasury"],[5167,"chain_impl_mockchain::certificate::vote_plan"],[5168,"chain_impl_mockchain::vote::tally"],[5169,"chain_vote::tally"],[5170,"chain_impl_mockchain::vote::tally"],[5171,"std::time"],[5172,"time::offset_date_time"],[5173,"core::time"],[5174,"std::time"]],"d":["This module provides wrapper around the different …","","","Time and related data structures","Account Signing Key and Identifier","Hash interface for all that is a hash","cryptographic keys and associated interfaces","","Account identifier, used to identify an account. …","","","account Singing key. Used to sign transaction. Any owner …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","generate a new <em>Account</em> <code>SigningKey</code>","generate a new <em>Account</em> <code>SigningKey</code>","","get the identifier associated to this key.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","get the address associated to this account identifier","","","","","retrieve the underlying account identifer as used in the …","","","","","","","","","","","","","","","","","","wrapper around the Blake2b256 hash","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","a cryptographic identifier. Can be used to identify a …","A key pair of the given cryptographic algorithm","signature for the given cryptographic algorithm and …","A cryptographic signing key (or secret key). Can be used to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","try to decode the given bech32 string into a valid signing …","try to decode the given bech32 string into a valid …","try to decode the given bech32 string into a valid …","try to decode the given hexadecimal string into a valid …","","","","generate a new signing key","generate a new key pair with the given Random Number …","","","get the identifier associated to this key.","retrieve the unique Identifier associated to this KeyPair","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","retrieve the SigningKey","create an account address.","encode the <code>SigningKey</code> into a bech32 string.","encode the <code>Identifier</code> into a bech32 string.","encode the <code>Signature</code> into a bech32 string.","create a group address.","encode the <code>Identifier</code> into an hexadecimal string","","","","","","construct a single address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","An account identifier for the different kind of accounts …","represent the current state of an account in the ledger","","","","","","Address with the appropriate implementation for Serde API …","","hold the node’s bft secret setting","","","","","","","the block content max size","","","Initial blockchain configuration for block0","","Bootstrap contains meta data for initial startup","","","","","","","","","remove serde encoding for the CommitteeId","","","Miscellaneous network configuration","","","","","","","default active slot coefficient in milli <code>0.100</code>","the default value for block content max size","the default value for epoch stability depth","default KES Update speed (in seconds): 12hours","default number of slots per epoch","default proposal expiration in epochs","default slot duration in seconds","","","","","","","epoch stability depth","","","the settings for the fees to be redistributed to","","","","","","","","","the log associated to a given fragment","","identify the source of a fragment","This error is reserved for fragments that were rejected by …","status of the fragment within the blockchain or the pool","Submission of a batch of fragments to the node.","The summary of an attempt to add transactions to mempool …","","","the genesis praos setting","","","The fragment has been added in a block","","","","","","","","","","","","","","","","","","","","","This marks the fragment is coming from the JRpc interface …","","","","Jörmungandr provides multiple additional layers to the …","provides information regarding events in the leadership …","log identifier in the leadership log. Can be used to update","the status of a leadership log","","","","","","","","","","maximum active slot coefficient in milli <code>1.000</code>","maximum KES Update speed (in seconds): about one year","maximum number of slots per epoch","maximum slot duration in seconds (here is it max of u8: …","minimum active slot coefficient in milli <code>0.001</code>","minimum KES Update speed (in seconds): 1minute","minimum number of slots per epoch","minimum slot duration in seconds","","","","trace back the origin of a fragment to a given network …","","Identifier of a peer node.","","","","","","","","OldAddress with the appropriate implementation for Serde …","","","","","","","the fragment is yet to be processed","","","","","","Represents a persistent fragments log entry.","","policy module","","","","","","","","","","","","","","","","","Ratio in the blockchain.","","the fragment has been rejected and won’t be added in a …","","Information about a fragment rejected by the mempool. This …","","","","This marks the fragment is coming from the REST interface …","","","","","","","","the fees will be added to the epoch’s reward pot to then …","","","","","","","","","Stake in the blockchain, always printed as absolute …","","","","","","","","","","","","","","","","","","","","","","","","","a transaction witness","the pools don’t receive any rewards to add transactions …","","","Configuration item for a trusted peer.","","","","","","the Unspent Transaction Output information.","The UTxO data about output without its location in …","","","","Value in the blockchain, always printed as absolute …","","","","","","Serializable wrapper for the payload type enum.","","","","","","","","","","","The peer’s routable host address and TCP port as a …","","","","","Whether to allow non-public IP addresses in gossip","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","the type of consensus to utilise from the starting point …","","the number of seconds since UNIX Epoch","","","set the block content maximal size","","","","the initial configuration of the blockchain","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","the committee members for the voting management","","","","","","","","the active slot coefficient to determine the minimal stake …","the list of consensus leaders","","","Enables CORS if provided","","","","","","","","the address discrimination (test or production)","","","","","","","","","set the maximal depth from which a fork will no longer be …","","","","","","Fragments are processed in the sequential order. When this …","","","Fees go to settings, the default being <code>rewards</code>.","","","","","","","","full hex-encoded fragment body","","","","Fragments themselves.","","","","interval to start gossiping with new nodes, changing the …","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","the initial fragments of the blockchain:","","","","","","number of seconds between 2 required KES Key updates.","","","","","","","","","","","","","","","","","","","","the linear fee settings.","","","Listen address.","","","maximum number of entries in the fragment logs","","If none provided, CORS responses won’t be cached","","","","","","","","","","","","If no gossip has been received in the last interval, try …","","File with the secret key used to advertise and …","","","","","","","","","","","","","","","","","","path to the persistent log of all incoming fragments","","","maximum number of entries in the mempool","","","","","Path to server private key file, must be PKCS8 with single …","","","the proposal expiration settings. The default value is <code>100</code>.","","","","","The public address to which other peers may connect to","","","","","","","","","","","","","","","","","","","The reward settings for the reward policy. No reward …","","","","","","","","","","","","","","","the number of seconds between the creation of 2 slots. The …","","","number of slots in one given epoch. The default value is …","","","","","","","","","","","","","","","","","","the time this fragment was registered and accepted by the …","","Enables TLS and disables plain HTTP if provided","","","","","","Set the value of the reward pot. if omitted then the …","","","","","","Set the default value in the treasury. if omitted then the …","","set the treasure parameters, i.e. the first value the …","","the rendezvous points for the peer to connect to in order …","","set the maximum number of epochs a transaction can reside …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","contains addrs of nodes which we can accept fragments from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An account identifier for the different kind of accounts …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","represent the current state of an account in the ledger","","","","","","","","","","","","","","","","","The transaction counters for spending lanes. A counter in …","","retrieve the identifier to the stake pool this account is …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the last rewards transfered to account","","","","","","","","","","","","","","the current tokens associated to this account","","","","","","","","","","","the current fund associated to this account","","","","","Address with the appropriate implementation for Serde API …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the initial configuration of the blockchain","","","","","","","this module defines all the different static values used …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","the initial fragments of the blockchain:","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","maximal value for the active slot coefficient","minimal value for the active slot coefficient","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","the block content max size","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","default active slot coefficient in milli <code>0.100</code>","the default value for block content max size","the default value for epoch stability depth","default KES Update speed (in seconds): 12hours","default number of slots per epoch","default proposal expiration in epochs","default slot duration in seconds","maximum active slot coefficient in milli <code>1.000</code>","maximum KES Update speed (in seconds): about one year","maximum number of slots per epoch","maximum slot duration in seconds (here is it max of u8: …","minimum active slot coefficient in milli <code>0.001</code>","minimum KES Update speed (in seconds): 1minute","minimum number of slots per epoch","minimum slot duration in seconds","epoch stability depth","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","the settings for the fees to be redistributed to","","the fees will be added to the epoch’s reward pot to then …","the pools don’t receive any rewards to add transactions …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Initial blockchain configuration for block0","","","","","","","","","","","","","","the type of consensus to utilise from the starting point …","the number of seconds since UNIX Epoch","set the block content maximal size","","","","","","","","","","","the committee members for the voting management","the active slot coefficient to determine the minimal stake …","the list of consensus leaders","","","","","","","","","","","","the address discrimination (test or production)","","","","","set the maximal depth from which a fork will no longer be …","","","Fees go to settings, the default being <code>rewards</code>.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","number of seconds between 2 required KES Key updates.","the linear fee settings.","","the proposal expiration settings. The default value is <code>100</code>.","","The reward settings for the reward policy. No reward …","","","","the number of seconds between the creation of 2 slots. The …","number of slots in one given epoch. The default value is …","","","","Set the value of the reward pot. if omitted then the …","Set the default value in the treasury. if omitted then the …","set the treasure parameters, i.e. the first value the …","","","","","","","","","","set the maximum number of epochs a transaction can reside …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maximum value for the KES Update Speed","minimal value for the KES Update Speed","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new KesUpdateSpeed value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","maximal value for the number of slots per epoch","minimal value for the number of slots per epoch","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new <code>NumberOfSlotsPerEpoch</code> value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","maximum value for the slot duration","minimal value for the slot duration","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new SlotDuration value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","committee identifier","remove serde encoding for the CommitteeId","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","read the identifier from the hexadecimal string","read the identifier from the hexadecimal string","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","returns the identifier encoded in hexadecimal string","returns the identifier encoded in hexadecimal string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","maximum number of entries in the fragment logs","","","path to the persistent log of all incoming fragments","maximum number of entries in the mempool","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap contains meta data for initial startup","Miscellaneous network configuration","","","","","","","Jörmungandr provides multiple additional layers to the …","","Identifier of a peer node.","","policy module","","","","","","Configuration item for a trusted peer.","The peer’s routable host address and TCP port as a …","Whether to allow non-public IP addresses in gossip","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","interval to start gossiping with new nodes, changing the …","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Listen address.","","If none provided, CORS responses won’t be cached","","","","","","If no gossip has been received in the last interval, try …","File with the secret key used to advertise and …","","","","","","Path to server private key file, must be PKCS8 with single …","The public address to which other peers may connect to","","","","","","","","","","","","","","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","","","","","","","","","the rendezvous points for the peer to connect to in order …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","contains addrs of nodes which we can accept fragments from","hold the node’s bft secret setting","the genesis praos setting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","the log associated to a given fragment","identify the source of a fragment","status of the fragment within the blockchain or the pool","The fragment has been added in a block","This marks the fragment is coming from the JRpc interface …","trace back the origin of a fragment to a given network …","the fragment is yet to be processed","the fragment has been rejected and won’t be added in a …","This marks the fragment is coming from the REST interface …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Set the new status","create a new FragmentLog with the given values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a persistent fragments log entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","full hex-encoded fragment body","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","the time this fragment was registered and accepted by the …","","","","","","","","","","","","","","","","","","Submission of a batch of fragments to the node.","","","","","","","Fragments are processed in the sequential order. When this …","","Fragments themselves.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","This error is reserved for fragments that were rejected by …","The summary of an attempt to add transactions to mempool …","","","Information about a fragment rejected by the mempool. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Should this rejection be treated as an error","Whether any of rejected entries should be treated as an …","","","","","","","","","","","","","","","","","","","","","","provides information regarding events in the leadership …","log identifier in the leadership log. Can be used to update","the status of a leadership log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","retrieve a unique identifier to this log","make a leadership event as finished.","make a leadership event as triggered.","","","","","","","","","","set the leadership log status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","OldAddress with the appropriate implementation for Serde …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ratio in the blockchain.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stake in the blockchain, always printed as absolute …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","get the address component of the <code>TransactionOutput</code>","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","create a new Transaction output from the given values","","","","","","get the value component of the <code>TransactionOutput</code>","","","","","","","a transaction witness","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","the Unspent Transaction Output information.","The UTxO data about output without its location in …","the address to identify who can spend the UTxO. This is …","","","the associated funds in this UTxO. This will be used in a …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","the output index, will be needed as an input in a new …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the Transaction identifier (its hash) that will be used to …","","","","","","","","","","","Value in the blockchain, always printed as absolute …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializable wrapper for the payload type enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Checks if the multiaddr is valid for contacting a p2p peer …","","","Extracts the TCP socket address if the multiaddr starts …","","","","","Length of time between 2 events.","local date and time. While the <code>SystemTime</code> will give us a …","maximum authorized Time in seconds since unix epoch","time in seconds since [UNIX Epoch]","time in seconds and nanoseconds since UNIX Epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","get the current time in seconds since UNIX Epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,13,13,0,0,13,1,3,1,3,13,1,3,13,1,3,1,3,1,1,3,13,1,3,13,1,3,1,3,13,1,1,1,1,3,13,13,1,1,1,1,3,3,3,13,13,13,1,3,1,1,1,3,3,1,3,1,3,13,1,3,13,1,1,3,13,1,1,3,1,3,1,1,3,1,13,1,3,13,1,3,13,1,3,13,1,3,13,314,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,42,15,46,42,49,15,46,42,49,15,46,42,49,15,46,42,49,15,46,15,46,42,49,15,46,42,49,15,46,42,15,46,42,49,15,46,15,46,15,46,42,49,15,15,46,46,42,42,49,15,15,46,46,42,15,46,15,46,15,46,42,49,15,46,42,49,42,49,15,46,42,49,15,46,15,42,15,49,42,15,46,42,49,15,42,15,46,15,15,46,42,49,15,46,15,15,46,42,49,15,46,42,49,15,46,42,49,15,46,46,42,49,15,46,0,0,0,56,57,58,58,0,56,57,58,56,57,58,56,57,58,56,57,58,0,0,0,0,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,0,0,0,0,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,261,0,0,0,0,181,180,180,0,135,0,315,204,0,0,180,0,0,180,0,0,85,0,253,0,68,64,0,0,0,0,0,0,0,0,180,0,180,0,0,0,0,0,0,0,0,0,0,285,0,180,0,285,0,0,180,0,0,181,180,153,0,85,199,0,199,0,0,0,0,0,0,0,0,64,0,315,228,187,89,102,100,101,0,85,0,0,89,102,100,101,136,137,136,137,136,224,135,0,186,0,180,181,0,0,0,0,64,0,228,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,224,186,0,0,0,0,0,0,68,0,181,0,0,0,0,0,0,0,187,204,0,180,0,180,0,0,0,0,199,0,180,0,253,253,199,283,277,0,316,0,180,283,277,0,0,187,204,0,180,180,0,186,0,180,180,0,180,180,0,95,253,0,0,0,0,180,181,180,0,0,0,0,0,253,253,153,153,0,0,0,0,0,0,316,0,0,64,0,0,0,0,180,0,0,95,180,180,0,0,0,0,0,0,0,0,0,0,261,0,0,0,0,0,0,0,0,201,0,0,230,220,0,105,106,107,173,221,263,271,272,167,162,162,162,271,176,0,0,98,0,98,236,236,98,236,252,252,84,0,168,165,174,192,161,0,208,206,206,206,207,207,208,0,280,282,282,280,98,317,317,0,0,268,0,165,98,98,236,208,159,74,205,236,248,74,240,156,98,236,167,230,192,230,247,250,317,98,236,317,257,220,0,198,230,236,98,192,195,205,237,254,152,0,190,188,0,0,198,0,0,176,167,318,173,200,221,282,286,271,84,317,260,222,174,249,98,252,252,252,252,252,220,252,252,252,220,220,252,74,221,188,165,0,152,0,98,159,160,167,0,174,157,121,162,166,167,167,237,254,174,252,252,168,121,0,167,178,166,240,0,284,286,152,249,174,282,280,252,252,252,0,252,172,208,208,157,108,165,157,122,317,248,170,161,267,267,98,286,280,282,268,167,169,169,221,0,237,254,0,195,200,188,188,201,174,284,98,122,317,0,98,236,249,0,205,205,0,0,0,0,0,0,178,177,174,98,236,257,98,236,257,0,247,0,0,230,251,0,251,188,205,174,221,286,249,0,190,0,159,108,108,74,222,170,98,249,271,0,0,0,98,230,98,236,166,0,98,236,252,252,248,0,252,0,0,74,105,106,107,260,263,272,250,250,251,172,0,280,282,281,280,282,267,281,252,286,280,282,178,249,205,167,319,319,320,321,321,322,323,323,323,324,325,326,327,328,327,328,327,328,327,328,329,330,331,332,333,334,335,336,336,0,68,0,0,68,0,66,66,68,66,68,66,66,66,68,66,68,66,66,68,66,66,66,66,68,68,66,66,66,68,68,66,66,66,66,66,68,66,68,66,66,68,66,66,68,66,68,66,68,66,68,66,68,0,0,0,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,74,74,74,72,73,74,72,73,74,72,73,74,72,73,74,73,73,72,73,74,72,73,74,72,73,74,72,72,73,73,74,74,74,72,73,72,73,74,72,73,74,74,74,72,73,72,72,73,73,72,73,74,72,73,74,74,74,72,73,74,72,73,74,72,73,74,74,74,72,73,74,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,0,0,85,0,0,0,0,0,0,85,0,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,85,84,85,84,84,0,84,85,84,85,84,84,85,0,84,0,84,85,85,84,85,85,85,84,84,85,84,0,0,84,85,0,0,0,0,0,84,0,85,84,84,85,84,85,0,84,85,84,85,84,85,0,89,89,88,88,0,88,89,88,89,88,88,88,88,88,89,88,89,88,88,89,88,88,88,88,89,89,88,89,88,89,88,89,88,88,88,88,88,89,88,88,89,88,89,88,89,88,89,331,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,95,95,0,95,96,97,95,96,97,95,95,95,95,96,97,95,96,97,95,95,96,97,95,95,95,95,96,96,97,97,95,96,97,95,95,95,95,96,97,95,96,97,95,95,95,95,96,97,95,95,96,97,95,96,97,95,96,97,95,96,97,86,315,0,0,0,86,0,315,86,86,86,86,316,86,0,316,98,98,98,98,86,316,315,98,86,316,315,98,98,98,98,98,98,86,316,315,98,86,316,315,98,316,315,98,98,86,316,315,98,98,98,98,98,86,86,98,86,86,86,86,86,86,316,315,98,98,86,316,315,98,86,316,315,98,98,98,98,98,98,98,98,316,315,98,98,86,98,86,98,98,98,98,98,86,316,315,98,86,316,315,98,98,86,316,315,98,86,316,315,337,338,65,64,0,0,64,65,0,0,0,64,0,64,65,65,105,106,107,64,105,106,65,107,108,64,105,106,65,107,108,64,105,106,107,108,64,105,106,107,108,64,105,106,65,107,108,64,105,106,65,107,108,64,105,106,107,108,64,105,106,65,107,108,0,64,105,106,107,108,105,106,107,108,0,64,105,106,65,65,107,108,64,105,106,65,107,107,108,64,105,106,65,107,108,64,105,106,65,107,108,0,0,0,0,108,64,105,106,107,108,108,105,64,105,106,107,108,65,108,0,64,105,106,65,107,108,0,64,105,106,65,107,108,64,105,106,65,107,108,105,106,107,64,105,106,65,107,108,102,102,0,116,116,0,116,102,116,102,116,116,116,116,116,102,116,102,116,116,102,116,116,116,116,102,102,116,102,116,116,102,116,102,116,116,116,116,116,102,116,116,102,116,102,116,102,116,102,332,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,100,100,119,119,0,0,119,100,119,100,119,119,119,119,119,100,119,100,119,119,100,119,119,119,119,100,100,119,100,119,119,100,119,100,119,119,119,119,119,100,119,119,119,100,119,100,119,100,119,100,333,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,121,122,121,122,121,122,121,122,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,122,121,121,122,122,121,122,122,122,121,122,121,122,121,122,121,122,121,122,101,101,125,125,0,0,125,101,125,101,125,125,125,125,125,101,125,101,125,125,101,125,125,125,125,101,101,125,101,125,125,101,125,101,125,125,125,125,125,101,125,125,125,101,125,101,125,101,125,101,334,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,0,128,128,339,128,339,128,128,128,128,339,128,339,128,339,128,339,128,339,128,128,128,128,128,128,339,128,128,128,128,339,128,339,128,128,128,128,128,339,128,128,128,339,128,128,128,128,339,128,339,128,339,128,339,135,0,0,0,0,0,136,137,136,137,136,135,0,0,132,112,135,136,137,132,112,135,136,137,132,112,132,112,132,112,135,136,137,132,112,135,136,137,132,112,132,112,132,112,135,136,137,112,132,132,112,112,135,135,136,136,137,137,132,132,112,112,135,135,135,136,136,136,137,137,137,132,112,132,132,132,112,135,136,137,132,112,135,136,137,132,132,112,112,135,136,137,112,132,112,132,112,132,112,135,136,137,132,112,135,136,137,132,112,135,136,137,132,112,135,136,137,132,112,135,136,137,319,319,142,0,0,142,142,142,146,142,146,142,142,146,142,146,142,146,146,142,146,142,146,146,142,146,142,142,142,146,142,146,142,146,142,142,146,146,146,142,142,142,142,146,142,142,142,0,146,142,146,142,146,142,146,142,146,146,142,142,146,142,146,142,142,146,142,142,146,142,146,142,146,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,0,0,0,153,153,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,151,151,152,153,152,151,152,153,151,152,153,151,152,153,152,152,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,0,0,0,0,154,155,156,157,154,155,156,157,154,155,156,157,154,155,156,157,154,155,154,155,157,154,155,156,157,154,155,156,157,154,155,156,157,156,154,155,156,157,154,155,154,155,154,155,156,157,154,154,155,155,156,157,154,155,154,155,156,157,154,155,156,157,157,154,155,157,157,154,155,156,157,154,155,156,157,154,155,156,157,154,155,156,157,154,155,156,157,154,155,156,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,173,167,162,162,162,158,168,165,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,161,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,171,165,159,162,158,170,171,172,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,167,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,171,159,160,161,162,158,163,164,171,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,158,163,164,165,166,167,168,169,170,171,172,173,174,165,167,171,173,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,174,165,159,160,167,174,162,166,167,167,174,168,167,166,174,171,172,165,170,161,167,169,169,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,174,174,159,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,170,166,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,172,159,160,161,162,158,163,164,165,166,167,168,169,170,171,172,173,174,167,0,0,0,176,176,177,178,176,177,178,176,177,178,176,177,178,176,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,176,177,178,176,177,178,178,176,177,178,178,177,176,177,178,176,177,178,176,177,178,176,177,178,178,176,177,178,181,180,180,180,180,0,0,180,180,180,180,181,180,0,180,181,180,181,180,180,180,180,180,180,180,180,180,180,180,181,180,180,180,180,179,180,181,179,180,181,179,180,179,180,0,179,180,181,179,180,181,179,180,179,180,181,179,180,179,180,179,180,181,181,179,180,181,181,181,181,181,181,179,180,181,179,180,181,179,179,180,181,179,180,181,179,180,180,181,179,180,181,179,180,181,179,180,181,0,0,183,183,182,183,182,183,182,182,182,183,182,183,182,182,183,182,182,182,182,183,183,182,182,183,183,183,182,182,182,183,182,183,182,183,182,182,183,182,183,182,183,182,183,182,183,0,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,0,185,185,185,185,0,0,0,187,186,186,187,187,186,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,188,188,186,187,188,186,187,188,186,187,188,186,187,188,187,188,187,188,187,188,188,188,188,188,186,187,188,188,188,188,188,186,187,188,188,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,320,321,321,322,0,0,0,0,195,196,192,190,195,196,192,190,192,196,195,196,192,190,195,196,192,190,190,190,190,195,196,192,190,192,192,195,196,192,192,190,190,195,196,192,190,195,195,196,192,190,195,196,192,190,195,196,0,0,196,196,0,195,196,190,190,190,192,195,196,192,190,195,196,192,190,195,196,192,190,195,196,192,190,0,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,199,199,0,0,199,199,0,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,201,199,200,201,200,199,200,201,199,200,201,199,201,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,199,200,201,204,0,0,0,204,204,203,204,205,203,204,205,203,204,205,203,204,205,203,204,205,205,203,204,205,203,204,205,204,205,203,204,205,203,204,203,204,205,205,203,204,205,203,204,205,203,204,203,204,205,203,204,205,205,205,205,205,203,204,205,205,205,205,204,205,205,205,205,203,204,205,203,204,205,203,204,205,203,204,205,203,204,205,205,205,323,323,323,324,0,0,0,206,207,208,206,207,208,208,206,206,206,207,207,206,207,208,206,207,208,208,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,0,208,0,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,206,207,208,0,0,0,0,211,82,212,213,211,82,212,213,211,82,212,213,211,82,212,213,82,212,211,82,212,213,211,82,212,213,211,82,213,211,82,212,213,211,82,212,213,211,82,212,213,211,82,212,213,211,211,82,82,212,212,213,213,82,211,82,212,213,211,82,212,213,213,82,213,211,82,213,213,211,82,212,213,211,82,212,213,211,82,212,213,211,82,212,213,213,211,82,212,213,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,0,0,220,221,220,221,222,220,221,222,220,221,222,220,221,222,220,221,222,220,221,222,220,221,222,220,221,222,220,221,222,220,221,222,220,220,221,222,220,221,222,221,220,221,222,222,220,221,222,220,220,220,221,221,220,221,222,221,220,221,222,222,220,221,222,220,221,222,220,221,222,220,221,222,224,224,224,0,0,124,124,224,124,224,124,224,124,224,124,224,124,224,124,124,224,124,124,124,124,224,224,124,124,224,224,124,124,124,224,124,224,124,124,124,224,124,224,124,224,124,224,124,224,124,224,124,224,228,228,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,327,328,327,328,327,328,327,328,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,0,0,0,0,0,0,0,0,0,239,0,0,340,0,340,239,0,341,0,0,0,0,341,236,236,236,236,237,238,239,240,317,340,341,236,237,238,239,240,317,340,341,236,237,238,239,240,236,237,238,239,240,317,317,236,236,240,236,237,238,239,240,317,340,341,236,237,238,239,240,317,340,341,236,237,238,239,240,317,340,341,236,236,237,238,239,240,317,340,341,317,236,317,236,237,238,239,240,236,237,238,239,240,236,237,236,237,238,239,240,236,237,238,239,240,317,340,341,236,237,238,239,240,317,340,341,317,236,237,238,239,240,317,340,341,237,240,317,237,317,236,236,237,238,239,240,317,340,341,236,236,236,237,238,239,240,236,236,237,238,239,240,317,340,341,236,237,238,239,240,317,340,341,236,236,237,238,239,240,317,340,341,236,237,238,239,240,317,340,341,0,0,245,245,342,245,342,245,245,245,245,342,245,342,245,342,245,342,245,245,245,245,245,245,245,342,245,245,245,342,245,342,245,245,342,245,245,245,342,245,342,245,342,245,342,0,0,247,248,247,248,247,248,247,248,248,247,248,247,248,247,248,247,248,247,247,248,247,248,247,248,247,248,247,248,247,248,248,247,248,247,247,248,247,248,247,248,247,248,248,247,248,0,0,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,250,250,249,250,249,250,249,250,249,250,249,250,249,250,249,249,249,249,250,249,249,250,249,249,250,249,250,249,250,250,250,249,249,250,253,0,0,0,253,253,253,253,253,252,252,251,252,253,251,252,253,251,252,253,251,252,253,251,252,253,251,252,253,251,252,253,251,252,253,251,252,253,253,251,252,253,251,252,253,251,252,253,251,252,253,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,251,252,253,251,251,251,252,253,251,252,253,251,252,253,252,252,251,252,253,252,251,252,251,252,253,0,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,0,0,255,256,257,255,256,257,255,256,257,255,256,257,255,256,255,256,257,255,256,257,255,256,257,255,256,257,257,255,256,255,256,255,256,257,255,256,257,255,256,257,255,256,257,255,256,255,256,257,257,257,255,256,257,255,256,257,255,256,257,255,256,257,255,256,257,261,0,0,0,261,260,261,260,261,260,261,260,261,260,261,260,261,260,261,260,261,260,261,260,261,260,261,260,260,261,260,261,260,260,261,260,261,260,261,260,261,260,261,260,261,260,260,261,0,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,266,0,266,266,0,0,264,266,264,266,264,264,264,266,264,266,264,264,266,264,264,264,266,266,264,264,266,266,266,264,264,264,264,264,266,264,266,264,264,266,264,264,266,264,266,264,266,264,266,264,266,264,343,343,0,0,267,268,267,268,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,268,267,267,268,267,268,267,267,268,268,267,268,267,268,267,267,268,0,0,271,271,272,271,271,271,272,271,272,271,272,271,272,271,272,271,272,271,272,271,272,271,272,271,272,271,272,271,271,272,271,271,271,272,271,272,272,271,271,272,271,272,271,271,271,272,271,272,271,272,272,271,272,0,0,81,81,81,344,81,344,81,81,81,81,81,344,81,344,81,344,81,344,81,81,81,81,81,81,81,344,81,81,81,81,344,81,344,81,81,81,344,81,81,81,344,81,344,81,344,81,344,0,285,285,0,345,346,347,347,0,0,279,283,277,0,279,283,277,345,0,0,0,346,347,0,0,0,0,0,0,0,0,0,0,348,276,276,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,276,277,278,279,280,281,282,283,284,276,285,277,286,278,279,280,281,282,283,284,276,285,277,286,279,280,282,282,280,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,276,276,278,279,280,281,282,283,284,276,285,277,286,278,279,280,281,282,283,284,276,285,277,286,348,278,278,279,293,293,280,281,282,283,284,276,285,277,286,287,278,278,279,293,280,280,348,347,345,346,281,282,282,283,283,284,284,284,276,285,277,277,286,286,278,278,278,279,284,277,318,282,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,276,284,348,284,286,279,282,280,286,280,282,284,284,0,0,0,0,0,287,278,279,280,348,347,345,346,281,282,283,284,276,285,277,286,286,278,279,280,281,282,283,284,276,285,277,286,278,293,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,280,282,281,280,282,281,286,280,282,287,278,279,293,280,348,347,345,346,281,282,283,284,276,285,277,286,276,349,325,326,329,330,350,351,352,335,336,336,0,0,0,0,0,0,0,0,0,0,301,302,301,302,301,302,301,302,0,301,302,301,302,301,302,301,302,301,302,0,301,301,302,301,302,301,302,301,302,0,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,0,303,303,0,303,303,303,303,0,0,312,0,0,305,305,305,189,308,305,305,305,312,189,308,305,312,189,308,305,305,305,312,189,308,305,312,189,308,305,312,189,308,305,312,312,189,308,305,312,189,308,305,312,189,308,305,312,189,308,305,189,189,312,189,308,305,312,189,308,305,312,312,189,189,308,308,305,305,312,312,312,189,189,189,308,305,305,305,312,189,312,312,189,189,308,308,305,305,312,189,308,305,312,189,308,305,312,189,308,305,305,312,189,308,312,189,308,305,312,189,308,305,312,189,308,305,312,312,189,308,305,312,189,308,308,305,312,189,308,305,312,189,308,305,312,189,308,305],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[3,3],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[1,1],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[1]]],9],[-1,[[8,[3]]],9],[7,5],[7,5],[7,5],[[1,1],10],[[-1,-2],10,[],[]],[[1,11],12],[[1,11],12],[[3,11],12],[[13,11],12],[[13,11],12],[-1,-1,[]],[2,1],[[[15,[14]]],1],[16,1],[[[18,[17]]],3],[-1,-1,[]],[[[18,[19]]],3],[20,13],[21,13],[-1,-1,[]],[22,[[8,[1,21]]]],[22,[[8,[3,13]]]],[22,[[8,[1,23]]]],[22,[[8,[1]]]],[22,[[8,[-1]]],[]],[-1,3,[24,25]],[-1,3,[24,25]],[[1,-1],5,26],[3,1],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[27,[6]]]],[[1,-1],8,28],[[3,-1],8,28],[13,[[27,[29]]]],[[1,30],31],[1,32],[3,32],[1,32],[3,32],[1,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[34,35],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[-1,-2],5,[],[]],[[34,34],6],[7,-1,[]],[7,-1,[]],[-1,[[8,[36]]],9],[-1,[[8,[34]]],9],[7,5],[[34,34],10],[[-1,-2],10,[],[]],[[34,11],12],[[34,11],12],[-1,-1,[]],[36,34],[[[38,[37]]],34],[[[39,[35,-1]]],34,[]],[35,34],[22,[[8,[34,40]]]],[22,[[8,[-1]]],[]],[22,[[8,[34]]]],[[34,-1],5,26],0,[[],7],[-1,-2,[],[]],[34,[[41,[35]]]],[34,[[39,[35,-1]]],[]],[34,36],[[34,34],[[27,[6]]]],[[36,-1],8,28],[[34,-1],8,28],[34,32],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,[[[42,[-1]]],[[18,[-1]]],43],[[[15,[-1]]],[[44,[-1]]],45],[[[46,[-1,-2]]],[[47,[-1,-2]]],[],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[42,[-1]]],[[42,[-1]]],43],[[[49,[-1]]],[[49,[-1]]],43],[[[15,[-1]]],[[15,[-1]]],45],[[[46,[-1,-2]]],[[46,[-1,-2]]],[],48],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[[15,[-1]],[15,[-1]]],6,45],[[[46,[-1,-2]]],[[46,[-3,-2]]],[],48,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[[42,[-2]]]]],9,43],[-1,[[8,[[15,[-2]]]]],9,45],[-1,[[8,[[46,[-2,-3]]]]],9,[],48],[7,5],[7,5],[7,5],[7,5],[[[15,[-1]],[15,[-1]]],10,45],[[[46,[-1,-2]],[46,[-3,-2]]],10,[],48,[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[42,[-1]],11],12,43],[[[49,[-1]],11],12,43],[[[15,[-1]],11],12,45],[[[15,[-1]],11],12,45],[[[46,[-1,-2]],11],12,[],48],[[[46,[-1,-2]],11],12,[],48],[-1,-1,[]],[[[18,[-1]]],[[42,[-1]]],43],[-1,-1,[]],[[[44,[-1]]],[[15,[-1]]],45],[-1,-1,[]],[[[47,[-1,-2]]],[[46,[-1,-2]]],[],48],[-1,-1,[]],[22,[[8,[[42,[-1]],21]]],43],[22,[[8,[[15,[-1]],21]]],45],[22,[[8,[[46,[-1,-2]],21]]],[],48],[22,[[8,[[15,[-1]],23]]],45],[22,[[8,[[46,[-1,-2]],50]]],[],48],[22,[[8,[[15,[-1]]]]],45],[22,[[8,[[46,[-1,-2]]]]],[],48],[-1,[[42,[-2]]],[24,25],43],[-1,[[49,[-2]]],[24,25],43],[[[15,[-1]],-2],5,45,26],[[[46,[-1,-2]],-3],5,[],48,26],[[[42,[-1]]],15,43],[[[49,[-1]]],15,43],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]]],[[44,[-1]]],45],[[[42,[-1]]],[[18,[-1]]],43],[[[15,[-1]],[15,[-1]]],[[27,[6]]],45],[[[49,[-1]]],44,43],[[[42,[-1]],-2],8,43,28],[[[15,[-1]],-2],8,45,28],[[[46,[-1,-2]],-3],8,[],48,28],[[[42,[-1]],-2],[[46,[-2]]],51,[[53,[[52,[37]]]]]],[[[49,[-1]]],[[42,[-1]]],43],[[[15,[19]],30],31],[[[42,[-1]]],32,43],[[[15,[-1]]],32,45],[[[46,[-1,-2]]],32,[],48],[[[15,[19]],30,[44,[19]]],31],[[[15,[-1]]],32,45],[[[46,[-1,-2]]],32,[],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[19]],30],31],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[[46,[-1,-2]],[15,[-2]],-1],54,[[53,[[52,[37]]]]],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[21,-1,55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[35]]],9],[-1,[[8,[[44,[-2]]]]],9,45],[-1,[[8,[[18,[-2]]]]],9,43],[-1,[[8,[[47,[-2,-3]]]]],9,[],48],[7,5],[7,5],[7,5],[[[56,[-1]],11],12,43],[[[57,[-1]],11],12,45],[[[58,[-1,-2]],11],12,[],48],[[-1,11],[[8,[5,59]]],[]],[[-1,11],[[8,[5,59]]],[]],[[-1,11],[[8,[5,59]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[56,[-1]]],43],[[],[[57,[-1]]],45],[[],[[58,[-1,-2]]],[],48],[[35,-1],8,28],[[[44,[-1]],-2],8,45,28],[[[18,[-1]],-2],8,43,28],[[[47,[-1,-2]],-3],8,[],48,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[[56,[-1]],[52,[37]]],[[8,[-2]]],43,55],[[[57,[-1]],[52,[37]]],[[8,[-2]]],45,55],[[[58,[-1,-2]],[52,[37]]],[[8,[-3]]],[],48,55],[[[56,[-1]],22],[[8,[-2]]],43,55],[[[57,[-1]],22],[[8,[-2]]],45,55],[[[58,[-1,-2]],22],[[8,[-3]]],[],48,55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,[[62,[[0,[61]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[62,[[0,[61]]]]],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[30,63],[[8,[64,65]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,67],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[66]]],9],[7,5],[7,5],[[66,66],10],[[-1,-2],10,[],[]],[[66,11],12],[[66,11],12],[[68,11],12],[[68,11],12],[69,66],[67,66],[-1,-1,[]],[-1,-1,[]],[70,68],[71,[[8,[66,68]]]],[22,[[8,[66]]]],[22,[[8,[-1]]],[]],[[66,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[66,30,22],71],[[66,-1],8,28],[68,[[27,[29]]]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[73,73],[74,74],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[72,72],6],[[73,73],6],[74,[[38,[75]]]],0,[74,72],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[72]]],9],[-1,[[8,[73]]],9],[-1,[[8,[74]]],9],[7,5],[7,5],[7,5],[73,76],0,[[72,72],10],[[73,73],10],[[74,74],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[72,11],12],[[73,11],12],[[74,11],12],[-1,-1,[]],[77,72],[-1,-1,[]],[78,73],[[[79,[-1]]],74,[]],[[[79,[-1]]],74,[]],[-1,-1,[]],[[72,-1],5,26],[[73,-1],5,26],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,73],0,[[72,72],[[27,[6]]]],[[73,73],[[27,[6]]]],[72,[[80,[[5,[34,37]]]]]],0,[73,81],0,[[72,-1],8,28],[[73,-1],8,28],[[74,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,[[83,[82,81]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[74,81],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[71,31],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],5,[],[]],[[71,71],6],[7,-1,[]],[7,-1,[]],[-1,[[8,[71]]],9],[7,5],[[71,71],10],[[-1,-2],10,[],[]],[[71,11],12],[[71,11],12],[-1,-1,[]],[31,71],[22,[[8,[71]]]],[22,[[8,[-1]]],[]],[[71,-1],5,26],[[],7],[-1,-2,[],[]],[[71,71],[[27,[6]]]],[[71,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],32],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],5,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[84]]],9],[7,5],[7,5],0,[[84,84],10],0,[[84,11],12],[[85,11],12],[[85,11],12],[-1,-1,[]],[-1,-1,[]],[65,85],[86,85],[87,[[8,[84,85]]]],[[],7],[[],7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[84,-1],8,28],0,[85,[[27,[29]]]],[84,87],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[88,88],[[-1,-2],5,[],[]],[[88,88],6],[[],88],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[88]]],9],[7,5],[7,5],[[88,88],10],[[-1,-2],10,[],[]],[[88,11],12],[[88,11],12],[[89,11],12],[[89,11],12],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[90,[[27,[88]]]],[[88,88],[[27,[6]]]],[[88,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[91,[[8,[88]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[-1,-2],5,[],[]],[[92,92],6],[[],92],[7,-1,[]],[7,-1,[]],[-1,[[8,[92]]],9],[7,5],[[92,92],10],[[-1,-2],10,[],[]],[[92,11],12],[[92,11],12],[93,92],[-1,-1,[]],[[92,-1],5,26],[[],7],[-1,-2,[],[]],[[92,92],[[27,[6]]]],[[92,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[[-1,-2],5,[],[]],[[94,94],6],[[],94],[7,-1,[]],[7,-1,[]],[-1,[[8,[94]]],9],[7,5],[[94,94],10],[[-1,-2],10,[],[]],[[94,11],12],[[94,11],12],[75,94],[-1,-1,[]],[[94,-1],5,26],[[],7],[-1,-2,[],[]],[[94,94],[[27,[6]]]],[[94,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,95],[[-1,-2],5,[],[]],[[95,95],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[95]]],9],[7,5],[7,5],[7,5],[[95,95],10],[[-1,-2],10,[],[]],[[95,11],12],[[95,11],12],[[96,11],12],[[96,11],12],[[97,11],12],[[97,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,[[8,[-1]]],[]],[22,[[8,[95]]]],[[95,-1],5,26],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[95,95],[[27,[6]]]],[[95,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[91,[[8,[95]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[[-1,-2],5,[],[]],0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[98]]],9],[-1,[[8,[30]]],9],[-1,[[8,[99]]],9],0,[7,5],[7,5],[7,5],[7,5],0,[[98,98],10],[[-1,-2],10,[],[]],0,[[98,11],12],[[86,11],12],[[86,11],12],[-1,-1,[]],[100,86],[97,86],[-1,-1,[]],[101,86],[102,86],[89,86],[-1,-1,[]],[-1,-1,[]],[103,[[8,[98,86]]]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,103],0,0,[[30,99,104],98],0,0,0,[[98,-1],8,28],[[30,-1],8,28],[[99,-1],8,28],0,0,[86,[[27,[29]]]],[-1,-2,[],[]],[-1,32,[]],0,0,0,[-1,[[8,[-2]]],[],[]],[103,[[8,[98]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[105,105],[106,106],[107,107],[108,108],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[64]]],9],[-1,[[8,[105]]],9],[-1,[[8,[106]]],9],[-1,[[8,[107]]],9],[-1,[[8,[108]]],9],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,[[109,[-1]]],110],[[64,64],10],[[105,105],10],[[106,106],10],[[107,107],10],[[108,108],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[111,64],[[64,11],12],[[105,11],12],[[106,11],12],[[65,11],12],[[65,11],12],[[107,11],12],[[108,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[105,107],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,[[80,[63]]]],[[[52,[106]]],[[80,[63]]]],[108,[[8,[[80,[63]],65]]]],[[[52,[105]]],[[80,[63]]]],0,[[64,-1],8,28],[[105,-1],8,28],[[106,-1],8,28],[[107,-1],8,28],[[108,-1],8,28],0,[105,[[113,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],0,[[[115,[114]]],[[8,[64,65]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[30,63],[[8,[64,65]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,116],[[-1,-2],5,[],[]],[[116,116],6],[[],116],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[116]]],9],[7,5],[7,5],[[116,116],10],[[-1,-2],10,[],[]],[[116,11],12],[[116,11],12],[[102,11],12],[[102,11],12],[-1,-1,[]],[-1,-1,[]],[[116,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[75,[[27,[116]]]],[[116,116],[[27,[6]]]],[[116,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[91,[[8,[116]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[117]]],9],[7,5],[[117,117],10],[[-1,-2],10,[],[]],[[117,11],12],[[[15,[19]]],117],[118,117],[[[44,[19]]],117],[-1,-1,[]],[[117,-1],5,26],[[],7],[-1,-2,[],[]],[[117,-1],8,28],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[[-1,-2],5,[],[]],[[119,119],6],[[],119],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[119]]],9],[7,5],[7,5],[[119,119],10],[[-1,-2],10,[],[]],[[119,11],12],[[119,11],12],[[100,11],12],[[100,11],12],[-1,-1,[]],[-1,-1,[]],[[119,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[75,[[27,[119]]]],[[119,119],[[27,[6]]]],[[119,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[91,[[8,[119]]]],[75,[[8,[119]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[120,120],[[-1,-2],5,[],[]],[[120,120],6],[[],120],[7,-1,[]],[7,-1,[]],[-1,[[8,[120]]],9],[7,5],[[120,120],10],[[-1,-2],10,[],[]],[[120,11],12],[[120,11],12],[-1,-1,[]],[75,120],[[120,-1],5,26],[[],7],[-1,-2,[],[]],[[120,120],[[27,[6]]]],[[120,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[121,121],[122,122],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],122],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[121]]],9],[-1,[[8,[122]]],9],[7,5],[7,5],[[121,121],10],[[122,122],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[121,11],12],[[122,11],12],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[122,10],0,0,0,0,[[121,-1],8,28],[[122,-1],8,28],[[122,[27,[[5,[123,123]]]]],5],[[122,[27,[124]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,125],[[-1,-2],5,[],[]],[[125,125],6],[[],125],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[125]]],9],[7,5],[7,5],[[125,125],10],[[-1,-2],10,[],[]],[[125,11],12],[[125,11],12],[[101,11],12],[[101,11],12],[-1,-1,[]],[-1,-1,[]],[[125,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[37,[[27,[125]]]],[[125,125],[[27,[6]]]],[[125,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[91,[[8,[125]]]],[37,[[8,[125]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[126,126],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[127]]],9],[7,5],[[126,126],10],[[-1,-2],10,[],[]],[[126,11],12],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[127,-1],8,28],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,[128,129],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[128,128],[[-1,-2],5,[],[]],[[128,128],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[128]]],9],[-1,[[8,[129]]],9],[7,5],[7,5],[128,76],0,[[128,128],10],[[-1,-2],10,[],[]],[[128,11],12],[[128,11],12],[129,128],[-1,-1,[]],[-1,-1,[]],[22,[[8,[128]]]],[22,[[8,[-1]]],[]],[[128,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[76,130],128],[[128,131],128],[128,128],[[128,128],[[27,[6]]]],[[128,-1],8,28],[[129,-1],8,28],[[128,75],128],[[128,75,131],128],[128,130],0,[[128,75],131],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,132],[112,112],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[132]]],9],[-1,[[8,[112]]],9],[[[133,[[52,[37]]]]],[[8,[132,134]]]],[[[133,[[52,[37]]]]],[[8,[112,134]]]],[7,5],[7,5],[7,5],[7,5],[7,5],[[112,112],10],[[132,11],12],[[132,11],12],[[112,11],12],[[112,11],12],[[135,11],12],[[135,11],12],[[136,11],12],[[136,11],12],[[137,11],12],[[137,11],12],[138,132],[-1,-1,[]],[139,112],[-1,-1,[]],[140,135],[-1,-1,[]],[20,135],[-1,-1,[]],[134,136],[20,136],[136,137],[20,137],[-1,-1,[]],[22,[[8,[132,136]]]],[22,[[8,[112,136]]]],[22,[[8,[-1]]],[]],[22,[[8,[132]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[132,[133,[-1]]],[[8,[5,140]]],141],[[132,-1],8,28],[[112,-1],8,28],[[112,[133,[-1]]],[[8,[5,140]]],141],[135,[[27,[29]]]],[136,[[27,[29]]]],[137,[[27,[29]]]],[112,132],[132,[[8,[32,135]]]],[112,[[8,[32,135]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,142,143],[142,[[52,[37]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[[80,[144,145]]]]],[]],[146,146],[142,142],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[146,146],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[146]]],9],[-1,[[8,[142]]],9],[[[133,[[52,[37]]]]],[[8,[142,134]]]],[7,5],[7,5],[-1,-2,[],[[148,[147]]]],[-1,-2,[],[[148,[147]]]],[[146,146],10],[[142,142],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[146,11],12],[[142,11],[[8,[5,59]]]],[[142,11],[[8,[5,59]]]],[-1,-1,[]],[142,146],[[[38,[37]]],146],[-1,-1,[]],[[[44,[19]]],142],[[[38,[37]]],142],[146,142],[22,[[8,[146,149]]]],[22,[[8,[142,149]]]],[22,[[8,[142]]]],[22,[[8,[-1]]],[]],[142,[[38,[37]]]],[[146,-1],5,26],[[142,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[146,146],[[27,[6]]]],[142,[[44,[19]]]],[[146,-1],8,28],[[142,-1],8,28],[[142,[133,[-1]]],[[8,[5,140]]],141],[142,7],[146,32],[142,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[52,[37]]],[[8,[142]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[8,[5]]],[],150],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[151,151],[152,152],[153,153],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[151]]],9],[-1,[[8,[152]]],9],[-1,[[8,[153]]],9],[7,5],[7,5],[7,5],[151,[[27,[60]]]],[[151,11],12],[[152,11],12],[[153,11],12],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[151,-1],8,28],[[152,-1],8,28],[[153,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[154,154],[155,155],[156,156],[157,157],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[154,154],6],[[155,155],6],[[],154],[[],155],[[],157],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[154]]],9],[-1,[[8,[155]]],9],[-1,[[8,[156]]],9],[-1,[[8,[157]]],9],0,[7,5],[7,5],[7,5],[7,5],[[154,154],10],[[155,155],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[154,11],12],[[155,11],12],[[156,11],12],[[157,11],12],[7,154],[-1,-1,[]],[-1,-1,[]],[7,155],[-1,-1,[]],[-1,-1,[]],[[154,-1],5,26],[[155,-1],5,26],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[154,154],[[27,[6]]]],[[155,155],[[27,[6]]]],0,0,[[154,-1],8,28],[[155,-1],8,28],[[156,-1],8,28],[[157,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[158,22],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[159,159],[160,160],[161,161],[162,162],[158,158],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[171,171],6],0,0,[[],162],[[],158],[[],170],[[],171],[[],172],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[159]]],9],[-1,[[8,[160]]],9],[-1,[[8,[161]]],9],[-1,[[8,[162]]],9],[-1,[[8,[158]]],9],[-1,[[8,[163]]],9],[-1,[[8,[164]]],9],[-1,[[8,[165]]],9],[-1,[[8,[166]]],9],[-1,[[8,[167]]],9],[-1,[[8,[168]]],9],[-1,[[8,[169]]],9],[-1,[[8,[170]]],9],[-1,[[8,[171]]],9],[-1,[[8,[172]]],9],[-1,[[8,[173]]],9],[-1,[[8,[174]]],9],0,[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[[159,159],10],[[160,160],10],[[161,161],10],[[162,162],10],[[158,158],10],[[163,163],10],[[164,164],10],[[171,171],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[159,11],12],[[160,11],12],[[161,11],12],[[162,11],12],[[158,11],12],[[163,11],12],[[164,11],12],[[165,11],12],[[166,11],12],[[167,11],12],[[168,11],12],[[169,11],12],[[170,11],12],[[171,11],12],[[172,11],12],[[173,11],12],[[174,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[32,158],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[165,[[27,[175]]]],0,[[171,-1],5,26],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[171,171],[[27,[6]]]],0,0,0,0,0,0,0,0,[[159,-1],8,28],[[160,-1],8,28],[[161,-1],8,28],[[162,-1],8,28],[[158,-1],8,28],[[163,-1],8,28],[[164,-1],8,28],[[165,-1],8,28],[[166,-1],8,28],[[167,-1],8,28],[[168,-1],8,28],[[169,-1],8,28],[[170,-1],8,28],[[171,-1],8,28],[[172,-1],8,28],[[173,-1],8,28],[[174,-1],8,28],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[176,176],[177,177],[178,178],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],176],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[176]]],9],[-1,[[8,[177]]],9],[-1,[[8,[178]]],9],[7,5],[7,5],[7,5],[[176,11],12],[[177,11],12],[[178,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[176,-1],8,28],[[177,-1],8,28],[[178,-1],8,28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,179],[180,180],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],32],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[179]]],9],[-1,[[8,[180]]],9],[7,5],[7,5],[7,5],[[179,179],10],[[180,180],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[179,11],12],[[180,11],12],[[181,11],12],[[181,11],12],[-1,-1,[]],[-1,-1,[]],[89,181],[102,181],[-1,-1,[]],[100,181],[101,181],[97,181],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[80,[180]]],179],[[179,-1],8,28],[[180,-1],8,28],[181,[[27,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[91,[[8,[180]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[182,182],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[182]]],9],[7,5],[7,5],[[182,182],10],[[-1,-2],10,[],[]],[[182,11],12],[[182,11],12],[[183,11],12],[[183,11],12],[184,182],[-1,-1,[]],[149,183],[134,183],[-1,-1,[]],[22,[[8,[-1]]],[]],[22,[[8,[182]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[182,-1],8,28],[183,[[27,[29]]]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[63]]],9],[-1,[[8,[185]]],9],[-1,[[8,[63]]],9],[7,5],[[185,11],12],[-1,-1,[]],[63,185],[[],7],[-1,-2,[],[]],[[63,-1],8,28],[[185,-1],8,28],[[63,-1],8,28],[[63,-1],8,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[186,186],[187,187],[188,188],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[186,186],6],[[187,187],6],[[188,188],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[186]]],9],[-1,[[8,[187]]],9],[-1,[[8,[188]]],9],[7,5],[7,5],[7,5],[[186,186],10],[[187,187],10],[[188,188],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[186,11],12],[[187,11],12],[[188,11],12],[188,34],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[186,-1],5,26],[[187,-1],5,26],[[188,-1],5,26],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[187,10],[188,10],[187,10],[188,10],[187,10],[188,10],[188,189],0,[[188,187],10],[[36,186],188],[[186,186],[[27,[6]]]],[[187,187],[[27,[6]]]],[[188,188],[[27,[6]]]],[188,189],0,[188,186],0,[[186,-1],8,28],[[187,-1],8,28],[[188,-1],8,28],[188,187],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[[133,[-1]]],[[8,[190,134]]],191],[-1,[[8,[190]]],9],[[[133,[[52,[37]]]]],[[8,[-1,134]]],[]],[7,5],[7,5],[7,5],[7,5],0,0,0,0,[[192,11],12],[[192,11],12],[[190,11],12],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[193,[[62,[[194,[61]]]]]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195],[-1,-2,[],[]],[60,[[62,[[0,[61]]]]]],[60,[[62,[[0,[61]]]]]],[196,27],[-1,[[197,[-2]]],[],[]],[-1,[[62,[[0,[61]]]]],61],0,0,[[190,-1],8,28],[[190,[133,[-1]]],[[8,[5,140]]],141],0,[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[198]]],9],[7,5],0,[[198,11],12],0,[-1,-1,[]],[[],7],[-1,-2,[],[]],[[198,-1],8,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[199,199],[200,200],[201,201],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[199]]],9],[-1,[[8,[200]]],9],[-1,[[8,[201]]],9],[7,5],[7,5],[7,5],[[199,199],10],[[200,200],10],[[201,201],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[199,11],12],[[200,11],12],[[201,11],12],[201,[[80,[202]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[199,10],[201,10],0,0,[[199,-1],8,28],[[200,-1],8,28],[[201,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[203,203],[204,204],[205,205],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[203,203],6],[[204,204],6],[205,189],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[204]]],9],[-1,[[8,[205]]],9],[7,5],[7,5],[7,5],[[203,203],10],[[204,204],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[205,[[27,[189]]]],0,[[203,11],12],[[204,11],12],[[205,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[203,-1],5,26],[[204,-1],5,26],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,203],[205,5],[205,5],[[128,189],205],[[203,203],[[27,[6]]]],[[204,204],[[27,[6]]]],[205,128],0,[205,189],0,[[204,-1],8,28],[[205,-1],8,28],[[205,204],5],[205,204],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,[[27,[189]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[206,206],[207,207],[208,208],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[209]]],9],[-1,[[8,[210]]],9],[-1,[[8,[104]]],9],[7,5],[7,5],[7,5],[[206,206],10],[[207,207],10],[[208,208],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[206,11],12],[[207,11],12],[[208,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[209,10],0,[210,10],0,[[209,-1],8,28],[[210,-1],8,28],[[104,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[211,211],[82,82],[212,212],[213,213],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[82,82],6],[[],212],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[211]]],9],[-1,[[8,[82]]],9],[-1,[[8,[213]]],9],[7,5],[7,5],[7,5],[7,5],[[211,211],10],[[82,82],10],[[212,212],10],[[213,213],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[211,11],12],[[82,11],12],[[212,11],12],[[213,11],12],[-1,-1,[]],[214,211],[215,82],[-1,-1,[]],[216,212],[-1,-1,[]],[217,213],[-1,-1,[]],[[82,-1],5,26],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[82,82],[[27,[6]]]],0,[[211,-1],8,28],[[82,-1],8,28],[[213,-1],8,28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[218,219],[-1,-2,[],[]],[-1,-2,[],[]],[218,218],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[218]]],9],[7,5],[[218,218],10],[[-1,-2],10,[],[]],[[218,11],12],[[218,11],12],[219,218],[-1,-1,[]],[22,[[8,[-1]]],[]],[22,[[8,[218]]]],[[],7],[-1,-2,[],[]],[[218,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[220,220],[221,221],[222,222],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[220]]],9],[-1,[[8,[221]]],9],[-1,[[8,[222]]],9],[7,5],[7,5],[7,5],[[220,220],10],[[221,221],10],[[222,222],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[220,11],12],[[221,11],12],[[222,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[220,-1],8,28],[[221,-1],8,28],[[222,-1],8,28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[124,223],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[224,224],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[124]]],9],[7,5],[7,5],[[124,124],10],[[-1,-2],10,[],[]],[[124,11],12],[[124,11],12],[[224,11],12],[[224,11],12],[223,124],[-1,-1,[]],[225,224],[-1,-1,[]],[22,[[8,[124]]]],[22,[[8,[-1]]],[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[226,227],124],[[226,226],[[27,[124]]]],[[124,-1],8,28],[224,[[27,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[228,228],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[228]]],9],[7,5],[[228,228],10],[[-1,-2],10,[],[]],[[228,11],12],[-1,-1,[]],[229,228],[[],7],[-1,-2,[],[]],[[228,-1],8,28],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[230,[[83,[1,81]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[230]]],9],0,[7,5],[230,76],0,[[230,230],10],[[-1,-2],10,[],[]],0,[[230,11],12],[[76,231],230],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[230,-1],8,28],[230,[[83,[34,[5,[81,81]]]]]],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],[-1,[[8,[[80,[37]]]]],9],[[[52,[37]],-1],8,28],[-1,[[8,[232]]],9],[[232,-1],8,28],[-1,[[8,[[80,[233]]]]],9],[[[52,[233]],-1],8,28],[-1,[[8,[234]]],9],[[234,-1],8,28],[-1,[[8,[235]]],9],[[235,-1],8,28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[236,236],[237,237],[238,238],[239,239],[240,240],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[236]]],9],[-1,[[8,[241]]],9],[-1,[[8,[238]]],9],[-1,[[8,[242]]],9],[-1,[[8,[223]]],9],[-1,[[8,[243]]],9],[-1,[[8,[244]]],9],[-1,[[8,[30]]],9],0,[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],0,0,0,[[236,236],10],[[237,237],10],[[238,238],10],[[239,239],10],[[240,240],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,0,[[236,11],12],[[237,11],12],[[238,11],12],[[239,11],12],[[240,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[236,-1],8,28],[[241,-1],8,28],[[238,-1],8,28],[[242,-1],8,28],[[223,-1],8,28],[[243,-1],8,28],[[244,-1],8,28],[[30,-1],8,28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[245,246],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[245,245],[[-1,-2],5,[],[]],[[245,245],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[245]]],9],[-1,[[8,[246]]],9],[7,5],[7,5],[[245,245],10],[[-1,-2],10,[],[]],[[245,11],12],[[245,11],12],[246,245],[-1,-1,[]],[226,245],[-1,-1,[]],[22,[[8,[-1]]],[]],[22,[[8,[245]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[245,245],[[27,[6]]]],[[245,-1],8,28],[[246,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[247,247],[248,248],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[247]]],9],[-1,[[8,[248]]],9],[7,5],[7,5],0,[[247,247],10],[[248,248],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[247,11],12],[[248,11],12],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],0,[[247,-1],8,28],[[248,-1],8,28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[249,249],[250,250],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[249]]],9],[-1,[[8,[250]]],9],[7,5],[7,5],0,[[249,249],10],[[250,250],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[249,11],12],[[250,11],12],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[249,-1],8,28],[[250,-1],8,28],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[251,251],[252,252],[253,253],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[251]]],9],[-1,[[8,[252]]],9],[-1,[[8,[253]]],9],[7,5],[7,5],[7,5],[[251,251],10],[[252,252],10],[[253,253],10],[[-1,-2],10,[],[]],[[251,11],12],[[252,11],12],[[253,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[251,-1],8,28],[[252,-1],8,28],[[253,-1],8,28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[254,254],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[254]]],9],[7,5],[[254,254],10],[[-1,-2],10,[],[]],0,[[254,11],12],[241,254],[-1,-1,[]],[[],7],[-1,-2,[],[]],0,0,[[254,-1],8,28],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[255,255],[256,256],[257,257],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[255,255],6],[[256,256],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[258]]],9],[-1,[[8,[259]]],9],[-1,[[8,[131]]],9],[7,5],[7,5],[7,5],0,[[255,255],10],[[256,256],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[255,11],12],[[256,11],12],[[257,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[255,255],[[27,[6]]]],[[256,256],[[27,[6]]]],[[258,-1],8,28],[[259,-1],8,28],[[131,-1],8,28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[260,260],[261,261],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[260]]],9],[-1,[[8,[261]]],9],[7,5],[7,5],[[260,260],10],[[261,261],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[260,11],12],[[261,11],12],[262,260],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[[260,-1],8,28],[[261,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[263,71],0,[-1,-2,[],[]],[-1,-2,[],[]],[263,263],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[263]]],9],[7,5],[[263,263],10],[[-1,-2],10,[],[]],[[263,11],12],[-1,-1,[]],[[[113,[31]]],263],[[],7],[-1,-2,[],[]],[[71,81],263],[[263,-1],8,28],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[263,81],0,[-1,-2,[],[]],0,0,0,0,0,0,[264,265],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[264,264],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[264]]],9],[7,5],[7,5],[[264,264],10],[[-1,-2],10,[],[]],[[266,11],12],[[266,11],12],[[264,11],12],[[264,11],12],[20,266],[-1,-1,[]],[134,266],[265,264],[-1,-1,[]],[22,[[8,[264,266]]]],[22,[[8,[-1]]],[]],[22,[[8,[264]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[264,-1],8,28],[266,[[27,[29]]]],[264,32],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[267]]],9],[-1,[[8,[268]]],9],[7,5],[7,5],[[267,11],12],[[268,11],12],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[267,-1],8,28],[[268,-1],8,28],[269,[[8,[267,181]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[270,[[8,[268,181]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[271,71],0,0,[271,81],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[271,271],[272,272],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[271]]],9],[-1,[[8,[272]]],9],[7,5],[7,5],[[271,271],10],[[272,272],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[271,11],12],[[272,11],12],[[[273,[31]]],271],[-1,-1,[]],[-1,-1,[]],[271,37],0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[272,34,37],271],[[34,37,71,81],271],[[271,-1],8,28],[[272,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[271,34],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[81,274],[81,226],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[81,81],[[8,[81,275]]]],[81,81],[[-1,-2],5,[],[]],[[81,81],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[81]]],9],[-1,[[8,[274]]],9],[7,5],[7,5],[[81,81],10],[[-1,-2],10,[],[]],[[81,11],12],[[81,11],12],[274,81],[226,81],[-1,-1,[]],[-1,-1,[]],[22,[[8,[81]]]],[22,[[8,[-1]]],[]],[[81,-1],5,26],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[81,81],[[27,[6]]]],[[81,81],81],[[81,-1],8,28],[[274,-1],8,28],[-1,-2,[],[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[276,[[52,[37]]]],[-1,7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[[80,[144,145]]]]],[]],[277,[[27,[37]]]],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],[276,276],[285,285],[277,277],[286,286],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[279,279],6],0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[287]]],9],[-1,[[8,[278]]],9],[-1,[[8,[288]]],9],[-1,[[8,[280]]],9],[-1,[[8,[289]]],9],[-1,[[8,[290]]],9],[-1,[[8,[291]]],9],[-1,[[8,[292]]],9],[-1,[[8,[281]]],9],[-1,[[8,[282]]],9],[-1,[[8,[283]]],9],[-1,[[8,[284]]],9],[-1,[[8,[276]]],9],[-1,[[8,[285]]],9],[-1,[[8,[277]]],9],[-1,[[8,[286]]],9],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[7,5],[-1,-2,[],[[148,[147]]]],[-1,-2,[],[[148,[147]]]],[[278,278],10],[[279,279],10],[[280,280],10],[[281,281],10],[[282,282],10],[[283,283],10],[[284,284],10],[[276,276],10],[[285,285],10],[[277,277],10],[[286,286],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[278,11],12],[[278,11],12],[[279,11],12],[[293,11],12],[[293,11],12],[[280,11],12],[[281,11],12],[[282,11],12],[[283,11],12],[[284,11],12],[[276,11],12],[[285,11],12],[[277,11],12],[[286,11],12],[-1,-1,[]],[288,278],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[294,280],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[295,282],[296,283],[-1,-1,[]],[297,284],[-1,-1,[]],[298,284],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[299,277],[-1,-1,[]],[300,286],[22,[[8,[278]]]],[22,[[8,[-1]]],[]],[[278,-1],5,26],[[279,-1],5,26],[[284,-1],5,26],[[277,-1],5,26],0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[276,[[80,[37]]]],[[284,284],284],0,0,0,[[279,279],[[27,[6]]]],0,0,0,0,0,[284,[[80,[226]]]],0,0,0,0,0,0,[[287,-1],8,28],[[278,-1],8,28],[[288,-1],8,28],[[280,-1],8,28],[[289,-1],8,28],[[290,-1],8,28],[[291,-1],8,28],[[292,-1],8,28],[[281,-1],8,28],[[282,-1],8,28],[[283,-1],8,28],[[284,-1],8,28],[[276,-1],8,28],[[285,-1],8,28],[[277,-1],8,28],[[286,-1],8,28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[8,[5]]],[],150],0,0,0,0,0,0,0,0,0,0,0,[-1,[[8,[[80,[37]]]]],9],[[[52,[37]],-1],8,28],[-1,[[8,[232]]],9],[[232,-1],8,28],[-1,[[8,[[80,[233]]]]],9],[[[52,[233]],-1],8,28],[-1,[[8,[234]]],9],[[234,-1],8,28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[235]]],9],[-1,[[8,[301]]],9],[-1,[[8,[302]]],9],[7,5],[7,5],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[235,-1],8,28],[[301,-1],8,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,5],[[303,11],12],[[303,11],12],[-1,-1,[]],[[],7],[-1,-2,[],[]],[304,[[8,[304,303]]]],[303,[[27,[29]]]],[-1,32,[]],[304,[[27,[175]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,[305,306],[305,306],[305,306],[189,307],[308,309],[305,310],[305,226],[305,311],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[305,305],[[27,[305]]]],[[305,305],[[27,[305]]]],[312,312],[189,189],[308,308],[305,305],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[312,312],6],[[189,189],6],[[308,308],6],[[305,305],6],[[],312],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[8,[312]]],9],[-1,[[8,[189]]],9],[-1,[[8,[308]]],9],[-1,[[8,[305]]],9],[7,5],[7,5],[7,5],[7,5],[[189,189],[[8,[305,313]]]],[189,305],[[312,312],10],[[189,189],10],[[308,308],10],[[305,305],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[312,11],12],[[312,11],12],[[189,11],12],[[189,11],12],[[308,11],12],[[308,11],12],[[305,11],12],[[305,11],12],[307,312],[-1,-1,[]],[189,312],[-1,-1,[]],[307,189],[312,189],[-1,-1,[]],[-1,-1,[]],[310,305],[226,305],[226,312],[226,189],[22,[[8,[312]]]],[22,[[8,[-1]]],[]],[22,[[8,[189]]]],[22,[[8,[-1]]],[]],[22,[[8,[308]]]],[22,[[8,[-1]]],[]],[22,[[8,[-1]]],[]],[22,[[8,[305]]]],[[312,-1],5,26],[[189,-1],5,26],[[308,-1],5,26],[[305,-1],5,26],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[226,75],305],[[],312],[[],189],[[],308],[[312,312],[[27,[6]]]],[[189,189],[[27,[6]]]],[[308,308],[[27,[6]]]],[[305,305],[[27,[6]]]],[[312,-1],8,28],[[189,-1],8,28],[[308,-1],8,28],[[305,-1],8,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[312,226],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[189,[[8,[308]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Identifier",8],[6,"AccountPublicKey",5088],[3,"SigningKey",8],[4,"EitherEd25519SecretKey",5088],[15,"tuple"],[4,"Ordering",5089],[15,"usize"],[4,"Result",5090],[8,"Deserializer",5091],[15,"bool"],[3,"Formatter",5092],[6,"Result",5092],[4,"SigningKeyParseError",8],[6,"AccountAlg",5093],[3,"Identifier",138],[3,"Identifier",5093],[3,"Ed25519Extended",5094],[3,"SecretKey",5095],[3,"Ed25519",5096],[4,"Error",5097],[4,"Error",5098],[15,"str"],[4,"PublicKeyFromStrError",5095],[8,"RngCore",5099],[8,"CryptoRng",5099],[8,"Hasher",5100],[4,"Option",5101],[8,"Serializer",5102],[8,"Error",5103],[4,"Discrimination",5104],[3,"Address",5104],[3,"String",5105],[3,"TypeId",5106],[3,"Hash",97],[3,"Blake2b256",5107],[3,"Hash",5088],[15,"u8"],[15,"array"],[3,"DigestOf",5108],[4,"Error",5107],[3,"Digest",5108],[3,"SigningKey",138],[8,"AsymmetricKey",5095],[3,"PublicKey",5095],[8,"AsymmetricPublicKey",5095],[3,"Signature",138],[3,"Signature",5109],[8,"VerificationAlgorithm",5109],[3,"KeyPair",138],[4,"SignatureFromStrError",5109],[8,"SigningAlgorithm",5109],[15,"slice"],[8,"AsRef",5110],[4,"Verification",5109],[8,"Error",5091],[3,"SecretKeyVisitor",256],[3,"PublicKeyVisitor",256],[3,"SignatureVisitor",256],[3,"Error",5092],[3,"Path",5111],[8,"Iterator",5112],[6,"Result",5113],[4,"Fragment",5114],[4,"Initial",1451],[4,"Error",1451],[3,"AccountIdentifier",900],[4,"AccountIdentifier",5115],[4,"ParseAccountIdentifierError",900],[3,"UnspecifiedAccountIdentifier",5115],[4,"Error",5104],[3,"Address",1042],[3,"DelegationType",953],[3,"LastRewards",953],[3,"AccountState",953],[15,"u32"],[6,"Epoch",5116],[4,"DelegationType",5117],[3,"LastRewards",5118],[3,"AccountState",5117],[3,"Vec",5119],[3,"Value",4426],[3,"TokenIdentifier",3376],[3,"BTreeMap",5120],[3,"Block0Configuration",1072],[4,"Block0ConfigurationError",1072],[4,"FromConfigParamsError",1340],[3,"Block",5121],[3,"ActiveSlotCoefficient",1157],[4,"TryFromActiveSlotCoefficientError",1157],[3,"Milli",5122],[4,"ConfigParam",5123],[3,"BlockContentMaxSize",1206],[6,"BlockContentSize",5124],[3,"EpochStabilityDepth",1249],[4,"FeesGoTo",1277],[3,"FromStrFeesGoToError",1277],[3,"TryFromFeesGoToError",1277],[3,"BlockchainConfiguration",1340],[6,"ConsensusVersion",5125],[4,"TryFromNumberOfSlotsPerEpochError",1673],[4,"TryFromSlotDurationError",1802],[4,"TryFromKesUpdateSpeedError",1598],[3,"ConfigParams",5126],[3,"LinearFee",5127],[3,"InitialUTxO",1451],[3,"LegacyUTxO",1451],[3,"Destination",1451],[3,"InitialToken",1451],[3,"Transaction",5128],[8,"Payload",5129],[3,"UtxoDeclaration",5130],[3,"SignedCertificate",1929],[3,"Output",5131],[3,"NoExtra",5129],[3,"TransactionSlice",5128],[3,"KesUpdateSpeed",1598],[3,"ConsensusLeaderId",1648],[3,"BftLeaderId",5088],[3,"NumberOfSlotsPerEpoch",1673],[3,"ProposalExpiration",1724],[3,"PoolParticipationCapping",1752],[3,"RewardConstraints",1752],[3,"NonZeroU32",5132],[3,"Ratio",3572],[3,"SlotDuration",1802],[3,"Block0DateDef",1853],[3,"Block0Date",5123],[3,"BlockDate",1874],[3,"BlockDate",5116],[6,"SlotId",5116],[3,"TimeEra",5133],[3,"Certificate",1929],[3,"Codec",5134],[4,"ReadError",5135],[4,"CertificateToBech32Error",1929],[4,"CertificateFromBech32Error",1929],[4,"CertificateFromStrError",1929],[4,"Certificate",5136],[4,"SignedCertificate",5136],[4,"WriteError",5135],[8,"Write",5137],[3,"CommitteeId",2053],[8,"Gen",5138],[3,"u5",5097],[3,"Global",5139],[3,"CommitteeIdDef",2053],[15,"char"],[8,"FromIterator",5140],[4,"FromHexError",5141],[8,"WriteBase32",5097],[3,"Log",2155],[3,"LogEntry",2155],[4,"LogOutput",2155],[3,"PoolMaxEntries",2219],[3,"LogMaxEntries",2219],[3,"PersistentLog",2219],[3,"Mempool",2219],[3,"CorsOrigin",2314],[3,"Rest",2314],[3,"JRpc",2314],[3,"Tls",2314],[3,"Cors",2314],[3,"HeaderName",2314],[3,"HttpMethod",2314],[3,"P2p",2314],[3,"Bootstrap",2314],[3,"Connection",2314],[3,"TopicsOfInterest",2314],[3,"Policy",2314],[3,"LayersConfig",2314],[3,"PreferredViewMax",2314],[3,"PreferredListConfig",2314],[3,"TrustedPeer",2314],[3,"NodeConfig",2314],[4,"SocketAddr",5142],[3,"NodeSecret",2710],[3,"Bft",2710],[3,"GenesisPraos",2710],[3,"ConfigParams",2774],[4,"ConfigParam",2774],[4,"FromConfigParamError",2774],[3,"EvmTransaction",2872],[4,"EvmTransactionFromStrError",2872],[3,"EvmTransaction",5143],[3,"FragmentDef",2919],[4,"FragmentOrigin",2941],[4,"FragmentStatus",2941],[3,"FragmentLog",2941],[3,"SystemTime",4948],[3,"PersistentFragmentLog",3041],[8,"Read",5137],[3,"DeserializeError",3041],[3,"PathBuf",5111],[3,"Box",5144],[3,"FileFragments",3041],[3,"FileFragmentsIterator",3041],[3,"IterBridge",5145],[3,"FragmentsBatch",3120],[4,"FragmentRejectionReason",3138],[3,"RejectedFragmentInfo",3138],[3,"FragmentsProcessingSummary",3138],[6,"FragmentId",5114],[3,"LeadershipLogId",3212],[4,"LeadershipLogStatus",3212],[3,"LeadershipLog",3212],[3,"PerCertificateFeeDef",3301],[3,"PerVoteCertificateFeeDef",3301],[3,"LinearFeeDef",3301],[3,"PerCertificateFee",5127],[3,"PerVoteCertificateFee",5127],[3,"TokenName",3376],[3,"MintingPolicy",3376],[3,"MintToken",3376],[3,"TokenName",5146],[3,"TokenIdentifier",5147],[3,"MintingPolicy",5148],[3,"MintToken",5149],[3,"OldAddress",3470],[3,"Addr",5150],[3,"PeerStats",3497],[3,"PeerRecord",3497],[3,"Subscription",3497],[3,"Ratio",5151],[4,"ParseRatioError",3572],[3,"ParseIntError",5152],[15,"u64"],[3,"NonZeroU64",5132],[4,"RewardParams",3625],[4,"RewardParams",5123],[3,"EpochRewardsInfo",3657],[3,"EpochRewardsInfo",5153],[3,"Options",5154],[3,"MemberPublicKey",5155],[6,"ExternalProposalId",5156],[3,"Proposals",5156],[3,"SettingsDto",3695],[3,"TaxTypeDef",3695],[3,"TaxTypeSerde",3695],[4,"LimitDef",3695],[3,"RatioDef",3695],[3,"TaxType",5151],[4,"Limit",5151],[3,"Parameters",5151],[4,"CompoundingType",5151],[3,"Stake",3876],[3,"Stake",5157],[3,"StakeDistributionDto",3921],[3,"StakeDistribution",3921],[3,"StakePoolStats",3968],[3,"Rewards",3968],[3,"NodeStatsDto",4019],[3,"NodeStats",4019],[4,"NodeState",4019],[3,"TaxType",4110],[3,"EpochDef",4135],[3,"SlotDef",4135],[3,"TimeEraDef",4135],[3,"Epoch",5133],[3,"Slot",5158],[3,"TransactionInput",4203],[4,"TransactionInputType",4203],[3,"Input",5115],[3,"TransactionOutput",4251],[3,"TransactionWitness",4278],[4,"Witness",5159],[4,"TransactionWitnessFromStrError",4278],[3,"UpdateProposalStateDef",4332],[3,"UpdateProposalDef",4332],[3,"UpdateProposalState",5160],[3,"UpdateProposal",5161],[3,"UTxOInfo",4371],[3,"UTxOOutputInfo",4371],[3,"Entry",5162],[3,"Value",5163],[4,"ValueError",5163],[3,"EncryptedTally",4475],[4,"VotePayload",4475],[3,"VotePrivacy",4475],[4,"PayloadTypeDef",4475],[3,"VotePlan",4475],[3,"AccountVotes",4475],[3,"VotePlanStatus",4475],[4,"Tally",4475],[3,"TallyResult",4475],[4,"PrivateTallyState",4475],[3,"VoteProposalStatus",4475],[3,"SerdeMemberPublicKey",4475],[4,"PayloadType",5164],[3,"Proposal",5156],[4,"VoteAction",5156],[4,"ParametersGovernanceAction",5165],[4,"TreasuryGovernanceAction",5166],[3,"VotePrivacyFromStrError",4475],[3,"VotePlan",5156],[3,"VotePlanStatus",5167],[4,"Tally",5168],[3,"Tally",5169],[3,"TallyResult",5168],[4,"Payload",5164],[3,"VoteProposalStatus",5167],[3,"ProposalInternal",4893],[3,"ProposalsList",4893],[4,"Error",4924],[3,"Multiaddr",5170],[3,"Duration",4948],[15,"u128"],[3,"SystemTime",5171],[3,"LocalDateTime",4948],[3,"OffsetDateTime",5172],[3,"Duration",5173],[15,"f64"],[3,"SecondsSinceUnixEpoch",4948],[3,"SystemTimeError",5171],[13,"UnexpectedHrp",96],[4,"ConsensusVersionDef",1340],[4,"DiscriminationDef",1340],[3,"ParametersDef",3695],[6,"VotePlanId",4475],[13,"InvalidHrp",2051],[13,"Network",3037],[13,"InABlock",3038],[13,"Rejected",3038],[13,"Block",3297],[13,"Rejected",3297],[13,"Encrypted",4875],[13,"Decrypted",4875],[13,"Linear",3649],[13,"Halving",3649],[13,"Public",4877],[13,"Private",4877],[13,"Invalid",1205],[13,"Invalid",1647],[13,"Invalid",1723],[13,"Invalid",1852],[13,"Public",4882],[13,"Private",4882],[13,"InitConfigParamMissing",1449],[13,"InitConfigParamDuplicate",1449],[3,"BlockDateStructural",1874],[4,"CompoundingTypeDef",3695],[4,"DiscriminationDef",3695],[3,"StakeDef",3876],[13,"InvalidHrp",4330],[3,"ValueDef",4426],[4,"ParametersGovernanceActionDef",4475],[4,"TreasuryGovernanceActionDef",4475],[4,"VoteActionDef",4475],[3,"VoteProposalDef",4475],[13,"RewardAdd",4874],[13,"TransferToRewards",4879],[13,"Treasury",4880],[13,"Parameters",4880]]},\
"jormungandrwallet":{"doc":"","t":"DGDGDGDGDGDDGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFLLLAMAMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFF","n":["EncryptingVoteKey","EncryptingVoteKeyPtr","Error","ErrorPtr","Fragment","FragmentPtr","Proposal","ProposalPtr","Settings","SettingsPtr","SettingsRust","Wallet","WalletPtr","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","discrimination","discrimination","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fees","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","iohk_jormungandr_delete_fragment","iohk_jormungandr_delete_spending_counters","iohk_jormungandr_fragment_from_raw","iohk_jormungandr_fragment_id","iohk_jormungandr_symmetric_cipher_decrypt","iohk_jormungandr_vote_proposal_new_private","iohk_jormungandr_vote_proposal_new_public","iohk_jormungandr_wallet_delete_buffer","iohk_jormungandr_wallet_delete_error","iohk_jormungandr_wallet_delete_proposal","iohk_jormungandr_wallet_delete_settings","iohk_jormungandr_wallet_delete_string","iohk_jormungandr_wallet_delete_wallet","iohk_jormungandr_wallet_error_details","iohk_jormungandr_wallet_error_to_string","iohk_jormungandr_wallet_id","iohk_jormungandr_wallet_import_keys","iohk_jormungandr_wallet_set_state","iohk_jormungandr_wallet_spending_counters","iohk_jormungandr_wallet_total_value","iohk_jormungandr_wallet_vote_cast","is_input_worth","new","serialize","settings","slot_duration","time","time_era","to_owned","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","iohk_jormungandr_wallet_settings_block0_hash","iohk_jormungandr_wallet_settings_discrimination","iohk_jormungandr_wallet_settings_fees","iohk_jormungandr_wallet_settings_new","iohk_jormungandr_block_date_from_system_time","iohk_jormungandr_max_expiration_date"],"q":[[0,"jormungandrwallet"],[139,"jormungandrwallet::settings"],[143,"jormungandrwallet::time"],[145,"core::result"],[146,"serde::de"],[147,"chain_addr"],[148,"core::fmt"],[149,"core::fmt"],[150,"std::os::raw"],[151,"wallet_core::c::time"],[152,"wallet_core::c"],[153,"chain_impl_mockchain::block"],[154,"chain_impl_mockchain::ledger::ledger"],[155,"serde::ser"],[156,"core::any"],[157,"wallet_core::c::settings"],[158,"wallet_core::c::settings"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","delete the pointer","delete the inner buffer that was allocated by this library","deserialize a fragment from bytes","get the ID of the provided fragment","decrypt payload of the wallet transfer protocol","build the proposal object","build the proposal object","Delete a binary buffer that was returned by this library …","delete the pointer and free the allocated memory","delete the pointer","delete the pointer and free the allocated memory","Delete a null terminated string that was allocated by this …","delete the pointer, zero all the keys and free the …","Get a string describing the error, this will return an …","Get a string describing the error, this will return an …","get the wallet id","recover a wallet from an account and a list of utxo keys","update the wallet account state","get the current spending counters for the (only) account …","get the total value in the wallet","build the vote cast transaction","convenient function to check if a given input is covering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Safety","Safety","This function dereference raw pointers. Even though the …","This function dereference raw pointers. Even though the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,1,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,1,1,1,30,29,31,32,33,34,1,1,1,1,1,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,30,29,31,32,33,34,1,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[4,[1]]],5],[1,6],0,[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[[1,1],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[[1,8],[[4,[2,9]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,2],[11,2],[[12,3,10],13],[[10,12],13],[[12,3,12,3,12,3],13],[[12,12,12,14,15],13],[[12,12,12,15],13],[[12,3],2],[13,2],[15,2],[16,2],[14,2],[17,2],[13,14],[13,14],[[17,12],13],[[12,17],13],[[17,18,11],13],[[17,11],13],[[17,18],13],[[17,16,15,12,19,12,20],13],[[1,21],7],[22,[[4,[1,23]]]],[[1,-1],4,24],0,0,0,0,[-1,-2,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,12],13],[[16,26],13],[[16,27],13],[[28,16],13],[[29,18,19],13],[[29,18,19],13]],"c":[],"p":[[3,"SettingsRust",0],[15,"tuple"],[15,"usize"],[4,"Result",145],[8,"Deserializer",146],[4,"Discrimination",147],[15,"bool"],[3,"Formatter",148],[3,"Error",148],[6,"FragmentPtr",0],[3,"SpendingCounters",149],[15,"u8"],[6,"ErrorPtr",0],[6,"c_char",150],[6,"ProposalPtr",0],[6,"SettingsPtr",0],[6,"WalletPtr",0],[15,"u64"],[3,"BlockDate",151],[3,"TransactionOut",149],[3,"Input",152],[3,"Block",153],[4,"Error",154],[8,"Serializer",155],[3,"TypeId",156],[4,"Discrimination",157],[3,"LinearFee",157],[3,"SettingsInit",157],[3,"Settings",0],[3,"Wallet",0],[3,"Proposal",0],[3,"Fragment",0],[3,"Error",0],[3,"EncryptingVoteKey",0]]},\
"jortestkit":{"doc":"","t":"AAAAAAAAAAAAAANNENNNNLLFLLLLLLLLLLLLLLLLDEINCNDMMMMMAKCAMAMDEINNDMLLLLLLLLMMLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLKMLLLLLMLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLFLLLLLLRMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLADLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLGMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLMLLLMLLMLLLLLLLLLFFFFFFFFFFFFFDDDNNENDDENNNDDNNNNMLMLMLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLMMMALMLMLMLLLLMMLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLMMDDLMLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLMLLALMLLLLLLLLLLFFNDDDNNNNGEDDNNNNDDNDEIEEIDNDDDENNLLLLLLLLLLLALLLLLLLLLLLLMMMMLMMMMLLLLLLLLLKMMLMMMLLLLLLLLLLLLLMLAMMMLLLKLLAAAMLLLAMMFMLLLLLLLLLMMKMFFFFMMALAMMMMMMMMMMMMLLLLLLLLMLLLFFMLLLLLLLLLLMDDNNENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLMMLLMMLMMLLMMLLLLLLLLLLLLLLLLLLLLDLLLLLLMLLLLLMLLLLFFDNDDDNDGLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLFMMLLMMLLLLLMMMLLLLLLLLLLLLLLLMMLLLLLMLLLLLLNNNGNDNDEIEEIDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLKLLMMLLLLLLLLLLLLLLLLLLLLLLLKLKLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMSDSLLLLLLMLLLMLLMLLLLDLLLLLLLLMLLLLLLLLLMLLLLLLLLLIRDDDLLLLLLLLLLLLLLLLLLMLLLLLLKMLMLLLLLLLLMLLLLMMMLLLLMLLLLLLLLLLFLLLEDDDDDDDDDDNDNNDDDDDEDDNAAFFFFMMMMMMMMMMMMMMAMMMMMMMMMMMMMAAMMMMCCCCCAAAADDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLDLLLLLMLLLLLLLLLMLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCFFFFAAAADEDDDNLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLMLLMLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLMLMMLLLLLLLLLLMLLLLLLLLLLLLLLMLMLLLLMLLLLMLLLLLLLLLLLLLLDDDLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLMLLLMLLLLLLLLLLLLLLLDDDLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLLMLMLLLMLLLLLLLLLLLLLLLLCCCAAADLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLGDLLLLLLLFLLLLFLMMLLLLLLLFFFCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCENNDDEMMLLMLLLLLLLLAFFFFMMLLLLLAMMIKKKKKKKKENDDLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMIFKNNNEALLLLFLLLLLLLLLLLLLLDDRNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLL","n":["archive","console","csv","env","file","github","load","measurement","openssl","predicates","prelude","process","string","web","CannotOpenArchiveFile","CannotWriteOutputFile","DecompressError","IntenralZipError","UnpackError","UnsafeFileName","UnsupportedFormat","borrow","borrow_mut","decompress","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","source","to_string","try_from","try_into","type_id","vzip","ConsoleWriter","InteractiveCommandError","InteractiveCommandExec","IoError","ProgressBarMode","UserError","UserInteraction","app_name","command_prefix","console_writer","description","exit_phrase","interactive","parse_and_exec","parse_progress_bar_mode_from_str","progress_bar","prompt","style","title","ConsoleWriter","InteractiveCommandError","InteractiveCommandExec","IoError","UserError","UserInteraction","app_name","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command_prefix","console_writer","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","exit_phrase","fmt","fmt","fmt","fmt","format_error","from","from","from","from","init","init","init","interact","into","into","into","is_exit_command","new","new","parse_and_exec","prompt","read_line","show_help","show_info","show_prompt","source","title","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Monitor","None","ProgressBarMode","Standard","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","init","into","parse_progress_bar_mode_from_str","to_owned","to_string","try_from","try_into","type_id","vzip","TICKER","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","binary","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","error","from","from","from","from","from","from","icons","info","init","init","init","init","init","init","into","into","into","into","into","into","scenario_title","seed","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Icon","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","account","block","blockchain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failure","from","from","from","from","from","from","from","from","from","from","from","from","ignored","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","jcli","jormungandr","scenario","seed","success","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","CsvFileBuilder","borrow","borrow_mut","build","content","deref","deref_mut","drop","file","from","from_path","header","init","into","try_from","try_into","type_id","vzip","with_content_line","with_contents","with_header","enhance_exe_name","find_exec","append","copy_file","copy_folder","find_file","get_file_as_byte_vec","have_the_same_content","make_readonly","read_file","read_file_as_vector","trim_new_line_at_end","write_lines","Asset","AssetDto","CachedReleases","CannotDeserialize","CannotFindReleaseWithVersion","ChecksumType","Download","GitHubApi","GitHubApiBuilder","GitHubApiError","InvalidChecksum","Io","RateLimitExceeded","Release","ReleaseDto","RequestError","Sha1","Sha256","WrongChecksum","asset","assets","assets","assets_from_dtos","base_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","browser_download_url","build","check","checksum","clone","clone","clone","clone_into","clone_into","clone_into","compact_os_types","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_releases","download_to","download_url","draft","draft","draft","drop","drop","drop","drop","drop","drop","drop","extension","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_filename","get","get_asset_for_current_os_by_version","get_release_for_os","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into_iter","name","name","new","new","new","os_type","prerelease","prerelease","prerelease","published_at","release","released_date","released_date","releases_per_os","releases_per_os","source","tag_name","to_owned","to_owned","to_owned","to_string","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","version","version","version_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_endpoint_url","with_token","without_first","error","response","AssetDto","ReleaseDto","assets","assets","borrow","borrow","borrow_mut","borrow_mut","browser_download_url","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","download_url","draft","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","into","is_apple","is_generic","is_unix","is_windows","is_x86_64","name","name","os_type","prerelease","prerelease","published_at","published_at","serialize","serialize","serializer","tag_name","tag_name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize","Async","BackgroundLoadProcess","Configuration","ConfigurationBuilder","Disabled","Duration","Failed","General","Id","Monitor","MonitorThread","MultiProgress","Overall","Pending","PerThread","Progress","ProgressBar","RayonWrapper","Rejected","Request","RequestFailure","RequestGenerator","RequestSendMode","RequestStatus","RequestStatusProvider","Response","Standard","Stats","Status","StatusUpdaterThread","Strategy","Success","Sync","abandon","abandon_with_message","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_steady_tick","downgrade","drop","drop","drop","duration","duration","duration","duration","enable_steady_tick","executor","failure","fetch_limit","fetch_limit","finish","finish_and_clear","finish_at_current_pos","finish_with_message","fmt","fmt","from","from","from","get_statuses","handle","handle","hidden","id","id","ids","inc","inc_length","init","init","init","insert","into","into","into","is_finished","is_hidden","join","join_and_clear","joining","length","monitor","monitor","monitor","monitor","new","new","new_spinner","next","position","println","progress","rayon","request","requests","reset","reset_elapsed","reset_eta","response","response_collector","response_status","run_load","rx","set_draw_delta","set_draw_target","set_draw_target","set_length","set_message","set_move_cursor","set_position","set_prefix","set_style","shutdown_grace_period","shutdown_grace_period","split","start","start_async","start_background_async","start_multi_sync","start_sync","state","state","stats","stats","status","status","status_pace","status_pace","status_updater","step_delay","step_delay","stop_signal","stop_signal","strategy","strategy","thread_no","thread_no","tick","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx","type_id","type_id","type_id","use_as_monitor_progress_bar","use_as_status_progress_bar","vec","vzip","vzip","vzip","wait_for_finish","with_draw_target","with_draw_target","with_style","wrap_iter","wrap_read","wrap_write","message","Configuration","ConfigurationBuilder","Disabled","Duration","Monitor","Overall","PerThread","Progress","Standard","Strategy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","duration","fetch_limit","fetch_limit","fetch_limit","fetch_limit","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","monitor","monitor","monitor","monitor","overall_requests","requests_per_thread","serialize","serialize","serialize","shutdown_grace_period","shutdown_grace_period","shutdown_grace_period","shutdown_grace_period","status_pace","status_pace","status_pace","status_pace","step_delay","step_delay","step_delay","step_delay","strategy","strategy","strategy","thread_no","thread_no","thread_no","thread_no","to_owned","to_owned","to_owned","total_votes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","MonitorThread","borrow","borrow_mut","deref","deref_mut","drop","from","handle","init","into","start","start_multi","stop","stop_signal","try_from","try_into","type_id","vzip","use_as_monitor_progress_bar","use_as_status_progress_bar","DurationRequestConsumer","Err","Executor","FixedCountRequestConsumer","NoopReducer","Ok","RateLimiter","Req","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complete","complete","consume","consume","count","delay","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","full","full","full","full","init","init","init","init","init","into","into","into","into","into","into_folder","into_folder","last_tick","new","new","new","new","process_request","rate","rate","rate_adjust","reduce","request_mode","request_mode","spawn","split_at","split_at","split_off_left","split_off_left","task_completed","task_spawned","thread_pool","to_owned","to_owned","to_owned","to_reducer","to_reducer","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx","tx","type_id","type_id","type_id","type_id","type_id","until","vzip","vzip","vzip","vzip","vzip","wait_for_finish","Async","Failed","General","Id","Pending","RayonWrapper","Rejected","Request","RequestFailure","RequestGenerator","RequestSendMode","RequestStatus","RequestStatusProvider","Response","Success","Sync","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","duration","duration","duration","err","failure","failure","fmt","fmt","fmt","fmt","fmt","fold_with","from","from","from","from","from","from","from","from","get_status","has_id","id","id","ids","init","init","init","init","init","init","into","into","into","into","into","into","into_failure","into_success","is_err","is_failed","is_failed","is_ok","is_pending","is_pending","is_success","is_success","new_from_status","next","pending","split","split","status","status","success","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_status","vec","vzip","vzip","vzip","vzip","vzip","vzip","message","IDLE_TIME","ResponseCollector","TIMEOUT","borrow","borrow_mut","deref","deref_mut","drop","from","handle","init","into","responses","responses","start","stop","stop_signal","try_from","try_into","type_id","vzip","Stats","borrow","borrow_mut","calculate_mean","calculate_passrate","calculate_tps","deref","deref_mut","drop","duration","errors","from","init","into","measure","new","print_errors","print_errors_if_any","print_summary","requests","total_requests_failed","total_requests_made","total_requests_passed","total_requests_pending","tps_status","try_from","try_into","type_id","vzip","RequestStatusProvider","SHUTDOWN_PERIOD_INTERVAL","Status","StatusProgressBar","StatusUpdaterThread","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","duration","duration","failure","fmt","fmt","from","from","from","get_statuses","handle","id","id","init","init","init","into","into","into","into","is_pending","monitor","new","new_failure","new_pending","new_success","prefix","progress_bar","response_status","set_message","spawn","status","stop","stop_signal","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_statuses","vzip","vzip","vzip","ConsumptionBenchmarkError","ConsumptionBenchmarkRun","Counter","Efficiency","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","Endurance","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","Green","NamedProcess","NoProcessWitId","Red","ResourcesUsage","Speed","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","Status","Thresholds","Timestamp","Yellow","attribute","benchmark","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","counted","cpu_usage","current_marker","definition","definition","definition","definition","definition","definition","definition","efficiency","endurance","id","inner_thresholds","marker","markers","max","max","max","memory_usage","name","name","name","name","speed","start_marker","start_marker","start_marker","status","thresholds","thresholds","thresholds","thresholds","virtual_memory_usage","Consumption","Efficiency","Endurance","NamedProcess","Speed","consumption","efficiency","endurance","speed","Consumption","NamedProcess","against","average_resource_usage","average_usage","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","get_hash","hash","id","id","init","init","into","into","median","name","name","new","new","partial_cmp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Efficiency","against","borrow","borrow_mut","clone","clone_into","counted","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","max","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","Endurance","against","as_secs","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","Speed","against","as_secs","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","into","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","ConsumptionBenchmarkDef","ConsumptionBenchmarkError","ConsumptionBenchmarkFinish","ConsumptionBenchmarkRun","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","consumption_benchmark","efficiency_benchmark","endurance_benchmark","speed_benchmark","ConsumptionBenchmarkDef","ConsumptionBenchmarkError","ConsumptionBenchmarkFinish","ConsumptionBenchmarkRun","ConsumptionBenchmarkRunAsync","NoProcessWitId","bare_metal_stake_pool_consumption_target","benchmark","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consumptions","definition","definition","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exception","fmt","fmt","for_process","for_processes","from","from","from","from","from","handle","init","init","init","init","init","into","into","into","into","into","markers","name","name","new","no_target","pids","print","print_single","snapshot","start","start_async","stop","stop","stop_signal","target","thresholds","thresholds","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_marker","definition","definition","definition","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","efficiency","efficiency","exception","fmt","from","from","from","increment","increment_by","init","init","init","into","into","into","max","max","name","name","new","no_target","print","start","start_marker","status","stop","target","thresholds","thresholds","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","definition","definition","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","endurance","exception","fmt","from","from","from","init","init","init","into","into","into","max_endurance_reached","name","name","new","no_target","print","print_with_thresholds","start","start_marker","stop","target","thresholds","thresholds","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","definition","definition","definition","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","init","init","init","into","into","into","name","name","new","new","no_target","print","speed","start","start_marker","stop","target","thresholds","thresholds","timeout_exceeded","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_thresholds","Counter","ResourcesUsage","Timestamp","counter","resources_usage","timestamp","Counter","add","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","div","drop","from","from","init","into","into","new","sub","to_owned","try_from","try_into","type_id","vzip","ResourcesUsage","borrow","borrow_mut","clone","clone_into","cmp","compare","cpu_usage","cpu_usage","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","init","into","memory_usage","memory_usage","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","virtual_memory_usage","virtual_memory_usage","vzip","Timestamp","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","duration_since","elapsed","fmt","from","from","from_str","init","into","into","new","to_owned","try_from","try_into","type_id","vzip","Green","Red","Status","Yellow","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","Thresholds","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","green_threshold","init","inner_thresholds","into","max","max","new","new_consumption","new_efficiency","new_endurance","new_speed","red_threshold","thresholds","to_owned","to_string","try_from","try_into","type_id","vzip","yellow_threshold","Error","Openssl","borrow","borrow_mut","convert_to_der","deref","deref_mut","drop","from","generate_keys","genrsa","init","into","new","path_to_str","pkcs8","program","repr","req","try_from","try_into","type_id","version","vzip","x509","file_binary_content_is_same_as","file_exists_and_not_empty","file_text_content_is_same_as","ConsumptionBenchmarkError","ConsumptionBenchmarkRun","CsvFileBuilder","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","Endurance","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","GitHubApi","GitHubApiError","NamedProcess","Openssl","ProcessError","ProcessOutput","Release","ResourcesUsage","Speed","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","Thresholds","Timestamp","Wait","WaitBuilder","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","decompress","download_file","generate_keys","load","process","ProcessError","ProcessExited","TimeoutReached","Wait","WaitBuilder","WaitError","attempts","attempts","borrow","borrow_mut","current","deref","deref_mut","drop","fmt","fmt","from","init","into","output_extensions","run_process_and_get_output","run_process_until_exited_successfully","run_process_until_response_matches","sleep","sleep","sleep","to_string","try_from","try_into","type_id","vzip","wait","message","secs","ProcessOutput","as_lossy_string","as_multi_line","as_multi_node_yaml","as_single_line","as_single_node_yaml","err_as_lossy_string","err_as_single_line","try_as_single_node_yaml","Error","TimeoutReached","Wait","WaitBuilder","advance","attempts","attempts","attempts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","check_timeout","clone","clone_into","current","current","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","new","new","sleep","sleep","sleep_between_tries","sleep_duration","timeout_reached","to_owned","to_string","to_string","tries","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","secs","StringExtension","rem_first","remove_quotas","CannotCreateOutputFile","CannotDownloadFile","IoError","WebError","api_token","borrow","borrow_mut","deref","deref_mut","download_file","drop","fmt","fmt","from","from","from","init","into","source","to_string","try_from","try_into","type_id","vzip","APIToken","APITokenManager","API_TOKEN_HEADER","InvalidHeader","ParseError","TokenError","UnauthorizedToken","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_string","init","init","init","into","into","into","into_response","is_token_valid","new","new","source","to_json","to_message","to_owned","to_response","to_status_code","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verification_token","vzip","vzip","vzip"],"q":[[0,"jortestkit"],[14,"jortestkit::archive"],[40,"jortestkit::console"],[59,"jortestkit::console::interactive"],[128,"jortestkit::console::progress_bar"],[156,"jortestkit::console::style"],[248,"jortestkit::console::style::icons"],[429,"jortestkit::csv"],[450,"jortestkit::env"],[452,"jortestkit::file"],[463,"jortestkit::github"],[635,"jortestkit::github::GitHubApiError"],[637,"jortestkit::github::release"],[706,"jortestkit::github::release::serializer"],[708,"jortestkit::load"],[886,"jortestkit::load::RequestStatus"],[887,"jortestkit::load::config"],[995,"jortestkit::load::monitor"],[1013,"jortestkit::load::progress"],[1015,"jortestkit::load::rayon"],[1130,"jortestkit::load::request"],[1270,"jortestkit::load::request::RequestStatus"],[1271,"jortestkit::load::response"],[1292,"jortestkit::load::stats"],[1321,"jortestkit::load::status"],[1390,"jortestkit::measurement"],[1454,"jortestkit::measurement::attribute"],[1463,"jortestkit::measurement::attribute::consumption"],[1520,"jortestkit::measurement::attribute::efficiency"],[1545,"jortestkit::measurement::attribute::endurance"],[1570,"jortestkit::measurement::attribute::speed"],[1596,"jortestkit::measurement::benchmark"],[1617,"jortestkit::measurement::benchmark::consumption_benchmark"],[1718,"jortestkit::measurement::benchmark::efficiency_benchmark"],[1785,"jortestkit::measurement::benchmark::endurance_benchmark"],[1849,"jortestkit::measurement::benchmark::speed_benchmark"],[1911,"jortestkit::measurement::marker"],[1917,"jortestkit::measurement::marker::counter"],[1940,"jortestkit::measurement::marker::resources_usage"],[1974,"jortestkit::measurement::marker::timestamp"],[1998,"jortestkit::measurement::status"],[2025,"jortestkit::measurement::thresholds"],[2056,"jortestkit::openssl"],[2081,"jortestkit::predicates"],[2084,"jortestkit::prelude"],[2119,"jortestkit::process"],[2151,"jortestkit::process::ProcessError"],[2152,"jortestkit::process::WaitError"],[2153,"jortestkit::process::output_extensions"],[2162,"jortestkit::process::wait"],[2230,"jortestkit::process::wait::Error"],[2231,"jortestkit::string"],[2234,"jortestkit::web"],[2258,"jortestkit::web::api_token"],[2329,"std::path"],[2330,"core::result"],[2331,"core::fmt"],[2332,"core::fmt"],[2333,"std::io::error"],[2334,"core::error"],[2335,"core::option"],[2336,"alloc::string"],[2337,"core::any"],[2338,"alloc::vec"],[2339,"core::convert"],[2340,"console::utils"],[2341,"alloc::boxed"],[2342,"core::convert"],[2343,"std::path"],[2344,"os_info::os_type"],[2345,"hex::error"],[2346,"reqwest::error"],[2347,"reqwest::blocking::response"],[2348,"core::slice::iter"],[2349,"std::time"],[2350,"std::collections::hash::map"],[2351,"semver"],[2352,"serde::de"],[2353,"time::offset_date_time"],[2354,"serde::ser"],[2355,"indicatif::progress"],[2356,"core::fmt"],[2357,"indicatif::progress"],[2358,"core::marker"],[2359,"indicatif::progress"],[2360,"indicatif::progress"],[2361,"std::io"],[2362,"std::sync::rwlock"],[2363,"alloc::sync"],[2364,"core::ops::function"],[2365,"rayon::iter::plumbing"],[2366,"std::sync::mpsc"],[2367,"core::marker"],[2368,"core::clone"],[2369,"core::fmt"],[2370,"assert_fs::fixture::dir"],[2371,"predicates_core::core"],[2372,"std::process"],[2373,"std::process"],[2374,"serde_yaml::error"],[2375,"core::iter::traits::collect"],[2376,"base64::decode"],[2377,"warp::reply"],[2378,"serde_json::value"],[2379,"http::status"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","centralized styles for the different items to display.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","style to apply when displaying the path to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","icons are not meant to add some SWAG to the display, not …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","style to apply when displaying the <code>Seed</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","icon associated the <code>jcli</code> command line binary","icon associated the <code>jcli</code> command line binary","","icon associated the test <code>Seed</code> to re-run the same tests with","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narrow linux distribution to linux type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages multiple progress bars from different threads.","","","","","A progress bar or spinner.","","","","","Not a type alias because the split method is interpreted …","","","","","","","","","","","","Finishes the progress bar and leaves the current message …","Finishes the progress bar and sets a message, and leaves …","Adds a progress bar.","","","","","","","","","","","","","","","","","Undoes <code>enable_steady_tick</code>.","Creates a new weak reference to this <code>ProgressBar</code>.","","","","","","","","Spawns a background thread to tick the progress bar.","","","","","Finishes the progress bar and leaves the current message.","Finishes the progress bar and completely clears it.","Finishes the progress bar at current position and leaves …","Finishes the progress bar and sets a message.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a completely hidden progress bar.","","","","Advances the position of a progress bar by delta.","Increase the length of the progress bar.","","","","Inserts a progress bar.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A quick convenience check if the progress bar is hidden.","Waits for all progress bars to report that they are …","Works like <code>join</code> but clears the progress bar in the end.","","","","","","","Creates a new multi progress object.","Creates a new progress bar with a given length.","Creates a new spinner.","","","Print a log line above the progress bar.","","","","","","Resets elapsed time","Resets the ETA calculation.","","","","","","Limit redrawing of progress bar to every <code>n</code> steps. Defaults …","Sets a different draw target for the multiprogress bar.","Sets a different draw target for the progress bar.","Sets the length of the progress bar.","Sets the current message of the progress bar.","Set whether we should try to move the cursor when possible …","Sets the position of the progress bar.","Sets the current prefix of the progress bar.","Overrides the stored style.","","","","","","","","","","","","","","","","","","","","","","","","","","Manually ticks the spinner or progress bar.","","","","","","","","","","","","","","","","","","","Creates a new multi progress object with the given draw …","Creates a new progress bar with a given length and draw …","A convenience builder-like function for a progress bar …","Wraps an iterator with the progress bar.","Wraps a Reader with the progress bar.","Wraps a Writer with the progress bar.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Contains the error value","","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Wait at most for <code>delay</code>, but account for time passed in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not a type alias because the split method is interpreted …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns a person with the name given them","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Runs command, wait for output and returns it output","Runs command for n times with m second interval.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","API Token wrapper type","","Header where token should be present in requests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,16,0,16,0,15,17,17,15,17,0,18,0,0,15,0,15,0,0,0,16,16,0,15,17,15,16,17,15,16,15,15,17,17,17,15,16,17,15,16,15,17,15,16,17,17,15,16,16,15,17,15,16,16,17,15,16,17,17,15,16,17,17,15,18,15,17,15,15,15,16,15,15,16,17,15,16,17,15,16,17,15,16,17,15,16,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,21,0,24,26,27,28,29,30,0,24,26,27,28,29,30,24,26,27,28,29,30,24,24,26,26,27,27,28,28,29,29,30,30,24,26,27,28,29,30,24,26,27,28,29,30,0,24,26,27,28,29,30,0,0,24,26,27,28,29,30,24,26,27,28,29,30,0,0,0,24,26,27,28,29,30,24,26,27,28,29,30,24,26,27,28,29,30,24,26,27,28,29,30,0,31,33,34,35,36,37,38,39,40,41,42,43,0,0,0,31,33,34,35,36,37,38,39,40,41,42,43,31,33,34,35,36,37,38,39,40,41,42,43,31,31,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,31,33,34,35,36,37,38,39,40,41,42,43,31,33,34,35,36,37,38,39,40,41,42,43,0,31,33,34,35,36,37,38,39,40,41,42,43,0,31,33,34,35,36,37,38,39,40,41,42,43,31,33,34,35,36,37,38,39,40,41,42,43,0,0,0,0,0,0,31,33,34,35,36,37,38,39,40,41,42,43,31,33,34,35,36,37,38,39,40,41,42,43,31,33,34,35,36,37,38,39,40,41,42,43,31,33,34,35,36,37,38,39,40,41,42,43,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,58,0,58,0,0,0,58,58,58,0,0,58,57,57,58,53,52,69,53,56,60,56,55,58,57,53,52,60,56,55,58,57,53,52,54,55,57,53,57,53,52,57,53,52,52,55,60,56,55,58,57,53,52,60,56,55,58,57,53,52,56,53,53,52,69,52,60,56,55,58,57,53,52,57,58,58,57,53,52,60,56,55,58,58,58,58,58,57,53,52,57,56,60,52,60,56,55,58,57,53,52,60,60,56,55,58,57,53,52,60,53,54,60,56,55,53,52,69,52,69,0,52,52,52,52,58,69,57,53,52,58,56,55,60,56,55,58,57,53,52,60,56,55,58,57,53,52,60,56,55,58,57,53,52,55,52,52,52,60,56,55,58,57,53,52,55,55,52,177,177,0,0,69,69,69,54,69,54,54,69,54,69,54,69,54,69,54,69,54,54,69,69,54,69,54,69,69,69,69,54,54,54,54,69,54,69,54,69,54,69,69,54,54,54,54,54,54,54,54,54,69,69,69,69,69,54,0,69,69,69,54,69,54,69,54,69,54,69,54,0,0,83,0,0,0,94,101,112,81,0,0,0,0,101,112,101,94,0,0,81,0,0,0,0,0,0,0,94,0,0,0,0,112,83,73,73,74,74,73,93,74,73,93,73,73,0,74,74,73,93,74,73,93,73,73,74,73,93,80,90,84,79,73,93,84,100,82,73,73,73,73,74,73,74,73,93,91,106,120,73,84,79,80,73,73,74,73,93,74,74,73,93,73,73,74,74,74,73,0,100,93,82,74,73,73,87,73,73,0,0,0,90,73,73,73,0,93,79,0,74,73,74,73,73,73,74,73,73,73,100,82,87,93,0,0,0,0,74,73,0,93,0,84,100,82,93,100,82,106,120,100,82,100,82,73,73,74,73,93,74,73,93,74,74,73,93,0,0,78,74,73,93,93,74,73,73,73,73,73,178,0,0,94,101,0,101,101,94,94,0,100,101,94,82,100,101,94,82,100,101,94,82,101,94,82,100,101,94,82,100,101,94,82,101,94,82,100,101,94,82,100,100,82,100,82,101,94,82,100,101,94,82,100,101,94,82,100,101,94,82,100,82,100,82,100,100,101,94,82,100,82,100,82,100,82,100,82,100,82,100,82,82,100,82,100,82,100,82,101,94,82,82,100,101,94,82,100,101,94,82,100,101,94,82,100,101,94,82,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,0,0,179,0,0,0,179,0,0,110,86,107,108,109,110,86,107,108,109,107,108,109,107,108,109,108,109,108,109,108,107,110,86,107,108,109,110,86,107,108,109,110,86,107,108,109,110,86,107,108,109,108,108,109,109,110,86,107,108,109,110,86,107,108,109,108,109,107,86,107,108,109,0,108,109,107,110,108,109,86,108,109,108,109,86,86,86,107,108,109,108,109,110,86,107,108,109,110,86,107,108,109,108,109,110,86,107,108,109,109,110,86,107,108,109,86,83,112,81,0,112,0,81,0,0,0,0,0,0,0,112,83,80,113,81,83,84,112,80,113,81,83,84,112,81,83,84,112,81,83,84,112,80,113,81,83,84,112,80,113,81,83,84,112,80,113,81,83,84,112,84,80,84,84,84,84,81,81,83,84,112,113,80,113,113,113,81,83,84,112,180,84,84,84,80,80,113,81,83,84,112,80,113,81,83,84,112,84,84,84,84,112,84,84,112,84,112,84,87,84,87,113,84,84,84,81,83,84,112,81,80,113,81,83,84,112,80,113,81,83,84,112,80,113,81,83,84,112,84,78,80,113,81,83,84,112,178,116,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,0,0,0,121,120,79,121,120,79,79,79,121,120,79,121,120,79,121,120,79,79,79,79,120,79,121,120,79,91,120,79,79,121,120,79,121,120,79,79,79,121,121,79,79,79,121,121,79,121,120,79,120,120,79,121,120,79,121,120,79,121,120,79,0,121,120,79,0,0,0,0,0,0,0,0,0,0,0,128,0,142,128,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,136,129,144,144,119,147,148,149,140,146,119,146,130,127,0,140,136,123,127,129,130,123,124,125,149,144,147,148,0,0,123,124,125,129,0,0,0,0,0,0,0,0,0,0,0,126,126,126,130,126,130,126,130,126,130,126,130,126,130,126,130,126,130,126,130,130,130,130,130,130,126,126,130,126,130,130,130,130,130,126,130,126,126,130,130,130,126,126,130,126,130,126,130,126,130,126,130,126,130,126,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,122,143,143,141,142,122,140,143,141,142,122,140,122,140,122,140,141,141,140,143,141,142,122,140,143,141,142,122,140,143,141,142,122,140,140,142,142,122,122,143,141,142,122,140,143,143,141,142,122,140,143,141,142,122,140,140,122,122,122,122,122,141,141,140,122,122,143,140,143,122,122,122,122,140,142,143,141,142,122,140,143,141,142,122,140,143,141,142,122,140,143,141,142,122,140,0,0,0,144,119,123,144,119,123,123,123,144,119,144,119,144,119,123,144,119,123,144,119,123,119,119,144,119,144,119,123,144,144,144,119,123,144,119,123,123,123,123,123,123,123,119,123,144,119,144,123,123,123,123,119,144,119,123,144,119,123,144,119,123,144,119,123,0,0,0,147,124,146,147,124,146,124,146,124,146,147,146,147,124,146,147,124,146,147,124,146,146,147,146,147,124,146,147,124,146,147,124,146,147,124,124,124,124,146,146,124,147,147,124,124,124,124,146,146,147,124,146,147,124,146,147,124,146,147,124,146,0,0,0,148,149,125,148,149,125,125,125,148,148,149,148,149,125,148,149,125,148,149,125,149,148,149,125,148,149,125,148,149,125,125,125,149,125,125,149,149,125,148,148,125,125,125,148,125,149,148,149,125,148,149,125,148,149,125,148,149,125,125,0,0,0,0,0,0,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,154,154,154,154,154,154,154,0,154,154,154,154,0,154,154,181,154,154,154,154,154,154,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,158,167,0,0,0,166,165,158,158,165,158,158,158,158,158,158,158,158,0,0,0,0,0,166,165,158,158,158,158,158,0,182,183,0,184,184,184,184,184,184,184,184,0,167,0,0,165,165,166,165,166,167,165,166,167,165,166,165,165,165,165,165,166,165,166,167,165,166,167,165,166,167,165,167,167,165,165,166,167,165,165,166,167,165,166,167,165,166,165,166,165,166,165,165,165,167,165,166,166,167,165,166,167,165,166,167,165,166,167,165,183,0,0,185,61,61,61,0,0,61,61,61,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,171,171,0,171,168,174,168,171,174,168,171,168,168,174,168,171,174,168,171,174,168,171,168,168,168,168,168,168,168,168,171,171,174,168,168,171,171,168,174,168,171,174,168,171,171,174,174,168,171,171,171,168,171,171,171,174,168,171,174,168,171,174,168,171,174,174,168,171],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[4,[2,3]]]],[5,-1,[]],[5,-1,[]],[5,2],[[3,6],7],[[3,6],7],[-1,-1,[]],[8,3],[9,3],[[],5],[-1,-2,[],[]],[3,[[11,[10]]]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,[14,[12]],15],[[4,[2,16]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],2,[],[]],0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],0,[5,2],[5,2],[5,2],0,[[17,6],7],[[15,6],7],[[16,6],7],[[16,6],7],[[15,16],2],[-1,-1,[]],[-1,-1,[]],[9,16],[-1,-1,[]],[[],5],[[],5],[[],5],[[17,-1],[[4,[2,16]]],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,[19,[12]]],20],[[12,12,12,12,12,[14,[12]]],17],[[12,12,12,[14,[12]]],15],[[-1,[14,[12]],15],[[4,[2,16]]],[]],0,[17,[[4,[[14,[12]],16]]]],[[15,16],2],[15,2],[15,2],[16,[[11,[10]]]],0,[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[[21,21],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[21,6],7],[[21,6],7],[-1,-1,[]],[[],5],[-1,-2,[],[]],[22,[[4,[21,23]]]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[24,25],[5,-1,[]],[26,25],[27,25],[5,-1,[]],[28,25],[5,-1,[]],[5,-1,[]],[29,25],[5,-1,[]],[30,25],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,32],[5,-1,[]],[5,-1,[]],[33,32],[5,-1,[]],[34,32],[35,32],[5,-1,[]],[5,-1,[]],[36,32],[37,32],[5,-1,[]],[5,-1,[]],[38,32],[5,-1,[]],[39,32],[40,32],[5,-1,[]],[5,-1,[]],[41,32],[5,-1,[]],[42,32],[43,32],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[44,[[4,[2,[45,[10]]]]]],0,[5,-1,[]],[5,-1,[]],[5,2],0,[-1,-1,[]],[-1,44,[[46,[1]]]],0,[[],5],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[[44,[14,[12]]],44],[[44,[14,[[14,[12]]]]],44],[[44,[14,[22]]],44],[1,[[47,[1]]]],[-1,[[11,[48]]],[[46,[1]]]],[[-1,-2],[[4,[2,9]]],[[46,[1]]],[[49,[12]]]],[[-1,-2,20],[[4,[2,9]]],[[46,[1]]],[[46,[1]]]],[[1,1,20],[[4,[2,50]]]],[[-1,22],[[4,[[11,[48]],9]]],[[46,[1]]]],[-1,[[4,[[14,[51]],9]]],[[46,[1]]]],[[-1,-1],[[4,[20,9]]],[[46,[1]]]],[1,2],[-1,[[4,[12,9]]],[[46,[1]]]],[-1,[[4,[[14,[12]],[45,[10]]]]],[[46,[1]]]],[12,12],[[-1,[14,[-2]]],[[4,[2,9]]],[[46,[1]]],[[49,[12]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[52,[[14,[53]]]],0,[[[14,[54]]],[[14,[53]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[55,56],[[57,[19,[51]],1],[[4,[20,58]]]],0,[57,57],[53,53],[52,52],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[52,59],59],[[],55],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[56,[[4,[60,58]]]],[[53,1],[[4,[2,58]]]],[53,12],[52,20],0,0,[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[57,22],[[58,6],7],[[58,6],7],[[57,6],7],[[53,6],7],[[52,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[61,58],[62,58],[9,58],[-1,-1,[]],[63,58],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,[[11,[57]]]],[[56,22],[[4,[64,58]]]],[[60,12],[[4,[[11,[53]],58]]]],[[52,59],[[11,[53]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,[[65,[52]]]],[53,12],0,[[[14,[52]]],60],[[12,[11,[12]]],56],[[],55],[53,59],[52,20],0,0,0,0,[52,[[11,[66]]]],0,[52,[[67,[59,53]]]],0,[58,[[11,[10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[52,68],0,[52,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,-1],55,[[49,[12]]]],[[55,[11,[-1]]],55,[[49,[12]]]],[22,22],0,0,0,0,[69,[[14,[54]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[69,69],[54,54],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[4,[69]]],70],[-1,[[4,[54]]],70],[54,12],0,[5,2],[5,2],[[69,69],20],[[54,54],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[69,6],7],[[54,6],7],[-1,-1,[]],[-1,-1,[]],[[],5],[[],5],[69,52],[-1,-2,[],[]],[-1,-2,[],[]],[54,20],[54,20],[54,20],[54,20],[54,20],[54,12],0,[54,59],[69,20],0,[69,[[11,[71]]]],0,[[69,-1],4,72],[[54,-1],4,72],0,[69,12],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[[11,[71]]]]],70],[[[11,[71]],-1],4,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[73,2],[[73,22],2],[[74,73],73],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[[-1,-2],2,[],[]],0,[[],74],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[73,2],[73,75],[5,2],[5,2],[5,2],0,0,0,0,[[73,76],2],0,0,0,0,[73,2],[73,2],[73,2],[[73,22],2],[[74,6],[[4,[2,77]]]],[[73,6],[[4,[2,77]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,[19,[78]]],[[14,[79]]],[]],0,0,[[],73],0,0,0,[[73,76],2],[[73,76],2],[[],5],[[],5],[[],5],[[74,5,73],73],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,20],[73,20],[74,[[4,[2,9]]]],[74,[[4,[2,9]]]],0,[73,76],0,0,0,0,[[],74],[76,73],[[],73],[-1,[[4,[80,81]]],[]],[73,76],[[73,-1],2,[[49,[12]]]],0,0,0,0,[73,2],[73,2],[73,2],0,0,0,[[-1,82,83,[85,[[14,[84]]]]],86,87],0,[[73,76],2],[[74,88],2],[[73,88],2],[[73,76],2],[[73,22],2],[[74,20],2],[[73,76],2],[[73,22],2],[[73,89],2],0,0,[-1,[[2,[-1,[11,[-1]]]]],[]],0,[[-1,-2,82,22],90,87,[91,92]],[[-1,-2,82,22],93,87,[91,92]],[[[14,[[2,[-1,82,12]]]]],[[14,[90]]],[87,92]],[[-1,82,22],90,87],0,0,0,[93,90],0,0,0,0,0,0,0,0,0,0,0,0,0,[73,2],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[[94,22,73],2],[73,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,90],[88,74],[[76,88],73],[[73,89],73],[[73,-1],[[95,[-1]]],96],[[73,-1],[[97,[-1]]],98],[[73,-1],[[97,[-1]]],99],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,82],[101,101],[94,94],[82,82],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[4,[101]]],70],[-1,[[4,[94]]],70],[-1,[[4,[82]]],70],[5,2],[5,2],[5,2],[5,2],[102,100],[[100,5],100],[82,[[11,[5]]]],0,0,[[101,6],7],[[94,6],7],[[82,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[100,94],100],[82,94],0,0,[103,100],[103,100],[[101,-1],4,72],[[94,-1],4,72],[[82,-1],4,72],[[100,102],100],[82,102],0,0,[[100,102],100],[82,102],0,0,[[100,102],100],[82,102],0,0,[82,101],0,0,[[100,5],100],[82,5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[82,103],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[-1,-1,[]],0,[[],5],[-1,-2,[],[]],[[[105,[[104,[[14,[84]]]]]],94,22],106],[[[105,[[104,[[14,[84]]]]]],94,73,22],106],[106,2],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[[94,22,73],2],[73,2],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,107],[108,108],[109,109],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[108],[109],[[108,[4,[80,81]]],108],[[109,[4,[80,81]]],109],0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[5,2],[5,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[108,20],[108,20],[109,20],[109,20],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[108],[109],0,[5,86],[102,107],[[76,83,102,[85,[[14,[84]]]]],108],[[102,83,102,[85,[[14,[84]]]]],109],[[[4,[80,81]],83,[85,[[14,[84]]]]],2],0,0,[107,2],[[110,2,2],2],0,0,[[86,-1],2,[111,92]],[[108,5],[[2,[108,108]]]],[[109,5],[[2,[109,109]]]],[108,108],[109,109],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[108],[109],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[83,83],[84,84],[112,112],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[84,102],0,0,[84,[[11,[81]]]],[[[11,[78]],81,102],84],0,[[81,6],7],[[81,6],7],[[83,6],7],[[84,6],7],[[112,6],7],[[[113,[-1]],-2],-2,87,114],[-1,-1,[]],[115,-1,[]],[-1,-1,[]],[-1,[[113,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[67,[12,112]]],[]],[[84,22],20],[84,[[11,[78]]]],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[84,102],84],[[84,102],84],[84,20],[84,20],[112,20],[84,20],[84,20],[112,20],[84,20],[112,20],[[84,79],84],[-1,[[4,[80,81]]],[]],[[[11,[78]],102],84],[-1,[[2,[-1,[11,[-1]]]]],[]],[[[113,[-1]]],[[2,[[113,[-1]],[11,[[113,[-1]]]]]]],87],[84,112],0,[[[11,[78]],102],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[84,79],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[-1,-1,[]],0,[[],5],[-1,-2,[],[]],[116,[[105,[[104,[[14,[84]]]]]]]],0,[[[117,[[14,[84]]]]],116],[116,[[105,[[104,[[14,[84]]]]]]]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[90,118],[90,118],[90,118],[5,-1,[]],[5,-1,[]],[5,2],0,[90,[[14,[81]]]],[-1,-1,[]],[[],5],[-1,-2,[],[]],[[90,22,103],119],[[[14,[84]],102],90],[[90,[14,[81]]],2],[90,2],[[90,22],2],0,[90,5],[90,5],[90,5],[90,5],[90,12],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,79],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[79,102],0,[79,[[11,[81]]]],[[120,6],7],[[79,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,[19,[78]]],[[14,[79]]],[]],0,[79,78],0,[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[79,112],[-1,-2,[],[]],[79,20],0,[[73,12,94],121],[[102,78,12],79],[[102,78],79],[[102,78],79],0,0,0,[[121,22],2],[[[105,[[104,[[14,[84]]]]]],-1,94,[11,[5]],22,102,102],120,[91,92]],[79,112],[120,2],0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[105,[[104,[[14,[84]]]]]],[11,[5]],-1],[[14,[79]]],[91,92]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,122,[[49,[12]]]],[-1,123,[[49,[12]]]],[-1,124,[[49,[12]]]],[-1,125,[[49,[12]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[126,[127,[126]]],128],[[[14,[129]]],129],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,130],[126,126],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[[130,130],20],[[126,126],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[130,6],7],[[130,6],7],[[126,6],7],[[126,6],7],[-1,-1,[]],[-1,-1,[]],[[-1,-2],76,[131,132],133],[[130,-1],2,134],[130,5],0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[103]]],103],[130,12],0,[[12,5],130],[[[14,[129]]],126],[[126,126],[[11,[135]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[136,[127,[136]]],128],[-1,-2,[],[]],[-1,-2,[],[]],[136,136],[[-1,-2],2,[],[]],0,[5,-1,[]],[5,-1,[]],[5,2],[[136,136],20],[[136,6],7],[[136,6],7],[-1,-1,[]],[[],5],[-1,-2,[],[]],0,[[103,103],136],[[136,136],[[11,[135]]]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,[[137,[127,[137]]],128],[137,76],[-1,-2,[],[]],[-1,-2,[],[]],[137,137],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[[137,137],20],[[137,6],7],[[137,6],7],[-1,-1,[]],[102,137],[[],5],[-1,-2,[],[]],[[138,138],137],[[137,137],[[11,[135]]]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,[[139,[127,[139]]],128],[139,76],[-1,-2,[],[]],[-1,-2,[],[]],[139,139],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[[139,139],20],[[139,6],7],[[139,6],7],[102,139],[-1,-1,[]],[[],5],[-1,-2,[],[]],[139,102],[[138,138],139],[[139,139],[[11,[135]]]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,122,[[49,[12]]]],[-1,123,[[49,[12]]]],[-1,124,[[49,[12]]]],[-1,125,[[49,[12]]]],0,0,0,0,0,0,0,0,0,0,[122,122],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[140,140],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[5,2],[5,2],[[140,12],141],[[142,6],7],[[142,6],7],[[122,-1,5],122,[[49,[12]]]],[[122,[14,[130]]],122],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[122,12],0,[12,122],[122,122],0,[141,2],[[141,130,126],2],[140,[[4,[2,142]]]],[122,140],[[122,102],143],[143,141],[140,141],0,[[122,129],122],[122,[[11,[[127,[126]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[123,123],[[-1,-2],2,[],[]],0,[119,123],0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[119,136],0,[[144,12],119],[[119,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[144,144],[[144,103],144],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[123,145],0,[123,12],0,[12,123],[123,123],[119,2],[123,144],0,[119,128],[144,119],[[123,103],123],[123,[[11,[[127,[136]]]]]],0,[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[146,146],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],0,[[147,12],146],[[146,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[147,20],[124,12],0,[12,124],[124,124],[146,2],[[146,[127,[137]]],2],[124,147],0,[147,146],[[124,102],124],[124,[[11,[[127,[137]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,125],[[-1,-2],2,[],[]],[148,125],0,0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[[149,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,12],0,[[125,139],149],[12,125],[125,125],[149,2],0,[125,148],0,[148,149],[[125,102],125],[125,[[11,[[127,[139]]]]]],0,[148,20],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[125,[127,[139]]],125],0,0,0,0,0,0,0,[[145,145],145],[-1,-2,[],[]],[-1,-2,[],[]],[145,145],[[-1,-2],2,[],[]],[[],145],[5,-1,[]],[5,-1,[]],[[145,145],145],[5,2],[-1,-1,[]],[103,145],[[],5],[145,103],[-1,-2,[],[]],[[],145],[[145,145],145],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[129,129],[[-1,-2],2,[],[]],[[129,129],135],[[-1,-2],135,[],[]],[129,103],0,[5,-1,[]],[5,-1,[]],[5,2],[[129,129],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[129,6],7],[[129,6],7],[-1,-1,[]],[[],5],[-1,-2,[],[]],[129,103],0,[[103,103,103],129],[[129,129],[[11,[135]]]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[129,103],0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[138,138],[[-1,-2],2,[],[]],[[],138],[5,-1,[]],[5,-1,[]],[5,2],[[138,138],102],[138,102],[[138,6],7],[-1,-1,[]],[66,138],[22,[[4,[138]]]],[[],5],[138,66],[-1,-2,[],[]],[[],138],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[128,128],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[[128,128],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[128,6],7],[[128,6],7],[-1,-1,[]],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[127,[-1]]],[[127,[-1]]],150],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,2],[[[127,[-1]],6],7,[151,150,152,153]],[[[127,[-1]],6],7,152],[-1,-1,[]],[[[127,[-1]]],-1,[153,150]],[[],5],0,[-1,-2,[],[]],[[[127,[-1]]],-1,[153,150]],0,[[-1,-1,-1,-1],[[127,[-1]]],[153,150]],[129,[[127,[126]]]],[103,[[127,[136]]]],[102,[[127,[137]]]],[102,[[127,[139]]]],[[[127,[-1]]],-1,[153,150]],[[[127,[-1]]],[[14,[[2,[128,-1]]]]],[153,150]],[-1,-2,[],[]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[[[127,[-1]]],-1,[153,150]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[154,155,155],[[4,[12,9]]]],[5,-1,[]],[5,-1,[]],[5,2],[-1,-1,[]],[156,[[2,[48,48,48]]]],[[154,103,155],[[4,[12,9]]]],[[],5],[-1,-2,[],[]],[[],[[4,[154,9]]]],[155,12],[[154,155,155],[[4,[12,9]]]],0,0,[[154,155,155],[[4,[12,9]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[154,[[4,[12,9]]]],[-1,-2,[],[]],[[154,155,155,155],[[4,[12,9]]]],[-1,[[0,[[157,[1]]]]],[[49,[48]]]],[[],[[0,[[157,[1]]]]]],[-1,[[0,[[157,[1]]]]],[[46,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[5,-1,[]],[5,-1,[]],[5,2],[[158,6],7],[[158,6],7],[-1,-1,[]],[[],5],[-1,-2,[],[]],0,[159,160],[[159,76,161,22,22],2],[[159,-1,76,76,22,22],[[4,[2,158]]],162],[76,2],0,0,[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,[-1,12,[]],[-1,[[14,[12]]],[]],[-1,[[14,[[163,[12,12]]]]],[]],[-1,12,[]],[-1,[[163,[12,12]]],[]],[-1,12,[]],[-1,12,[]],[-1,[[4,[[163,[12,12]],164]]],[]],0,0,0,0,[165,2],[165,76],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[166,165],[165,[[4,[2,167]]]],[165,165],[[-1,-2],2,[],[]],[165,76],0,[[],166],[[],165],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[[167,6],7],[[167,6],7],[[165,6],7],[[165,6],7],[-1,-1,[]],[-1,-1,[]],[102,165],[-1,-1,[]],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],166],[[102,76],165],0,0,[[166,76],166],[165,102],[165,20],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[[166,76],166],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[22,22],[-1,-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[[12,1],[[4,[2,61]]]],[5,2],[[61,6],7],[[61,6],7],[-1,-1,[]],[9,61],[63,61],[[],5],[-1,-2,[],[]],[61,[[11,[10]]]],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[168,[[19,[51]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,168],[[-1,-2],2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[-1,-2,[],[[170,[169]]]],[-1,-2,[],[[170,[169]]]],[[168,168],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[168,6],7],[[171,6],7],[[171,6],7],[-1,-1,[]],[[[19,[51]]],168],[-1,-1,[]],[-1,-1,[]],[172,171],[12,[[4,[168,171]]]],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,173],[[174,168],20],[12,[[4,[174,171]]]],[[[14,[51]]],168],[171,[[11,[10]]]],[171,175],[171,12],[-1,-2,[],[]],[171,173],[171,176],[-1,12,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Path",2329],[15,"tuple"],[4,"DecompressError",14],[4,"Result",2330],[15,"usize"],[3,"Formatter",2331],[6,"Result",2331],[4,"ZipError",2332],[3,"Error",2333],[8,"Error",2334],[4,"Option",2335],[3,"String",2336],[3,"TypeId",2337],[3,"Vec",2338],[3,"ConsoleWriter",59],[4,"InteractiveCommandError",59],[3,"UserInteraction",59],[8,"InteractiveCommandExec",59],[15,"slice"],[15,"bool"],[4,"ProgressBarMode",128],[15,"str"],[4,"Infallible",2339],[3,"binary",156],[3,"Style",2340],[3,"seed",156],[3,"error",156],[3,"success",156],[3,"info",156],[3,"scenario_title",156],[3,"seed",248],[6,"Icon",248],[3,"jcli",248],[3,"jormungandr",248],[3,"scenario",248],[3,"wallet",248],[3,"account",248],[3,"transaction",248],[3,"block",248],[3,"blockchain",248],[3,"success",248],[3,"failure",248],[3,"ignored",248],[3,"CsvFileBuilder",429],[3,"Box",2341],[8,"AsRef",2339],[4,"Cow",2342],[3,"PathBuf",2329],[8,"Into",2339],[3,"Error",2343],[15,"u8"],[3,"Release",463],[3,"Asset",463],[3,"AssetDto",637],[3,"GitHubApiBuilder",463],[3,"GitHubApi",463],[4,"ChecksumType",463],[4,"GitHubApiError",463],[4,"Type",2344],[3,"CachedReleases",463],[4,"WebError",2234],[4,"FromHexError",2345],[3,"Error",2346],[3,"Response",2347],[3,"Iter",2348],[3,"SystemTime",2349],[3,"HashMap",2350],[3,"Version",2351],[3,"ReleaseDto",637],[8,"Deserializer",2352],[3,"OffsetDateTime",2353],[8,"Serializer",2354],[3,"ProgressBar",708],[3,"MultiProgress",708],[3,"WeakProgressBar",2355],[15,"u64"],[3,"Error",2331],[6,"Id",1130],[3,"Status",1321],[3,"Request",1130],[4,"RequestFailure",1130],[3,"Configuration",887],[4,"RequestSendMode",1130],[3,"Response",1130],[3,"Sender",2356],[3,"Executor",1015],[8,"RequestGenerator",1130],[3,"ProgressDrawTarget",2355],[3,"ProgressStyle",2357],[3,"Stats",1292],[8,"RequestStatusProvider",1321],[8,"Send",2358],[3,"BackgroundLoadProcess",708],[4,"Monitor",887],[3,"ProgressBarIter",2355],[8,"Iterator",2359],[3,"ProgressBarWrap",2355],[8,"Read",2360],[8,"Write",2360],[3,"ConfigurationBuilder",887],[4,"Strategy",887],[3,"Duration",2361],[15,"u32"],[3,"RwLock",2362],[3,"Arc",2363],[3,"MonitorThread",995],[3,"RateLimiter",1015],[3,"FixedCountRequestConsumer",1015],[3,"DurationRequestConsumer",1015],[3,"NoopReducer",1015],[8,"FnOnce",2364],[4,"RequestStatus",1130],[3,"RayonWrapper",1130],[8,"Folder",2365],[15,"never"],[3,"ResponseCollector",1271],[3,"Receiver",2356],[15,"f64"],[3,"EfficiencyBenchmarkFinish",1718],[3,"StatusUpdaterThread",1321],[3,"StatusProgressBar",1321],[3,"ConsumptionBenchmarkDef",1617],[3,"EfficiencyBenchmarkDef",1718],[3,"EnduranceBenchmarkDef",1785],[3,"SpeedBenchmarkDef",1849],[3,"Consumption",1463],[3,"Thresholds",2025],[4,"Status",1998],[3,"ResourcesUsage",1940],[3,"NamedProcess",1463],[8,"Hash",2366],[8,"Sized",2358],[8,"BuildHasher",2366],[8,"Hasher",2366],[4,"Ordering",2367],[3,"Efficiency",1520],[3,"Endurance",1545],[3,"Timestamp",1974],[3,"Speed",1570],[3,"ConsumptionBenchmarkRun",1617],[3,"ConsumptionBenchmarkFinish",1617],[4,"ConsumptionBenchmarkError",1617],[3,"ConsumptionBenchmarkRunAsync",1617],[3,"EfficiencyBenchmarkRun",1718],[3,"Counter",1917],[3,"EnduranceBenchmarkFinish",1785],[3,"EnduranceBenchmarkRun",1785],[3,"SpeedBenchmarkRun",1849],[3,"SpeedBenchmarkFinish",1849],[8,"Clone",2368],[8,"Display",2331],[8,"Debug",2331],[8,"PartialOrd",2367],[3,"Openssl",2056],[3,"ChildPath",2369],[3,"TempDir",2370],[8,"Predicate",2371],[4,"ProcessError",2119],[3,"Command",2372],[3,"Output",2372],[15,"i32"],[8,"Fn",2364],[3,"BTreeMap",2373],[3,"Error",2374],[3,"Wait",2162],[3,"WaitBuilder",2162],[4,"Error",2162],[3,"APIToken",2258],[15,"char"],[8,"FromIterator",2375],[4,"TokenError",2258],[4,"DecodeError",2376],[6,"Response",2377],[3,"APITokenManager",2258],[4,"Value",2378],[3,"StatusCode",2379],[13,"CannotDeserialize",635],[13,"Failed",1270],[6,"Req",1015],[8,"RequestStatusProvider",1130],[6,"Error",2056],[13,"ProcessExited",2151],[13,"TimeoutReached",2230],[8,"ProcessOutput",2153],[8,"StringExtension",2231]]},\
"lib":{"doc":"","t":"AAAADNNNNENRNNNMFFLLLLLLFLLLLLLFLLLLLLLLLFLLLLLFLLLLLLLLLLLLLMMMNNENRNNDLLLLMMLLFLLLLFLLFFLLLMLLLLLLLLLLLFFFMMLLMLLLLLLLLLLNNNNEDNNNNNNNNENDNNNNNNNDENNDNNLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMRRFFFFFFFFFFF","n":["find","offline","recover","tally","AccountId","AddressNotAccount","CorruptedFragments","CorruptedKey","Csv","Error","Io","MAIN_TAG","NotRecognized","Storage","UnhandledInput","account","all_voters","batch_key_check","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","convert_key_formats","deref","deref","deref_mut","deref_mut","drop","drop","find_vote","fmt","fmt","fmt","from","from","from","from","from","header","id_from_pub","in_current_span","init","init","into","into","read_lines","source","to_owned","to_string","to_url_arg","try_from","try_from","try_from_str","try_into","try_into","type_id","type_id","vzip","vzip","addr","addr","kind","CorruptedFragments","Csv","Error","Io","MAIN_TAG","Storage","UnhandledInput","Vote","borrow","borrow","borrow_mut","borrow_mut","caster","choice","clone","clone_into","decrypt_shares_to_b64","deref","deref","deref_mut","deref_mut","deserialize_truthy_falsy","drop","drop","extract_decryption_shares_and_results","extract_fragments_from_storage","fmt","fmt","fmt","fragment_id","from","from","from","from","from","header","in_current_span","init","init","into","into","json_from_file","ledger_after_tally","ledger_before_tally","proposal","raw_fragment","serialize","source","time","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountNotFound","Block0ConfigurationError","DeserializeError","DuplicatedFragment","Error","FragmentReplayer","InvalidTransactionSignature","InvalidUtxoInputs","InvalidUtxoWitnesses","InvalidVoteCast","LedgerError","NonVotingAccount","NotAVotingFragment","NotAVotingFragment","ReplayError","ReplayError","ReplayedFragment","TallyPeriodError","TransactionBeforeStart","TransactionValidForTooLong","TxBuilderError","UnbalancedTransaction","UnsupportedMultipleOutputs","UnsupportedPrivateVotes","ValidatedFragment","ValidationError","ValidationError","ValueError","VoteFragmentFilter","VotingPeriodError","WalletError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","committee_id_to_address","confirm_fragment","deconstruct_account_transaction","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fees","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_block0","header","header","header","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","new","next","non_voting_wallets","original","pending_requests","recover_ledger_from_fragments","replay","replay_protection","replay_tx","replay_votecast","replayed","settings","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_vote_cast","validate_tx","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallets","id","id","id","range","HRP_PK","HRP_SK","decrypt_tally_with_secret_keys","encode_decrypt_shares","encode_public_keys","encode_secret_keys","extract_decrypt_shares","get_members_public_share","get_members_secret_share","load_decrypt_shares","load_encrypted_tally","parse_private_committee_keys","parse_public_committee_keys"],"q":[[0,"lib"],[4,"lib::find"],[61,"lib::find::Error"],[64,"lib::offline"],[123,"lib::recover"],[287,"lib::recover::ReplayError"],[288,"lib::recover::ValidationError"],[291,"lib::tally"],[304,"std::path"],[305,"alloc::string"],[306,"std::collections::hash::set"],[307,"core::error"],[308,"alloc::boxed"],[309,"core::result"],[310,"alloc::vec"],[311,"core::fmt"],[312,"core::fmt"],[313,"csv::error"],[314,"chain_storage::error"],[315,"color_eyre::section"],[316,"core::fmt"],[317,"core::marker"],[318,"chain_crypto::key"],[319,"chain_impl_mockchain::account"],[320,"core::option"],[321,"core::any"],[322,"chain_vote::tally"],[323,"serde::de"],[324,"chain_impl_mockchain::fragment"],[325,"std::collections::hash::map"],[326,"eyre"],[327,"core::convert"],[328,"serde::de"],[329,"jormungandr_lib::interfaces::vote"],[330,"eyre"],[331,"jormungandr_lib::interfaces::committee"],[332,"jormungandr_lib::interfaces::address"],[333,"chain_impl_mockchain::transaction::transaction"],[334,"chain_impl_mockchain::account"],[335,"wallet::transaction::builder"],[336,"jormungandr_lib::interfaces::fragment_log_persistent"],[337,"chain_impl_mockchain::ledger::ledger"],[338,"wallet::account"],[339,"chain_impl_mockchain::value"],[340,"jormungandr_lib::interfaces::block0_configuration"],[341,"chain_impl_mockchain::transaction::element"],[342,"core::iter::traits::iterator"],[343,"chain_impl_mockchain::ledger::ledger"],[344,"chain_impl_mockchain::fragment"],[345,"chain_vote::tally"],[346,"chain_vote::tally"]],"d":["","","","","","","","","","","","","","","","","Collect all voting keys in ca and 0x format and write to …","check key history of multiple keys and write metadata to …","","","","","","","convert keys from ca to 0x and vice versa","","","","","","","Did I vote? Iterate through all vote cast fragments and …","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Generate account identifier from ED25519 Key","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","read voter keys from file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract decryption shares and results from tally fragments","Extract fragments from storage","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Replay all fragments including tally fragments to obtain …","Replay up until tally, do not include tally fragments …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fragment which has passed validation","","","","","","","","","","","","","","","","","","","","","","","Unpack TX into payload, id and witness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Replay fragments from storage and recover the ledger state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check that the transaction input/outputs/witnesses is …","","","","","","","","","","","","","","A Bech32_encoded address consists of 3 parts: A …","","Decrypt tally with secret keys Internal use only","Encode decrypt shares to base64 for publication","Encode public shares to bech32","Encode committee secret keys to Bech32","Extract decyrpt shares for publication","Get member’s public share","Get member’s secret share","Load decrypt shares","Load encrypted tally","Parse private committee keys from Bech32 representation","Parse public committee keys from Bech32 representation"],"i":[0,0,0,0,0,12,12,12,12,0,12,0,12,12,12,8,0,0,12,8,12,8,8,8,0,12,8,12,8,12,8,0,12,12,8,12,12,12,12,8,12,0,12,12,8,12,8,0,12,8,12,8,12,8,8,12,8,12,8,12,8,71,72,72,33,33,0,33,0,33,33,0,33,10,33,10,10,10,10,10,0,33,10,33,10,0,33,10,0,0,33,33,10,10,33,33,33,33,10,33,33,33,10,33,10,0,0,0,10,10,10,33,10,10,33,33,10,33,10,33,10,33,10,49,48,48,46,0,0,46,46,46,46,48,49,46,49,0,48,0,46,46,46,48,46,49,46,0,0,48,48,0,46,48,60,61,57,43,48,46,49,60,61,57,43,48,46,49,0,43,0,60,61,57,43,48,46,49,60,61,57,43,48,46,49,60,61,57,43,48,46,49,57,48,48,46,46,49,49,60,57,60,61,57,43,48,48,48,48,48,48,48,48,48,46,46,49,43,48,46,49,48,46,49,60,61,57,43,48,46,49,60,61,57,43,48,46,49,57,57,57,43,61,43,0,43,57,43,43,61,43,48,46,48,46,49,60,61,57,43,48,46,49,60,61,57,43,48,46,49,60,61,57,43,48,46,49,0,57,60,61,57,43,48,46,49,43,73,74,75,74,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[7,[[4,[[3,[2]],[3,[2]]]],[6,[5]]]]]],[[1,2],[[7,[4,[6,[5]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],4,[],[]],[2,[[7,[2,[6,[5]]]]]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,4],[9,4],[[1,2],[[7,[[11,[10]],12]]]],[[12,13],14],[[12,13],14],[[8,13],14],[-1,-1,[]],[15,12],[16,12],[17,12],[-1,-1,[]],[[-1,-2],[[18,[-2,-3]]],[],[19,20,21],[]],[[[23,[22]]],24],[-1,[],[]],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[25,[[7,[[11,[2]],[6,[5]]]]]],[12,[[26,[5]]]],[-1,-2,[],[]],[-1,2,[]],[8,2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[25,[[7,[8,12]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[10,10],[[-1,-2],4,[],[]],[[[11,[28]]],[[11,[2]]]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[-1,[[7,[29]]],30],[9,4],[9,4],[[[11,[31]]],[[32,[2,[11,[2]]]]]],[1,[[7,[[11,[31]],[6,[5]]]]]],[[33,13],14],[[33,13],14],[[10,13],14],0,[-1,-1,[]],[16,33],[15,33],[17,33],[-1,-1,[]],[[-1,-2],[[18,[-2,-3]]],[],[19,20,21],[]],[-1,[],[]],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[[35,[1]]],36],[[[11,[31]],37],[[7,[[11,[38]],39]]]],[[[11,[31]],37],[[7,[[11,[38]],39]]]],0,0,[[10,-1],7,40],[33,[[26,[5]]]],0,[-1,-2,[],[]],[-1,2,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,42],[[43,31],4],[[[44,[-1]]],[[7,[[4,[-1,24,45]],46]]],47],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,4],[9,4],[9,4],[9,4],[9,4],[9,4],[9,4],0,[[48,13],14],[[48,13],14],[[46,13],14],[[46,13],14],[[49,13],14],[[49,13],14],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[50,48],[51,48],[52,48],[53,48],[49,48],[54,48],[55,48],[46,48],[-1,-1,[]],[56,46],[-1,-1,[]],[37,[[7,[[4,[43,37]],48]]]],[[-1,-2],[[18,[-2,-3]]],[],[19,20,21],[]],[[-1,-2],[[18,[-2,-3]]],[],[19,20,21],[]],[[-1,-2],[[18,[-2,-3]]],[],[19,20,21],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,-1],[[7,[[57,[-1]],48]]],58],[[[57,[-1]]],26,58],0,0,0,[[37,-1],[[7,[[4,[59,[11,[31]]]],48]]],58],[[43,60],[[7,[61,[4,[48,31]]]]]],0,[[43,[44,[62]]],[[7,[31,48]]]],[[43,[44,[63]]],[[7,[31,48]]]],0,0,[48,[[26,[5]]]],[46,[[26,[5]]]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[[44,[63]]],29],[[[57,[-1]],[44,[-2]],64],[[7,[65,46]]],58,47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[66,[11,[67]]],[[34,[[11,[68]],[6,[5]]]]]],[[[11,[28]]],[[11,[2]]]],[[[11,[69]]],[[34,[[11,[2]],[6,[5]]]]]],[[[11,[[70,[22]]]]],[[34,[[11,[2]],[6,[5]]]]]],[[66,[11,[67]]],[[11,[28]]]],[2,[[34,[69,[6,[5]]]]]],[2,[[34,[67,[6,[5]]]]]],[[[11,[2]]],[[34,[[11,[28]],[6,[5]]]]]],[2,[[34,[66,[6,[5]]]]]],[[[11,[2]]],[[34,[[4,[[11,[69]],[11,[67]]]],[6,[5]]]]]],[[[11,[2]]],[[34,[[11,[69]],[6,[5]]]]]]],"c":[],"p":[[3,"Path",304],[3,"String",305],[3,"HashSet",306],[15,"tuple"],[8,"Error",307],[3,"Box",308],[4,"Result",309],[3,"AccountId",4],[15,"usize"],[3,"Vote",64],[3,"Vec",310],[4,"Error",4],[3,"Formatter",311],[6,"Result",311],[3,"Error",312],[3,"Error",313],[4,"Error",314],[3,"IndentedSection",315],[8,"Display",311],[8,"Send",316],[8,"Sync",316],[3,"Ed25519",317],[3,"PublicKey",318],[3,"Identifier",319],[15,"str"],[4,"Option",320],[3,"TypeId",321],[3,"TallyDecryptShare",322],[15,"bool"],[8,"Deserializer",323],[4,"Fragment",324],[3,"HashMap",325],[4,"Error",64],[6,"Result",326],[8,"AsRef",327],[8,"Deserialize",323],[3,"Block",328],[3,"VotePlanStatus",329],[3,"Report",326],[8,"Serializer",330],[3,"CommitteeIdDef",331],[3,"Address",332],[3,"FragmentReplayer",123],[3,"TransactionSlice",333],[6,"Witness",319],[4,"ValidationError",123],[8,"Payload",334],[4,"Error",123],[4,"ReplayError",123],[4,"Error",335],[3,"DeserializeError",336],[4,"Error",337],[4,"Error",338],[4,"ValueError",339],[4,"Block0ConfigurationError",340],[4,"BalanceError",341],[3,"VoteFragmentFilter",123],[8,"Iterator",342],[3,"Ledger",337],[3,"ValidatedFragment",123],[3,"ReplayedFragment",123],[3,"NoExtra",334],[3,"VoteCast",343],[6,"FragmentId",324],[3,"SpendingCounter",344],[3,"EncryptedTally",322],[3,"MemberSecretKey",345],[3,"Tally",322],[3,"MemberPublicKey",345],[3,"SecretKey",318],[13,"NotRecognized",61],[13,"AddressNotAccount",61],[13,"NotAVotingFragment",287],[13,"InvalidTransactionSignature",288],[13,"DuplicatedFragment",288]]},\
"loki":{"doc":"","t":"DEDDNNNNNNAAMMMAMMMMAAAMMMMMMMDLLLLLLLLLLLLLMLLLLMMLLLLLLDLMLLLMLMLLLLLLLLLMLMMLMLMLLLLNENNNLLLLLLLLLLLLLLLLLLLLLDDLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLMMLMLLMMLMMLLLLLLLLLLLLLLDNGNEDNLMMMMLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLMMMLLMLMLLLLLLLLLLLLLFFFFFFDEDDNNNNNNRLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMM","n":["AdversaryFragmentSender","AdversaryFragmentSenderError","AdversaryFragmentSenderSetup","FaultyTransactionBuilder","FragmentBuilderError","FragmentExporterError","FragmentNotRejected","FragmentVerifierError","SendFragmentError","SyncNodeError","args","block","block0_hash","block0_hash","dump_fragments","error","expiry_generator","expiry_generator","fees","fees","process","rest","sender","setup","sync_nodes","verify","alias","block","date","logs","Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","genesis_block","group_id","init","into","into_request","listen_address","secret","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","BlockBuilder","bft","block_date","borrow","borrow_mut","build","consensus_protocol","contents","contents","deref","deref_mut","drop","from","genesis_praos","init","into","into_request","invalid_hash","invalid_hash","invalid_signature","invalid_signature","parent_block_header","signing_key","signing_key","stake_pool","stake_pool","try_from","try_into","type_id","vzip","Block0","Error","IO","Read","Yaml","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","AdversaryNode","AdversaryNodeBuilder","address","alias","alias","alias","block0_configuration","borrow","borrow","borrow_mut","borrow_mut","build","builder","deref","deref","deref_mut","deref_mut","drop","drop","drop","fees","fragment_sender","from","from","genesis_block","genesis_block_hash","init","init","into","into","into_request","into_request","invalid_block0_hash","new","new","node_data","node_data","open_client_connections","p2p_public_addr","protocol_version","send_block_to_peer","send_header_to_peer","server","server_enabled","steal_temp_dir","temp_dir","temp_dir","to_trusted_peer","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_alias","with_invalid_block0_hash","with_protocol_version","with_server_enabled","with_temp_dir","AdversaryRest","Block0","Context","Hash","Parent","Request","Tip","address","address","address","adversary","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","get_header","handlers","init","init","init","into","into","into","into_request","into_request","into_request","new","parent","phantom","ptr","serialize","signing_key","signing_key","stake_pool","stake_pool","start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","invalid_fragment","invalid_hash","invalid_signature","nonexistent_leader","send_block","wrong_leader","AdversaryFragmentSender","AdversaryFragmentSenderError","AdversaryFragmentSenderSetup","FaultyTransactionBuilder","FragmentBuilderError","FragmentExporterError","FragmentNotRejected","FragmentVerifierError","SendFragmentError","SyncNodeError","_DERIVE_core_fmt_Debug_FOR_AdversaryFragmentSenderError","block0_hash","block0_hash","block0_hash","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dump_fragment_if_enabled","dump_fragments","dump_into","empty","expiry_generator","expiry_generator","fees","fees","fees","fmt","fmt","from","from","from","from","from","from","from","from","from","from_settings","from_settings","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","logs","new","new","no_input","no_output","no_sync_nodes","no_verify","no_witnesses","random_faulty_cert","random_faulty_transaction","send_all_faulty_transactions","send_faulty_full_delegation","send_faulty_transactions","send_faulty_transactions_with_iteration_delay","send_fragment","send_random_faulty_transaction","send_transactions_with_invalid_counter","setup","source","sync_before","sync_nodes","sync_nodes","to_owned","to_owned","to_string","transaction_to","try_from","try_from","try_from","try_from","try_from_jormungandr","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unbalanced","verify","verify","verify","vzip","vzip","vzip","vzip","wait_for_node_sync_if_enabled","with_verify","wrong_block0_hash","wrong_counter","alias","block","date","logs"],"q":[[0,"loki"],[26,"loki::AdversaryFragmentSenderError"],[30,"loki::args"],[57,"loki::block"],[87,"loki::error"],[113,"loki::process"],[174,"loki::rest"],[242,"loki::rest::handlers"],[248,"loki::sender"],[371,"loki::sender::AdversaryFragmentSenderError"],[375,"clap_builder::builder::command"],[376,"core::fmt"],[377,"core::fmt"],[378,"clap_builder"],[379,"core::result"],[380,"clap_builder::util::id"],[381,"core::option"],[382,"tonic::request"],[383,"core::any"],[384,"chain_impl_mockchain::date"],[385,"chain_impl_mockchain::header::header"],[386,"chain_impl_mockchain::block"],[387,"chain_impl_mockchain::fragment::content"],[388,"chain_crypto::algorithms::ed25519"],[389,"jormungandr_lib::crypto::key"],[390,"chain_impl_mockchain::testing::data::stake_pool"],[391,"std::io::error"],[392,"chain_ser::deser"],[393,"jormungandr_lib::interfaces::block0_configuration"],[394,"serde_yaml::error"],[395,"core::error"],[396,"alloc::string"],[397,"core::net::socket_addr"],[398,"jormungandr_automation::jormungandr"],[399,"jormungandr_lib::interfaces::block0_configuration"],[400,"thor::fragment::setup"],[401,"thor::fragment::sender"],[402,"jormungandr_automation::testing::benchmark::sync::node"],[403,"core::marker"],[404,"jormungandr_lib::crypto::hash"],[405,"jormungandr_automation::jormungandr::starter::testing_directory"],[406,"jormungandr_automation::jormungandr::grpc::server::data"],[407,"std::sync::rwlock"],[408,"alloc::sync"],[409,"jormungandr_automation::jormungandr::grpc::server::controller"],[410,"jormungandr_automation::jormungandr::grpc::client"],[411,"jormungandr_lib::interfaces::config::node"],[412,"jormungandr_automation::jormungandr::grpc::server"],[413,"serde::de"],[414,"serde::ser"],[415,"warp::reply"],[416,"warp::reply"],[417,"thor::wallet"],[418,"chain_impl_mockchain::fragment"],[419,"jormungandr_automation::jormungandr::fragment_node"],[420,"std::path"],[421,"thor::fragment::setup"],[422,"thor::fragment"],[423,"jormungandr_automation::jormungandr::fragment_node"],[424,"jormungandr_lib::interfaces::settings"],[425,"core::iter::traits::iterator"],[426,"thor::fragment::sender"],[427,"jormungandr_automation::jormungandr::fragment_node"],[428,"core::marker"],[429,"core::time"],[430,"chain_impl_mockchain::transaction::input"],[431,"chain_impl_mockchain::ledger::ledger"],[432,"core::ops::function"],[433,"jormungandr_automation::jormungandr::process"],[434,"jormungandr_automation::jormungandr::rest"]],"d":["","Send malformed transactions Only supports account based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Path to the genesis block (the block0) of the blockchain","","","Calls <code>U::from(self)</code>.","","Specifies the address the node will listen.","Set the secret node config (in YAML format).","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","An adversary-controlled node, which can deviate in every …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","As a limitation of the current implementation, the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send malformed transactions Only supports account based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,62,62,62,62,62,62,0,0,66,56,57,0,66,56,66,56,0,0,0,56,57,57,88,88,88,88,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,29,29,29,33,29,29,33,29,33,33,29,29,33,29,33,29,29,33,29,29,29,33,33,29,29,33,29,33,29,33,33,29,33,29,29,29,29,33,29,29,29,33,29,29,33,29,29,33,29,33,29,33,29,33,33,33,33,33,33,0,49,0,49,0,0,49,48,48,50,48,53,48,50,49,48,50,49,49,48,50,49,48,50,49,50,49,48,50,49,50,49,48,50,49,49,0,48,50,49,48,50,49,48,50,49,48,50,53,53,49,48,48,48,48,48,48,50,49,48,50,49,48,50,49,48,50,49,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,0,56,66,56,66,62,57,56,66,62,57,56,57,56,57,56,66,62,57,56,66,62,57,56,66,62,57,56,56,57,57,66,66,56,56,66,56,62,62,66,62,62,62,62,62,62,57,56,66,56,66,62,57,56,66,62,57,56,66,62,57,56,62,66,56,66,66,57,57,66,56,56,56,56,56,56,56,56,56,56,62,57,57,57,57,56,62,66,66,62,57,56,56,66,62,57,56,66,62,57,56,66,57,56,57,66,62,57,56,56,57,66,66,88,88,88,88],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[[4,5],6],[-1,-1,[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],0,[[],[[11,[10]]]],[[],2],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,13,[]],[[4,7],[[9,[3,8]]]],[[4,7],[[9,[3,8]]]],[-1,-2,[],[]],0,[[14,15],16],0,[-1,-2,[],[]],[-1,-2,[],[]],[16,17],0,[[16,18],16],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[14,15],16],[[],2],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[16,16],0,[16,16],0,0,[[16,[20,[19]]],16],0,[[16,21],16],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[22,5],6],[[22,5],6],[23,22],[24,22],[-1,-1,[]],[25,22],[26,22],[[],2],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[22,[[11,[27]]]],[-1,28,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],0,0,[29,30],[29,31],0,0,[29,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,29],[17,33],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[29,3],[2,3],[29,34],[[29,[35,[-1]]],[[36,[-1]]],[37,38]],[-1,-1,[]],[-1,-1,[]],0,[29,39],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[[[11,[40]],28,[43,[[42,[41]]]],[11,[44]]],29],[17,33],[29,[[43,[[42,[41]]]]]],0,0,[29,30],0,[[29,30,17],[[9,[3,45]]]],[[29,30,15],[[9,[3,45]]]],0,0,[29,[[11,[40]]]],0,0,[29,46],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[33,28],33],[33,33],[[33,47],33],[33,33],[[33,40],33],0,0,0,0,0,0,0,[[48,30],48],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],49],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[9,[50]]],51],[-1,[[9,[49]]],51],[2,3],[2,3],[2,3],[[50,5],6],[[49,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[49,29],15],0,[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[29,48],0,0,0,[[49,-1],9,52],[[48,[20,[19]]],48],0,[[48,21],48],0,[48,3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[50,53],[[0,[54]]]],[[50,53],[[0,[54]]]],[[50,53],[[0,[54]]]],[[50,53],[[0,[54]]]],[[53,30,17],[[55,[28]]]],[[50,53],[[0,[54]]]],0,0,0,0,0,0,0,0,0,0,0,[[[56,[-1]]],39,[37,38]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[57,[-1]]],[[57,[-1]]],[58,37,38]],[[[56,[-1]]],[[56,[-1]]],[58,37,38]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[[[56,[-1]],59,60,61],[[9,[3,62]]],[37,38]],0,[[63,64],[[57,[65]]]],[66,60],0,0,[[[56,[-1]]],34,[37,38]],0,0,[[62,5],6],[[62,5],6],[-1,-1,[]],[-1,-1,[]],[67,62],[68,62],[69,62],[70,62],[71,62],[-1,-1,[]],[-1,-1,[]],[[72,14],66],[[72,14,[57,[-1]]],[[56,[-1]]],[37,38]],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[62,[[0,[73]]]],[[39,34,74],66],[[39,34,74,[57,[-1]]],[[56,[-1]]],[37,38]],[[66,59],60],[[66,59],60],[[[57,[-1]]],64,[37,38]],[[],[[57,[65]]]],[[66,59,59],60],[[[56,[-1]],59,14,75],[[9,[60,69]]],[37,38]],[[[56,[-1]],59,59],60,[37,38]],[[[56,[-1]],59,59,-2],[[9,[[77,[76]],62]]],[37,38],[61,37,78,38]],[[[56,[-1]],14,59,79,-2],[[9,[76,62]]],[37,38],[61,37,78,38]],[[[56,[-1]],80,59,59,-2],[[9,[[77,[76]],62]]],[37,38],[61,37,78,38]],[[[56,[-1]],80,59,59,-2,81],[[9,[[77,[76]],62]]],[37,38],[61,37,78,38]],[[[56,[-1]],60,-2],[[9,[76,62]]],[37,38],[61,37,78,38]],[[[56,[-1]],59,59,-2],[[9,[76,62]]],[37,38],[61,37,78,38]],[[[56,[-1]],2,59,59,-2],[[9,[[77,[76]],62]]],[37,38],[61,37,78,38]],0,[62,[[11,[27]]]],[[[77,[-1]]],[[57,[-1]]],[37,38]],[[[57,[-1]]],[[77,[-1]]],[37,38]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,28,[]],[[66,[83,[82]],[83,[84]],-1],60,85],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[86,14,[57,[-1]]],[[9,[[56,[-1]],87]]],[37,38]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[66,59,59],60],[[[57,[-1]]],64,[37,38]],[[[56,[-1]],76,-2],[[9,[3,62]]],[37,38],[61,37,78,38]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]],-2],[[9,[3,67]]],[37,38],[61,37,78,38]],[[],[[57,[65]]]],[[66,59,59],60],[[66,59,59],60],0,0,0,0],"c":[],"p":[[3,"Command",375],[15,"usize"],[15,"tuple"],[3,"Args",30],[3,"Formatter",376],[6,"Result",376],[3,"ArgMatches",377],[6,"Error",378],[4,"Result",379],[3,"Id",380],[4,"Option",381],[3,"Request",382],[3,"TypeId",383],[3,"BlockDate",384],[4,"Header",385],[3,"BlockBuilder",57],[3,"Block",386],[3,"Contents",387],[3,"Ed25519",388],[3,"SigningKey",389],[3,"StakePool",390],[4,"Error",87],[3,"Error",391],[4,"ReadError",392],[4,"Block0ConfigurationError",393],[3,"Error",394],[8,"Error",395],[3,"String",396],[3,"AdversaryNode",113],[4,"SocketAddr",397],[6,"NodeAlias",398],[3,"Block0Configuration",393],[3,"AdversaryNodeBuilder",113],[3,"LinearFee",399],[3,"FragmentSenderSetup",400],[3,"FragmentSender",401],[8,"SyncNode",402],[8,"Send",403],[3,"Hash",404],[4,"TestingDirectory",405],[3,"MockServerData",406],[3,"RwLock",407],[3,"Arc",408],[3,"MockController",409],[4,"MockClientError",410],[3,"TrustedPeer",411],[4,"ProtocolVersion",412],[3,"AdversaryRest",174],[4,"Parent",174],[3,"Request",174],[8,"Deserializer",413],[8,"Serializer",414],[6,"Context",174],[8,"Reply",415],[3,"WithStatus",415],[3,"AdversaryFragmentSender",248],[3,"AdversaryFragmentSenderSetup",248],[8,"Clone",416],[4,"Wallet",417],[4,"Fragment",418],[8,"FragmentNode",419],[4,"AdversaryFragmentSenderError",248],[3,"PathBuf",420],[15,"bool"],[3,"DummySyncNode",400],[3,"FaultyTransactionBuilder",248],[4,"SyncNodeError",402],[4,"FragmentVerifierError",421],[4,"FragmentBuilderError",422],[4,"FragmentNodeError",419],[4,"FragmentExporterError",423],[3,"SettingsDto",424],[8,"Iterator",425],[4,"BlockDateGenerator",401],[4,"Certificate",426],[3,"MemPoolCheck",419],[3,"Vec",427],[8,"Sized",403],[6,"PoolId",428],[15,"u32"],[3,"Duration",429],[3,"Input",430],[15,"slice"],[6,"OutputAddress",431],[8,"Fn",432],[3,"JormungandrProcess",433],[4,"RestError",434],[13,"FragmentNotRejected",371]]},\
"mainnet_lib":{"doc":"Rust implementation of Cardano various tools","t":"DDIRDEIDDNDNNEDCCDCCDCCDCCDDNNCCDCCDCCDCCDDNNDDDDMMMMMMMMMMMMMMAMMAMKMMMAKKKMMMMAMKMMKMKMMMMKMMMMMKMMMKKMMMAMACCCCCCAAAAADDLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDMLLLLLLLLLLMMLLLLLLLLLLLEDNLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLDLMMLLLLLLLLLLLLLMMLLLLLDLLLLLLLLLLLLLLCCCCAGIGEDNNDDLMLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLMLLMKLLLMLLLLLLLLLLLLLMMLLLLCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCLLLLLLLLLLLLLMAMLLLLALDDLLLLLLLLLLMLLFLLLLLLMMLLLLLLLLLLLLMMMLLMLLLLLLLLMLLCCDCCLLCCALLLLLLLLLMLMLMLMALLLLIKKKKKCNCNNCECNAALLFFCLLLALLLLLLCLLLCCLLLLLLENNDENNNNDDGDDLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLFMMFLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMMMMMMMMMMNENLLLLLLLLFFLLLLLLLLDQILLLLKLLLLLLLLLLDCCCCCCCCCCCCCCCCCCCLLLLLLLLMLLLLLLLLLLLLLMLLLLMALLMLLMLLLLLINNEDDDDDNNDDDDDNMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKKKMLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMENNNQNINNNNDIEKKKKKFFKMMMMMMMMMMMMM","n":["Block0","BlockBuilder","BlockDateFromCardanoAbsoluteSlotNo","CARDANO_MAINNET_SLOTS_PER_EPOCH","CardanoWallet","DbSyncError","GeneralTransactionMetadataInfo","InMemoryDbSync","InMemoryNode","IncorrectInputJson","Initials","Internal","Io","JsonConversionError","Ledger","METADATUM_1","METADATUM_1","METADATUM_1","METADATUM_2","METADATUM_2","METADATUM_2","METADATUM_3","METADATUM_3","METADATUM_3","METADATUM_4","METADATUM_4","METADATUM_4","MainnetNetworkBuilder","MissingRegistrationLabel","MissingRegistrationSignatureLabel","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","REGISTRATION_SIGNATURE_METADATA_IDX","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","Serde","Serde","Settings","SharedInMemoryDbSync","SnapshotParameters","TransactionBuilder","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","block","block0_hash","block0_time","block_notifier","blocks","blocks","cardano_node","catalyst","content","db_sync","db_sync","delegations","delegations","direct_voters_group","dreps","exports","from_absolute_slot_no","from_json_string","from_jsons","leadership_process","ledger","mempool","min_stake_threshold","network","network","nonce","parameters","payment_key","registration_blake_256_hash","representatives_group","reward_address","settings","settings","settings","settings","signature","slot_duration","slot_no","slots_per_epoch","stake","stake_key","stake_public_key","stakes","states","tag","to_absolute_slot_no","to_json_string","transactions","update_thread","voting_power_cap","wallet","wallet","wallet_state","Block0","BlockBuilder","InMemoryNode","Ledger","Settings","TransactionBuilder","block","in_memory","ledger","settings","transaction","Block0","BlockBuilder","__clone_box","block","block_header","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","generate_random_bytes_of_len","init","init","into","into","into_request","into_request","next_block","random_kes_signature","settings","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InMemoryNode","block_notifier","borrow","borrow_mut","deref","deref_mut","drop","drop","from","init","into","into_request","leadership_process","ledger","observe","push_transaction","push_transactions","settings","start","start_from_ledger","try_from","try_into","type_id","vzip","wait_for_txs_to_be_in_block","Error","Ledger","MissingBlock0","__clone_box","blockchain","blocks","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","mempool","mempool","mint_block","new","push_transaction","push_transactions","settings","settings","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Settings","__clone_box","block0_hash","block0_time","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","slot_duration","slots_per_epoch","to_owned","try_from","try_into","type_id","vzip","TransactionBuilder","borrow","borrow_mut","build_transaction_with_metadata","deref","deref_mut","drop","from","init","into","into_request","try_from","try_into","type_id","vzip","BlockDateFromCardanoAbsoluteSlotNo","Error","InMemoryDbSync","SharedInMemoryDbSync","in_memory","Address","BlockDateFromCardanoAbsoluteSlotNo","BlockNo","Error","InMemoryDbSync","Io","Serde","Settings","SharedInMemoryDbSync","__clone_box","blocks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect_to_node","db_host","db_name","db_pass","db_sync","db_user","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","empty","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_absolute_slot_no","from_block0","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","metadata","on_block_propagation","persist","query_all_registration_transactions","query_voting_transactions_with_bounds","restore","serialize","serialize","settings","settings","source","stakes","stakes","to_absolute_slot_no","to_owned","to_string","transaction_by_hash","transactions","try_as_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_thread","vec","vzip","vzip","vzip","vzip","Block0","BlockBuilder","BlockDateFromCardanoAbsoluteSlotNo","CardanoWallet","DbSyncError","GeneralTransactionMetadataInfo","InMemoryDbSync","InMemoryNode","Initials","JsonConversionError","Ledger","METADATUM_1","METADATUM_1","METADATUM_2","METADATUM_2","METADATUM_3","METADATUM_3","METADATUM_4","METADATUM_4","MainnetNetworkBuilder","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","Settings","SharedInMemoryDbSync","SnapshotParameters","TransactionBuilder","wallet_state","Initials","MainnetNetworkBuilder","Parameters","borrow","borrow_mut","build","build_block0","build_shared","default","deref","deref_mut","drop","from","init","into","into_request","settings","snapshot","states","try_from","try_into","type_id","vzip","wallet_state","with","Initials","Parameters","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content","default","default","default_latest","deref","deref","deref_mut","deref_mut","deserialize","deserialize","direct_voters_group","dreps","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","min_stake_threshold","parameters","representatives_group","serialize","serialize","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","voting_power_cap","vzip","vzip","Actor","ExternalProvider","MainnetWalletState","MainnetWalletStateBuilder","TemplateError","borrow","borrow_mut","build","build_default","builder","deref","deref_mut","drop","fmt","from","init","into","into_request","registration","registration_tx","rep","rep","stake","stake","stake_address","stake_address","template","try_from","try_into","type_id","vzip","MainnetWalletStateBuilder","as_delegator","as_delegator_on_slot_no","as_direct_voter","as_direct_voter_on_slot_no","as_representative","Actor","Arbitrary","ArbitraryError","CannotGetVotingKey","CannotParseAddress","DummyExternalProvider","Error","ExternalProvider","Internal","actor","arbitrary","borrow","borrow_mut","build","build_default","delegator","deref","deref_mut","drop","external_providers","fmt","fmt","from","from","from","from","generate_arbitrary_delegator","init","into","into_request","registration","representative","source","to_string","try_from","try_into","type_id","vzip","Actor","CannotBuildActor","CannotBuildRegistration","DelegatorBuilder","Error","ExternalDelegator","ExternalRep","GeneratedDelegator","GeneratedRep","Registration","RegistrationBuilder","RepNameOrVotingKey","RepresentativeBuilder","Target","__clone_box","__clone_box","__clone_box","ada","ada","address","at_slot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","delegator","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","iter","name","name","new","new","push","registration","registration","registration","representative","serialize","serialize","serialize","slotno","target","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","voting_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_ada","with_ada","with_address","with_key","with_registration","with_target","with_targets","ada","ada","address","name","name","name","name","registration","voting_key","details","details","name","registration","CannotGetVotingKey","Error","Internal","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","generate_arbitrary_delegator","generate_arbitrary_representative","init","into","into_request","to_string","try_from","try_into","type_id","vzip","DummyExternalProvider","Error","ExternalProvider","borrow","borrow_mut","deref","deref_mut","download_state_from_network","download_state_from_network","drop","from","init","into","into_request","try_from","try_into","type_id","vzip","CardanoWallet","GeneralTransactionMetadataInfo","JsonConversionError","METADATUM_1","METADATUM_1","METADATUM_2","METADATUM_2","METADATUM_3","METADATUM_3","METADATUM_4","METADATUM_4","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","address","as_delegator","as_delegator_on_slot_no","as_direct_voter","as_direct_voter_on_slot_no","as_representative","borrow","borrow_mut","catalyst","catalyst_address","catalyst_public_key","catalyst_secret_key","deref","deref_mut","drop","from","generate_delegated_voting_registration","generate_direct_voting_registration","generate_voting_registration","init","into","into_request","network","new","new_with_rng","payment_credential","payment_key","payment_key","registration","reward_address","stake","stake","stake_credential","stake_key","stake_key","stake_public_key","try_from","try_into","type_id","vzip","GeneralTransactionMetadataInfo","IncorrectInputJson","Internal","JsonConversionError","METADATUM_1","METADATUM_2","METADATUM_3","METADATUM_4","METADATUM_5","MissingRegistrationLabel","MissingRegistrationSignatureLabel","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","Serde","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_metadata","delegations","delegations","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json_string","from_jsons","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","nonce","on","registration_blake_256_hash","reward_address","signature","slot_no","source","stake_public_key","to","to_json_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","Actor","Arbitrary","CannotGetVotingKey","CannotParseAddress","Error","ExternalDelegator","ExternalProvider","ExternalRep","GeneratedDelegator","GeneratedRep","Internal","MainnetWalletState","MainnetWalletStateBuilder","TemplateError","as_delegator","as_delegator_on_slot_no","as_direct_voter","as_direct_voter_on_slot_no","as_representative","build","build_default","download_state_from_network","registration_tx","rep","stake","stake_address","ada","ada","address","name","name","name","name","registration","voting_key"],"q":[[0,"mainnet_lib"],[110,"mainnet_lib::cardano_node"],[121,"mainnet_lib::cardano_node::block"],[160,"mainnet_lib::cardano_node::in_memory"],[185,"mainnet_lib::cardano_node::ledger"],[232,"mainnet_lib::cardano_node::settings"],[256,"mainnet_lib::cardano_node::transaction"],[271,"mainnet_lib::db_sync"],[276,"mainnet_lib::db_sync::in_memory"],[382,"mainnet_lib::exports"],[416,"mainnet_lib::network"],[441,"mainnet_lib::network::snapshot"],[494,"mainnet_lib::network::wallet_state"],[525,"mainnet_lib::network::wallet_state::builder"],[531,"mainnet_lib::network::wallet_state::template"],[569,"mainnet_lib::network::wallet_state::template::actor"],[747,"mainnet_lib::network::wallet_state::template::actor::Actor"],[756,"mainnet_lib::network::wallet_state::template::actor::Error"],[760,"mainnet_lib::network::wallet_state::template::arbitrary"],[781,"mainnet_lib::network::wallet_state::template::external_providers"],[799,"mainnet_lib::wallet"],[859,"mainnet_lib::wallet::registration"],[1060,"mainnet_lib::wallet_state"],[1086,"mainnet_lib::wallet_state::Actor"],[1095,"alloc::vec"],[1096,"cardano_serialization_lib::metadata"],[1097,"core::result"],[1098,"core::marker"],[1099,"serde_json::value"],[1100,"cardano_serialization_lib::chain_crypto::hash"],[1101,"cardano_serialization_lib::address"],[1102,"cardano_serialization_lib::crypto"],[1103,"cardano_serialization_lib::crypto"],[1104,"dyn_clone::sealed"],[1105,"cardano_serialization_lib::crypto"],[1106,"cardano_serialization_lib"],[1107,"tonic::request"],[1108,"cardano_serialization_lib"],[1109,"pharos::observable"],[1110,"pharos"],[1111,"std::sync::rwlock"],[1112,"std::sync::poison"],[1113,"core::fmt"],[1114,"core::fmt"],[1115,"std::io::error"],[1116,"serde_json::error"],[1117,"std::collections::hash::map"],[1118,"std::path"],[1119,"core::convert"],[1120,"serde::ser"],[1121,"core::error"],[1122,"cardano_serialization_lib::utils"],[1123,"jormungandr_lib::crypto::account"],[1124,"std::collections::hash::set"],[1125,"chain_crypto::key"],[1126,"cardano_serialization_lib::error"],[1127,"core::slice::iter"],[1128,"core::convert"],[1129,"alloc::boxed"],[1130,"core::pin"],[1131,"cardano_serialization_lib::address"],[1132,"chain_crypto::algorithms::ed25519_extended"],[1133,"chain_crypto::key"],[1134,"rand_core"],[1135,"rand_core"]],"d":["Block0 representation","Block builder responsible for building blocks","Basic converter from absolute slot number and {epoch,slot} …","Const defining caradno mainnet slot per epoch setting","Represents Cardano mainnet wallet which is able to …","Db sync error","Extension for <code>GeneralTransactionMetadata</code> tailored for …","Mock of real cardano db sync. At this moment we only …","In memory cardano node implementation. Basic design …","Incorrect schema","Root struct for defining snapshot template","Internal error","I/O related error","Metadata conversion error","Simulates cardano node behavior. Contains mempool of …","","","metadatum label 1 constant","","","metadatum label 2 constant","","","metadatum label 3 constant","","","metadatum label 4 constant","Cardano Network state builder, responsible to create a …","Missing registration label","Missing registration signature label","","","registration metadata index constant","","","registration metadata constant","","","registration signature metadata constant","","","registration signature metadata index constant","Responsible for building registration transaction metadata","Serialization error","Serialization","Cardano node mock settings","thread safe <code>InMemoryDbSync</code>. It has inner struct <code>db_sync</code> …","Snapshot","Transaction builder for cardano mainnet","","","","","","","","","Block containing transactions","block0 hash","block0 time","","","","","","snapshot content","","","Get delegations part as bytes","","Name of direct registration holders","dreps information","","Converts absolute slot number to block date","Converts json to metadata","Converts combined jsons to registration and registration …","","","","Minimum lovelace which is required to participate in voting","","","nonce","parameters","","registration metadata hash","Name of delegated registrations holders (representatives)","Reward address","Consensus settings","","","","metadata signature","slot duration","","slots per epoch","","","Stake public key","","","Tag under which snapshot content will be available","Converts epoch/slot representation to absolute slot number","Converts metadata to json","","","Maximum percentage of voting power before capping","","","wallet state utils","","","","","","","","","","","","Block0 representation","Block builder responsible for building blocks","","Block containing transactions","Builds new block header based on block number and previous …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Mint new block based on previous block and transactions","","Consensus settings","","","","","","","","","","In memory cardano node implementation. Basic design …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Adds new transaction to mempool","Adds collection of new transactions to mempool","Retrieves settings carved in block0","Starts node process","Starts node process from ledger","","","","","Waits for all transactions from mempool to be included in …","","Simulates cardano node behavior. Contains mempool of …","","","Retrieves blockchain in form of vector of blocks","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Gets current ledger mempool state","","Mint new block","Creates new ledger based on block0","Add transaction to mempool","Adds transactions to mempool","Gets node settings","","","","","","","","","","","","Cardano node mock settings","","block0 hash","block0 time","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","slot duration","slots per epoch","","","","","","Transaction builder for cardano mainnet","","","Builds transaction with metadata","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Basic converter from absolute slot number and {epoch,slot} …","","Db sync error","Mock of real cardano db sync. At this moment we only …","I/O related error","Serialization error","","thread safe <code>InMemoryDbSync</code>. It has inner struct <code>db_sync</code> …","","","","","","","","","","","","","Connects to Cardano mock node using simple …","","","","","","","","","","","","","","","","","","","","","","","Create an empty instance","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Converts absolute slot number to block date","Creates new instance out of block0","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Gets all metadata per block number","Accept new block","Persists current state of db sync","Gets all transactions metadata without bounds","Gets all transactions metadata with <code>slot_no</code> upper and …","Restores current state of db sync from json file","","","gets reference to db sync connection settings","","","gets all known to dbsync wallet ada distribution","","Converts epoch/slot representation to absolute slot number","","","Query transaction by it’s hash representation","","Retrieves db sync content as string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano Network state builder, responsible to create a …","","","","Builds dbsync instance and set or representatives …","Builds block0","Builds dbsync instance and set or representatives …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","wallet state utils","Pushes new wallet to collection","Root struct for defining snapshot template","Snapshot","","","","","","","","","","","snapshot content","","","","","","","","","","Name of direct registration holders","dreps information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Minimum lovelace which is required to participate in voting","parameters","Name of delegated registrations holders (representatives)","","","Tag under which snapshot content will be available","","","","","","","","","Maximum percentage of voting power before capping","","","","","Represents wallet candidate for registration. Defines …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","get registration metadata","Possible valid registration transaction","get representative information","Possible identifier which define representative id","get wallet stake","Ada amount account hold on snapshot time","get stake address for wallet","Stake address","","","","","","Wallet state builder for Network state builder is a trait …","wallet registers as delegator, meaning it will send …","wallet registers as delegator, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registered as representative. This is …","","Arbitrary error","","Cannot get voting key","Arbitrary error","","Wallet state template builder error","","Internal error","","","","","Builds collection of <code>MainnetWalletState</code> structs based on …","Builds collection of <code>MainnetWalletState</code> structs based on …","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Actor represent input definition of mainnet wallet from …","","","","","Delegator with just an address. Can be used for already …","Representative with just and voting key. Can be used for …","Generated delegator will setup new mainnet wallet","This variant will create new unique wallet with given ada …","Responsible for configuring registration transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","slot number in which registration was send","registration target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ada amount","ada amount","address in hex","alias","alias","alias","alias","registration","voting key in hex","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Error which can be returned on any issue with retrieving …","Trait for retrieving information about address …","","","","","Downloads <code>MainnetWalletState</code> from network","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Represents Cardano mainnet wallet which is able to …","","","","","","","","","","","","","","","","","","","","Mainnet address","","","","","","","","","Catalyst address","Catalyst public key","Catalyst secret key","","","","Returns the argument unchanged.","Creates delegated voting registration metadata according …","Creates direct (a.k.a self) voting registration metadata …","Creates voting registration metadata according to Cip-36 …","","Calls <code>U::from(self)</code>.","","","Creates new wallet with given ada. Currently wallet is …","Creates new wallet with given ada and rng. Currently …","Payment address based on stake public key","private payment key","","","Rewards address based on stake public key","current amount of ada","","Stake address based on stake public key","private stake key","","Cardano stake public key","","","","","Extension for <code>GeneralTransactionMetadata</code> tailored for …","Incorrect schema","Internal error","Metadata conversion error","metadatum label 1 constant","metadatum label 2 constant","metadatum label 3 constant","metadatum label 4 constant","metadatum label 5 constant","Missing registration label","Missing registration signature label","registration metadata index constant","registration metadata constant","registration signature metadata constant","registration signature metadata index constant","Responsible for building registration transaction metadata","Serialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds transaction instance","Creates transaction metadata","Get delegations part as bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Converts json to metadata","Converts combined jsons to registration and registration …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates registration builder for given wallet","nonce","Defines slot number for registration transaction. This …","registration metadata hash","Reward address","metadata signature","","","Stake public key","Defines registration target (self or delegated)","Converts metadata to json","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actor represent input definition of mainnet wallet from …","Arbitrary error","Cannot get voting key","Arbitrary error","Error which can be returned on any issue with retrieving …","Delegator with just an address. Can be used for already …","Trait for retrieving information about address …","Representative with just and voting key. Can be used for …","Generated delegator will setup new mainnet wallet","This variant will create new unique wallet with given ada …","Internal error","Represents wallet candidate for registration. Defines …","Wallet state builder for Network state builder is a trait …","Wallet state template builder error","wallet registers as delegator, meaning it will send …","wallet registers as delegator, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registered as representative. This is …","Builds collection of <code>MainnetWalletState</code> structs based on …","Builds collection of <code>MainnetWalletState</code> structs based on …","Downloads <code>MainnetWalletState</code> from network","Possible valid registration transaction","Possible identifier which define representative id","Ada amount account hold on snapshot time","Stake address","ada amount","ada amount","address in hex","alias","alias","alias","alias","registration","voting key in hex"],"i":[0,0,0,0,0,0,0,0,0,6,0,6,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,45,6,0,0,0,0,91,92,93,95,96,98,99,100,22,33,33,30,34,42,0,60,58,0,43,102,90,59,59,0,103,102,102,30,30,34,59,0,60,102,58,60,102,59,102,22,34,42,54,102,33,90,33,60,60,102,42,54,59,103,102,42,43,59,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,104,104,22,104,22,22,22,22,104,22,104,22,104,22,104,22,104,104,22,104,22,104,22,104,104,22,22,104,22,104,22,104,22,104,22,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,37,37,34,34,34,37,34,37,37,37,34,34,37,34,37,34,37,37,37,34,37,34,37,34,37,34,37,34,34,34,34,34,34,34,34,37,37,34,37,34,37,34,37,34,37,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,0,0,0,0,0,0,0,45,45,0,0,41,42,43,42,41,45,43,42,41,45,41,41,42,41,41,41,43,41,42,41,43,42,41,45,43,42,41,45,42,41,43,43,42,41,45,42,42,41,45,45,43,42,41,45,45,45,103,42,43,42,41,45,43,42,41,45,43,42,41,45,42,42,42,42,42,42,42,41,42,42,45,42,42,103,41,45,42,42,42,43,42,41,45,43,42,41,45,43,42,41,45,43,106,43,42,41,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,0,54,0,0,58,59,58,59,58,59,58,59,58,59,58,58,59,0,58,59,58,59,58,59,59,59,58,59,58,59,58,59,58,59,58,59,58,59,59,58,59,58,59,59,58,59,58,59,58,59,58,59,59,58,59,0,0,0,0,0,57,57,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,57,57,57,57,0,107,107,107,107,107,0,63,0,63,63,0,0,0,63,0,0,63,63,0,0,0,63,63,63,0,63,63,63,63,63,63,0,63,63,63,0,0,63,63,63,63,63,63,0,72,72,0,0,61,61,61,61,0,0,0,0,0,68,69,61,70,75,70,67,70,75,68,69,67,61,72,70,75,68,69,67,61,72,68,69,61,68,69,61,68,69,67,0,70,75,68,69,67,61,72,70,75,68,69,67,61,72,68,69,61,70,75,68,69,67,61,72,68,69,61,68,68,68,68,69,69,69,69,61,61,61,61,68,69,61,72,72,70,75,68,68,69,67,61,72,70,75,68,69,67,61,72,70,75,68,69,67,61,72,70,75,68,69,67,61,72,68,68,70,75,70,75,68,0,70,67,0,68,69,61,69,69,68,69,61,72,70,75,68,69,69,67,61,61,61,72,70,75,68,69,67,61,72,70,75,68,69,67,61,72,108,75,70,75,68,69,67,61,72,70,75,70,75,70,67,67,109,110,111,111,109,112,110,109,112,113,114,113,114,66,0,66,66,66,66,66,66,66,66,66,0,0,66,66,66,66,66,66,66,66,0,62,0,79,79,79,79,62,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,60,60,60,60,60,60,60,60,60,60,60,0,6,6,0,0,0,0,0,0,6,6,0,0,0,0,0,6,91,92,93,95,96,98,99,100,101,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,90,90,102,90,90,91,91,92,92,93,93,95,95,96,96,98,98,99,99,100,100,101,101,6,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,6,6,90,91,92,93,95,96,98,99,100,101,6,6,6,102,102,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,90,102,90,102,102,102,90,6,102,90,102,6,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,90,91,92,93,95,96,98,99,100,101,6,90,0,63,63,63,62,61,0,61,61,61,63,0,0,0,107,107,107,107,107,0,0,62,57,57,57,57,109,110,111,111,109,112,110,109,112],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[1]]],[]],0,0,0,0,[3,-1,[]],[[4,5],[[7,[-1,6]]],8],[[9,9,5],[[7,[-1,6]]],8],0,0,0,0,0,0,[-1,10,[]],0,0,[-1,11,[]],0,[-1,12,[]],0,0,0,0,[-1,13,[]],0,0,0,0,0,[-1,14,[]],0,0,0,[-1,3,[]],[[-1,5],[[7,[15,6]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,16],17,[]],0,[[18,[20,[19]]],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],17,[],[]],[[],22],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,17],[23,17],[-1,-1,[]],[-1,-1,[]],[23,[[2,[1]]]],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[20,[25]],[27,[26]]],25],[[],28],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[23,-1,[]],[23,-1,[]],[23,17],[30,17],[-1,-1,[]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],0,0,[[30,[31,[25]]],[[32,[25]]]],[[30,26],17],[[30,[2,[26]]],17],[30,[[7,[33,[36,[[35,[34]]]]]]]],[22,30],[34,30],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],[30,17],0,0,0,[[-1,16],17,[]],[34,[[27,[25]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[[-1,-2],17,[],[]],[[],34],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,17],[23,17],[[37,38],39],[[37,38],39],[-1,-1,[]],[-1,-1,[]],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[34,[[2,[26]]]],0,[34,[[7,[25,37]]]],[22,34],[[34,26],17],[[34,[2,[26]]],17],[34,33],0,[-1,-2,[],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,16],17,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[-1,-2],17,[],[]],[[],33],[23,-1,[]],[23,-1,[]],[23,17],[[33,38],39],[-1,-1,[]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[12,3,40],26],[23,-1,[]],[23,-1,[]],[23,17],[-1,-1,[]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,16],17,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],17,[],[]],[[42,30],43],0,0,0,0,0,[[],42],[[],41],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[-1,[[7,[42]]],44],[-1,[[7,[41]]],44],[23,17],[43,17],[23,17],[23,17],[23,17],[[],42],[[42,38],39],[[41,38],39],[[45,38],39],[[45,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,45],[-1,-1,[]],[47,45],[3,-1,[]],[22,42],[[],23],[[],23],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[42,[[48,[18,[2,[40]]]]]],[[42,25],17],[[42,-1],[[7,[17,45]]],[[50,[49]]]],[42,[[2,[40]]]],[[42,3,3],[[48,[18,[2,[40]]]]]],[-1,[[7,[42,45]]],[[50,[49]]]],[[42,-1],7,51],[[41,-1],7,51],[42,41],0,[45,[[20,[52]]]],[42,[[48,[15,53]]]],0,[-1,3,[]],[-1,-2,[],[]],[-1,15,[]],[[42,4],[[2,[[17,[[20,[25]],26]]]]]],0,[42,[[7,[15,47]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[54,[[17,[42,34,[56,[55]]]]]],[54,22],[54,[[17,[43,30,[56,[55]]]]]],[[],54],[23,-1,[]],[23,-1,[]],[23,17],[-1,-1,[]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,[[54,57],54],0,0,[[-1,16],17,[]],[[-1,16],17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[59,59],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,[[],58],[[],59],[[],15],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[-1,[[7,[58]]],44],[-1,[[7,[59]]],44],0,0,[23,17],[23,17],[[58,38],39],[[59,38],39],[-1,-1,[]],[-1,-1,[]],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,0,0,[[58,-1],7,51],[[59,-1],7,51],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[23,-1,[]],[23,-1,[]],[23,17],[[57,38],39],[-1,-1,[]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[57,[[20,[26]]]],0,[57,[[20,[55]]]],0,[57,3],0,[57,12],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,[[-1,[2,[[17,[60,1]]]]],57,[]],[[-1,[2,[[17,[60,1]]]],3],57,[]],[-1,57,[]],[[-1,3],57,[]],[-1,57,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[61]],62],[[7,[[2,[57]],63]]]],[[[2,[61]]],[[7,[[2,[57]],63]]]],0,[23,-1,[]],[23,-1,[]],[23,17],0,[[63,38],39],[[63,38],39],[64,63],[65,63],[-1,-1,[]],[66,63],0,[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],0,0,[63,[[20,[52]]]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,16],17,[]],[[-1,16],17,[]],[[-1,16],17,[]],0,0,0,[[67,18],67],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[69,69],[61,61],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[],68],[[],69],[[],67],[4,70],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[-1,[[7,[68]]],44],[-1,[[7,[69]]],44],[-1,[[7,[61]]],44],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[[68,68],71],[[69,69],71],[[61,61],71],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[68,38],39],[[69,38],39],[[61,38],39],[[72,38],39],[[72,38],39],[-1,-1,[]],[-1,-1,[]],[[[2,[[17,[4,18]]]]],68],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[68,71],[68,[[73,[[17,[15,18]]]]]],0,0,[-1,70,[[74,[15]]]],[-1,75,[[74,[15]]]],[[68,[17,[15,18]]],17],[[],67],0,0,[4,75],[[68,-1],7,51],[[69,-1],7,51],[[61,-1],7,51],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[67,[[7,[69]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[75,[[7,[61]]]],[-1,[[7,[-2]]],[],[]],[70,[[7,[61]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[70,3],70],[[75,3],75],[[70,-1],70,[[74,[15]]]],[[75,-1],75,[[74,[15]]]],[[70,69],70],[[67,15,18],67],[[67,[2,[[17,[4,18]]]]],67],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[23,-1,[]],[23,-1,[]],[23,17],[[66,38],39],[[66,38],39],[-1,-1,[]],[[61,[27,[[17,[15,55]]]]],[[7,[57,66]]]],[61,[[17,[15,60]]]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[23,-1,[]],[23,-1,[]],[[-1,[27,[61]]],[[78,[[77,[76]]]]],[]],[[79,[27,[61]]],[[78,[[77,[76]]]]]],[23,17],[-1,-1,[]],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,80],[[60,[2,[[17,[60,1]]]]],57],[[60,[2,[[17,[60,1]]]],3],57],[60,57],[[60,3],57],[60,57],[-1,-2,[],[]],[-1,-2,[],[]],0,[60,81],[60,55],[60,[[83,[82]]]],[23,-1,[]],[23,-1,[]],[23,17],[-1,-1,[]],[[60,[2,[[17,[55,18]]]],3],26],[[60,3],26],[[60,84,3],26],[[],23],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],0,[3,60],[[3,-1],60,[85,86]],[60,87],[60,88],0,0,[60,89],[60,3],0,[60,87],[60,88],0,[60,14],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,26],[90,40],[-1,[[2,[1]]],[]],0,[23,-1,[]],[91,18],[23,-1,[]],[92,18],[23,-1,[]],[93,94],[23,-1,[]],[23,-1,[]],[95,94],[96,97],[23,-1,[]],[98,97],[23,-1,[]],[99,97],[23,-1,[]],[100,97],[23,-1,[]],[23,-1,[]],[101,97],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,-1,[]],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[23,17],[[6,38],39],[[6,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,6],[-1,-1,[]],[47,6],[[4,5],[[7,[-1,6]]],8],[[9,9,5],[[7,[-1,6]]],8],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[60,90],[-1,10,[]],[[90,3],90],[-1,11,[]],[-1,12,[]],[-1,13,[]],0,[6,[[20,[52]]]],[-1,14,[]],[[90,84],90],[[-1,5],[[7,[15,6]]],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,[2,[[17,[60,1]]]]],57,[]],[[-1,[2,[[17,[60,1]]]],3],57,[]],[-1,57,[]],[[-1,3],57,[]],[-1,57,[]],[[[2,[61]],62],[[7,[[2,[57]],63]]]],[[[2,[61]]],[[7,[[2,[57]],63]]]],[[-1,[27,[61]]],[[78,[[77,[76]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[15,"u8"],[3,"Vec",1095],[15,"u64"],[15,"str"],[4,"MetadataJsonSchema",1096],[4,"JsonConversionError",859],[4,"Result",1097],[8,"Sized",1098],[4,"Value",1099],[15,"i32"],[3,"Blake2b256",1100],[3,"Address",1101],[3,"Ed25519Signature",1102],[3,"PublicKey",1102],[3,"String",1103],[3,"Private",1104],[15,"tuple"],[15,"u32"],[3,"BlockHash",1102],[4,"Option",1105],[3,"HeaderBody",1106],[3,"Block0",121],[15,"usize"],[3,"Request",1107],[3,"Block",1106],[3,"Transaction",1106],[15,"slice"],[3,"KESSignature",1102],[3,"TypeId",1108],[3,"InMemoryNode",160],[3,"ObserveConfig",1109],[6,"Observe",1110],[3,"Settings",232],[3,"Ledger",185],[3,"RwLockReadGuard",1111],[3,"PoisonError",1112],[4,"Error",185],[3,"Formatter",1113],[6,"Result",1113],[3,"GeneralTransactionMetadata",1096],[3,"Settings",276],[3,"InMemoryDbSync",276],[3,"SharedInMemoryDbSync",276],[8,"Deserializer",1114],[4,"Error",276],[3,"Error",1115],[3,"Error",1116],[3,"HashMap",1117],[3,"Path",1118],[8,"AsRef",1119],[8,"Serializer",1120],[8,"Error",1121],[3,"BigNum",1122],[3,"MainnetNetworkBuilder",416],[3,"Identifier",1123],[3,"HashSet",1124],[3,"MainnetWalletState",494],[3,"Initials",441],[3,"Parameters",441],[3,"CardanoWallet",799],[4,"Actor",569],[8,"ExternalProvider",781],[4,"Error",531],[4,"PublicKeyFromStrError",1125],[3,"JsError",1126],[4,"Error",760],[3,"RegistrationBuilder",569],[3,"Target",569],[3,"Registration",569],[3,"DelegatorBuilder",569],[15,"bool"],[4,"Error",569],[3,"Iter",1127],[8,"Into",1119],[3,"RepresentativeBuilder",569],[8,"Future",1128],[3,"Box",1129],[3,"Pin",1130],[3,"DummyExternalProvider",781],[3,"BaseAddress",1101],[3,"Address",1131],[3,"Ed25519Extended",1132],[3,"SecretKey",1125],[4,"Delegations",1133],[8,"RngCore",1134],[8,"CryptoRng",1134],[3,"StakeCredential",1101],[3,"PrivateKey",1102],[3,"RewardAddress",1101],[3,"RegistrationTransactionBuilder",859],[3,"REGISTRATION_METADATA_IDX",859],[3,"REGISTRATION_SIGNATURE_METADATA_IDX",859],[3,"REGISTRATION_METADATA_LABEL",859],[6,"TransactionMetadatumLabel",1096],[3,"REGISTRATION_METADATA_SIGNATURE_LABEL",859],[3,"METADATUM_1",859],[3,"TransactionMetadatum",1096],[3,"METADATUM_2",859],[3,"METADATUM_3",859],[3,"METADATUM_4",859],[3,"METADATUM_5",859],[8,"GeneralTransactionMetadataInfo",859],[8,"BlockDateFromCardanoAbsoluteSlotNo",276],[3,"BlockBuilder",121],[3,"TransactionBuilder",256],[6,"Address",276],[8,"MainnetWalletStateBuilder",525],[6,"RepNameOrVotingKey",569],[13,"GeneratedDelegator",747],[13,"GeneratedRep",747],[13,"ExternalDelegator",747],[13,"ExternalRep",747],[13,"CannotBuildActor",756],[13,"CannotBuildRegistration",756]]},\
"mainnet_tools":{"doc":"Toolbox for testing and mocking Cardano haskell part of …","t":"AAANDDENNNMAMACDLLLLLALLLLALLLLLLMLLLLLCNECNCNCNALLLLLLLLLLLLLLLLLLAAALLLLLLFENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLNDENDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLNDNDNDNDELLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMDDDLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLFMLLLLLLLLLLFLLLFMFFFMFLLLLFLLLLLLMMLLLFMLLLCCCAAAADLALLMALLLLLLLLLLLLLLLCCCCAAAADMLLLLLLLLLLLLLLLDDDDDDLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLMLLLLDLLLLLLLLLLLLLLLMLLLLCCDCCALLLMLLLLLLLLALALALLLLLDLLALMLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLDLLALMLLLLLLLLLALLLLDLLLMLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLCCCDCLLALMLLLLALLLLLALALLLLLDLLLLLMLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLDLLLMLLLLMLLLLLLLLLLLLLLLLLLLLMLLLNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLMMIKFNEIIINNNAKKKANEIIINNNLLLLLLLLLLLLLLLLLLLLKKKLLDDMAAMMMMMDCENNEDNLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLMMLLLLLLLLLLLLDENDNNNLLLLLALLLLALLLLLLMMMMLLLLMLLDENRNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLMLLF","n":["cardano_cli","snapshot","voter_registration","Address","Api","Mock","MockCommand","Query","StakeAddress","Transaction","cardano_cli","mock","path","wrapper","Command","Mock","__clone_box","borrow","borrow_mut","clone","clone_into","command","default","deref","deref_mut","drop","fake","fmt","from","init","into","into_request","path","path","to_owned","try_from","try_into","type_id","vzip","Address","Address","Command","Query","Query","StakeAddress","StakeAddress","Transaction","Transaction","address","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","query","stake_address","transaction","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","write_to_file_or_println","Address","Build","BuildCommand","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","into_request","into_request","mainnet","out_file","payment_verification_key","payment_verification_key_file","stake_verification_key","stake_verification_key_file","testnet_magic","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","ProtocolParameters","ProtocolParametersCommand","Query","Tip","TipCommand","UTxOCommand","Utxo","address","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","exec","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mainnet","mainnet","mainnet","out_file","out_file","out_file","testnet_magic","testnet_magic","testnet_magic","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Build","BuildCommand","RegisterCertificate","RegistrationCertificateCommand","StakeAddress","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","mainnet","out_file","out_file","stake_verification_key","stake_verification_key_file","stake_verification_key_file","testnet_magic","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","Build","BuildCommand","Id","IdCommand","Sign","SignCommand","Submit","SubmitCommand","Transaction","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_file","change_address","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mainnet","mainnet","mainnet","out_file","out_file","protocol_params_file","signing_key_file","testnet_magic","testnet_magic","testnet_magic","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_body_file","tx_body_file","tx_file","tx_in","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","witness_override","QueryUTxO","Tip","UTxO","__clone_box","__clone_box","__clone_box","address","amount","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","epoch","era","fmt","fmt","fmt","fmt","from","from","from","hash","hash","header","init","init","init","into","into","into","into_request","into_request","into_request","protocol_parameters","serialize","serialize","serialize","sign","slot","stake_address","stake_certificate","submit","sync_progress","tip","to_owned","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_ix","type_id","type_id","type_id","utxo","utxos","vzip","vzip","vzip","Api","CardanoKeyTemplate","Error","cli","data","error","utils","Api","address","api","borrow","borrow_mut","cardano_cli","command","deref","deref_mut","drop","from","init","into","into_request","new","query","stake_address","transaction","try_from","try_into","type_id","vzip","Address","Query","StakeAddress","Transaction","address","query","stake_address","transaction","Address","address_command","borrow","borrow_mut","build","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","FundsEntry","FundsResponse","FundsValue","Query","Utxo","UtxoEntry","__clone_box","__clone_box","__clone_box","address","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","entries","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_string","funds","get_total_funds","hash","index","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lovelace","new","protocol_parameters","query_command","serialize","serialize","serialize","tip","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","utxo","value","vzip","vzip","vzip","vzip","vzip","vzip","StakeAddress","borrow","borrow_mut","build","deref","deref_mut","drop","from","init","into","into_request","new","register_certificate","stake_address_command","try_from","try_into","type_id","vzip","Transaction","borrow","borrow_mut","build","deref","deref_mut","drop","from","id","init","into","into_request","new","sign","submit","submit_from_bytes","transaction_command","try_from","try_into","type_id","vzip","Address","Query","Root","StakeAddress","Transaction","address","address","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","into_request","new","query","query","stake_address","stake_address","transaction","transaction","try_from","try_into","type_id","vzip","Address","borrow","borrow_mut","build","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","AddressBuilder","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","payment_verification_key_file","stake_verification_key_file","try_from","try_into","type_id","vzip","Query","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","protocol_parameters","tip","try_from","try_into","type_id","utxo","vzip","StakeAddress","borrow","borrow_mut","build","build","command","deref","deref_mut","drop","from","init","into","into_request","new","register_certificate","registration","try_from","try_into","type_id","vzip","StakeAddressBuilder","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","stake_verification_key_file","try_from","try_into","type_id","vzip","RegisterCertificate","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","out_file","stake_verification_key_file","try_from","try_into","type_id","vzip","IdCommandBuilder","SignCommandBuilder","SubmitCommandBuilder","Transaction","TransactionCommandBuilder","borrow","borrow_mut","build","build","command","deref","deref_mut","drop","from","id","id","init","into","into_request","new","sign","sign","submit","submit","try_from","try_into","type_id","vzip","Builder","borrow","borrow_mut","build","certificate_file","change_address","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","protocol_params_file","try_from","try_into","tx_in","type_id","vzip","witness_override","Builder","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","tx_file","type_id","vzip","Builder","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","signing_key_file","try_from","try_into","tx_body_file","type_id","vzip","Builder","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","tx_file","type_id","vzip","CardanoKeyTemplate","__clone_box","borrow","borrow_mut","cbor_hex","clone","clone_into","deref","deref_mut","description","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","init","into","into_request","payment_signing_key","payment_verification_key","serialize","stake_signing_key","stake_verification_key","to_owned","try_from","try_into","type","type_id","vzip","write_to_file","CannotCreateAFile","CannotCreateParentDirectory","CannotExtractSlotId","CannotGetOutputFromCommand","CannotGetParentDirectory","CannotParseCardanoCliOutput","CannotParseVoterRegistrationOutput","CannotWriteAFile","Error","Io","Json","ParseInt","Regex","Serde","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","fmt","from","header","in_current_span","init","into","into_request","serialize","to_string","try_from","try_into","type_id","vzip","content","regex","CommandExt","arg_network","write_content","CannotConvertFromOutput","Error","MainnetWalletStateExtension","OutputExtension","OutputsExtension","Snapshot","Template","TimeConversion","convert","try_into_raw_snapshot_request","try_into_raw_snapshot_request","try_into_voting_registration","wormhole","CannotConvertFromOutput","Error","MainnetWalletStateExtension","OutputExtension","OutputsExtension","Snapshot","Template","TimeConversion","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","header","in_current_span","init","into","into_request","source","to_string","try_from","try_into","try_into_raw_snapshot_request","try_into_raw_snapshot_request","try_into_voting_registration","type_id","vzip","Command","Config","cmd","command","config","config","log_level","parameters","servicing_station","snapshot_service","Command","Config","Error","IoError","OneShot","Operation","Schedule","Schedule","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmd","command","command","command","command_for_update","command_for_update","command_for_update","config","cron","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eagerly","exec","exec","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","header","in_current_span","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","log_level","one_shot","read_config","run_single","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Config","ServicingStation","SnapshotService","__clone_box","__clone_box","__clone_box","address","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","parameters","serialize","serialize","serialize","servicing_station","snapshot_service","to_owned","to_owned","to_owned","token","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Command","Error","IoError","Mock","PaymentSigningKey","StakeSigningKey","VotePublicKey","__clone_box","borrow","borrow_mut","clone","clone_into","command","default","deref","deref_mut","drop","fake","fmt","from","init","into","into_request","path","path","rewards_address","slot_no","stake_signing_key_file","to_owned","try_from","try_into","type_id","vote_public_key_file","vzip","with_response","Command","Error","IoError","PATH_TO_DYNAMIC_CONTENT","PaymentSigningKey","StakeSigningKey","VotePublicKey","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","into","into","into_request","into_request","rewards_address","slot_no","source","stake_signing_key_file","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_public_key_file","vzip","vzip","metadata"],"q":[[0,"mainnet_tools"],[3,"mainnet_tools::cardano_cli"],[14,"mainnet_tools::cardano_cli::mock"],[39,"mainnet_tools::cardano_cli::mock::command"],[77,"mainnet_tools::cardano_cli::mock::command::address"],[135,"mainnet_tools::cardano_cli::mock::command::query"],[248,"mainnet_tools::cardano_cli::mock::command::stake_address"],[332,"mainnet_tools::cardano_cli::mock::command::transaction"],[478,"mainnet_tools::cardano_cli::mock::fake"],[566,"mainnet_tools::cardano_cli::wrapper"],[573,"mainnet_tools::cardano_cli::wrapper::cli"],[595,"mainnet_tools::cardano_cli::wrapper::cli::api"],[603,"mainnet_tools::cardano_cli::wrapper::cli::api::address"],[620,"mainnet_tools::cardano_cli::wrapper::cli::api::query"],[756,"mainnet_tools::cardano_cli::wrapper::cli::api::stake_address"],[774,"mainnet_tools::cardano_cli::wrapper::cli::api::transaction"],[795,"mainnet_tools::cardano_cli::wrapper::cli::command"],[823,"mainnet_tools::cardano_cli::wrapper::cli::command::address"],[841,"mainnet_tools::cardano_cli::wrapper::cli::command::address::build"],[862,"mainnet_tools::cardano_cli::wrapper::cli::command::query"],[882,"mainnet_tools::cardano_cli::wrapper::cli::command::stake_address"],[902,"mainnet_tools::cardano_cli::wrapper::cli::command::stake_address::build"],[922,"mainnet_tools::cardano_cli::wrapper::cli::command::stake_address::registration"],[941,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction"],[969,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::build"],[993,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::id"],[1011,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::sign"],[1032,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::submit"],[1050,"mainnet_tools::cardano_cli::wrapper::data"],[1084,"mainnet_tools::cardano_cli::wrapper::error"],[1118,"mainnet_tools::cardano_cli::wrapper::error::Error"],[1120,"mainnet_tools::cardano_cli::wrapper::utils"],[1123,"mainnet_tools::snapshot"],[1136,"mainnet_tools::snapshot::convert"],[1169,"mainnet_tools::snapshot::wormhole"],[1179,"mainnet_tools::snapshot::wormhole::command"],[1286,"mainnet_tools::snapshot::wormhole::config"],[1356,"mainnet_tools::voter_registration"],[1391,"mainnet_tools::voter_registration::command"],[1446,"mainnet_tools::voter_registration::fake"],[1447,"dyn_clone::sealed"],[1448,"core::fmt"],[1449,"core::fmt"],[1450,"std::path"],[1451,"core::result"],[1452,"core::any"],[1453,"clap_builder::builder::command"],[1454,"eyre"],[1455,"clap_builder::parser::matches::arg_matches"],[1456,"clap_builder"],[1457,"core::option"],[1458,"std::io::error"],[1459,"clap_builder::util::id"],[1460,"std::io::error"],[1461,"serde::de"],[1462,"color_eyre::section"],[1463,"core::fmt"],[1464,"core::marker"],[1465,"serde::ser"],[1466,"snapshot_trigger_service::config"],[1467,"std::process"],[1468,"std::path"],[1469,"core::convert"],[1470,"vit_servicing_station_tests::common::raw_snapshot"],[1471,"snapshot_lib::registration"],[1472,"mainnet_lib::network::wallet_state::template"],[1473,"core::num::error"],[1474,"snapshot_lib"],[1475,"core::error"],[1476,"eyre"],[1477,"assert_fs::fixture::dir"]],"d":["Cardano CLI wrapper and mock","Snapshot related tools or utils","Mock for voter registration. It can produce mocked …","Address related commands","Cardano Cli wrapper which allows to use cardano cli as …","Cardano CLI mock. It can return arbitrary/fake data but …","Wrapper around cardano CLI commands","Query commands","Stake address related commands","Transaction commands","","","","","","Cardano CLI mock. It can return arbitrary/fake data but …","","","","","","","","","","","Module for providing fake/arbitrary data which Cardano CLI …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Path to mock cli","","","","","","","","Address related commands","Wrapper around cardano CLI commands","","Query commands","","Stake address related commands","","Transaction commands","","","","","","","","","","","Executes command","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper struct which imitates response from query utxo","Helper struct which imitates response from tip","Helper struct which imitates response from utxo","","","","Arbitrary address","Utxo ada amount","tip block height","","","","","","","","","","","","","","","","","","","","","","","","","","","tip epoch","tip era","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Arbitrary hash","tip hash","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Arbitrary protocol parameters","","","","Response from transaction sign command","tip slot","Arbitrary stake address","Arbitrary stake certificate","Arbitrary Response from Cardano CLI on submit transaction …","tip sync progress","Arbitrary blockchain tip","","","","","Arbitrary transaction","","","","","","","Utxo tx hash","Utxo tx id","","","","Arbitraty query utxo response","","","","","","","","","","","","Cardano Cli wrapper which allows to use cardano cli as …","Address related sub commands","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Creates new Api object based on path to cardano cli","Query related sub commands","Stake address related sub commands","Transaction related sub commands","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Error related to incorrect conversion","Conversion related errors","Extensions for <code>MainnetWalletStateExtension</code> struct","Extensions for voting tools <code>Output</code> struct","Extensions for collection of voting tools <code>Output</code> struct","Error related to snapshot conversion","Error related to building mock snapshot","Errors derived from time conversion","","Converts to <code>RawSnapshotRequest</code>","Converts to <code>RawSnapshotRequest</code>","Converts to <code>VotingRegistration</code>","Simple scheduler for transporting snapshot from snapshot …","Error related to incorrect conversion","Conversion related errors","Extensions for <code>MainnetWalletStateExtension</code> struct","Extensions for voting tools <code>Output</code> struct","Extensions for collection of voting tools <code>Output</code> struct","Error related to snapshot conversion","Error related to building mock snapshot","Errors derived from time conversion","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","Converts to <code>RawSnapshotRequest</code>","Converts to <code>RawSnapshotRequest</code>","Converts to <code>VotingRegistration</code>","","","Main command","Configuration. It contains 3 parts snapshot-service …","","","","Path to configuration file","Log level","Import parameters","Servicing service related configuration","Snapshot service related configuration","Main command","","","","run single job","Snapshot wormhole","Run job in a schedule mode.","","","","","","","","","","","","","","","","","","","","","","","Path to configuration file","Cron string defining frequency of jobs","","","","","","","","","","","","","If set to true, job will be run immediately.","Executes command","Executes command","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Log level","Performs one-time snapshot transport operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration. It contains 3 parts snapshot-service …","","Snapshot service related config","","","","Address. In format: ‘https://{host}:{port}’","Address. In format: ‘http[s]://{host}:{port}’","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Import parameters","","","","Servicing service related configuration","Snapshot service related configuration","","","","Access token","Access token","","","","","","","","","","","","","Voter registration mock. It can return correctly formatted …","Errors for Voter Registration Mock","General IO related error","Voter registration mock","Payment key IO related error","Stake signing key IO related error","Catalyst key IO related error","","","","","","","","","","","Arbitrary responses from voter registartion mock","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Path to persisted response","","Rewards address in bech32","Slot number which will be used as a nonce","Path to cardano stake signing key file in bech32","","","","","Path to catalyst voting key file in bech32","","Set response which will be returned when executing …","Voter registration mock. It can return correctly formatted …","Errors for Voter Registration Mock","General IO related error","","Payment key IO related error","Stake signing key IO related error","Catalyst key IO related error","","","","","","","","","","","","","","","Executes command","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Rewards address in bech32","Slot number which will be used as a nonce","","Path to cardano stake signing key file in bech32","","","","","","","","","","Path to catalyst voting key file in bech32","","","Arbitrary metadata"],"i":[0,0,0,12,0,0,0,12,12,12,47,0,3,0,0,0,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,0,12,0,0,12,0,12,0,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,12,12,12,12,0,0,20,0,21,21,20,20,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,21,20,20,21,20,21,20,21,21,21,21,21,21,21,21,20,21,20,21,20,21,20,21,20,21,20,21,23,0,0,23,0,0,23,26,24,25,26,24,25,26,23,23,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,24,25,26,23,23,24,25,26,23,24,25,26,23,24,25,26,24,25,26,24,25,26,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,25,26,27,0,27,0,0,28,29,28,29,27,27,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,28,29,27,27,28,29,27,28,29,27,28,29,28,28,29,28,28,29,28,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,30,0,30,0,30,0,30,0,0,34,31,35,32,34,31,35,32,30,30,30,34,31,35,32,30,34,31,35,32,32,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,34,31,35,32,30,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,31,35,32,31,32,32,31,31,35,32,30,34,31,35,32,30,34,31,35,32,31,35,34,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,30,34,31,35,32,32,0,0,0,37,38,39,0,38,37,37,38,39,37,38,39,37,38,39,37,38,39,37,39,37,38,39,37,38,39,37,38,39,37,38,39,37,37,37,38,39,39,37,38,39,0,37,39,37,38,39,37,38,39,37,38,39,0,37,38,39,0,37,0,0,0,37,0,37,38,39,39,0,37,38,39,37,38,39,38,38,37,38,39,0,39,37,38,39,0,0,0,0,0,0,0,0,47,0,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,58,59,60,59,101,49,62,101,58,59,60,49,62,101,58,59,60,58,59,60,58,59,60,58,49,62,101,58,59,60,49,62,101,58,59,60,58,59,60,49,62,101,58,59,60,62,58,59,60,58,58,58,58,59,59,59,59,60,60,60,60,58,59,60,49,62,101,58,59,60,62,49,62,101,101,49,62,101,58,59,60,49,62,101,58,59,60,49,62,101,58,59,60,60,49,49,49,58,59,60,49,58,59,60,49,62,101,58,59,60,49,62,101,58,59,60,49,62,101,58,59,60,49,59,49,62,101,58,59,60,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,0,70,0,70,0,70,70,70,70,70,0,57,57,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,66,66,0,66,66,66,66,66,66,66,66,66,66,66,0,66,66,66,66,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,0,0,68,68,0,68,68,68,68,68,68,0,68,68,68,68,68,0,68,0,68,68,68,68,68,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,54,54,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,102,102,0,103,0,82,0,0,0,0,82,82,82,0,104,105,106,0,82,0,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,104,105,106,82,82,0,0,88,0,0,88,88,91,91,91,0,0,0,93,92,0,0,92,88,90,88,90,92,92,88,92,90,93,88,92,90,93,88,88,92,90,88,92,90,88,90,88,92,90,93,88,92,90,93,88,92,90,93,90,88,90,88,92,90,93,93,88,92,90,93,93,88,92,90,88,92,90,88,90,92,93,93,88,92,90,93,88,92,90,93,88,92,90,93,88,0,0,90,93,93,88,92,90,93,88,92,90,93,88,92,90,93,88,92,90,88,92,90,88,92,90,93,0,0,0,91,94,95,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,94,95,91,91,94,95,91,91,91,94,95,94,95,91,94,95,91,94,95,91,94,95,91,94,95,0,0,100,0,100,100,100,96,96,96,96,96,0,96,96,96,96,0,96,96,96,96,96,96,96,99,99,99,96,96,96,96,99,96,96,0,0,100,0,100,100,100,99,99,99,100,99,100,99,99,99,100,99,100,99,100,99,99,100,100,99,100,100,99,99,99,100,100,99,100,99,100,99,100,99,99,100,99,100,99,100,99,100,99,100,99,99,99,99,100,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[-1,-2],2,[],[]],0,[[],3],[4,-1,[]],[4,-1,[]],[4,2],0,[[3,5],6],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[3,8],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[4,-1,[]],[4,-1,[]],[4,2],[12,[[9,[2,13]]]],[[12,5],6],[-1,-1,[]],[14,[[9,[12,15]]]],[14,[[9,[12,15]]]],[16,17],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[12,14],[[9,[2,15]]]],[[12,14],[[9,[2,15]]]],[-1,-2,[],[]],[[[18,[8]],16],[[9,[2,19]]]],0,0,0,[11,11],[11,11],[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[[],11],[[],11],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[20,[[9,[2,19]]]],[21,[[9,[2,19]]]],[[20,5],6],[[21,5],6],[-1,-1,[]],[-1,-1,[]],[14,[[9,[20,15]]]],[14,[[9,[21,15]]]],[14,[[9,[20,15]]]],[14,[[9,[21,15]]]],[[],[[18,[22]]]],[16,17],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[20,14],[[9,[2,15]]]],[[21,14],[[9,[2,15]]]],[[20,14],[[9,[2,15]]]],[[21,14],[[9,[2,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[4,2],[23,[[9,[2,19]]]],[24,[[9,[2,19]]]],[25,[[9,[2,19]]]],[26,[[9,[2,19]]]],[[23,5],6],[[24,5],6],[[25,5],6],[[26,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,[[9,[23,15]]]],[14,[[9,[24,15]]]],[14,[[9,[25,15]]]],[14,[[9,[26,15]]]],[14,[[9,[23,15]]]],[14,[[9,[24,15]]]],[14,[[9,[25,15]]]],[14,[[9,[26,15]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[16,17],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[23,14],[[9,[2,15]]]],[[24,14],[[9,[2,15]]]],[[25,14],[[9,[2,15]]]],[[26,14],[[9,[2,15]]]],[[23,14],[[9,[2,15]]]],[[24,14],[[9,[2,15]]]],[[25,14],[[9,[2,15]]]],[[26,14],[[9,[2,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[27,[[9,[2,19]]]],[28,[[9,[2,19]]]],[29,[[9,[2,19]]]],[[27,5],6],[[28,5],6],[[29,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,[[9,[27,15]]]],[14,[[9,[28,15]]]],[14,[[9,[29,15]]]],[14,[[9,[27,15]]]],[14,[[9,[28,15]]]],[14,[[9,[29,15]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[16,17],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[27,14],[[9,[2,15]]]],[[28,14],[[9,[2,15]]]],[[29,14],[[9,[2,15]]]],[[27,14],[[9,[2,15]]]],[[28,14],[[9,[2,15]]]],[[29,14],[[9,[2,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[4,2],[4,2],[30,[[9,[2,19]]]],[[],2],[31,[[9,[2,19]]]],[[],2],[32,[[33,[2]]]],[[30,5],6],[[34,5],6],[[31,5],6],[[35,5],6],[[32,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,[[9,[30,15]]]],[14,[[9,[34,15]]]],[14,[[9,[31,15]]]],[14,[[9,[35,15]]]],[14,[[9,[32,15]]]],[14,[[9,[30,15]]]],[14,[[9,[34,15]]]],[14,[[9,[31,15]]]],[14,[[9,[35,15]]]],[14,[[9,[32,15]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[16,17],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,0,0,[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[30,14],[[9,[2,15]]]],[[34,14],[[9,[2,15]]]],[[31,14],[[9,[2,15]]]],[[35,14],[[9,[2,15]]]],[[32,14],[[9,[2,15]]]],[[30,14],[[9,[2,15]]]],[[34,14],[[9,[2,15]]]],[[31,14],[[9,[2,15]]]],[[35,14],[[9,[2,15]]]],[[32,14],[[9,[2,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[],36],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[38,38],[39,39],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],37],[[],39],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,[[9,[37]]],40],[-1,[[9,[38]]],40],[-1,[[9,[39]]],40],[4,2],[4,2],[4,2],0,0,[[37,5],6],[[38,5],6],[[39,5],6],[[39,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],36],0,[[-1,-2],[[41,[-2,-3]]],[],[42,43,44],[]],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],45],[[37,-1],9,46],[[38,-1],9,46],[[39,-1],9,46],[[],36],0,[[],36],[[],36],[[],36],0,[[],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[[],36],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,[-1,10,[]],[-1,10,[]],[-1,10,[]],[[],39],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[47,48],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[8,47],[47,49],[47,50],[47,51],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[48,-1,-1,-2,52],[[9,[53,54]]],[[56,[55]]],[[56,[55]]]],[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[57,48],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[59,59],[60,60],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,[[9,[58]]],40],[-1,[[9,[59]]],40],[-1,[[9,[60]]],40],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],0,[[58,58],17],[[59,59],17],[[60,60],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[58,5],6],[[59,5],6],[[60,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[61,[36]]],62],[[49,-1,52],[[9,[63,54]]],[[64,[36]]]],[62,63],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[65,49],[[49,52,-1],[[9,[53,54]]],[[56,[55]]]],0,[[58,-1],9,46],[[59,-1],9,46],[[60,-1],9,46],[[49,52],[[9,[37,54]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[49,-1,52],[[9,[62,54]]],[[64,[36]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[50,-1,-2,52],[[9,[53,54]]],[[56,[55]]],[[56,[55]]]],[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[66,50],[[50,-1,-2],[[9,[53,54]]],[[56,[55]]],[[56,[55]]]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[51,52,36,36,8,8,8,67],[[9,[53,54]]]],[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[51,-1],[[9,[36,54]]],[[56,[55]]]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[68,51],[[51,-1,-1,-2],[[9,[53,54]]],[[56,[55]]],[[56,[55]]]],[[51,-1],[[9,[36,54]]],[[56,[55]]]],[[51,[61,[69]],-1],[[9,[36,54]]],[[56,[55]]]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,[70,57],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,70],0,[70,65],0,[70,66],0,[70,68],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[57,72],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,57],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[72,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[72,52],72],[71,72],[[72,-1],72,[[56,[55]]]],[[72,-1],72,[[56,[55]]]],[[72,-1],72,[[56,[55]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[65,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,65],[[65,52,-1],65,[[56,[55]]]],[[65,52],65],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[65,52,-1],65,[[64,[36]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[66,73],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,66],[66,74],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[73,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[73,52],73],[71,73],[[73,-1],73,[[56,[55]]]],[[73,-1],73,[[56,[55]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[74,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,74],[[74,-1],74,[[56,[55]]]],[[74,-1],74,[[56,[55]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[68,75],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],0,[68,76],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,68],0,[68,77],0,[68,78],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[75,71],[[75,-1],75,[[56,[55]]]],[[75,36],75],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[75,52],75],[71,75],[[75,-1],75,[[56,[55]]]],[[75,-1],75,[[56,[55]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[75,36],75],[-1,10,[]],[-1,-2,[],[]],[[75,67],75],0,[-1,-2,[],[]],[-1,-2,[],[]],[76,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,76],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[76,-1],76,[[56,[55]]]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[77,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[77,52],77],[71,77],[[77,-1],77,[[56,[55]]]],[[77,-1],77,[[56,[55]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[77,-1],77,[[56,[55]]]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[78,71],0,[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[71,78],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[78,-1],78,[[56,[55]]]],[-1,10,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[79,79],[[-1,-2],2,[],[]],[4,-1,[]],[4,-1,[]],0,[-1,[[9,[79]]],40],[4,2],[[79,79],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[79,5],6],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[36,79],[36,79],[[79,-1],9,46],[36,79],[36,79],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,10,[]],[-1,-2,[],[]],[[79,-1],[[9,[2,54]]],[[56,[55]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[-1,[[9,[54]]],40],[4,2],[[54,5],6],[[54,5],6],[-1,-1,[]],[[-1,-2],[[41,[-2,-3]]],[],[42,43,44],[]],[-1,[],[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[54,-1],9,46],[-1,36,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,[[-1,52],-1,[]],[[16,-1],[[9,[2,19]]],[[56,[55]]]],0,0,0,0,0,0,0,0,0,[[-1,80],[[9,[81,82]]],[]],[[-1,80],[[9,[81,82]]],[]],[-1,[[9,[83,82]]],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,2],[[82,5],6],[[82,5],6],[-1,-1,[]],[84,82],[85,82],[86,82],[[-1,-2],[[41,[-2,-3]]],[],[42,43,44],[]],[-1,[],[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[82,[[18,[87]]]],[-1,36,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[-1,80],[[9,[81,82]]],[]],[[-1,80],[[9,[81,82]]],[]],[-1,[[9,[83,82]]],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11,11],[11,11],[11,11],[11,11],[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[4,2],0,[88,[[89,[2]]]],[[90,91],[[89,[2]]]],[[88,5],6],[[92,5],6],[[90,5],6],[[93,5],6],[[93,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,93],[-1,-1,[]],[14,[[9,[88,15]]]],[14,[[9,[92,15]]]],[14,[[9,[90,15]]]],[14,[[9,[88,15]]]],[14,[[9,[92,15]]]],[14,[[9,[90,15]]]],[[],[[18,[22]]]],[[],[[18,[22]]]],[16,17],[[-1,-2],[[41,[-2,-3]]],[],[42,43,44],[]],[-1,[],[]],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[91,[[89,[2]]]],[-1,[[89,[91]]],[[56,[55]]]],[91,2],[93,[[18,[87]]]],[-1,36,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[88,14],[[9,[2,15]]]],[[92,14],[[9,[2,15]]]],[[90,14],[[9,[2,15]]]],[[88,14],[[9,[2,15]]]],[[92,14],[[9,[2,15]]]],[[90,14],[[9,[2,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[91,91],[94,94],[95,95],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,[[9,[91]]],40],[-1,[[9,[94]]],40],[-1,[[9,[95]]],40],[4,2],[4,2],[4,2],[[91,5],6],[[94,5],6],[[95,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[91,-1],9,46],[[94,-1],9,46],[[95,-1],9,46],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[[-1,-2],2,[],[]],0,[[],96],[4,-1,[]],[4,-1,[]],[4,2],0,[[96,5],6],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[96,8],0,0,0,0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,[-1,-2,[],[]],[[96,97,98],96],0,0,0,0,0,0,0,[11,11],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[99,[[9,[2,100]]]],[[99,5],6],[[100,5],6],[[100,5],6],[-1,-1,[]],[19,100],[-1,-1,[]],[14,[[9,[99,15]]]],[14,[[9,[99,15]]]],[[],[[18,[22]]]],[[-1,-2],[[41,[-2,-3]]],[],[42,43,44],[]],[-1,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,[100,[[18,[87]]]],0,[-1,36,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[99,14],[[9,[2,15]]]],[[99,14],[[9,[2,15]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],36]],"c":[],"p":[[3,"Private",1447],[15,"tuple"],[3,"Mock",14],[15,"usize"],[3,"Formatter",1448],[6,"Result",1448],[3,"Request",1449],[3,"PathBuf",1450],[4,"Result",1451],[3,"TypeId",1452],[3,"Command",1453],[4,"Command",39],[3,"Report",1454],[3,"ArgMatches",1455],[6,"Error",1456],[15,"str"],[15,"bool"],[4,"Option",1457],[3,"Error",1458],[4,"Address",77],[3,"BuildCommand",77],[3,"Id",1459],[4,"Query",135],[3,"ProtocolParametersCommand",135],[3,"TipCommand",135],[3,"UTxOCommand",135],[4,"StakeAddress",248],[3,"BuildCommand",248],[3,"RegistrationCertificateCommand",248],[4,"Transaction",332],[3,"SignCommand",332],[3,"BuildCommand",332],[6,"Result",1458],[3,"IdCommand",332],[3,"SubmitCommand",332],[3,"String",1460],[3,"Tip",478],[3,"UTxO",478],[3,"QueryUTxO",478],[8,"Deserializer",1461],[3,"IndentedSection",1462],[8,"Display",1448],[8,"Send",1463],[8,"Sync",1463],[4,"Value",1464],[8,"Serializer",1465],[3,"Api",573],[3,"Address",603],[3,"Query",620],[3,"StakeAddress",756],[3,"Transaction",774],[4,"NetworkType",1466],[3,"ExitStatus",1467],[4,"Error",1084],[3,"Path",1450],[8,"AsRef",1468],[3,"Address",823],[3,"FundsResponse",620],[3,"FundsEntry",620],[3,"FundsValue",620],[15,"slice"],[3,"Utxo",620],[15,"u64"],[8,"Into",1468],[3,"Query",862],[3,"StakeAddress",882],[15,"u32"],[3,"Transaction",941],[15,"u8"],[3,"Root",795],[3,"Command",1467],[3,"AddressBuilder",841],[3,"StakeAddressBuilder",902],[3,"RegisterCertificate",922],[3,"Builder",969],[3,"Builder",993],[3,"Builder",1011],[3,"Builder",1032],[3,"CardanoKeyTemplate",1050],[3,"Parameters",1469],[3,"RawSnapshot",1470],[4,"Error",1136],[3,"VotingRegistration",1471],[4,"Error",1472],[3,"TryFromIntError",1473],[4,"Error",1474],[8,"Error",1475],[3,"Command",1179],[6,"Result",1454],[3,"Schedule",1179],[3,"Config",1286],[4,"Operation",1179],[4,"Error",1179],[3,"SnapshotService",1286],[3,"ServicingStation",1286],[3,"Mock",1356],[3,"GeneralTransactionMetadata",1476],[3,"TempDir",1477],[3,"Command",1391],[4,"Error",1391],[3,"UtxoEntry",620],[13,"CannotExtractSlotId",1118],[8,"CommandExt",1120],[8,"MainnetWalletStateExtension",1136],[8,"OutputsExtension",1136],[8,"OutputExtension",1136]]},\
"mjolnir":{"doc":"","t":"ANNDECNNALLLLALLLLFLLMLLLLLLLLALLAALLLLLLMALLLLLLLLAMLLLLLLLLLLLLFNDENMLLLLLLLLLAMLLLLLLMLLLLLLLLLLLLLMLLLLMMALMLLLLLLLLLLLDNNDEMLMLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLMLLLLLLLLLLLLLLLCCDLLFLLLALLLLALMLLLFLLLLDLLMLLLMLLLLLLLLLLLLDLLMLLLLLLLLLLLMLLLLNNNENNNLLLLLLLLLLLLLLLLLLLLLNDELLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLNNEENLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLNECNALLLLLLLLLLLLLLLLLLLLALLLLENCNALLLLLLLLLLLLLLLLLLLLLLLALDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLMLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLCNNCECNAALLLLLLLLLLLLLLLLLLLLALLLLENCNALLLLLLLLLLLLLLLLLLLLLLLALDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLMLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLLLLLMMLLLMMLMMMLLLLLLLLMMMMLLMLLLMLDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDDDDDDDDDMMMMAAAMMMAMAMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMAAMMMAMMMMMMMMMMAMMMDRMLLLLLLMLLLLLMMLLMLLMLLLLMDRLLLLLMMLLLLMLLMMLLLLLMMMLLLLLDLMLLLLLLMLLLLLLLMLLMLLMLLLLMRDMLLLLLLLLMLLLLMLLLLLLMLMLLLLLDLMMLLLLLMMLLLLLLMLMMLLLMMLMLLLMMMMMMMLRDMLLLLLLLLLLLLMLLLLLLMMLMLLLLLDLLLLLLLLLLFMLLLLLDLLLLLLMLLLLMLLMLLMLLLLMDLLLLLMLLLLLLMMLMLLLLMMMLDLLLLLLLLLLLMMLLLLNDELLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLL","n":["mjolnir_lib","Explorer","Fragment","Mjolnir","MjolnirCommand","MjolnirError","Passive","Rest","args","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","bootstrap","borrow","borrow","borrow_mut","borrow_mut","build_monitor","command","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","error","exec","exec","explorer","fragment","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","full_version","generators","group_id","has_subcommand","init","init","into","into","into_request","into_request","rest","source_version","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","parse_shift","ClientError","ClientLoadCommand","ClientLoadCommandError","NoScenarioDefined","address","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build_config","command","command_for_update","config","count","deref","deref","deref_mut","deref_mut","drop","drop","duration","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","get_block0_hash","group_id","init","init","initial_storage","into","into","into_request","into_request","measure","pace","scenario","source","sync_iteration","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","ClientLoadConfig","Duration","Iteration","PassiveBootstrapLoad","ScenarioType","address","block0_hash","block0_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","count","count","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","fmt","fmt","from","from","from","init","init","init","initial_storage","initial_storage","into","into","into","into_request","into_request","into_request","measure","measure","new","new","pace","pace","to_owned","to_owned","trusted_peer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DurationBasedClientLoad","IterationBasedClientLoad","ScenarioProgressBar","borrow","borrow_mut","copy_initial_storage_if_used","deref","deref_mut","drop","duration","from","init","into","into_request","iteration","new","progress_bar","set_error_lines","set_finished","set_progress","start_node","try_from","try_into","type_id","vzip","DurationBasedClientLoad","borrow","borrow_mut","config","deref","deref_mut","drop","duration","from","init","into","into_request","new","run","run_single","try_from","try_into","type_id","vzip","wait_for_bootstrap_phase_completed","IterationBasedClientLoad","borrow","borrow_mut","config","deref","deref_mut","drop","from","get_storage_name","init","into","into_request","new","run","start_node","sync_iteration","try_from","try_into","type_id","vzip","Block0Error","InternalClientError","JormungandrError","MjolnirError","PaceTooLow","RestError","StartupError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","ClientError","ExplorerLoadCommand","ExplorerLoadCommandError","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build_monitor","command","command_for_update","count","delay","deref","deref","deref_mut","deref_mut","drop","drop","duration","endpoint","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","into_request","into_request","measure","progress_bar_mode","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Batch","ClientError","FragmentLoadCommand","FragmentLoadCommandError","Standard","augment_subcommands","augment_subcommands_for_update","batch","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","into_request","into_request","source","standard","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Adversary","Batch","TxOnly","TxOnly","adversary","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","tx_only","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Adversary","All","VotesOnly","VotesOnly","all","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","votes_only","vzip","AdversaryAll","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","VotesOnly","augment_args","augment_args_for_update","block0_path","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","TxOnly","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","Adversary","Adversary","All","AllFragments","Standard","TxOnly","TxOnly","adversary","all","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","tx_only","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Adversary","All","VotesOnly","VotesOnly","all","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","votes_only","vzip","AllAdversary","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","VotesOnly","augment_args","augment_args_for_update","block0_path","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","AllFragments","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","explorer_endpoint","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","rump_up","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","TxOnly","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","AdversaryFragmentGenerator","AdversaryVoteCastsGenerator","BatchFragmentGenerator","ExplorerRequestGen","FragmentGenerator","FragmentStatusProvider","RestRequestGen","TransactionGenerator","VoteCastsGenerator","active_stake_pools","addresses","addresses","adversary_fragment_sender","adversary_generator","adversary_vote_casts_generator","batch_generator","batch_size","bft_leader","expiry_generator","explorer","explorer","fragment_generator","fragment_options_count","fragment_sender","fragment_sender","fragment_sender","fragment_sender","fragment_sender","fragment_sender","jormungandr","jormungandr","jormungandr","jormungandr","max_splits","max_splits","max_splits","max_splits","node","node","node","rand","rand","rand","rand","rand","rand","rand","rand","receiver","rest","rest_client","send_marker","sender","slots_per_epoch","split_lane","split_lane","split_marker","stake_pools","stake_pools","stake_pools_count","status_provider","transaction_generator","update_proposals_for_casting","update_proposals_for_casting_count","vote_cast_register","vote_casts_generator","vote_plan","vote_plans","vote_plans_for_casting","vote_plans_for_casting_count","vote_plans_for_tally","vote_plans_for_tally_count","voter","voters","votes_register","voting_privacy","wallet_lane_iter","wallets","wallets","wallets","AdversaryFragmentGenerator","DEFAULT_MAX_SPLITS","adversary_fragment_sender","borrow","borrow_mut","deref","deref_mut","drop","fill_from_faucet","fragment_sender","from","increment_split_marker","init","into","into_request","jormungandr","max_splits","new","next","rand","send_transaction","split","split_marker","try_from","try_into","type_id","vzip","wallets","AdversaryVoteCastsGenerator","DEFAULT_MAX_SPLITS","borrow","borrow_mut","deref","deref_mut","drop","expiry_generator","fragment_sender","from","init","into","into_request","max_splits","new","next","node","rand","send","split","try_from","try_into","type_id","vote_plans","voter","voting_privacy","vzip","wrong_choice","wrong_proposal_index","wrong_vote_plan","wrong_voting_privacy","BatchFragmentGenerator","batch_size","batch_size","borrow","borrow_mut","deref","deref_mut","drop","fill_from_faucet","fragment_sender","from","from_node_with_setup","generate_batch_transaction","generate_transaction","init","into","into_request","jormungandr","new","next","rand","send_batch","split","split_lane","try_from","try_into","type_id","vzip","wallets","DEFAULT_MAX_SPLITS","ExplorerRequestGen","addresses","borrow","borrow_mut","clone","clone_into","deref","deref_mut","do_setup","drop","explorer","from","init","into","into_request","max_splits","new","next","next_address","next_pool_id","next_usize","next_usize_in_range","rand","split","stake_pools","to_owned","try_from","try_into","type_id","vzip","FragmentGenerator","active_stake_pools","active_stake_pools","bft_leader","borrow","borrow_mut","deref","deref_mut","drop","fragment_options_count","fragment_sender","from","init","into","into_request","new","next","node","prepare","rand","receiver","send_all","send_one","send_random","sender","slots_per_epoch","split","stake_pools_count","try_from","try_into","type_id","update_proposals_for_casting","update_proposals_for_casting_count","vote_cast_register","vote_plans_for_casting","vote_plans_for_casting_count","vote_plans_for_tally","vote_plans_for_tally_count","vzip","DEFAULT_MAX_SPLITS","RestRequestGen","addresses","borrow","borrow_mut","clone","clone_into","deref","deref_mut","do_setup","drop","from","init","into","into_request","max_splits","new","next","next_address","next_pool_id","next_usize","next_usize_in_range","rand","rest_client","split","stake_pools","to_owned","try_from","try_into","type_id","vzip","FragmentStatusProvider","borrow","borrow_mut","deref","deref_mut","drop","from","get_statuses","init","into","into_request","into_status","jormungandr","new","try_from","try_into","type_id","vzip","TransactionGenerator","borrow","borrow_mut","deref","deref_mut","drop","fill_from_faucet","fragment_sender","from","init","into","into_request","jormungandr","new","next","rand","send_transaction","split","split_lane","try_from","try_into","type_id","vzip","wallets","VoteCastsGenerator","borrow","borrow_mut","deref","deref_mut","drop","fragment_sender","from","init","into","into_request","new","next","node","rand","send","send_marker","split","try_from","try_into","type_id","vote_plan","voters","votes_register","vzip","SplitLaneIter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","next","next_lane","split_marker","try_from","try_into","type_id","vzip","ClientError","RestLoadCommand","RestLoadCommandError","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build_monitor","command","command_for_update","count","delay","deref","deref","deref_mut","deref_mut","drop","drop","duration","endpoint","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","into_request","into_request","measure","progress_bar_mode","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip"],"q":[[0,"mjolnir"],[1,"mjolnir::mjolnir_lib"],[65,"mjolnir::mjolnir_lib::args"],[66,"mjolnir::mjolnir_lib::bootstrap"],[123,"mjolnir::mjolnir_lib::bootstrap::config"],[191,"mjolnir::mjolnir_lib::bootstrap::scenario"],[216,"mjolnir::mjolnir_lib::bootstrap::scenario::duration"],[236,"mjolnir::mjolnir_lib::bootstrap::scenario::iteration"],[256,"mjolnir::mjolnir_lib::error"],[284,"mjolnir::mjolnir_lib::explorer"],[336,"mjolnir::mjolnir_lib::fragment"],[385,"mjolnir::mjolnir_lib::fragment::batch"],[415,"mjolnir::mjolnir_lib::fragment::batch::adversary"],[445,"mjolnir::mjolnir_lib::fragment::batch::adversary::all"],[481,"mjolnir::mjolnir_lib::fragment::batch::adversary::votes_only"],[518,"mjolnir::mjolnir_lib::fragment::batch::tx_only"],[554,"mjolnir::mjolnir_lib::fragment::standard"],[588,"mjolnir::mjolnir_lib::fragment::standard::adversary"],[618,"mjolnir::mjolnir_lib::fragment::standard::adversary::all"],[654,"mjolnir::mjolnir_lib::fragment::standard::adversary::votes_only"],[691,"mjolnir::mjolnir_lib::fragment::standard::all"],[729,"mjolnir::mjolnir_lib::fragment::standard::tx_only"],[765,"mjolnir::mjolnir_lib::generators"],[845,"mjolnir::mjolnir_lib::generators::adversary_generator"],[873,"mjolnir::mjolnir_lib::generators::adversary_vote_casts_generator"],[904,"mjolnir::mjolnir_lib::generators::batch_generator"],[933,"mjolnir::mjolnir_lib::generators::explorer"],[964,"mjolnir::mjolnir_lib::generators::fragment_generator"],[1003,"mjolnir::mjolnir_lib::generators::rest"],[1034,"mjolnir::mjolnir_lib::generators::status_provider"],[1052,"mjolnir::mjolnir_lib::generators::transaction_generator"],[1076,"mjolnir::mjolnir_lib::generators::vote_casts_generator"],[1101,"mjolnir::mjolnir_lib::generators::wallet_lane_iter"],[1119,"mjolnir::mjolnir_lib::rest"],[1171,"clap_builder::builder::command"],[1172,"jortestkit::console::progress_bar"],[1173,"jortestkit::load::config"],[1174,"core::error"],[1175,"alloc::boxed"],[1176,"core::result"],[1177,"clap_builder::parser::matches::arg_matches"],[1178,"clap_builder"],[1179,"clap_builder::util::id"],[1180,"core::option"],[1181,"tonic::request"],[1182,"core::any"],[1183,"chain_impl_mockchain::date"],[1184,"chain_impl_mockchain::date"],[1185,"core::fmt"],[1186,"alloc::string"],[1187,"std::path"],[1188,"jormungandr_lib::interfaces::config::node"],[1189,"assert_fs::fixture::dir"],[1190,"indicatif::progress"],[1191,"alloc::vec"],[1192,"jormungandr_automation::jormungandr::process"],[1193,"jormungandr_automation::jormungandr::starter"],[1194,"indicatif::progress"],[1195,"std::thread"],[1196,"std::time"],[1197,"jortestkit::measurement::benchmark::speed_benchmark"],[1198,"jormungandr_automation::jormungandr::rest"],[1199,"jormungandr_automation::testing::block0"],[1200,"thor::wallet"],[1201,"jormungandr_automation::testing::benchmark::sync::node"],[1202,"core::marker"],[1203,"jormungandr_automation::jormungandr::remote"],[1204,"thor::fragment::sender"],[1205,"loki::sender"],[1206,"jortestkit::load::request"],[1207,"jortestkit::load::request"],[1208,"chain_impl_mockchain::fragment"],[1209,"thor::fragment::sender"],[1210,"jormungandr_automation::jormungandr::fragment_node"],[1211,"thor::fragment::sender"],[1212,"chain_impl_mockchain::fee"],[1213,"jormungandr_automation::jormungandr::explorer"],[1214,"jormungandr_automation::jormungandr::explorer"],[1215,"chain_crypto::algorithms::ed25519"],[1216,"jormungandr_lib::crypto::key"],[1217,"jormungandr_lib::interfaces::blockdate"],[1218,"jormungandr_automation::jormungandr::rest"],[1219,"jormungandr_lib::interfaces::fragment_log"],[1220,"chain_impl_mockchain::testing::builders::tx_cert_builder"]],"d":["","Explorer load","Fragment load","","Jormungandr Load CLI toolkit","","Passive Nodes bootstrap","Rest load","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","display full version details (software version, source …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","display the sources version, allowing to check the source…","","","","","","","","","","","","","","","","","","address in format: /ip4/54.193.75.55/tcp/3000","","","","","","","","","","","Number of threads","","","","","","","amount of delay (in seconds) between sync attempts","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","amount of delay (in seconds) between sync attempts","","","amount of delay (in seconds) between sync attempts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Number of threads","Amount of delay (in milliseconds) between sync attempts","","","","","","","Load duration","Endpoint address in format: 127.0.0.1:80","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Prints post load measurements","Show progress","","","","","","","","","","","","","sends fragments using batch endpoint","","","","sends fragments in single manner","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Prints nodes related data, like stats,fragments etc.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","Put load on endpoint using invalid fragments","Put load on endpoint using all supported fragment types","","","","Put load on endpoint using transaction fragments only.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","Address in format: <code>/ip4/54.193.75.55/tcp/3000</code>","","Secret key file for source address from which requests …","Source address spending counter","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Prints post load measurements","Show progress bar during tests","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","address in format: /ip4/54.193.75.55/tcp/3000","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","load test rump up period","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A wrapper for <code>Vec&lt;Wallet&gt;</code> that allows iteration over …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Similar to <code>Iterator::next</code>, except it takes the length of …","","","","","","","","","","","","","","","","","","","Number of threads","Amount of delay (in milliseconds) between sync attempts","","","","","","","Amount of delay (in seconds) between sync attempts","Address in format: http://127.0.0.1:8002/api/","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Prints post load measurements","Show progress bar","","","","","","","","","","","",""],"i":[0,10,10,0,0,0,10,10,0,6,6,10,10,0,6,10,6,10,0,6,10,6,6,10,6,10,6,10,6,10,0,6,10,0,0,6,10,6,10,6,10,6,0,6,10,6,10,6,10,6,10,0,6,6,10,6,10,6,10,6,10,6,10,6,10,0,23,0,0,23,21,21,21,23,21,23,21,21,21,21,0,21,23,21,23,21,23,21,21,21,23,23,21,23,23,21,21,21,21,21,23,21,21,23,21,23,21,21,21,0,23,21,23,23,21,23,21,23,21,21,21,23,21,0,29,29,0,0,22,22,22,31,29,22,31,29,22,29,22,29,22,31,22,22,31,29,22,31,29,22,31,29,22,31,29,22,31,29,22,31,29,22,22,22,31,29,22,31,29,22,22,22,31,22,22,22,29,22,22,31,29,22,31,29,22,31,29,22,31,29,22,0,0,0,37,37,0,37,37,37,0,37,37,37,37,0,37,37,37,37,37,0,37,37,37,37,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,52,0,0,51,51,52,51,52,51,51,51,51,51,51,52,51,52,51,52,51,51,51,51,52,52,51,52,52,51,51,51,51,52,51,52,51,52,51,51,51,52,52,52,51,52,51,52,51,51,51,52,51,53,54,0,0,53,53,53,0,53,54,53,54,53,53,53,54,53,54,53,54,53,53,54,54,53,54,54,53,53,53,53,54,53,54,53,54,54,0,54,53,54,53,54,53,54,53,53,53,54,55,0,0,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,0,56,0,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,60,60,0,0,0,60,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,60,60,60,60,0,61,0,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,0,0,0,0,0,91,88,96,66,0,0,0,84,91,80,0,88,0,91,66,80,84,91,103,104,66,84,98,103,66,80,88,96,80,91,104,66,80,84,91,103,104,88,96,91,0,96,104,91,91,84,103,66,88,96,91,0,0,91,91,91,0,104,80,91,91,91,91,80,104,104,80,0,66,84,103,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,98,98,98,98,98,98,98,98,98,98,0,98,98,98,98,98,98,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,108,0,0,107,107,108,107,108,107,107,107,107,107,107,108,107,108,107,108,107,107,107,107,108,108,107,108,108,107,107,107,107,108,107,108,107,108,107,107,107,108,108,108,107,108,107,108,107,107,107,108,107],"f":[0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,3],[[],1],[[],1],0,[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,5],[4,5],0,[6,[[9,[5,[8,[7]]]]]],[10,[[9,[5,[8,[7]]]]]],0,0,[-1,-1,[]],[-1,-1,[]],[11,[[9,[6,12]]]],[11,[[9,[10,12]]]],[11,[[9,[6,12]]]],[11,[[9,[10,12]]]],0,0,[[],[[14,[13]]]],[15,16],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[6,11],[[9,[5,12]]]],[[10,11],[[9,[5,12]]]],[[6,11],[[9,[5,12]]]],[[10,11],[[9,[5,12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[9,[[5,[19,16]],20]]]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,22],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,5],[4,5],0,[21,[[9,[5,23]]]],[[23,24],25],[[23,24],25],[[21,24],25],[-1,-1,[]],[26,23],[-1,-1,[]],[11,[[9,[21,12]]]],[11,[[9,[21,12]]]],[21,27],[[],[[14,[13]]]],[[],4],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[23,[[14,[7]]]],0,[-1,28,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[21,11],[[9,[5,12]]]],[[21,11],[[9,[5,12]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[22,27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[22,22],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[22,30],0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,5],[4,5],[4,5],[[31,29],[[9,[5,26]]]],[[29,24],25],[[22,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],4],[[],4],[[],4],[22,[[14,[32]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[22,16],0,[22,31],[[27,16,30,28,33,[14,[32]]],22],[22,33],0,[-1,-2,[],[]],[-1,-2,[],[]],[22,34],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[22,15,35],5],[4,-1,[]],[4,-1,[]],[4,5],0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[[36,15],37],0,[[37,[38,[28]]],5],[37,5],[[37,15],5],[[22,15,35],[[9,[39,40]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[4,-1,[]],[4,-1,[]],[4,5],0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[22,33],41],[41,[[9,[5,26]]]],[[41,30,33,42],[[9,[[44,[[9,[[38,[43]],26]]]],26]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[39,45,33,46,37],[[9,[[14,[43]],26]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[4,-1,[]],[4,-1,[]],[4,5],[-1,-1,[]],[[47,30,30],28],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[22,30],47],[47,[[9,[5,26]]]],[[47,35,30,30,42],[[9,[[44,[[9,[43,26]]]],26]]]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],[[26,24],25],[[26,24],25],[48,26],[49,26],[50,26],[-1,-1,[]],[40,26],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[26,[[14,[7]]]],[-1,28,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,3],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,5],[4,5],0,0,[51,[[9,[5,52]]]],[[52,24],25],[[52,24],25],[[51,24],25],[-1,-1,[]],[26,52],[-1,-1,[]],[11,[[9,[51,12]]]],[11,[[9,[51,12]]]],[[],[[14,[13]]]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[52,[[14,[7]]]],[-1,28,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[51,11],[[9,[5,12]]]],[[51,11],[[9,[5,12]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,5],[4,5],[53,[[9,[5,26]]]],[[53,24],25],[[54,24],25],[[54,24],25],[-1,-1,[]],[-1,-1,[]],[26,54],[11,[[9,[53,12]]]],[11,[[9,[53,12]]]],[15,16],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[54,[[14,[7]]]],0,[-1,28,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[53,11],[[9,[5,12]]]],[[53,11],[[9,[5,12]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,5],[55,[[9,[5,26]]]],[[55,24],25],[-1,-1,[]],[11,[[9,[55,12]]]],[11,[[9,[55,12]]]],[15,16],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[55,11],[[9,[5,12]]]],[[55,11],[[9,[5,12]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,5],[56,[[9,[5,26]]]],[[56,24],25],[-1,-1,[]],[11,[[9,[56,12]]]],[11,[[9,[56,12]]]],[15,16],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[[56,11],[[9,[5,12]]]],[[56,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[57,[[9,[5,26]]]],0,0,[[57,24],25],[-1,-1,[]],[11,[[9,[57,12]]]],[11,[[9,[57,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[57,11],[[9,[5,12]]]],[[57,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[58,[[9,[5,26]]]],0,0,[[58,24],25],[-1,-1,[]],[11,[[9,[58,12]]]],[11,[[9,[58,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[58,11],[[9,[5,12]]]],[[58,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[59,[[9,[5,26]]]],0,0,[[59,24],25],[-1,-1,[]],[11,[[9,[59,12]]]],[11,[[9,[59,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[59,11],[[9,[5,12]]]],[[59,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,5],[60,[[9,[5,26]]]],[[60,24],25],[-1,-1,[]],[11,[[9,[60,12]]]],[11,[[9,[60,12]]]],[15,16],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[60,11],[[9,[5,12]]]],[[60,11],[[9,[5,12]]]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,5],[61,[[9,[5,26]]]],[[61,24],25],[-1,-1,[]],[11,[[9,[61,12]]]],[11,[[9,[61,12]]]],[15,16],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[[61,11],[[9,[5,12]]]],[[61,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[62,[[9,[5,26]]]],0,0,[[62,24],25],[-1,-1,[]],[11,[[9,[62,12]]]],[11,[[9,[62,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[62,11],[[9,[5,12]]]],[[62,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[63,[[9,[5,26]]]],0,0,[[63,24],25],[-1,-1,[]],[11,[[9,[63,12]]]],[11,[[9,[63,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[63,11],[[9,[5,12]]]],[[63,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[64,[[9,[5,26]]]],0,0,0,[[64,24],25],[-1,-1,[]],[11,[[9,[64,12]]]],[11,[[9,[64,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[64,11],[[9,[5,12]]]],[[64,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,5],0,0,[65,[[9,[5,26]]]],0,0,[[65,24],25],[-1,-1,[]],[11,[[9,[65,12]]]],[11,[[9,[65,12]]]],[[],[[14,[13]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,18,[]],[[65,11],[[9,[5,12]]]],[[65,11],[[9,[5,12]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],[[[66,[-1]],67],5,[68,69]],0,[-1,-1,[]],[[[66,[-1]]],5,[68,69]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,0,[[70,[71,[-1]],[72,[-1]]],[[66,[-1]]],[68,69]],[[[66,[-1]]],[[9,[73,74]]],[68,69,75,76]],0,[[[66,[-1]]],[[9,[77,74]]],[68,69]],[[[66,[-1]]],[[5,[[66,[-1]],[14,[[66,[-1]]]]]]],[68,69,75,76]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],0,0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[[78,67,[38,[79]],70,[71,[-1]]],[[80,[-1]]],[68,69]],[[[80,[-1]]],[[9,[73,74]]],[68,69,75,76]],0,0,[[[80,[-1]]],[[9,[81,82]]],[68,69]],[[[80,[-1]]],[[5,[[80,[-1]],[14,[[80,[-1]]]]]]],[68,69,75,76]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],0,0,0,[-1,-2,[],[]],[[[80,[-1]]],83,[68,69]],[[[80,[-1]]],83,[68,69]],[[[80,[-1]]],83,[68,69]],[[[80,[-1]]],83,[68,69]],0,[[[84,[-1]]],85,[68,69]],0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],[[[84,[-1]],67],5,[68,69]],0,[-1,-1,[]],[[[86,[-1]],39,78,85],[[9,[[84,[-1]],49]]],[68,69]],[[[84,[-1]]],[[9,[[38,[83]],74]]],[68,69]],[[[84,[-1]]],[[9,[83,74]]],[68,69]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[[[86,[-1]],70,27,87,78,85],[[84,[-1]]],[68,69]],[[[84,[-1]]],[[9,[73,74]]],[68,69,75,76]],0,[[[84,[-1]]],[[9,[73,74]]],[68,69]],[[[84,[-1]]],[[5,[[84,[-1]],[14,[[84,[-1]]]]]]],[68,69,75,76]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[88,88],[[-1,-2],5,[],[]],[4,-1,[]],[4,-1,[]],[[88,[38,[28]]],[[9,[5,89]]]],[4,5],0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[90,88],[88,[[9,[73,74]]]],[88,[[14,[28]]]],[88,[[14,[28]]]],[88,4],[[88,4,4],4],0,[88,[[5,[88,[14,[88]]]]]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[[[91,[-1]]],[[38,[92]]],[68,69]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],0,0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[67,67,[14,[[94,[93]]]],70,30,4,4,4,4,[71,[-1]]],[[91,[-1]]],[68,69]],[[[91,[-1]]],[[9,[73,74]]],[68,69,75]],0,[[[91,[-1]],95],5,[68,69]],0,0,[[[91,[-1]]],[[9,[[38,[81]],82]]],[68,69]],[[[91,[-1]],85],[[9,[81,82]]],[68,69]],[[[91,[-1]]],[[9,[81,82]]],[68,69]],0,0,[[[91,[-1]]],[[5,[[91,[-1]],[14,[[91,[-1]]]]]]],[68,69,75]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[[-1,-2],5,[],[]],[4,-1,[]],[4,-1,[]],[[96,[38,[28]]],[[9,[5,49]]]],[4,5],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[97,96],[96,[[9,[73,74]]]],[96,[[14,[28]]]],[96,[[14,[28]]]],[96,4],[[96,4,4],4],0,0,[96,[[5,[96,[14,[96]]]]]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],[-1,-1,[]],[[98,[100,[99]]],[[38,[101]]]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[102,77],101],0,[70,98],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],[[[103,[-1]],67],5,[68,69]],0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[[[86,[-1]],70,27,87,78],[[103,[-1]]],[68,69]],[[[103,[-1]]],[[9,[73,74]]],[68,69,75,76]],0,[[[103,[-1]]],[[9,[77,74]]],[68,69]],[[[103,[-1]]],[[5,[[103,[-1]],[14,[[103,[-1]]]]]]],[68,69,75,76]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],0,[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[[38,[67]],79,70,[71,[-1]]],[[104,[-1]]],[68,69]],[[[104,[-1]]],[[9,[73,74]]],[68,69,75,76]],0,0,[[[104,[-1]]],[[9,[81,82]]],[68,69]],0,[[[104,[-1]]],[[5,[[104,[-1]],[14,[[104,[-1]]]]]]],[68,69,75,76]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],0,0,0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[4,-1,[]],[4,5],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[],105],[[105,4],[[5,[4,106]]]],0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,3],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,5],[4,5],0,0,[107,[[9,[5,108]]]],[[108,24],25],[[108,24],25],[[107,24],25],[-1,-1,[]],[26,108],[-1,-1,[]],[11,[[9,[107,12]]]],[11,[[9,[107,12]]]],[[],[[14,[13]]]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,[108,[[14,[7]]]],[-1,28,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[107,11],[[9,[5,12]]]],[[107,11],[[9,[5,12]]]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",1171],[4,"ProgressBarMode",1172],[4,"Monitor",1173],[15,"usize"],[15,"tuple"],[3,"Mjolnir",1],[8,"Error",1174],[3,"Box",1175],[4,"Result",1176],[4,"MjolnirCommand",1],[3,"ArgMatches",1177],[6,"Error",1178],[3,"Id",1179],[4,"Option",1180],[15,"str"],[15,"bool"],[3,"Request",1181],[3,"TypeId",1182],[3,"BlockDate",1183],[4,"BlockDateParseError",1183],[3,"ClientLoadCommand",66],[3,"ClientLoadConfig",123],[4,"ClientLoadCommandError",66],[3,"Formatter",1184],[6,"Result",1184],[4,"MjolnirError",256],[3,"Hash",1185],[3,"String",1186],[4,"ScenarioType",123],[15,"u32"],[3,"PassiveBootstrapLoad",123],[3,"PathBuf",1187],[15,"u64"],[3,"TrustedPeer",1188],[3,"TempDir",1189],[3,"ProgressBar",1190],[3,"ScenarioProgressBar",191],[3,"Vec",1191],[3,"JormungandrProcess",1192],[4,"StartupError",1193],[3,"DurationBasedClientLoad",216],[3,"MultiProgress",1190],[3,"SpeedBenchmarkFinish",1194],[3,"JoinHandle",1195],[3,"Instant",1196],[3,"SpeedBenchmarkRun",1194],[3,"IterationBasedClientLoad",236],[4,"JormungandrError",1197],[4,"RestError",1198],[4,"Block0Error",1199],[3,"ExplorerLoadCommand",284],[4,"ExplorerLoadCommandError",284],[4,"FragmentLoadCommand",336],[4,"FragmentLoadCommandError",336],[4,"Batch",385],[4,"Adversary",415],[3,"AdversaryAll",445],[3,"VotesOnly",481],[3,"TxOnly",518],[4,"Standard",554],[4,"Adversary",588],[3,"AllAdversary",618],[3,"VotesOnly",654],[3,"AllFragments",691],[3,"TxOnly",729],[3,"AdversaryFragmentGenerator",845],[4,"Wallet",1200],[8,"SyncNode",1201],[8,"Send",1202],[3,"RemoteJormungandr",1203],[3,"FragmentSender",1204],[3,"AdversaryFragmentSender",1205],[3,"Request",1206],[4,"RequestFailure",1206],[8,"Sync",1202],[8,"Clone",1207],[6,"FragmentId",1208],[4,"BlockDateGenerator",1204],[3,"VotePlan",1209],[3,"AdversaryVoteCastsGenerator",873],[3,"MemPoolCheck",1210],[4,"FragmentSenderError",1204],[4,"Fragment",1208],[3,"BatchFragmentGenerator",904],[15,"u8"],[3,"FragmentSenderSetup",1211],[3,"LinearFee",1212],[3,"ExplorerRequestGen",933],[4,"ExplorerError",1213],[3,"Explorer",1213],[3,"FragmentGenerator",964],[3,"StakePool",1214],[3,"Ed25519",1215],[3,"KeyPair",1216],[3,"BlockDate",1217],[3,"RestRequestGen",1003],[3,"JormungandrRest",1198],[3,"FragmentStatusProvider",1034],[6,"Id",1206],[15,"slice"],[3,"Status",1218],[3,"FragmentLog",1219],[3,"TransactionGenerator",1052],[3,"VoteCastsGenerator",1076],[3,"SplitLaneIter",1101],[4,"WitnessMode",1220],[3,"RestLoadCommand",1119],[4,"RestLoadCommandError",1119]]},\
"offline":{"doc":"Tool for offline tally","t":"DLLMLLLLLLLLLLMLLLLLLFMFLLLLLLL","n":["Args","augment_args","augment_args_for_update","block0","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","fragments","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","official_results","read_block0","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"offline"],[31,"clap_builder::builder::command"],[32,"core::fmt"],[33,"core::fmt"],[34,"clap_builder"],[35,"core::result"],[36,"clap_builder::util::id"],[37,"core::option"],[38,"core::error"],[39,"alloc::boxed"],[40,"eyre"],[41,"std::path"],[42,"chain_impl_mockchain::block"],[43,"eyre"]],"d":["Args defines and declares CLI behaviour within the context …","","","block0 path","","","","","","","","","","","Obtain fragments by providing path to historical fund data.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","cross reference official results","Read block0 from file               ","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,2,2,2,2,2,2],"f":[0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,3],[[2,5],6],0,[-1,-1,[]],[7,[[9,[2,8]]]],[7,[[9,[2,8]]]],[[],[[11,[10]]]],[[],4],[-1,-2,[],[]],[[],[[14,[3,[13,[12]]]]]],0,[15,[[14,[16,17]]]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[[2,7],[[9,[3,8]]]],[[2,7],[[9,[3,8]]]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",31],[3,"Args",0],[15,"tuple"],[15,"usize"],[3,"Formatter",32],[6,"Result",32],[3,"ArgMatches",33],[6,"Error",34],[4,"Result",35],[3,"Id",36],[4,"Option",37],[8,"Error",38],[3,"Box",39],[6,"Result",40],[3,"PathBuf",41],[3,"Block",42],[3,"Report",40],[3,"TypeId",43]]},\
"scheduler_service_lib":{"doc":"","t":"EDENEENDDNNNNNNINDNNNNNNNENNINNDDNNNNNDEDNNEMMMMMMLLLLALLAMMALLLLLLLFALLLLLLLLLMKAMMKKMLMALFKALLLLLLLLLLLMMMMMMMMMMMMMMMMCCCCCAAEEDNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLENNDNNNNLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMMMLLLLLLLLLLLLLLLLLMLLLLLLDGLMLLLLLLMLLLLLLLMMLMLLLLLLLLLEDNLLLLMLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLLLAFAFAFFENNLLLLLFFLLLLLLLLLLLLLFFFFFFDNELLLLFLLLLLLLLLLLLLLLLLMLLFLLLLLLLLLNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMM","n":["CliError","Configuration","Error","Failed","FileListerError","FilesCommand","Finished","FolderDump","HealthCommand","Idle","Io","IoError","JobInProgress","JobNotFound","JobNotStarted","JobRunner","List","ManagerService","NoJobRun","NoRequestToStart","Poison","Poison","RequestToStart","ReqwestError","ReqwestError","RestError","RestError","RootFolderDoesNotExist","RunContext","Running","Scheduler","SchedulerContext","SchedulerRestClient","Serde","SerdeError","SerdeJsonError","SerdeYamlError","SerializationError","ServerStopper","State","StatusCommand","UnexpectedResponse","WaitError","WrappedPoisonError","address","address","admin_token","admin_token","api_token","api_token","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","config","config","content","context","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","dump_json","file_lister","fmt","fmt","from","from","from","init","init","into","into","job_id","new_run_started","rest","result_dir","root","run_finished","run_requested","runtime","serialize","server_stopper","service","source","spawn_scheduler","start","state","stop","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","end","end","info","info_msg","job_id","job_id","job_id","job_id","request","request","request","request","start","start","start","step","CliError","FilesCommand","HealthCommand","SchedulerRestClient","StatusCommand","args","rest","Error","FilesCommand","HealthCommand","List","ReqwestError","RestError","Scheduler","SerdeError","StatusCommand","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","init","init","into","into","into","into","job_id","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Error","IoError","ReqwestError","SchedulerRestClient","SerdeJsonError","SerdeYamlError","UnexpectedResponse","WaitError","address","address","admin_token","admin_token","api_token","api_token","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","download","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","get","init","init","into","into","is_up","job_new","job_status","list_files","new","new_no_tokens","new_with_admin_token","new_with_api_token","path","set_header","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Configuration","address","admin_token","api_token","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","init","into","result_dir","serialize","to_owned","try_from","try_into","type_id","vzip","SchedulerContext","SharedContext","admin_token","alloc","api_token","borrow","borrow_mut","clone","clone_into","config","config","deref","deref_mut","drop","from","init","into","new","phantom","ptr","server_stopper","server_stopper","set_admin_token","set_api_token","set_server_stopper","to_owned","try_from","try_into","type_id","vzip","working_directory","Error","FolderDump","RootFolderDoesNotExist","borrow","borrow","borrow_mut","borrow_mut","content","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","dump_json","find_file_with_extension","fmt","fmt","from","from","from","init","init","into","into","new","push","root","serialize","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","files","files_filter","health","health_filter","token","token_admin_filter","token_api_filter","Error","File","Poison","borrow","borrow_mut","deref","deref_mut","drop","files_handler","filter","fmt","fmt","from","from","from","init","into","source","to_string","try_from","try_into","type_id","vzip","filter","handler","authorize_admin_token","authorize_api_token","filter_admin_token","filter_api_token","ManagerService","Poison","WrappedPoisonError","borrow","borrow","borrow_mut","borrow_mut","check_if_started","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","from","from","from","init","init","into","into","runtime","serialize","spawn","spawn_scheduler","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Failed","Finished","Idle","RequestToStart","Running","State","assert_is_finished","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","has_id","init","into","new_run_requested","new_run_started","persist","run_finished","run_requested","serialize","to_owned","to_string","try_from","try_into","type_id","update_running_step","vzip","end","end","info","info_msg","job_id","job_id","job_id","job_id","request","request","request","request","start","start","start","step"],"q":[[0,"scheduler_service_lib"],[105,"scheduler_service_lib::State"],[121,"scheduler_service_lib::client"],[128,"scheduler_service_lib::client::args"],[217,"scheduler_service_lib::client::rest"],[277,"scheduler_service_lib::config"],[305,"scheduler_service_lib::context"],[336,"scheduler_service_lib::file_lister"],[376,"scheduler_service_lib::rest"],[383,"scheduler_service_lib::rest::files"],[406,"scheduler_service_lib::rest::health"],[408,"scheduler_service_lib::rest::token"],[412,"scheduler_service_lib::service"],[450,"scheduler_service_lib::state"],[489,"scheduler_service_lib::state::State"],[505,"core::result"],[506,"serde::de"],[507,"std::path"],[508,"core::convert"],[509,"core::fmt"],[510,"core::fmt"],[511,"uuid"],[512,"serde::ser"],[513,"core::error"],[514,"std::sync::mutex"],[515,"alloc::sync"],[516,"alloc::boxed"],[517,"tokio::runtime::task::join"],[518,"core::convert"],[519,"std::path"],[520,"alloc::string"],[521,"core::any"],[522,"clap_builder::builder::command"],[523,"serde::de"],[524,"reqwest::error"],[525,"clap_builder::parser::matches::arg_matches"],[526,"clap_builder"],[527,"clap_builder::util::id"],[528,"core::convert"],[529,"serde_yaml::error"],[530,"serde::ser"],[531,"walkdir::error"],[532,"tokio::sync::rwlock"],[533,"warp::filter"],[534,"core::clone"],[535,"warp::reply"],[536,"warp::reject"],[537,"std::sync::poison"],[538,"core::future::future"],[539,"core::marker"],[540,"serde::de"],[541,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","job id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","job id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,62,0,0,62,0,0,62,4,38,4,4,4,0,35,0,4,4,13,4,62,32,38,0,32,8,0,62,32,0,0,4,32,38,38,4,0,0,0,38,38,0,31,49,31,49,31,49,4,1,4,1,0,1,1,0,50,7,0,4,1,4,1,4,4,1,0,0,4,4,4,4,1,4,1,4,1,33,18,0,49,7,18,18,59,4,50,0,4,0,21,0,1,1,4,4,1,4,1,4,1,4,1,66,67,66,67,68,69,66,67,68,69,66,67,69,66,67,69,0,0,0,0,0,0,0,0,0,0,35,32,32,32,32,0,33,33,35,35,70,33,35,32,70,33,35,32,33,35,33,35,70,33,35,32,70,33,35,32,70,33,35,32,70,33,35,33,35,32,32,70,33,35,32,32,32,32,32,33,35,33,35,33,35,70,33,35,32,70,33,35,32,33,32,32,70,33,35,32,70,33,35,32,70,33,35,32,33,35,33,35,70,33,35,32,0,38,38,0,38,38,38,38,31,31,31,31,31,31,31,38,31,38,31,38,31,38,31,31,38,31,38,38,31,38,38,38,38,38,38,31,31,38,31,38,31,31,31,31,31,31,31,31,31,31,38,38,31,38,31,38,31,38,31,38,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,50,71,50,50,50,50,50,50,50,50,50,50,50,50,50,50,71,71,50,50,50,50,50,50,50,50,50,50,50,0,0,8,7,8,7,8,7,7,8,7,8,7,7,8,0,7,8,8,7,8,8,7,8,7,8,7,7,7,7,8,8,7,8,7,8,7,8,7,8,0,0,0,0,0,0,0,0,57,57,57,57,57,57,57,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,0,0,0,0,13,0,59,13,59,13,0,59,59,13,59,13,13,59,13,13,13,59,13,13,59,13,59,13,59,13,59,0,13,59,13,59,13,59,13,59,13,62,62,62,62,62,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,66,67,66,67,68,69,66,67,68,69,66,67,69,66,67,69],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],0,0,0,0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[5,[4]]],6],[3,2],[3,2],[-1,[[5,[7,8]]],[[10,[9]]]],0,[[4,11],12],[[4,11],12],[-1,-1,[]],[13,4],[-1,-1,[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[5,[2,4]]],[]],0,0,0,[[-1,[14,[-2]]],[[5,[2,4]]],[],[]],[-1,[[14,[[2,[15,-2]]]]],[],[]],0,[[4,-1],5,16],0,0,[4,[[14,[17]]]],[[-1,[20,[[19,[18]]]],[22,[21]],[23,[2]]],[[5,[2,-2]]],[[10,[9]]],[[24,[4]],[24,[13]],[24,[25]]]],[[-1,-2,26],[[5,[[14,[-3]],-4]]],[],[],[],[]],0,[1,[[5,[2,[27,[2]]]]]],[-1,-2,[],[]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,30],[30,30],[30,30],[30,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],30],[[],30],[[],30],[[],30],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,2],[3,2],[3,2],[3,2],[31,[[5,[2,32]]]],[[33,31],[[5,[[5,[-1,4]],32]]],34],[[35,31],[[5,[2,32]]]],[[33,11],12],[[35,11],12],[[32,11],12],[[32,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,32],[-1,-1,[]],[36,32],[37,32],[38,32],[39,[[5,[33,40]]]],[39,[[5,[35,40]]]],[39,[[5,[33,40]]]],[39,[[5,[35,40]]]],[[],[[14,[41]]]],[42,43],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[32,[[14,[17]]]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[[33,39],[[5,[2,40]]]],[[35,39],[[5,[2,40]]]],[[33,39],[[5,[2,40]]]],[[35,39],[[5,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[31,28],0,[31,[[14,[28]]]],0,[31,[[14,[28]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[[31,-1,-2],[[5,[2,38]]],[[44,[28]]],[[10,[9]]]],[3,2],[3,2],[[31,11],12],[[38,11],12],[[38,11],12],[-1,-1,[]],[25,38],[36,38],[-1,-1,[]],[37,38],[45,38],[46,38],[[31,-1],[[5,[28,38]]],[[44,[28]]]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[31,43],[[31,-1],[[5,[28,38]]],47],[[31,-1],[[5,[-2,38]]],[[44,[28]]],34],[31,[[5,[7,38]]]],[[[14,[28]],[14,[28]],28],31],[28,31],[[28,28],31],[[28,28],31],[[31,-1],28,[[44,[28]]]],[[31,48],48],[38,[[14,[17]]]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[49,49],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[-1,[[5,[49]]],6],[3,2],[[49,49],43],[[-1,-2],43,[],[]],[[-1,-2],43,[],[]],[[-1,-2],43,[],[]],[[-1,-2],43,[],[]],[[49,11],12],[-1,-1,[]],[[],3],[-1,-2,[],[]],0,[[49,-1],5,16],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,[50,[[14,[28]]]],0,[50,[[14,[28]]]],[-1,-2,[],[]],[-1,-2,[],[]],[50,50],[[-1,-2],2,[],[]],[50,49],0,[3,-1,[]],[3,-1,[]],[3,2],[-1,-1,[]],[[],3],[-1,-2,[],[]],[[[14,[1]],49],50],0,0,[50,[[14,[1]]]],0,[[50,[14,[28]]],2],[[50,[14,[28]]],2],[[50,[14,[1]]],2],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],[50,9],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[5,[7]]],6],[3,2],[3,2],[-1,[[5,[7,8]]],[[10,[9]]]],[[7,-1,-1],[[14,[28]]],[[44,[28]]]],[[8,11],12],[[8,11],12],[-1,-1,[]],[51,8],[-1,-1,[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,7,[[10,[9]]]],[[7,-1],2,[[44,[28]]]],0,[[7,-1],5,16],[8,[[14,[17]]]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[20,[[52,[50]]]],26],[[0,[53,54]]]],0,[[],[[0,[53,54]]]],0,[[[20,[[52,[50]]]],43],[[0,[53,54]]]],[[[20,[[52,[50]]]],43],[[0,[53,54]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[3,-1,[]],[3,-1,[]],[3,2],[[[20,[[52,[50]]]]],[[5,[[0,[55]],56]]]],[[[20,[[52,[50]]]],26],[[0,[53,54]]]],[[57,11],12],[[57,11],12],[-1,-1,[]],[8,57],[[[58,[-1]]],57,[]],[[],3],[-1,-2,[],[]],[57,[[14,[17]]]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],[[],[[0,[53,54]]]],[[],[[5,[[0,[55]],56]]]],[[28,[20,[[52,[50]]]]],[[5,[2,56]]]],[[28,[20,[[52,[50]]]]],[[5,[2,56]]]],[[[20,[[52,[50]]]],43],[[0,[53,54]]]],[[[20,[[52,[50]]]],43],[[0,[53,54]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[[19,[18]]]]],[[14,[[2,[15,-1]]]]],54],[[],59],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[5,[13]]],6],[3,2],[3,2],[[13,11],12],[[13,11],12],[-1,-1,[]],[[[58,[-1]]],13,[]],[-1,-1,[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],0,[[13,-1],5,16],[[59,-1],[[23,[2]]],[60,61]],[[-1,[20,[[19,[18]]]],[22,[21]],[23,[2]]],[[5,[2,-2]]],[[10,[9]]],[[24,[4]],[24,[13]],[24,[25]]]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[[62,[-1,-2,-3]]],2,[54,47],[47,54],[47,54]],[-1,-2,[],[]],[-1,-2,[],[]],[[[62,[-1,-2,-3]]],[[62,[-1,-2,-3]]],[54,47,54],[54,47,54],[54,47,54]],[[-1,-2],2,[],[]],[3,-1,[]],[3,-1,[]],[-1,[[5,[[62,[-2,-3,-4]]]]],6,[63,47,54],[63,47,54],[63,47,54]],[3,2],[[[62,[-1,-2,-3]],[62,[-1,-2,-3]]],43,[64,47,54],[64,47,54],[64,47,54]],[[-1,-2],43,[],[]],[[-1,-2],43,[],[]],[[-1,-2],43,[],[]],[[-1,-2],43,[],[]],[[[62,[-1,-2,-3]],11],12,[65,47,54],[65,47,54],[65,47,54]],[[[62,[-1,-2,-3]],11],12,[65,47,54],[65,47,54],[65,47,54]],[-1,-1,[]],[[[62,[-1,-2,-3]],15],43,[54,47],[47,54],[47,54]],[[],3],[-1,-2,[],[]],[[[62,[-1,-2,-3]],-1],[[5,[15,4]]],[54,47],[47,54],[47,54]],[[[62,[-1,-2,-3]]],[[5,[2,4]]],[54,47],[47,54],[47,54]],[[[62,[-1,-2,-3]],-4],[[5,[2,4]]],[54,47],[47,54],[47,54],[[10,[9]]]],[[[62,[-1,-2,-3]],[14,[-3]]],[[5,[2,4]]],[54,47],[47,54],[47,54]],[[[62,[-1,-2,-3]]],[[14,[[2,[15,-1]]]]],[54,47],[47,54],[47,54]],[[[62,[-1,-2,-3]],-4],5,[47,47,54],[47,47,54],[47,47,54],16],[-1,-2,[],[]],[-1,28,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,29,[]],[[[62,[-1,-2,-3]],-2],2,[54,47],[47,54],[47,54]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ServerStopper",0],[15,"tuple"],[15,"usize"],[4,"Error",0],[4,"Result",505],[8,"Deserializer",506],[3,"FolderDump",336],[4,"Error",336],[3,"Path",507],[8,"AsRef",508],[3,"Formatter",509],[6,"Result",509],[4,"WrappedPoisonError",412],[4,"Option",510],[3,"Uuid",511],[8,"Serializer",512],[8,"Error",513],[8,"RunContext",0],[3,"Mutex",514],[3,"Arc",515],[8,"JobRunner",0],[3,"Box",516],[3,"JoinHandle",517],[8,"From",508],[3,"Error",518],[3,"PathBuf",507],[3,"TrySendError",519],[3,"String",520],[3,"TypeId",521],[3,"Command",522],[3,"SchedulerRestClient",217],[4,"Error",128],[3,"StatusCommand",128],[8,"DeserializeOwned",506],[4,"FilesCommand",128],[3,"Error",523],[3,"Error",524],[4,"Error",217],[3,"ArgMatches",525],[6,"Error",526],[3,"Id",527],[15,"str"],[15,"bool"],[8,"Into",508],[4,"Error",528],[3,"Error",529],[8,"Serialize",512],[3,"RequestBuilder",530],[3,"Configuration",277],[3,"SchedulerContext",305],[3,"Error",531],[3,"RwLock",532],[8,"Filter",533],[8,"Clone",534],[8,"Reply",535],[3,"Rejection",536],[4,"Error",383],[3,"PoisonError",537],[3,"ManagerService",412],[8,"Future",538],[8,"Send",539],[4,"State",450],[8,"Deserialize",506],[8,"PartialEq",540],[8,"Debug",509],[13,"Finished",489],[13,"Failed",489],[13,"RequestToStart",489],[13,"Running",489],[3,"HealthCommand",128],[6,"SharedContext",305]]},\
"settings":{"doc":"","t":"DEDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Domain","Error","Event","Settings","Storage","Subscriber","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain","domain","domain","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","get","init","init","init","init","init","inner","inner","insert","into","into","into","into","into","into_future","into_iter","key","new","new","next","poll","source","sub_domain","subscribe","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","source"],"q":[[0,"settings"],[92,"settings::Error"],[93,"core::convert"],[94,"core::fmt"],[95,"core::fmt"],[96,"alloc::string"],[97,"core::option"],[98,"core::result"],[99,"core::fmt"],[100,"core::convert"],[101,"core::task::wake"],[102,"core::task::poll"],[103,"core::error"],[104,"core::any"]],"d":["The settings domain. This object allows keeping track of …","","","the root domain of the settings.","","Subscriber for events that occurs in within the associated …","","","","","","","","","","","","","","","","","","","","","","","","","","","create a settings domain","Get the domain full name","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","get the value associated to the given key (if any) within …","","","","","","","","insert a new key/value or replace the existing one with …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","create a new settings in within the given <code>sled</code>’s Tree.","","","","","create a subdomain off the given domain","subscribe to changes in this domain","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,10,0,18,1,2,3,10,18,1,2,3,10,1,2,3,1,2,3,18,1,2,3,10,18,1,2,3,10,1,2,2,18,1,2,3,10,3,10,10,18,1,2,3,10,10,2,18,1,2,3,10,1,2,2,18,1,2,3,10,18,18,2,1,2,18,18,10,2,2,1,2,3,10,18,1,2,3,10,18,1,2,3,10,18,1,2,3,10,24],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[[1,-1],2,[[7,[6]]]],[2,6],0,[5,4],[5,4],[5,4],[5,4],[5,4],[[3,8],9],[[10,8],9],[[10,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,10],[-1,-1,[]],[[2,-1],[[14,[[13,[12]],10]]],15],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[2,-1,-2],[[14,[[13,[12]],10]]],15,[[7,[6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,-2,[],[]],[[2,-1],12,15],[16,1],[[16,-1],2,[[17,[12]]]],[18,13],[[[19,[18]],20],21],[10,[[13,[22]]]],[[2,-1],2,[[7,[6]]]],[2,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0],"c":[],"p":[[3,"Settings",0],[3,"Domain",0],[3,"Event",0],[15,"tuple"],[15,"usize"],[15,"str"],[8,"AsRef",93],[3,"Formatter",94],[6,"Result",94],[4,"Error",0],[4,"Error",95],[3,"String",96],[4,"Option",97],[4,"Result",98],[8,"Display",94],[3,"Tree",99],[8,"Into",93],[3,"Subscriber",0],[3,"Pin",100],[3,"Context",101],[4,"Poll",102],[8,"Error",103],[3,"TypeId",104],[13,"Storage",92]]},\
"sign":{"doc":"Fragment generator","t":"DLLLLMLLLLLLLMMLALLLLLLFAMMMMLLLLLLMLRRRRRRRRRRFFFDDDDMLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","choice","clone","clone_into","command","command_for_update","deref","deref_mut","drop","election_pub_key","epoch","fmt","fragment","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","network","private_key","proposal","public_key","slot","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plan_id","vzip","ENCRYPTED_PAYLOAD","INPUT","INPUT_ACCOUNT","NONCE","OUTPUT","PADDING","PADDING_AND_TAG_SIZE","VALUE","VOTE_CAST_TAG","WITNESS_SCHEME","compose_encrypted_vote_part","compose_inputs_and_witnesses","generate_vote_fragment","Accepted","Network","NodeResponse","Rejected","accepted","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","construct_headers","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","fragment_url","from","from","from","from","id","id","init","init","init","init","into","into","into","into","new","reason","rejected","send_fragment","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"sign"],[37,"sign::fragment"],[50,"sign::network"],[121,"clap_builder::builder::command"],[122,"core::fmt"],[123,"core::fmt"],[124,"clap_builder"],[125,"core::result"],[126,"clap_builder::util::id"],[127,"core::option"],[128,"core::error"],[129,"alloc::boxed"],[130,"eyre"],[131,"core::any"],[132,"chain_vote::cryptography::elgamal"],[133,"alloc::vec"],[134,"chain_vote::encrypted_vote"],[135,"ed25519_dalek::keypair"],[136,"http::header::map"],[137,"serde::de"],[138,"alloc::string"],[139,"reqwest::blocking::response"],[140,"serde::ser"]],"d":["Args defines and declares CLI behaviour within the context …","","","","","vote yay or nay","","","","","","","","Election public key issued by Trent","Epoch","","Generate Fragments based upon specification Reference …","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Test code Example code on how to send a raw vote fragment","Private key of Alice","proposal to vote on","Public key of Alice","Slot","","","","","","","vote plan hash","","Payload type = 2 %x02 ENCRYPTED-VOTE PROOF-VOTE ; Private …","Only 1 input (subsequently 1 witness), no output VoteCast …","INPUT-ACCOUNT = %xff VALUE UNTAG-ACCOUNT-ID","Nonce","","Padding","Padding and Tag are 1 byte each; size must be added to the …","Values in inputs: redundant for voting","VoteCast tag","Type = 2 utxo witness scheme ED25519 Signature (64 bytes)","compose encrypted vote and proof in bytes","Generate Inputs-Outputs-Witnesses in bytes","Generate vote fragment in bytes","Vote fragment accepted","Simple toy network network client for sending vote …","Node responds with yay or nay and associated metadata such …","Vote fragment rejected","","","","","","","","","","","construct headers for octet-stream","","","","","","","","","","","","","","","","","","","URL for posting a signed vote fragment e.g …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,23,25,27,28,23,25,27,28,23,23,23,25,27,28,23,25,27,28,25,27,28,23,25,27,28,25,27,28,23,23,25,27,28,27,28,23,25,27,28,23,25,27,28,23,27,25,23,25,27,28,23,25,27,28,23,25,27,28,23,25,27,28,23,25,27,28],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,2],[[-1,-2],3,[],[]],[[],1],[[],1],[4,-1,[]],[4,-1,[]],[4,3],0,0,[[2,5],6],0,[-1,-1,[]],[7,[[9,[2,8]]]],[7,[[9,[2,8]]]],[[],[[11,[10]]]],[[],4],[-1,-2,[],[]],[[],[[14,[3,[13,[12]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[[2,7],[[9,[3,8]]]],[[2,7],[[9,[3,8]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[[17,[16]],18],[[9,[[3,[[17,[19]],[17,[19]]]],[13,[12]]]]]],[[20,[17,[19]],21,21],[[9,[[3,[[17,[19]],[17,[19]]]],[13,[12]]]]]],[[20,[17,[19]],[17,[19]],19,[22,[19]],21,21],[[9,[[17,[19]],[13,[12]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[23,24],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,[[9,[25]]],26],[-1,[[9,[27]]],26],[-1,[[9,[28]]],26],[4,3],[4,3],[4,3],[4,3],[[25,5],6],[[27,5],6],[[28,5],6],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,23],0,0,[[23,[17,[19]]],[[14,[30,[13,[12]]]]]],[[25,-1],9,31],[[27,-1],9,31],[[28,-1],9,31],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",121],[3,"Args",0],[15,"tuple"],[15,"usize"],[3,"Formatter",122],[6,"Result",122],[3,"ArgMatches",123],[6,"Error",124],[4,"Result",125],[3,"Id",126],[4,"Option",127],[8,"Error",128],[3,"Box",129],[6,"Result",130],[3,"TypeId",131],[3,"Ciphertext",132],[3,"Vec",133],[6,"ProofOfCorrectVote",134],[15,"u8"],[3,"Keypair",135],[15,"u32"],[15,"slice"],[3,"Network",50],[3,"HeaderMap",136],[3,"NodeResponse",50],[8,"Deserializer",137],[3,"Rejected",50],[3,"Accepted",50],[3,"String",138],[3,"Response",139],[8,"Serializer",140]]},\
"signals_handler":{"doc":"","t":"FF","n":["watch_signal","with_signal_handler"],"q":[[0,"signals_handler"],[2,"core::result"],[3,"futures_core::future"],[4,"core::marker"]],"d":["",""],"i":[0,0],"f":[[[],1],[-1,[[2,[1,-2]]],[3,4],[]]],"c":[],"p":[[15,"tuple"],[4,"Result",2],[8,"FusedFuture",3],[8,"Unpin",4]]},\
"snapshot_cli":{"doc":"","t":"F","n":["main"],"q":[[0,"snapshot_cli"],[1,"snapshot_trigger_service::client::args"],[2,"core::result"]],"d":[""],"i":[0],"f":[[[],[[3,[1,2]]]]],"c":[],"p":[[15,"tuple"],[4,"Error",1],[4,"Result",2]]},\
"snapshot_lib":{"doc":"","t":"RDEGNDNNNNDDDDGMLLLLLLLLLLLLLLLFFLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLMMAMMLLLLFMLMAALLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMMMAAMMLMMLLLLLLENRRNDDRRDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMALLLLMALLLLLLLLLLLLLLLLLLMMLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLLLDLLLLLLLLLLLLLDGMLLLLLLLLLLLLLLFMMALALLLLLMMMMMLFFDLLLLLLLLLLLLLLLRRDIKLLLLLMMLLLLLMLLLL","n":["CATALYST_VOTING_PURPOSE_TAG","Dreps","Error","Fraction","Infinity","KeyContribution","NaN","NotEnoughVoters","Overflow","Rational","RawSnapshot","Snapshot","SnapshotInfo","VoterHIR","VotingGroup","address","arbitrary_with","arbitrary_with","as_loadtest_snapshot","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_voting_power_cap","cap_voting_power","cap_voting_power","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","collect_raw_contributions","contributions","contributions_for_voting_key","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_identifiers","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw_snapshot","hir","init","init","init","init","init","init","inner","into","into","into","into","into","into","overlimit","private_key","registration","reps","reward_address","serialize","serialize","serialize","serialize","serialize_identifiers","stake_public_key","stake_threshold","stake_threshold","sve","tests","to_block0_initials","to_full_snapshot_info","to_loadtest_snapshot","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_voter_hir","total_eligible_voters","total_eligible_voting_power","total_registered_voters","total_registered_voting_power","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","underthreshold","value","vec","voter_hir","voting_group","voting_group","voting_key","voting_keys","voting_power","voting_power_cap","vzip","vzip","vzip","vzip","vzip","vzip","Delegations","Legacy","MAINNET_PAYMENT_PREFIX","MAINNET_STAKE_PREFIX","New","RewardAddress","StakeAddress","TESTNET_PAYMENT_PREFIX","TESTNET_STAKE_PREFIX","VotingRegistration","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","delegations","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","hash","init","init","init","init","into","into","into","into","is_legacy","is_new","nonce","partial_cmp","reward_address","serde_impl","serialize","serialize","serialize","serialize","stake_public_key","tests","to_loadtest_snapshot","to_loadtest_snapshot","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voting_power","voting_purpose","vzip","vzip","vzip","vzip","IdentifierDef","VotingKeyVisitor","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","expecting","fmt","from","from","init","init","into","into","serialize","try_from","try_from","try_into","try_into","type_id","type_id","visit_bytes","visit_str","vzip","vzip","Snapshot","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","into","new","to_block0_initials","try_from","try_into","type_id","vzip","DummyAssigner","assign","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","VoterHIR","VotingGroup","address","arbitrary_with","borrow","borrow_mut","cap_voting_power","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","is_false","overlimit","private_key","serde","serialize","tests","to_loadtest_snapshot","to_owned","try_from","try_into","type_id","underthreshold","vec","voting_group","voting_key","voting_power","vzip","deserialize","serialize","VpRange","ada_distribution","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","init","into","try_from","try_into","type_id","vzip","DEFAULT_DIRECT_VOTER_GROUP","DEFAULT_REPRESENTATIVE_GROUP","RepsVotersAssigner","VotingGroupAssigner","assign","assign","borrow","borrow_mut","deref","deref_mut","direct_voters","dreps","drop","from","init","into","new","reps","try_from","try_into","type_id","vzip"],"q":[[0,"snapshot_lib"],[166,"snapshot_lib::registration"],[277,"snapshot_lib::registration::serde_impl"],[309,"snapshot_lib::sve"],[325,"snapshot_lib::tests"],[339,"snapshot_lib::voter_hir"],[373,"snapshot_lib::voter_hir::serde"],[375,"snapshot_lib::voter_hir::tests"],[391,"snapshot_lib::voting_group"],[413,"alloc::vec"],[414,"jormungandr_lib::crypto::account"],[415,"alloc::collections::btree::map"],[416,"core::borrow"],[417,"core::result"],[418,"serde::de"],[419,"std::collections::hash::set"],[420,"core::fmt"],[421,"core::fmt"],[422,"chain_addr"],[423,"serde::ser"],[424,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[425,"alloc::string"],[426,"core::any"],[427,"core::iter::traits::iterator"],[428,"core::cmp"],[429,"core::hash"],[430,"core::option"],[431,"core::fmt"]],"d":["","","","Fraction consisting from two <code>u64</code> numbers","","Contribution to a voting key for some registration","","","","","","","","Define High Level Intermediate Representation (HIR) for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The values in the contributions are the original values in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Overlimit (voter is max voting power threshold limited) …","PrivateKey is only created when making a loadtest snapshot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Under threshold (voter doesn’t have enough voting power) …","","","","","Voting group this key belongs to. If this key belong to …","","","Voting power as processed by the snapshot","","","","","","","","To allow backward compatibility and avoid requiring …","","","","Tuples of (voting key, weight)","","","","","The voting registration/delegation format as introduced in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Shelley address discriminated for the same network this …","","","","","","","","","","","","","","","","","","","","","","","","","","","0 = Catalyst, assumed 0 for old legacy registrations","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Define High Level Intermediate Representation (HIR) for …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Overlimit (voter is max voting power threshold limited) …","PrivateKey is only created when making a loadtest snapshot.","","","","","","","","","Under threshold (voter doesn’t have enough voting power) …","","Voting group this key belongs to. If this key belong to …","","Voting power as processed by the snapshot","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,2,0,2,21,21,2,0,0,0,0,0,29,9,12,1,9,10,21,11,1,12,9,10,21,11,1,12,0,0,1,9,10,11,1,12,9,10,11,1,12,0,1,12,10,9,10,21,11,1,12,9,10,21,11,1,12,9,10,11,1,0,9,10,21,11,1,12,11,11,9,10,21,21,11,1,12,9,9,10,10,21,11,1,12,12,1,9,10,21,11,1,12,12,9,10,21,11,1,12,29,29,0,10,11,9,10,11,1,0,11,12,12,0,0,12,12,11,9,10,11,1,12,21,12,12,12,12,12,9,10,21,11,1,12,9,10,21,11,1,12,9,10,21,11,1,12,29,11,49,0,0,29,29,12,29,12,9,10,21,11,1,12,0,34,0,0,34,0,0,0,0,0,22,34,32,33,22,34,32,33,22,34,32,33,22,34,32,33,22,34,32,22,32,32,33,33,22,34,32,32,33,33,22,34,32,33,22,34,32,33,22,34,32,33,22,34,32,33,22,34,32,33,22,34,32,33,22,34,32,32,33,22,34,32,33,22,34,22,22,22,32,22,0,32,33,22,34,22,0,32,33,32,33,22,34,32,33,22,34,32,33,22,34,32,33,22,34,22,22,32,33,22,34,0,0,38,39,38,39,38,39,38,39,38,38,39,39,39,38,39,38,39,38,39,38,38,39,38,39,38,39,39,39,38,39,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,29,0,29,0,29,29,29,29,29,29,49,29,29,29,29,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,25,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,3],4],[[2,3,[5,[1]]],[[8,[[7,[6,1]],4]]]],[[1,4],1],[9,9],[10,10],[11,11],[1,1],[12,12],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[9,[[7,[6,[5,[11]]]]]],0,[[12,-1],[[5,[11]]],[[13,[6]]]],[[],10],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[-1,[[15,[9]]],16],[-1,[[15,[10]]],16],[-1,[[15,[11]]],16],[-1,[[15,[1]]],16],[-1,[[15,[[17,[6]]]]],16],[14,8],[14,8],[14,8],[14,8],[14,8],[14,8],[[11,11],18],[[-1,-2],18,[],[]],[[9,19],20],[[10,19],20],[[21,19],20],[[21,19],20],[[11,19],20],[[1,19],20],[[12,19],20],[-1,-1,[]],[[[5,[22]]],9],[-1,-1,[]],[[[17,[6]]],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[9,23,2,-1,24,18],[[15,[12,21]]],25],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[9,-1],15,26],[[10,-1],15,26],[[11,-1],15,26],[[1,-1],15,26],[[[17,[6]],-1],15,26],0,[12,23],0,0,0,[[12,24],[[5,[27]]]],[12,[[5,[1]]]],[11,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,28,[]],[12,[[5,[29]]]],0,0,0,0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,0,0,0,0,0,0,[12,[[0,[31]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[33,33],[22,22],[34,34],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[32,32],35],0,[32],[14,-1,[]],[33],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[32],[14,-1,[]],[33],[14,-1,[]],[14,-1,[]],[-1,[[15,[32]]],16],[-1,[[15,[33]]],16],[-1,[[15,[22]]],16],[-1,[[15,[34]]],16],[14,8],[14,8],[14,8],[14,8],[[32,32],18],[[33,33],18],[[22,22],18],[[34,34],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[32,19],20],[[33,19],20],[[22,19],20],[[34,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[32,-1],8,36],[[],14],[[],14],[[],14],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,18],[22,18],0,[[32,32],[[37,[35]]]],0,0,[[32,-1],15,26],[[33,-1],15,26],[[22,-1],15,26],[[34,-1],15,26],0,0,[32,32],[33,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[14,-1,[]],[-1,[[15,[38]]],16],[14,8],[14,8],[[39,19],20],[[-1,19],[[15,[8,40]]],[]],[-1,-1,[]],[-1,-1,[]],[[],14],[[],14],[-1,-2,[],[]],[-1,-2,[],[]],[[38,-1],15,26],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[[39,[42,[41]]],[[15,[-1]]],43],[[39,44],[[15,[-1]]],43],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[14,-1,[]],[14,-1,[]],[14,8],[-1,-1,[]],[[],14],0,[-1,-2,[],[]],[[9,23],[[8,[45,14]]]],[[45,24,18],[[5,[27]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,-2,[],[]],0,[[46,6],28],[-1,-2,[],[]],[-1,-2,[],[]],[14,-1,[]],[14,-1,[]],[14,8],[-1,-1,[]],[[],14],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,-2,[],[]],0,0,0,[[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,4],29],[29,29],[[-1,-2],8,[],[]],[14,-1,[]],[14,-1,[]],[-1,[[15,[29]]],16],[14,8],[[29,19],20],[-1,-1,[]],[[],14],[-1,-2,[],[]],[18,18],0,0,0,[[29,-1],15,26],0,[29,29],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,[[15,[6]]],16],[[6,-1],15,26],0,[[],47],[-1,-2,[],[]],[-1,-2,[],[]],[[],47],[14,-1,[]],[14,-1,[]],[14,8],[-1,-1,[]],[[[48,[4]]],47],[[],14],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,-2,[],[]],0,0,0,0,[[-1,6],49,[]],[[50,6],49],[-1,-2,[],[]],[-1,-2,[],[]],[14,-1,[]],[14,-1,[]],0,0,[14,8],[-1,-1,[]],[[],14],[-1,-2,[],[]],[[49,49,10],50],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,30,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SnapshotInfo",0],[6,"Fraction",0],[15,"u128"],[15,"u64"],[3,"Vec",413],[3,"Identifier",414],[3,"BTreeMap",415],[15,"tuple"],[3,"RawSnapshot",0],[3,"Dreps",0],[3,"KeyContribution",0],[3,"Snapshot",0],[8,"Borrow",416],[15,"usize"],[4,"Result",417],[8,"Deserializer",418],[3,"HashSet",419],[15,"bool"],[3,"Formatter",420],[6,"Result",420],[4,"Error",0],[3,"VotingRegistration",166],[3,"Value",421],[4,"Discrimination",422],[8,"VotingGroupAssigner",391],[8,"Serializer",423],[3,"InitialUTxO",424],[3,"String",425],[3,"VoterHIR",339],[3,"TypeId",426],[8,"Iterator",427],[3,"RewardAddress",166],[3,"StakeAddress",166],[4,"Delegations",166],[4,"Ordering",428],[8,"Hasher",429],[4,"Option",430],[3,"IdentifierDef",277],[3,"VotingKeyVisitor",277],[3,"Error",420],[15,"u8"],[15,"slice"],[8,"Error",418],[15,"str"],[3,"Snapshot",309],[3,"DummyAssigner",325],[3,"VpRange",375],[3,"Range",431],[6,"VotingGroup",339],[3,"RepsVotersAssigner",391]]},\
"snapshot_tool":{"doc":"","t":"FFFFF","n":["db_conn","handle_invalids","handle_unregistered","load","main"],"q":[[0,"snapshot_tool"],[5,"voting_tools_rs::db"],[6,"postgres::client"],[7,"tokio_postgres::error"],[8,"eyre"],[9,"std::path"],[10,"voting_tools_rs::error"],[11,"voting_tools_rs::verification::verify"],[12,"voting_tools_rs::cli"],[13,"core::option"],[14,"voting_tools_rs::logic::args"],[15,"voting_tools_rs::data"],[16,"alloc::vec"]],"d":["","Handle invalid registrations","Handle stake addresses that are not registered","",""],"i":[0,0,0,0,0],"f":[[1,[[4,[2,3]]]],[[5,[7,[6]]],[[4,[8]]]],[[5,9],[[4,[8]]]],[[[11,[10]],12,2,2],[[4,[[8,[[14,[13]],[14,[6]],9]]]]]],[[],[[4,[8]]]]],"c":[],"p":[[3,"DbConfig",5],[3,"Client",6],[3,"Error",7],[6,"Result",8],[3,"Path",9],[3,"InvalidRegistration",10],[15,"slice"],[15,"tuple"],[6,"Unregistered",11],[4,"DryRunCommand",12],[4,"Option",13],[3,"VotingPowerArgs",14],[3,"SnapshotEntry",15],[3,"Vec",16]]},\
"snapshot_trigger_service":{"doc":"","t":"NNNNDNGENNNNNNNDAAAMAMAAMMMMMMMMMMMMMMMMMMNNNNNENNDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLAANENENNNENDNNNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNDDEDNENNDNMLLMLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLAMMFLLLLLLMLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFDLLLLLLLLLLLLLLLLLLLLMMLLLLLDGGENNNNNNNNNNLMLLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLMLLLLLLLLLLLMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLNNNENFLLLLLLLLLLLFFFFLFLLLLL","n":["CannotPersistJobState","CannotReadConfiguration","CannotSerializeJobState","CannotSpawnCommand","Context","Context","ContextState","Error","Failed","Finished","Idle","Poison","RequestToStart","Running","Scheduler","TriggerServiceCommand","args","client","config","config","context","inner","job","rest","state","token","end","end","info","info_msg","job_id","job_id","job_id","job_id","request","request","request","request","start","start","start","step","CannotPersistJobState","CannotReadConfiguration","CannotSerializeJobState","CannotSpawnCommand","Context","Error","Poison","Scheduler","TriggerServiceCommand","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","source","to_string","token","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","args","rest","Cli","Command","Context","Error","Files","Health","Job","JobCommand","New","NewJobCommand","ReqwestError","Rest","SerdeError","Status","StatusCommand","TriggerServiceCliCommand","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","endpoint","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","has_subcommand","init","init","init","init","init","init","into","into","into","into","into","into","job_id","slot_no","source","tag","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","Error","Inner","IoError","ReqwestError","SerdeJsonError","SerdeYamlError","SnapshotRestClient","UnexpectedSnapshotRestResponse","WaitError","address","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","download_job_status","download_snapshot","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_snapshot","get_status","init","init","into","into","into","is_up","job_new","list_files","new","new_with_token","source","to_string","token","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_for_job_finish","path","text","CannotFindVotingTools","CannotParseConfiguration","CannotReadConfiguration","CannotSpawnCommand","Configuration","ConfigurationBuilder","Error","JobParameters","Mainnet","NetworkType","ResultFolderDoesNotExists","Testnet","VotingToolsParams","WrongVotingToolsConfiguration","additional_params","address","address_mut","bin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command","configuration","db","db_host","db_pass","db_user","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","inner","into","into","into","into","into","job","network","nix_branch","read_config","result_dir","serialize","serialize","serialize","serialize","set_token","slot_no","source","tag","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","voting_tools","vzip","vzip","vzip","vzip","vzip","with_port","with_result_dir","with_tmp_result_dir","with_voting_tools_params","write_config","JobParameters","borrow","borrow_mut","clone","clone_into","daily","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","fund","init","into","serialize","slot_no","tag","to_owned","try_from","try_into","type_id","vzip","Context","ContextLock","ContextState","Error","Failed","Finished","Idle","JobNotFound","NoJobRun","NoRequestToStart","RequestToStart","Running","SnaphotInProgress","SnaphotNotStarted","address","alloc","api_token","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","from","from","init","init","inner","into","into","into_scheduler_context","new","new_run_started","phantom","ptr","run_finished","run_requested","serialize","server_stopper","set_api_token","set_server_stopper","state","state","state_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_directory","end","end","info","info_msg","job_id","job_id","job_id","job_id","request","request","request","request","start","start","start","step","SnapshotJobRunner","borrow","borrow_mut","crate_snapshot_output_file_name","deref","deref_mut","drop","from","init","into","print_with_password_hidden","start","try_from","try_into","type_id","vzip","CannotFindJobByStatus","CannotParseToken","CannotParseUuid","Error","WorkingDirectoryUndefined","authorize_token","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","job_new_handler","job_prameters_json_body","job_status_handler","report_invalid","source","start_rest_server","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"snapshot_trigger_service"],[26,"snapshot_trigger_service::ContextState"],[42,"snapshot_trigger_service::args"],[98,"snapshot_trigger_service::client"],[100,"snapshot_trigger_service::client::args"],[258,"snapshot_trigger_service::client::rest"],[315,"snapshot_trigger_service::client::rest::Error"],[317,"snapshot_trigger_service::config"],[469,"snapshot_trigger_service::config::job"],[497,"snapshot_trigger_service::context"],[558,"snapshot_trigger_service::context::ContextState"],[574,"snapshot_trigger_service::job"],[590,"snapshot_trigger_service::rest"],[618,"clap_builder::builder::command"],[619,"core::result"],[620,"core::fmt"],[621,"core::fmt"],[622,"scheduler_service_lib::service"],[623,"scheduler_service_lib"],[624,"std::io::error"],[625,"clap_builder::parser::matches::arg_matches"],[626,"clap_builder"],[627,"clap_builder::util::id"],[628,"core::option"],[629,"core::error"],[630,"alloc::string"],[631,"core::any"],[632,"serde_json::error"],[633,"reqwest::error"],[634,"scheduler_service_lib::client::args"],[635,"core::convert"],[636,"std::path"],[637,"core::convert"],[638,"scheduler_service_lib::client::rest"],[639,"scheduler_service_lib::client::rest"],[640,"jortestkit::process::wait"],[641,"std::process"],[642,"serde::de"],[643,"std::path"],[644,"assert_fs::fixture::dir"],[645,"scheduler_service_lib::context"],[646,"uuid"],[647,"scheduler_service_lib"],[648,"alloc::sync"],[649,"warp::reject"],[650,"uuid::error"],[651,"warp::reply"],[652,"warp::filter"],[653,"core::clone"],[654,"core::convert"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","retrieve files from snapshot (snapshot outcome etc.)","check if snapshot service is up","job related commands","","start new job","","","","","get job status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snapshot endpoint","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","job id","slot no","","tag","","access token, which is necessary to perform client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","additional parameters","","","binary name","","","","","","","","","","","","","","","","","","","","","","db name","db host","db pass","db user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","network type","in some occasion we need to run voting-tools via some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[5,5,5,5,0,5,0,0,28,28,28,5,28,28,5,0,0,0,0,4,0,56,0,0,56,4,70,71,70,71,72,73,70,71,72,73,70,71,73,70,71,73,5,5,5,5,5,0,5,5,0,4,4,4,5,4,5,4,4,4,4,5,4,5,4,5,4,4,5,5,4,5,5,5,5,5,5,5,4,4,4,4,5,4,5,5,5,4,4,5,4,5,4,5,4,4,4,5,0,0,23,0,23,0,24,24,24,0,26,0,23,23,23,26,0,0,22,27,29,22,27,29,24,26,24,26,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,22,22,24,26,27,29,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,23,22,22,24,26,27,29,22,24,26,27,29,23,23,22,24,26,27,29,23,23,23,23,23,23,22,24,26,27,29,22,24,26,27,29,22,27,29,24,26,22,24,26,27,29,23,22,24,26,27,29,23,27,29,23,29,23,22,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,22,24,26,27,29,22,24,26,27,29,23,0,31,31,31,31,31,0,31,31,25,25,31,25,31,25,31,25,31,25,25,25,31,25,31,31,25,31,31,31,31,31,31,31,25,25,25,31,25,25,31,25,25,25,25,25,31,31,25,25,31,25,31,25,31,25,31,25,74,74,14,14,14,14,0,0,0,0,49,0,14,49,0,14,48,45,45,48,45,47,48,49,14,45,47,48,49,14,47,45,47,48,49,45,47,48,49,48,47,48,48,48,48,45,47,45,47,48,49,14,45,47,48,49,14,45,47,48,49,45,47,48,49,14,45,47,48,49,45,45,45,45,47,47,47,47,48,48,48,48,49,49,49,49,45,47,48,49,14,14,45,47,48,49,14,14,14,45,47,48,49,14,45,45,47,48,49,14,0,48,48,0,45,45,47,48,49,45,42,14,42,45,47,48,49,14,45,47,48,49,14,45,47,48,49,14,45,47,48,49,14,45,45,47,48,49,14,47,47,47,47,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,28,28,28,10,10,10,28,28,10,10,56,75,56,56,10,56,10,56,10,56,10,10,56,10,10,10,56,10,56,10,56,56,10,56,56,56,75,75,56,56,10,56,56,56,56,56,56,10,56,10,56,10,56,10,56,10,56,70,71,70,71,72,73,70,71,72,73,70,71,73,70,71,73,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,64,64,64,0,64,0,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,64,0,64,64,64,64,64],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[4,[[6,[3,5]]]],[[4,7],8],[[5,7],8],[[5,7],8],[-1,-1,[]],[-1,-1,[]],[9,5],[10,5],[11,5],[12,5],[13,5],[14,5],[15,[[6,[4,16]]]],[15,[[6,[4,16]]]],[[],[[18,[17]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[18,[19]]]],[-1,20,[]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[4,15],[[6,[3,16]]]],[[4,15],[[6,[3,16]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],1],[[],1],[[],1],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],0,[22,[[6,[3,23]]]],[[24,25],[[6,[3,23]]]],[[26,25],[[6,[3,23]]]],[[27,25],[[6,[28,23]]]],[[29,25],[[6,[20,23]]]],[[22,7],8],[[24,7],8],[[26,7],8],[[27,7],8],[[29,7],8],[[23,7],8],[[23,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,23],[30,23],[-1,-1,[]],[31,23],[32,23],[33,23],[15,[[6,[22,16]]]],[15,[[6,[24,16]]]],[15,[[6,[26,16]]]],[15,[[6,[27,16]]]],[15,[[6,[29,16]]]],[15,[[6,[22,16]]]],[15,[[6,[24,16]]]],[15,[[6,[26,16]]]],[15,[[6,[27,16]]]],[15,[[6,[29,16]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[34,35],[34,35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[23,[[18,[19]]]],0,[-1,20,[]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[22,15],[[6,[3,16]]]],[[24,15],[[6,[3,16]]]],[[26,15],[[6,[3,16]]]],[[27,15],[[6,[3,16]]]],[[29,15],[[6,[3,16]]]],[[22,15],[[6,[3,16]]]],[[24,15],[[6,[3,16]]]],[[26,15],[[6,[3,16]]]],[[27,15],[[6,[3,16]]]],[[29,15],[[6,[3,16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[25,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[[25,-1,-2],[[6,[3,31]]],[[36,[20]]],[[38,[37]]]],[[25,-1,-1,-2],[[6,[3,31]]],[[36,[20]]],[[38,[37]]]],[2,3],[2,3],[[25,7],8],[[31,7],8],[[31,7],8],[-1,-1,[]],[30,31],[-1,-1,[]],[9,31],[32,31],[13,31],[39,31],[40,31],[[25,-1,-1],[[6,[20,31]]],[[36,[20]]]],[[25,-1],[[6,[28,31]]],[[36,[20]]]],[[],2],[[],2],[25,41],[-1,-2,[],[]],[-1,-2,[],[]],[25,35],[[25,42],[[6,[20,31]]]],[25,[[6,[43,31]]]],[20,25],[[20,20],25],[31,[[18,[19]]]],[-1,20,[]],[25,[[18,[20]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,-1,44],[[6,[28,31]]],[[36,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[45,46],[45,46],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,45],[45,45],[47,47],[48,48],[49,49],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[48,[[6,[50,14]]]],0,0,0,0,0,[[],45],[[],47],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[6,[45]]],51],[-1,[[6,[47]]],51],[-1,[[6,[48]]],51],[-1,[[6,[49]]],51],[2,3],[2,3],[2,3],[2,3],[2,3],[[45,45],35],[[47,47],35],[[48,48],35],[[49,49],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[45,7],8],[[47,7],8],[[48,7],8],[[49,7],8],[[14,7],8],[[14,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[30,14],[13,14],[-1,-1,[]],[[],2],[[],2],[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[6,[45,14]]],[[38,[37]]]],[45,52],[[45,-1],6,53],[[47,-1],6,53],[[48,-1],6,53],[[49,-1],6,53],[[45,[18,[20]]],3],0,[14,[[18,[19]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,54],47],[[47,-1],47,[[38,[37]]]],[[47,55],47],[[47,48],47],[[45,-1],[[6,[3,14]]],[[38,[37]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[[-1,-2],3,[],[]],[[],42],[2,-1,[]],[2,-1,[]],[-1,[[6,[42]]],51],[2,3],[[42,42],35],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[-1,-2],35,[],[]],[[42,7],8],[-1,-1,[]],[-1,42,[[36,[20]]]],[[],2],[-1,-2,[],[]],[[42,-1],6,53],0,0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56,46],0,[56,[[18,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[6,[10]]],51],[2,3],[2,3],[[10,7],8],[[10,7],8],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[56,57],[45,56],[56,[[6,[3,12]]]],0,0,[[56,[18,[3]]],[[6,[3,12]]]],[56,[[18,[[3,[58,42]]]]]],[[10,-1],6,53],[56,[[18,[59]]]],[[56,20],3],[[56,59],3],[56,28],0,[56,28],[-1,20,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,37],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[60,[18,[20]]],20],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[60,50],3],[[60,42,52],[[6,[[18,[3]],5]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,[[20,[62,[[61,[56]]]]],[[6,[3,63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[64,7],8],[[64,7],8],[-1,-1,[]],[65,64],[[],2],[-1,-2,[],[]],[[[62,[[61,[56]]]],42],[[6,[[0,[66]],63]]]],[[],[[0,[67,68]]]],[[20,[62,[[61,[56]]]]],[[6,[[0,[66]],63]]]],[63,[[6,[[0,[66]],69]]]],[64,[[18,[19]]]],[[[62,[[61,[56]]]]],3],[-1,20,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",618],[15,"usize"],[15,"tuple"],[3,"TriggerServiceCommand",42],[4,"Error",42],[4,"Result",619],[3,"Formatter",620],[6,"Result",620],[3,"Error",621],[4,"Error",497],[4,"WrappedPoisonError",622],[4,"Error",623],[3,"Error",624],[4,"Error",317],[3,"ArgMatches",625],[6,"Error",626],[3,"Id",627],[4,"Option",628],[8,"Error",629],[3,"String",630],[3,"TypeId",631],[3,"TriggerServiceCliCommand",100],[4,"Error",100],[4,"Command",100],[3,"SnapshotRestClient",258],[4,"JobCommand",100],[3,"StatusCommand",100],[6,"ContextState",497],[3,"NewJobCommand",100],[3,"Error",632],[4,"Error",258],[3,"Error",633],[4,"Error",634],[15,"str"],[15,"bool"],[8,"Into",635],[3,"Path",636],[8,"AsRef",635],[4,"Error",637],[4,"Error",638],[3,"SchedulerRestClient",638],[3,"JobParameters",469],[3,"FolderDump",639],[3,"Wait",637],[3,"Configuration",317],[4,"SocketAddr",640],[3,"ConfigurationBuilder",317],[3,"VotingToolsParams",317],[4,"NetworkType",317],[3,"Command",641],[8,"Deserializer",642],[3,"PathBuf",636],[8,"Serializer",643],[15,"u16"],[3,"TempDir",644],[3,"Context",497],[3,"SchedulerContext",645],[3,"Uuid",646],[3,"ServerStopper",623],[3,"SnapshotJobRunner",574],[3,"Mutex",647],[3,"Arc",648],[3,"Rejection",649],[4,"Error",590],[3,"Error",650],[8,"Reply",651],[8,"Filter",652],[8,"Clone",653],[4,"Infallible",635],[13,"Finished",558],[13,"Failed",558],[13,"RequestToStart",558],[13,"Running",558],[13,"UnexpectedSnapshotRestResponse",315],[6,"ContextLock",497]]},\
"snapshot_wormhole":{"doc":"","t":"F","n":["main"],"q":[[0,"snapshot_wormhole"],[1,"eyre"],[2,"core::result"]],"d":[""],"i":[0],"f":[[[],[[3,[1,2]]]]],"c":[],"p":[[15,"tuple"],[3,"Report",1],[4,"Result",2]]},\
"sparse_array":{"doc":"Implementation of a sparse array storing maximum of 256 …","t":"DDDDDDAMMMMMMAMMMMAMMDLLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLDDDMLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLL","n":["FastSparseArray","FastSparseArrayBuilder","FastSparseArrayIter","SparseArray","SparseArrayBuilder","SparseArrayIter","bitmap","bitmap","bitmap","data","data","data","data","fast","index","index","index","index","sparse_array","sparse_array","sparse_array","BitmapIndex","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","get_first_index","get_index","get_mask_and_part","get_real_index","into","is_empty","new","remove_index","set_index","to_owned","try_from","try_into","type_id","FastSparseArray","FastSparseArrayBuilder","FastSparseArrayIter","bitmap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","contains_key","data","data","default","default","eq","equivalent","fmt","from","from","from","get","index","index","into","into","into","into_iter","is_empty","iter","new","new","new","next","remove","set","set","shrink","sparse_array","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","SparseArray","SparseArrayBuilder","SparseArrayIter","bitmap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","contains_key","data","data","default","default","eq","equivalent","fmt","from","from","from","get","index","index","into","into","into","into_iter","is_empty","iter","new","new","new","next","remove","set","set","sparse_array","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity"],"q":[[0,"sparse_array"],[21,"sparse_array::bitmap"],[43,"sparse_array::fast"],[96,"sparse_array::sparse_array"],[148,"core::fmt"],[149,"core::fmt"],[150,"core::result"],[151,"core::any"],[152,"core::clone"],[153,"core::cmp"],[154,"core::fmt"]],"d":["","","","","","","","","","","","","","Wrapper for sparse arrays that doesn’t delete anything …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,16,19,11,17,12,18,0,11,17,12,18,0,16,19,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,16,11,16,12,11,16,12,11,12,12,12,11,12,11,12,12,12,12,11,16,12,12,11,12,11,16,12,16,12,12,11,16,12,16,12,11,12,12,16,12,11,16,12,11,16,12,11,16,12,11,0,0,0,19,17,19,18,17,19,18,17,18,18,18,17,18,17,18,18,18,18,17,19,18,18,17,18,17,19,18,19,18,18,17,19,18,19,18,17,18,19,18,17,19,18,17,19,18,17,19,18,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[[-1,-2],3,[],[]],[[1,4],5],[-1,-1,[]],[1,[[7,[6]]]],[[1,6],3],[[1,6],[[2,[8,6]]]],[[1,6],[[7,[6]]]],[-1,-2,[],[]],[1,3],[[],1],[[1,6],2],[[1,6],2],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[11,[-1]]],[[12,[-1]]],[]],[[[12,[-1]]],[[12,[-1]]],13],[[-1,-2],2,[],[]],[[[12,[-1]],6],3,[]],0,0,[[],[[11,[-1]]],[]],[[],[[12,[-1]]],[]],[[[12,[-1]],[12,[-1]]],3,14],[[-1,-2],3,[],[]],[[[12,[-1]],4],5,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[12,[-1]],6],[[7,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]]],3,[]],[[[12,[-1]]],[[16,[-1]]],[]],[[],[[11,[-1]]],[]],[[[12,[-1]]],[[16,[-1]]],[]],[[],[[12,[-1]]],[]],[[[16,[-1]]],7,[]],[[[12,[-1]],6],[[7,[-1]]],13],[[[11,[-1]],6,-1],2,[]],[[[12,[-1]],6,-1],2,13],[[[12,[-1]]],2,13],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[6,[[11,[-1]]],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1]]],[[18,[-1]]],[]],[[[18,[-1]]],[[18,[-1]]],13],[[-1,-2],2,[],[]],[[[18,[-1]],6],3,[]],0,0,[[],[[17,[-1]]],[]],[[],[[18,[-1]]],[]],[[[18,[-1]],[18,[-1]]],3,14],[[-1,-2],3,[],[]],[[[18,[-1]],4],5,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[18,[-1]],6],[[7,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]]],3,[]],[[[18,[-1]]],[[19,[-1]]],[]],[[],[[17,[-1]]],[]],[[[18,[-1]]],[[19,[-1]]],[]],[[],[[18,[-1]]],[]],[[[19,[-1]]],7,[]],[[[18,[-1]],6],[[2,[[18,[-1]],[7,[-1]]]]],[]],[[[17,[-1]],6,-1],2,[]],[[[18,[-1]],6,-1],[[18,[-1]]],[]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[6,[[17,[-1]]],[]]],"c":[],"p":[[3,"BitmapIndex",21],[15,"tuple"],[15,"bool"],[3,"Formatter",148],[6,"Result",148],[15,"u8"],[4,"Option",149],[15,"u128"],[4,"Result",150],[3,"TypeId",151],[3,"FastSparseArrayBuilder",43],[3,"FastSparseArray",43],[8,"Clone",152],[8,"PartialEq",153],[8,"Debug",148],[3,"FastSparseArrayIter",43],[3,"SparseArrayBuilder",96],[3,"SparseArray",96],[3,"SparseArrayIter",96]]},\
"symmetric_cipher":{"doc":"","t":"NNERNNNNRRRRDLLLLFFFLLLLLLLLLLLLLLLLLLLLLLL","n":["AuthenticationFailed","EmptyPayload","Error","ITERS","InvalidDataLength","InvalidProtocol","IoError","MalformedInput","NONCE_SIZE","PROTOCOL_SIZE","SALT_SIZE","TAG_SIZE","View","borrow","borrow","borrow_mut","borrow_mut","decrypt","derive_symmetric_key","encrypt","encrypted_data","fmt","fmt","from","from","from","into","into","new","nonce","protocol","salt","source","tag","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"symmetric_cipher"],[43,"alloc::boxed"],[44,"core::result"],[45,"core::convert"],[46,"zeroize"],[47,"rand::rng"],[48,"rand_core"],[49,"core::fmt"],[50,"core::fmt"],[51,"core::error"],[52,"core::option"],[53,"alloc::string"],[54,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[4,4,0,0,4,4,4,4,0,0,0,0,0,11,4,11,4,0,0,0,11,4,4,11,4,4,11,4,11,11,11,11,4,11,4,11,4,11,4,11,4,11,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[5,[[3,[[2,[1]]]],4]]],[[6,[[2,[1]]]]],[[6,[[2,[1]]]]]],[[-1,[7,[1]]],[[8,[[7,[1]]]]],[[6,[[2,[1]]]]]],[[-1,-2,-3],[[5,[[3,[[2,[1]]]],4]]],[[6,[[2,[1]]]]],[[6,[[2,[1]]]]],[9,10]],[[[11,[-1]]],[[2,[1]]],[[6,[[2,[1]]]]]],[[4,12],13],[[4,12],13],[-1,-1,[]],[14,4],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[[11,[-1]],4]]],[[6,[[2,[1]]]]]],[[[11,[-1]]],[[2,[1]]],[[6,[[2,[1]]]]]],[[[11,[-1]]],1,[[6,[[2,[1]]]]]],[[[11,[-1]]],[[2,[1]]],[[6,[[2,[1]]]]]],[4,[[16,[15]]]],[[[11,[-1]]],[[2,[1]]],[[6,[[2,[1]]]]]],[-1,17,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"u8"],[15,"slice"],[3,"Box",43],[4,"Error",0],[4,"Result",44],[8,"AsRef",45],[15,"array"],[3,"Zeroizing",46],[8,"Rng",47],[8,"CryptoRng",48],[3,"View",0],[3,"Formatter",49],[6,"Result",49],[3,"Error",50],[8,"Error",51],[4,"Option",52],[3,"String",53],[3,"TypeId",54]]},\
"tally":{"doc":"Community Tally Verification Tool","t":"DLLLLLLLLMMLLLMLLLLLLLFMMMMLLLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","decrypt_tally_from_keys","decrypt_tally_from_shares","deref","deref_mut","drop","encrypted_tally","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","private_keys","produce_decrypt_shares","public_keys","show_public_keys","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"tally"],[34,"clap_builder::builder::command"],[35,"core::fmt"],[36,"core::fmt"],[37,"clap_builder"],[38,"core::result"],[39,"clap_builder::util::id"],[40,"core::option"],[41,"core::error"],[42,"alloc::boxed"],[43,"eyre"],[44,"core::any"]],"d":["Args defines and declares CLI behaviour within the context …","","","","","","","","","Decrypt Tally from secret keys: internal use","Decrypt Tally from shares: public use","","","","Encrypted tally","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","List of whitespace seperated Secret keys","Produce decrypt shares: not for public use","List of whitespace seperated Public keys","Show Public keys","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[],1],[[],1],0,0,[4,-1,[]],[4,-1,[]],[4,3],0,[[2,5],6],[-1,-1,[]],[7,[[9,[2,8]]]],[7,[[9,[2,8]]]],[[],[[11,[10]]]],[[],4],[-1,-2,[],[]],[[],[[14,[3,[13,[12]]]]]],0,0,0,0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[[2,7],[[9,[3,8]]]],[[2,7],[[9,[3,8]]]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",34],[3,"Args",0],[15,"tuple"],[15,"usize"],[3,"Formatter",35],[6,"Result",35],[3,"ArgMatches",36],[6,"Error",37],[4,"Result",38],[3,"Id",39],[4,"Option",40],[8,"Error",41],[3,"Box",42],[6,"Result",43],[3,"TypeId",44]]},\
"thor":{"doc":"","t":"CNIENNNNNCCCDNDNEDDENNNNNNNDEDDDENNNNNDNNDNNNNNNICNECCCNMMAMMMKMMMAMMMMMMMMMMFFAMMAMMFAKKKKKMFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGNNNNNNNNNNNDNDNEDDNENNNNNNNNNNNNNDDMMMAMMMAMAMMMMMMMMAMMMMMGNNNNNNDDDENDDDLLMLLLMLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMDRLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLNNNNNNNNENNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLCNNCDECCCCCCCCCCNNCCCLLLLALLLLLLLLLALLMLLLLLLALLLLLLALLAACCLLLLLLALLLLLLLLLLMALLCLLLLCDENNNRLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLNNNDENLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFNENDRLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLFENNNNDENNNNNNNRLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMNNDDDNELLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLMLLLLLLLLLLLLLLLLMLLLLIKNENNNNNDENNNNNRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLMLLLLLLMLLLLLLIKKKKKNNDNNGRNNNNNENNSGNDNNNDDNSNNNGNNNNNNEDNNNDNDNNDNNNNNNNEGESALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLMALLLLMLMLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMLLMLLLLLLLLLLLLLLMMDLLLLLLLLLLMLLLLLLLLLLLMLLLLLLMLLLLLLLDDDDDLLLLLLLLLLLLLLLMMLLMMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMMLLLLLALLLLLLLLLLLLLLLLLLDDENLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLFLLGDLLLLLLLMLLMLLLLLLLLLLLLMLMLLLLLLIKKKGDLLLLLLLLMLLLLLLLLLLLMLLMLLLLL","n":["AccountWallet","AtLeastOneRejectedFragment","Block0ConfigurationBuilderExtension","BlockDateGenerator","CannotAddCostOfExtraInput","CannotComputeBalance","CannotCreateDumpFile","CannotCreateDumpFolder","CannotWriteFragmentToDumpFile","CommitteeDataManager","DelegationWallet","DiscriminationExtension","DummySyncNode","Fixed","FragmentBuilder","FragmentBuilder","FragmentBuilderError","FragmentChainSender","FragmentExporter","FragmentExporterError","FragmentExporterError","FragmentIsPendingForTooLong","FragmentNode","FragmentNotInBlock","FragmentNotInBlock","FragmentNotInMemPoolLogs","FragmentNotRejected","FragmentSender","FragmentSenderError","FragmentSenderSetup","FragmentSenderSetupBuilder","FragmentVerifier","FragmentVerifierError","FragmentVerifierError","FragmentsArePendingForTooLong","IoError","OnPending","OnProcessed","PersistentLogViewer","Rolling","SendFragmentError","StakePool","SyncNodeError","TimeoutReachedWhileWaitingForAllFragmentsInBlock","TooManyAttemptsFailed","TransactionAlreadyBalanced","TransactionAlreadyExtraValue","TransactionAutoConfirmDisabledError","TransactionHash","UTxOWallet","UnexpectedRejectionReason","VerifyExitStrategy","Wallet","WalletAlias","WalletError","WalletError","auto_confirm","block0_hash","cli","dir","dump_folder","dump_fragments","encode","expiry_generator","fees","fire_and_forget","fragment","fragment_factory","ignore_any_errors","inner","last_mempool_check","node","owner","resend_on_error","sender","setup","setup","signed_delegation_cert","signed_stake_pool_cert","stake_pool","stop_at_error","sync_nodes","utils","valid_until","verify_strategy","vote_plan_cert","wallet","with_delegation_to_stake_pool","with_stake_pool","with_stake_pool_and_delegation","with_wallet","with_wallets_having_some_values","witness_mode","write_into_persistent_log","block0_time","shift","shift_back","slot_duration","slots_per_epoch","alias","alias","attempts","logs","reason","alias","alias","alias","alias","alias","expected_part","fragment_id","fragment_id","fragment_id","logs","logs","logs","logs","logs","logs","logs","message","status","status","timeout","timeout","Alias","Bech32","Bech32","Bincode","CannotCreateConfigFile","CannotCreateConfigFileFolder","CannotDeserializeConfigFile","CannotFindProposal","CannotReadConfigFile","CannotReadSecretKey","CannotRetrieveHomeDir","CannotrSerializeSecretKey","CliController","Cocoon","Config","Config","ConfigError","ConfigManager","Connection","Connection","Error","FragmentSender","FragmentVerifier","Io","Io","Key","NoDefaultAliasDefined","Rest","SecretKey","Serde","SigningKeyParse","SpendingCounterError","TransactionsWerePendingForTooLong","UknownAlias","WalletController","WalletState","address","app_name","client","config","config","config_manager","connection","controller","debug","error","https","pending_tx","public_key","secret_file","spending_counters","testing","value","vec","wallet_controller","wallets","wallets","fragments","proposal_index","vote_plan_name","Alias","Bech32","CannotCreateConfigFile","CannotCreateConfigFileFolder","CannotDeserializeConfigFile","CannotReadConfigFile","CannotRetrieveHomeDir","Config","ConfigManager","Connection","Error","Io","SecretKey","WalletState","Wallets","account_id","address","address","address_readable","alias_secret_file","app_dir","app_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config_file","connection","debug","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","from_str","https","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","pending_tx","pk","pk_bech32","public_key","read_config","save_config","secret","secret_file","serialize","serialize","serialize","serialize","serialize","source","spending_counters","testing","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallets","wallets","CliController","SLOT_COUNT","account_state","borrow","borrow_mut","check_connection","clear_txs","client","confirm_tx","deref","deref_mut","drop","fragment_logs","from","init","into","into_request","new","new_from_client","refresh_state","save_config","secret_key","secret_key_for_wallet_state","statuses","thor_wallet","transaction","try_from","try_into","type_id","update_connection","vote_plan_history","votes_history","vzip","wallets","wallets","wallets_mut","Bech32","Bincode","CannotFindProposal","CannotReadSecretKey","CannotrSerializeSecretKey","Cocoon","Config","Connection","Error","FragmentSender","FragmentVerifier","Io","Key","NoDefaultAliasDefined","Rest","SecretKey","Serde","SigningKeyParse","SpendingCounterError","TransactionsWerePendingForTooLong","UknownAlias","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","fragments","proposal_index","vote_plan_name","WalletController","add_wallet","alias_exists","borrow","borrow_mut","clear_txs","config","config_manager","config_mut","confirm_txs","connection","default_alias","deref","deref_mut","drop","from","init","into","into_request","is_default_alias","iter","new","new_from_manager","remove_wallet","save_config","set_default_alias","try_from","try_into","type_id","vzip","wallet","wallet_mut","BlockDateGenerator","CannotAddCostOfExtraInput","CannotComputeBalance","DummySyncNode","FragmentBuilder","FragmentBuilderError","FragmentChainSender","FragmentExporter","FragmentExporterError","FragmentSender","FragmentSenderError","FragmentSenderSetup","FragmentSenderSetupBuilder","FragmentVerifier","FragmentVerifierError","PersistentLogViewer","TransactionAlreadyBalanced","TransactionAlreadyExtraValue","TransactionHash","VerifyExitStrategy","VerifyStrategy","borrow","borrow","borrow_mut","borrow_mut","chain_sender","delegation","delegation_remove","delegation_to_many","deref","deref","deref_mut","deref_mut","drop","drop","export","fmt","fmt","fragment_factory","from","from","from_settings","full_delegation_cert_for_block0","init","init","initial_certificates","into","into","into_request","into_request","new","owner_delegation","persistent_log","private_vote_cast","public_vote_cast","sender","setup","signed_delegation_cert","signed_stake_pool_cert","stake_pool_registration","stake_pool_retire","stake_pool_update","to_string","transaction","transaction_to_many","transaction_utils","try_from","try_from","try_from_with_setup","try_into","try_into","type_id","type_id","update_proposal","update_valid_until","update_vote","valid_until","verifier","vote_cast","vote_plan","vote_plan_cert","vote_tally","vzip","vzip","witness_mode","write_into_persistent_log","FragmentChainSender","FragmentChainSenderError","FragmentSenderError","FragmentVerifierError","NoFragmentToVerify","_DERIVE_core_fmt_Debug_FOR_FragmentChainSenderError","and_verify_is_in_block","and_verify_is_rejected","and_verify_is_rejected_with_message","borrow","borrow","borrow_mut","borrow_mut","cast_vote","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from_with_setup","get_last_mempool_check","init","init","into","into","into_request","into_request","last_mempool_check","new","node","send_vote_plan","sender","source","tally_vote","then_wait_for_epoch","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_wallet","vzip","vzip","CannotCreateDumpFile","CannotCreateDumpFolder","CannotWriteFragmentToDumpFile","FragmentExporter","FragmentExporterError","IoError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","dump_folder","dump_to_file","dump_to_file_no_sender","fmt","fmt","format_address","format_fragment","format_hash","format_id","from","from","from","generate_file_name","generate_file_name_without_sender","init","init","into","into","into_request","into_request","new","read","read_as_bytes","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","signed_delegation_cert","signed_stake_pool_cert","vote_plan_cert","CannotSerializeEntry","Error","Io","PersistentLogViewer","_DERIVE_core_fmt_Debug_FOR_Error","borrow","borrow","borrow_mut","borrow_mut","count","deref","deref","deref_mut","deref_mut","dir","drop","drop","fmt","fmt","from","from","from","get_all","get_bin","init","init","into","into","into_request","into_request","new","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_into_persistent_log","BlockDateGenerator","Fixed","FragmentBuilder","FragmentExporterError","FragmentNotInBlock","FragmentSender","FragmentSenderError","FragmentVerifierError","Rolling","SendFragmentError","SyncNodeError","TooManyAttemptsFailed","TransactionAutoConfirmDisabledError","WalletError","_DERIVE_core_fmt_Debug_FOR_FragmentSenderError","block0_hash","block0_hash","block_date","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_with_setup","confirm_transaction_if_enabled","current_blockchain_age","date","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dump_fragment_if_enabled","dump_fragments_if_enabled","expiry_generator","fees","fees","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_settings","from_settings_with_setup","from_with_setup","init","init","init","into","into","into","into_request","into_request","into_request","logs","new","rolling","rolling_from_blockchain_config","send_batch_fragments","send_batch_fragments_in_chunks","send_fragment","send_full_delegation","send_owner_delegation","send_pool_registration","send_pool_retire","send_pool_update","send_private_vote_tally","send_public_vote_tally","send_split_delegation","send_transaction","send_transaction_to_address","send_transaction_to_many","send_transaction_with_witness_mode","send_transactions","send_transactions_round_trip","send_transactions_with_iteration_delay","send_update_proposal","send_update_vote","send_vote_cast","send_vote_cast_with_witness_mode","send_vote_plan","send_vote_tally","set_valid_until","setup","shift_ahead","shift_back","shifted","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from_with_setup","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","wait_for_node_sync_if_enabled","witness_mode","witness_mode","block0_time","shift","shift_back","slot_duration","slots_per_epoch","alias","alias","attempts","logs","reason","AllOf","AnyOf","DummySyncNode","FragmentSenderSetup","FragmentSenderSetupBuilder","Single","VerifyStrategy","alias","attempts_count","auto_confirm","auto_confirm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","def","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dump_fragments","dump_fragments_into","dump_into","fire_and_forget","fire_and_forget","fire_and_forget","fmt","from","from","from","from","from","from","get_lines_with_error_and_invalid","ignore_any_errors","ignore_any_errors","ignore_any_errors","ignore_errors","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_running","last_block_height","log_content","log_stats","new","new","no_sync_nodes","no_verify","resend_3_times","resend_3_times_and_sync_with","resend_on_error","resend_on_error","resend_on_error","setup","should_stop_at_error","stop_at_error","stop_at_error","stop_at_error","sync_nodes","sync_nodes","sync_nodes","tip","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_strategy","vzip","vzip","vzip","vzip","TransactionHash","encode","AtLeastOneRejectedFragment","ExitStrategy","FragmentIsPendingForTooLong","FragmentNode","FragmentNotInBlock","FragmentNotInMemPoolLogs","FragmentNotRejected","FragmentVerifier","FragmentVerifierError","FragmentsArePendingForTooLong","OnPending","OnProcessed","TimeoutReachedWhileWaitingForAllFragmentsInBlock","UnexpectedRejectionReason","_DERIVE_core_fmt_Debug_FOR_FragmentVerifierError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fragment_status","from","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","is_in_block","is_rejected","is_rejected_with_message","logs","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_and_verify_all_are_in_block","wait_and_verify_is_in_block","wait_and_verify_is_rejected","wait_and_verify_is_rejected_with_message","wait_for_all_fragments","wait_fragment","wait_until_all_processed","alias","alias","alias","alias","alias","expected_part","fragment_id","fragment_id","fragment_id","logs","logs","logs","logs","logs","logs","logs","message","status","status","timeout","timeout","StakePool","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","info_mut","init","inner","inner","inner_mut","into","into_request","kes","new","owner","owner","to_owned","try_from","try_into","type_id","vrf","vzip","Block0ConfigurationBuilderExtension","with_delegation_to_stake_pool","with_stake_pool","with_stake_pool_and_delegation","with_wallet","with_wallets_having_some_values","Account","Bft","Block","CannotAddInput","CannotMakeWitness","ConsensusVersion","DEFAULT_LANE","Delegation","ElectionPublicKey","Evm","EvmMapping","EvmMapping","Fragment","FragmentError","GenesisPraos","HALF","HeaderId","Initial","Input","InvalidBech32","InvalidBech32Key","IoError","LinearFee","Milli","MintToken","ONE","OldUtxoDeclaration","OwnerStakeDelegation","OwnerStakeDelegation","PoolId","PoolRegistration","PoolRegistration","PoolRetirement","PoolRetirement","PoolUpdate","PoolUpdate","SignedCertificate","SpendingCounter","StakeDelegation","StakeDelegation","Transaction","TransactionBindingAuthData","UTxO","UpdateProposal","UpdateProposal","UpdateProposal","UpdateVote","UpdateVote","UpdateVote","VoteCast","VotePlan","VotePlan","VoteTally","VoteTally","Wallet","WalletAlias","WalletError","ZERO","account","account_id","add_input","add_input_with_value","address","address_bech32","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","baseline","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","certificate","chain_length","changes","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coefficient","committee","compare","compare","confirm_transaction","confirm_transaction_at_lane","constant","contents","contents","date","decrement_counter","default","default","delegation","delegation_cert_for_block0","delegation_key","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","discrimination","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fees_for_certificate","fees_for_inputs_outputs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_account","from_account_public_key","from_account_single","from_bytes","from_enum","from_existing_account","from_millis","from_multisig_account","from_str","from_utxo","from_utxo_entry","get_hash","get_hash","get_type","hash","hash","hash","hash","header","header","header","id","id","identifier","import_account","increment","increment_nth","index_or_account","init","init","init","init","init","init","init","init","init","init","init","init","inner","input_ptr","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lane","marker","mk_witness","new","new","new","new","new","new_account","new_account_with_discrimination","new_delegation","new_delegation_with_discrimination","new_utxo","new_utxo_with_discrimination","parent_id","partial_cmp","partial_cmp","partial_cmp","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","per_certificate_fees","per_certificate_fees","per_vote_certificate_fees","per_vote_certificate_fees","proposal_id","proposal_id","proposer_id","proposer_id","public_key","public_key_bech32","save_to","save_to_path","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_in","serialize_in","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","sign_slice","signing_key_to_string","source","spending_counter","stake_key","to_bytes","to_committee_id","to_enum","to_float","to_initial_fund","to_initial_token","to_millis","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlaned_counter","update_counter","utxo","value","value","vec","version","voter_id","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness_data","zero","actual","expected","Wallet","add_input","add_input_with_value","address","borrow","borrow_mut","clone","clone_into","decrement_counter","deref","deref_mut","discrimination","drop","fmt","from","from_existing_account","from_secret_key","generate","identifier","increment_counter","init","internal_counter","internal_counters","internal_counters","into","into_request","mk_witness","save_to","set_counter","signing_key","signing_key","spending_counter","stake_key","to_owned","try_from","try_into","type_id","vzip","CommitteeCommunicationData","CommitteeCommunicationDataManager","CommitteeDataManager","CommitteeMembershipData","CommitteeMembershipDataManager","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","committee_ids","committees","committees","committees","committees","committees_mut","committees_mut","communication","communication_public_key","communication_secret_key","decrypt_tally","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","election_key","fmt","fmt","fmt","from","from","from","id","id","init","init","init","into","into","into","into_request","into_request","into_request","member_public_key","member_public_keys","member_secret_key","membership","membership_data","new","new","new","private","single","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_to","write_to","write_to","CommitteeCommunicationData","CommitteeMembershipData","Error","NoMemberSecretKeyDefined","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","communication_public_key","communication_secret_key","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","id","id","init","init","init","into","into","into","into_request","into_request","into_request","member_public_key","member_secret_key","member_secret_key","private","private","public","public","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_to","write_to","write_to","SpendingKey","Wallet","address","address_nth","borrow","borrow_mut","clone","clone_into","delegation","delegations","deref","deref_mut","discrimination","drop","fmt","from","generate","generate_new_signing_key","identifier","init","into","into_request","last_delegation_identifier","last_signing_key","mk_witness","rng","signing_key","signing_keys","stake_key","to_owned","try_from","try_into","type_id","vzip","DiscriminationExtension","from_prefix","from_testing_bool","into_prefix","SpendingKey","Wallet","address","address_nth","borrow","borrow_mut","clone","clone_into","deref","deref_mut","discrimination","drop","fmt","from","generate","generate_new_signing_key","identifier","init","into","into_request","last_signing_key","mk_witness","rng","save_to","signing_key","signing_keys","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"thor"],[94,"thor::BlockDateGenerator"],[99,"thor::FragmentSenderError"],[104,"thor::FragmentVerifierError"],[125,"thor::cli"],[182,"thor::cli::Error"],[185,"thor::cli::config"],[360,"thor::cli::controller"],[396,"thor::cli::error"],[446,"thor::cli::error::Error"],[449,"thor::cli::wallet_controller"],[481,"thor::fragment"],[567,"thor::fragment::chain_sender"],[619,"thor::fragment::export"],[668,"thor::fragment::initial_certificates"],[671,"thor::fragment::persistent_log"],[713,"thor::fragment::sender"],[840,"thor::fragment::sender::BlockDateGenerator"],[845,"thor::fragment::sender::FragmentSenderError"],[850,"thor::fragment::setup"],[963,"thor::fragment::transaction_utils"],[965,"thor::fragment::verifier"],[1039,"thor::fragment::verifier::FragmentVerifierError"],[1060,"thor::stake_pool"],[1088,"thor::utils"],[1094,"thor::wallet"],[1565,"thor::wallet::WalletError"],[1567,"thor::wallet::account"],[1605,"thor::wallet::committee"],[1690,"thor::wallet::committee::single"],[1758,"thor::wallet::delegation"],[1792,"thor::wallet::discrimination"],[1796,"thor::wallet::utxo"],[1827,"alloc::string"],[1828,"chain_impl_mockchain::date"],[1829,"chain_impl_mockchain::certificate::vote_plan"],[1830,"alloc::vec"],[1831,"jormungandr_lib::interfaces::value"],[1832,"jormungandr_lib::interfaces::fragment_log_persistent"],[1833,"core::result"],[1834,"std::path"],[1835,"core::convert"],[1836,"chain_impl_mockchain::account"],[1837,"chain_addr"],[1838,"chain_addr"],[1839,"chain_addr"],[1840,"core::fmt"],[1841,"serde_yaml::error"],[1842,"std::io::error"],[1843,"jormungandr_automation::jormungandr::rest::settings"],[1844,"jormungandr_automation::jormungandr::rest"],[1845,"tonic::request"],[1846,"core::convert"],[1847,"chain_crypto::key"],[1848,"serde::ser"],[1849,"core::error"],[1850,"core::option"],[1851,"core::any"],[1852,"jormungandr_lib::interfaces::account_state"],[1853,"chain_impl_mockchain::fragment"],[1854,"jormungandr_lib::interfaces::fragment_log"],[1855,"std::collections::hash::map"],[1856,"jormungandr_lib::crypto::account"],[1857,"jormungandr_lib::interfaces::fragment_log"],[1858,"jormungandr_automation::jormungandr::fragment_node"],[1859,"jormungandr_lib::interfaces::vote"],[1860,"jormungandr_lib::interfaces::vote"],[1861,"bech32"],[1862,"jormungandr_automation::jormungandr::rest"],[1863,"jormungandr_lib::crypto::account"],[1864,"bech32"],[1865,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[1866,"jormungandr_lib::crypto::hash"],[1867,"chain_impl_mockchain::vote::choice"],[1868,"jormungandr_automation::jormungandr::process"],[1869,"chain_crypto::key"],[1870,"chain_impl_mockchain::testing::builders::tx_cert_builder"],[1871,"core::time"],[1872,"jormungandr_automation::testing::benchmark::sync::node"],[1873,"core::marker"],[1874,"jormungandr_automation::jormungandr::remote"],[1875,"core::ops::function"],[1876,"jormungandr_automation::jormungandr::fragment_node"],[1877,"jormungandr_lib::time"],[1878,"jormungandr_automation::jormungandr::fragment_node"],[1879,"core::iter::traits::iterator"],[1880,"jormungandr_lib::interfaces::block0_configuration::initial_config"],[1881,"jormungandr_lib::interfaces::fragments_processing_summary"],[1882,"core::marker"],[1883,"jortestkit::process::wait"],[1884,"chain_impl_mockchain::certificate::pool"],[1885,"jormungandr_automation::utils::stake_pool"],[1886,"chain_crypto::algorithms::sumed25519"],[1887,"jormungandr_lib::crypto::key"],[1888,"chain_crypto::algorithms::vrf"],[1889,"jormungandr_lib::crypto::account"],[1890,"chain_impl_mockchain::transaction::io"],[1891,"chain_impl_mockchain::transaction::payload"],[1892,"chain_impl_mockchain::value"],[1893,"chain_impl_mockchain::fragment::config"],[1894,"core::cmp"],[1895,"chain_impl_mockchain::fragment::content"],[1896,"jormungandr_lib::crypto::key"],[1897,"chain_ser::deser"],[1898,"std::io"],[1899,"chain_impl_mockchain::certificate"],[1900,"core::fmt"],[1901,"jormungandr_lib::interfaces::fragment"],[1902,"chain_impl_mockchain::setting"],[1903,"jormungandr_lib::interfaces::transaction_input"],[1904,"chain_impl_mockchain::transaction::input"],[1905,"chain_impl_mockchain::transaction::input"],[1906,"chain_impl_mockchain::transaction::utxo"],[1907,"chain_impl_mockchain::utxo"],[1908,"core::hash"],[1909,"core::hash"],[1910,"chain_impl_mockchain::header::header"],[1911,"chain_impl_mockchain::transaction::element"],[1912,"chain_impl_mockchain::transaction::witness"],[1913,"chain_impl_mockchain::key"],[1914,"rand_core"],[1915,"chain_impl_mockchain::fee"],[1916,"chain_ser::deser"],[1917,"typed_bytes::builder"],[1918,"chain_impl_mockchain::transaction::element"],[1919,"chain_impl_mockchain::accounting::account::spending"],[1920,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[1921,"chain_impl_mockchain::vote::status"],[1922,"chain_impl_mockchain::certificate::vote_tally"],[1923,"chain_vote::committee"],[1924,"rand_core::os"],[1925,"assert_fs::fixture::child"],[1926,"chain_vote::tally"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit as soon as the fragment enters the mempool","Exit when the fragment has been processed (i.e. either …","","","","","","","","","","","","","","","","","","","Sender will confirm transaction (increment account counter)","","","","","","","","","Just send fragment without any verifications","","","","","","","","","","","","","","","","","","","Sender verifies transaction strategy. By default is …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns <code>BlockDate</code>s that are always ahead or behind the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shifts the current date and returns the result on all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sender will confirm transaction (increment account counter)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Just send fragment without any verifications","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sender verifies transaction strategy. By default is …","","","","","","","","","","","","","","","","","Exit as soon as the fragment enters the mempool","Exit when the fragment has been processed (i.e. either …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","<code>Block</code> is an element of the blockchain it contains multiple …","","","","","","","","","","All possible messages recordable in the content","","","","","","Generalized input which have a specific input value, and …","","","","Linear fee using the basic affine formula …","","","","","","","Pool ID","","","","","","","","Spending counter associated to an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date of the block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","The ID of a message is a hash of its serialization <em>without</em> …","","","","","","Identifier of the block, currently the hash of the …","The ID of a fragment is a hash of its serialization <em>without</em>…","","","Increment the counter within it own lane. the lane of …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Id of the parent block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporary method exposing private key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wallet for an account","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Use the default counter","","the counter as we know of this value needs to be in sync …","Calls <code>U::from(self)</code>.","","","","","","the spending key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wallet for an delegation","","","","","","","","the identifier of delegated account","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","the spending key","","","","","","","","","","","","wallet for an account","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","the spending key","","","","",""],"i":[0,71,0,0,76,76,101,101,101,0,0,0,0,96,0,70,0,0,0,0,70,71,71,70,71,71,71,0,0,0,0,0,0,70,71,101,119,119,0,96,70,0,70,71,70,76,76,70,0,0,71,0,0,0,0,70,95,103,0,102,99,95,206,103,103,95,0,74,95,6,89,89,6,95,89,117,103,0,0,0,95,95,0,74,95,0,0,207,207,207,207,207,103,0,208,208,208,208,208,209,210,210,209,209,211,212,213,214,215,216,213,215,217,211,212,213,214,215,217,218,216,211,212,213,214,0,18,50,50,18,18,18,50,18,50,18,50,0,50,0,50,0,0,0,50,0,50,50,18,50,50,50,50,50,50,50,50,50,50,0,0,24,21,48,0,62,62,25,0,24,0,24,16,16,16,16,16,16,22,0,48,25,219,220,220,0,18,18,18,18,18,18,0,0,0,0,18,0,0,0,16,16,24,16,21,21,21,21,25,24,29,26,16,18,21,25,24,29,26,16,18,24,16,24,16,21,25,24,25,24,26,26,21,25,24,29,26,16,18,21,25,24,29,26,16,18,25,24,29,26,16,16,21,25,24,29,26,16,18,29,29,29,29,29,25,24,29,26,16,18,18,21,25,24,29,26,16,18,18,18,18,29,29,24,16,21,25,24,29,26,16,18,21,25,24,24,24,29,26,16,18,21,25,24,29,26,16,18,21,16,16,16,16,21,21,29,16,25,24,29,26,16,18,16,16,24,16,18,21,25,24,29,26,16,18,21,25,24,29,26,16,18,21,25,24,29,26,16,18,16,22,21,25,24,29,26,16,18,25,26,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,219,220,220,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,74,76,74,76,0,74,74,74,74,76,74,76,74,76,0,76,76,74,74,76,74,74,74,76,0,74,76,74,76,74,74,0,74,74,0,0,0,0,74,74,74,76,74,74,0,74,76,74,74,76,74,76,74,74,74,74,0,74,74,0,74,74,76,74,0,0,0,91,91,91,0,89,89,89,89,91,89,91,89,89,91,89,91,89,91,91,91,89,91,91,91,89,89,89,91,89,91,89,91,89,89,89,89,89,91,89,89,91,89,91,89,91,89,91,89,89,91,101,101,101,0,0,101,99,101,99,101,99,101,99,101,99,101,99,99,99,101,101,99,99,99,99,99,101,101,99,99,99,101,99,101,99,101,99,99,99,101,101,99,101,99,101,99,101,99,101,0,0,0,12,0,12,0,0,102,12,102,12,102,102,12,102,12,102,102,12,12,12,102,12,12,102,102,102,12,102,12,102,12,102,12,12,102,12,102,12,102,12,102,12,0,0,96,70,70,70,0,0,70,96,70,70,70,70,70,0,103,103,96,70,103,96,70,103,96,103,96,103,96,103,103,96,103,70,103,96,70,103,96,70,103,96,103,103,103,103,103,70,70,70,70,70,70,70,70,70,103,103,103,96,96,103,103,103,70,103,96,70,103,96,70,103,96,70,103,96,96,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,96,96,96,70,103,96,70,70,103,103,96,103,70,103,96,70,103,96,103,70,103,96,103,103,103,208,208,208,208,208,209,210,210,209,209,118,118,0,0,0,118,0,109,95,95,95,117,118,95,109,117,118,95,109,117,118,95,109,118,95,109,95,117,95,117,118,95,109,117,118,95,109,117,118,95,109,95,117,95,117,95,95,118,117,117,118,95,95,109,109,117,95,95,95,117,118,95,109,117,118,95,109,117,118,95,109,109,109,109,109,117,95,95,95,95,95,117,95,95,117,95,117,95,95,117,95,95,109,118,95,109,117,118,95,109,117,118,95,109,117,118,95,109,95,117,118,95,109,0,206,71,0,71,71,71,71,71,0,0,71,119,119,71,71,0,221,71,119,221,71,119,119,119,221,71,119,221,71,119,221,71,119,71,71,221,221,71,71,119,221,71,119,221,71,119,221,71,119,221,221,221,71,71,119,71,221,71,119,221,71,119,221,71,119,221,71,119,221,221,221,221,221,221,221,211,212,213,214,215,216,213,215,217,211,212,213,214,215,217,218,216,211,212,213,214,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,207,207,207,207,207,2,222,0,107,107,0,0,2,107,75,5,75,0,107,222,134,0,75,0,107,107,107,0,0,75,134,75,5,75,0,5,75,5,75,5,75,0,0,5,75,75,0,2,0,5,75,0,5,75,75,5,75,5,75,0,0,0,134,0,2,2,2,2,2,131,133,84,86,80,75,134,130,131,86,80,107,2,131,133,84,86,5,80,75,134,130,138,107,2,131,133,84,86,5,80,75,134,130,138,130,80,133,84,84,2,131,133,84,86,5,80,75,134,130,138,2,131,133,84,86,5,80,75,134,130,138,134,130,80,0,134,130,2,2,80,133,133,133,2,2,134,0,2,2,107,2,131,133,84,86,5,80,75,134,130,138,107,2,131,133,84,86,5,80,75,134,130,138,133,75,130,133,84,86,75,130,0,2,107,2,131,133,84,86,5,80,75,134,130,138,75,131,133,84,86,80,75,134,130,131,131,131,131,133,133,133,133,84,84,84,84,86,86,86,86,80,80,80,80,75,75,75,75,134,134,134,134,130,130,130,130,80,80,107,107,2,131,133,84,86,5,80,75,134,134,130,133,133,107,107,107,107,2,2,131,131,133,84,86,5,5,80,75,75,134,134,130,130,130,138,130,130,130,131,130,2,134,130,134,130,130,86,130,130,86,75,130,223,133,133,133,133,75,2,2,131,131,130,107,2,131,133,84,86,5,80,75,134,130,138,4,130,107,2,131,133,84,86,5,80,75,134,130,138,107,2,131,133,84,86,5,80,75,134,130,138,131,4,2,131,84,86,80,130,2,2,2,2,2,2,133,80,134,130,84,86,84,86,84,86,80,80,80,80,86,86,84,84,2,2,2,2,2,133,84,84,86,86,75,130,84,86,133,84,86,75,130,2,2,107,2,2,131,2,130,134,2,2,134,2,131,133,84,86,5,80,75,134,130,138,107,134,107,2,131,133,84,86,5,80,75,134,130,138,107,2,131,133,84,86,5,80,75,134,130,138,107,2,131,133,84,86,5,80,75,134,130,138,131,2,0,130,130,224,133,86,86,107,2,131,133,84,86,5,80,75,134,130,138,2,131,225,225,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,0,0,0,0,0,186,187,188,186,187,188,186,187,188,186,187,188,188,186,187,186,187,186,187,188,189,189,188,186,187,186,187,188,186,187,188,186,187,188,188,186,187,188,186,187,188,189,190,186,187,188,186,187,188,186,187,188,190,188,190,188,186,186,187,188,188,0,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,186,187,188,0,0,0,198,189,190,198,189,190,198,189,190,189,190,189,189,189,190,198,189,190,198,189,190,198,189,190,198,198,189,190,198,189,190,189,190,198,189,190,198,189,190,198,190,190,190,189,190,189,190,189,190,198,189,190,198,189,190,198,189,190,198,189,190,198,0,189,190,0,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,226,226,226,0,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,3,4],5],[[3,6],5],0,0,0,0,0,0,[[2,3,7],5],0,[[-1,6,[8,[2]]],-1,[]],[[-1,6],-1,[]],[[-1,6,[8,[2]]],-1,[]],[[-1,2,9],-1,[]],[[-1,[8,[2]]],-1,[]],0,[[-1,[8,[10]]],[[13,[11,12]]],[[15,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,[[13,[17,18]]]],[16,[[13,[19,18]]]],0,[16,[[13,[20,18]]]],[[21,22],[[13,[23,18]]]],[21,[[13,[23,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[16,16],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[21,[[13,[23,18]]]],0,0,[[],25],[[],24],[[],26],0,[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[-1,[[13,[25]]],28],[-1,[[13,[24]]],28],[-1,[[13,[29]]],28],[-1,[[13,[26]]],28],[-1,[[13,[16]]],28],[16,30],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[[29,29],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[25,32],33],[[24,32],33],[[29,32],33],[[26,32],33],[[16,32],33],[[18,32],33],[[18,32],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,18],[35,18],[-1,-1,[]],[36,18],[37,[[13,[29,18]]]],[37,[[13,[-1]]],[]],0,[16,[[13,[1,18]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,38],[24,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,21,[[41,[1]]]],0,[16,[[13,[[43,[42]],18]]]],[16,1],0,[21,[[13,[25,18]]]],[[21,25],[[13,[11,18]]]],0,0,[[25,-1],13,44],[[24,-1],13,44],[[29,-1],13,44],[[26,-1],13,44],[[16,-1],13,44],[18,[[46,[45]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[48,[[13,[49,50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[48,[[13,[11,50]]]],[48,[[13,[11,50]]]],0,[48,[[13,[11,50]]]],[27,-1,[]],[27,-1,[]],[27,11],[48,[[13,[[53,[51,52]],50]]]],[-1,-1,[]],[[],27],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[],[[13,[48,50]]]],[[39,21],[[13,[48,50]]]],[48,[[13,[11,50]]]],[48,[[13,[11,50]]]],[[48,37],[[13,[54,50]]]],[[48,37,16],[[13,[54,50]]]],[48,[[13,[[53,[51,55]],50]]]],[[48,37],[[13,[2,50]]]],[[48,37,31,56,57],[[13,[58,50]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[[48,24],11],[[48,59],[[13,[[46,[[8,[60]]]],50]]]],[48,[[13,[[46,[[8,[61]]]],50]]]],[-1,-2,[],[]],[48,62],0,[48,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[27,-1,[]],[27,-1,[]],[27,11],[[50,32],33],[[50,32],33],[63,50],[64,50],[65,50],[66,50],[67,50],[68,50],[69,50],[-1,-1,[]],[70,50],[35,50],[71,50],[18,50],[36,50],[[],27],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[50,[[46,[45]]]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,[[62,22,31,[8,[72]],37],[[13,[11,50]]]],[[62,22],31],[-1,-2,[],[]],[-1,-2,[],[]],[62,[[13,[11,50]]]],0,0,[62,25],[[62,[53,[51,55]]],[[13,[11,50]]]],[62,24],[62,[[46,[22]]]],[27,-1,[]],[27,-1,[]],[27,11],[-1,-1,[]],[[],27],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[62,22],31],[62,[[73,[22,16]]]],[37,[[13,[62,50]]]],[21,[[13,[62,50]]]],[[62,22],[[13,[11,50]]]],[62,[[13,[11,50]]]],[[62,22],[[13,[11,50]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],[62,[[13,[16,50]]]],[62,[[13,[16,50]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[74,2,6],75],[[74,2],75],[[74,2,[8,[[11,[6,60]]]]],75],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],0,[[76,32],33],[[76,32],33],0,[-1,-1,[]],[-1,-1,[]],[[77,3],74],[[3,2,4],78],[[],27],[[],27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[79,80,3],74],[[74,2,6],75],0,[[74,2,7,60,81],75],[[74,2,7,60,81],75],0,0,0,0,[[74,2,6],75],[[74,[8,[2]],6],75],[[74,[8,[2]],6,6],75],[-1,1,[]],[[74,2,56,9],[[13,[75,76]]]],[[74,2,[82,[56]],9],[[13,[75,76]]]],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[83,3],[[13,[74,66]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[74,2,84,[85,[42]]],75],[[74,3],11],[[74,2,86,[85,[42]]],75],0,0,[[74,2,7,60,81],75],[[74,2,7],75],0,[[74,2,7,87],75],[-1,-2,[],[]],[-1,-2,[],[]],[[74,88],74],0,0,0,0,0,0,0,[[[89,[-1]],90],[[13,[[89,[-1]],91]]],[92,93]],[[[89,[-1]],90],[[13,[[89,[-1]],91]]],[92,93]],[[[89,[-1]],90,-2],[[13,[[89,[-1]],91]]],[92,93],[[41,[1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1]],2,7,60,81],[[13,[[89,[-1]],91]]],[92,93]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],[[91,32],33],[[91,32],33],[-1,-1,[]],[-1,-1,[]],[70,91],[71,91],[[77,94,[95,[-1]]],[[89,[-1]]],[92,93]],[[[89,[-1]]],[[13,[58,91]]],[92,93]],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,[[79,80,96,[95,[-1]],94],[[89,[-1]]],[92,93]],0,[[[89,[-1]],2,7],[[13,[[89,[-1]],91]]],[92,93]],0,[91,[[46,[45]]]],[[[89,[-1]],2,7,87],[[13,[[89,[-1]],91]]],[92,93]],[[[89,[-1]],97],[[89,[-1]]],[92,93]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[[89,[-1]],2,98],[[89,[-1]]],[92,93]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],0,[[99,75,2,100],[[13,[11,101]]]],[[99,75,100],[[13,[11,101]]]],[[101,32],33],[[101,32],33],[[99,56],1],[[99,75],1],[[99,1],1],[[99,51],1],[-1,-1,[]],[-1,-1,[]],[36,101],[[99,75,2,100],1],[[99,75,100],1],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[23,[[13,[99,101]]]],[99,[[13,[[8,[75]],101]]]],[99,[[13,[[8,[[8,[60]]]],101]]]],[101,[[46,[45]]]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,3,4],5],[[3,6],5],[[2,3,7],5],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,27],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],0,[27,11],[27,11],[[12,32],33],[[12,32],33],[-1,-1,[]],[-1,-1,[]],[36,12],[102,[[8,[75]]]],[102,[[8,[[8,[60]]]]]],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[23,102],[12,[[46,[45]]]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[8,[10]]],[[13,[11,12]]],[[15,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[103,[-1]]],79,[92,93]],0,[96,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[103,[-1]]],[[103,[-1]]],[104,92,93]],[96,96],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[103,[-1]],[95,[-2]]],[[103,[-2]]],[92,93],[92,93]],[[[103,[-1]],2],11,[92,93]],[[105,97,57],3],[[[103,[-1]]],3,[92,93]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],[27,11],[[[103,[-1]],2,75,100],[[13,[11,70]]],[92,93]],[[[103,[-1]],[82,[75]],100],[[13,[11,70]]],[92,93]],0,[[[103,[-1]]],80,[92,93]],0,[[70,32],33],[[70,32],33],[101,70],[106,70],[76,70],[107,70],[108,70],[71,70],[-1,-1,[]],[77,[[103,[109]]]],[-1,-1,[]],[110,[[103,[109]]]],[3,96],[-1,-1,[]],[[77,96,[95,[-1]]],[[103,[-1]]],[92,93]],[[77,[95,[-1]]],[[103,[-1]]],[92,93]],[[110,[95,[-1]]],[[103,[-1]]],[92,93]],[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[70,[[0,[111]]]],[[79,80,96,[95,[-1]]],[[103,[-1]]],[92,93]],[[77,3,31],96],[[112,3,31],96],[[[103,[-1]],[8,[75]],31,-2],[[13,[113,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],[8,[75]],27,31,-2],[[13,[113,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,75,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,6,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,6,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,6,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,6,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,6,6,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,7,115,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,7,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,[82,[[11,[6,60]]]],-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,2,-2,9],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,56,-2,9],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,[82,[2]],-2,9],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,56,-2,9,88],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],97,2,2,-2,9],[[13,[11,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],97,2,2,-2,9],[[13,[11,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],97,2,2,-2,9,90],[[13,[11,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,[85,[42]],84,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,[85,[42]],86,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,7,60,81,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,7,60,81,-2,88],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,7,-2],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],2,7,-2,87],[[13,[58,70]]],[92,93],[100,92,114,93]],[[[103,[-1]],3],[[103,[-1]]],[92,93]],0,[[97,3,3],3],[[97,3,3],3],[[77,3,31],96],[70,[[46,[45]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[83,[[13,[[103,[109]]]]]],[-1,[[13,[-2]]],[],[]],[[83,3,[95,[-1]]],[[13,[[103,[-1]],66]]],[92,93]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[[103,[-1]],58,-2],[[13,[11,70]]],[92,93],[100,92,114,93]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[103,[-1]],-2],[[13,[11,108]]],[92,93],[100,92,114,93]],[[[103,[-1]],88],[[103,[-1]]],[92,93]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[109,116],[[[95,[-1]]],60,[92,93]],[[[95,[-1]]],31,[92,93]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[117,[-1]]],[[95,[-1]]],[92,93]],[118,118],[[[95,[-1]]],[[95,[-1]]],[104,92,93]],[109,109],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[],[[95,[109]]]],[[],[[117,[-1]]],[92,93]],[[],[[95,[109]]]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],[27,11],[27,11],0,[[[117,[-1]],23],[[117,[-1]]],[92,93]],[23,[[95,[109]]]],[[[117,[-1]]],[[117,[-1]]],[92,93]],[[[95,[-1]]],31,[92,93]],0,[[118,32],33],[-1,-1,[]],[[[95,[-1]]],[[117,[-1]]],[92,93]],[-1,-1,[]],[[[117,[-1]]],[[95,[-1]]],[92,93]],[-1,-1,[]],[-1,-1,[]],[109,[[8,[1]]]],[[[117,[-1]]],[[117,[-1]]],[92,93]],[[[95,[-1]]],31,[92,93]],0,[[],[[95,[109]]]],[[],27],[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[109,31],[109,97],[109,1],[109,11],[[],[[117,[-1]]],[92,93]],[[],[[95,[-1]]],[92,93]],[[[95,[-1]]],31,[92,93]],[[],[[95,[109]]]],[[],[[95,[109]]]],[[[8,[-1]]],[[95,[-1]]],[92,93]],[[[117,[-1]],60],[[117,[-1]]],[92,93]],[[[95,[-1]]],[[46,[60]]],[92,93]],0,0,[[],[[95,[109]]]],[[[117,[-1]]],[[117,[-1]]],[92,93]],[[[95,[109]]],31],0,[[[117,[-1]],[8,[-1]]],[[117,[-1]]],[92,93]],[[[95,[-1]]],[[8,[-1]]],[92,93]],0,[109,79],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[[-1,-2],11,[],[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],[27,11],[[71,32],33],[[71,32],33],[[58,-1],[[13,[55,71]]],[100,114]],[-1,-1,[]],[106,71],[-1,-1,[]],[-1,-1,[]],[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[55,-1],[[13,[11,71]]],[100,114]],[[55,-1],[[13,[11,71]]],[100,114]],[[55,-1,-2],[[13,[11,71]]],[[41,[1]]],[100,114]],[71,[[0,[111]]]],[71,[[46,[45]]]],[-1,-2,[],[]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[90,[8,[58]],-1],[[13,[11,71]]],[100,114]],[[90,58,-1],[[13,[11,71]]],[100,114]],[[90,58,-1],[[13,[11,71]]],[100,114]],[[90,58,-1,-2],[[13,[11,71]]],[[41,[1]]],[100,114]],[[90,-1],[[13,[[53,[51,52]],71]]],[100,114]],[[90,58,119,-1],[[13,[55,71]]],[100,114]],[[120,-1],[[13,[11,71]]],[100,114]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[-1,-2],11,[],[]],[27,-1,[]],[27,-1,[]],[27,11],[[6,32],33],[-1,-1,[]],[6,4],[6,121],[[],27],[6,122],0,[6,122],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[6,[[124,[123]]]],[2,6],[6,2],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[6,[[124,[125]]]],[-1,-2,[],[]],0,[[-1,6,[8,[2]]],-1,[]],[[-1,6],-1,[]],[[-1,6,[8,[2]]],-1,[]],[[-1,2,9],-1,[]],[[-1,[8,[2]]],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,126],[[2,[127,[-1]],128,80],[[13,[11,76]]],129],[[2,9],130],[2,56],[[2,30],1],[-1,131,132],[-1,133,132],[-1,84,132],[-1,86,132],[-1,80,132],[-1,75,132],[-1,134,132],[-1,130,132],[[]],[[]],[80,135],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,[[136,[60]]]],0,[133],[84,137],0,[2,2],[131,131],[133,133],[84,84],[86,86],[5,5],[80,80],[75,75],[134,134],[130,130],[138,138],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[134,134],139],[[130,130],139],0,0,[[-1,-2],139,[],[]],[[-1,-2],139,[],[]],[2,11],[[2,27],11],0,[133,140],0,[133],[2,11],[[],2],[[],134],0,[[2,3,4],78],[2,[[141,[42]]]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[[[142,[-1]]],[[13,[133,143]]],144],[[[142,[-1]]],[[13,[75,143]]],144],[[[142,[-1]]],[[13,[130,143]]],144],[[[142,[[82,[60]]]]],[[13,[-1,143]]],[]],[[[142,[[82,[60]]]]],[[13,[84,143]]]],[[[142,[[82,[60]]]]],[[13,[86,143]]]],[[[142,[[82,[60]]]]],[[13,[-1,143]]],[]],[[[142,[[82,[60]]]]],[[13,[-1,143]]],[]],0,[2,30],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[27,11],[75,1],[[131,131],31],[[133,133],31],[[84,84],31],[[86,86],31],[[80,80],31],[[75,75],31],[[134,134],31],[[130,130],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[80,145],135],[[80,60,60],135],[[107,32],33],[[107,32],33],[[2,32],33],[[131,32],[[13,[11,146]]]],[[133,32],[[13,[11,146]]]],[[84,32],[[13,[11,146]]]],[[86,32],[[13,[11,146]]]],[[5,32],[[13,[11,146]]]],[[80,32],[[13,[11,146]]]],[[75,32],[[13,[11,146]]]],[[134,32],[[13,[11,146]]]],[[134,32],[[13,[11,146]]]],[[130,32],[[13,[11,146]]]],[133],[133,[[0,[111]]]],[-1,-1,[]],[76,107],[65,107],[36,107],[147,2],[-1,-1,[]],[-1,-1,[]],[97,131],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[148,5],[-1,-1,[]],[149,75],[-1,-1,[]],[-1,-1,[]],[150,134],[-1,-1,[]],[[[136,[60]]],130],[151,130],[-1,-1,[]],[[152,135],130],[[[43,[42]],135],130],[[17,135],130],[[[136,[60]]],131],[153,130],[[37,[46,[131]],30],2],[57,134],[[154,135],130],[37,[[13,[134]]]],[155,130],[[[156,[19]]],130],[[-1,-2],57,[157,114],158],[[-1,-2],57,[157,114],158],[130,159],[[86,-1],11,160],[75,161],[[130,-1],11,160],0,[133,162],[133],0,[133],[75],[2,[[141,[42]]]],[[-1,[46,[131]],30],2,[[15,[14]]]],[131,131],[[131,97],131],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[131,27],0,[[2,79,163],164],[[27,97],[[13,[131,64]]]],[[137,165],84],[[161,165],86],[[57,57,57],80],[[60,135,[136,[60]]],130],[[-1,30],2,[166,167]],[[-1,30],2,[166,167]],[[126,-1],2,[166,167]],[[126,-1,30],2,[166,167]],[-1,2,[166,167]],[[-1,30],2,[166,167]],[133],[[80,80],[[46,[139]]]],[[134,134],[[46,[139]]]],[[130,130],[[46,[139]]]],[[],[[168,[84]]]],[[],[[168,[86]]]],[84,[[169,[84]]]],[86,[[169,[86]]]],[[[127,[84]]],[[46,[145]]]],[[[127,[86]]],[[46,[145]]]],[[80,170],11],0,[[80,171],11],0,[86,161],0,[84,165],0,[2,[[43,[42]]]],[2,1],[[2,-1],[[172,[11]]],173],[[2,-1],[[172,[11]]],[[15,[14]]]],[2,[[85,[174]]]],[[133,[142,[-1]]],[[13,[11,175]]],173],[84,[[176,[84]]]],[[84,[142,[-1]]],[[13,[11,175]]],173],[[86,[142,[-1]]],[[13,[11,175]]],173],[86,[[176,[86]]]],[[75,[142,[-1]]],[[13,[11,175]]],173],[[130,[142,[-1]]],[[13,[11,175]]],173],[[84,[177,[84]]],[[177,[84]]]],[[86,[177,[86]]],[[177,[86]]]],[133,27],[84,27],[86,27],[75,27],[130,27],[[2,[82,[60]]],[[179,[178,42]]]],[2,1],[107,[[46,[45]]]],[2,[[13,[180,50]]]],[2,[[46,[152]]]],[131,[[136,[60]]]],[2,181],[130,153],[134,182],[[2,57],183],[[2,57],184],[134,57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[131,97],[[2,131],11],0,[130,135],0,0,[133],[86,165],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,185],[[],131],0,0,0,[[147,[127,[-1]],128,80],[[13,[11,76]]],129],[[147,9],130],[147,56],[-1,-2,[],[]],[-1,-2,[],[]],[147,147],[[-1,-2],11,[],[]],[[147,27],11],[27,-1,[]],[27,-1,[]],0,[27,11],[[147,32],33],[-1,-1,[]],[[37,[46,[131]],30],147],[[54,180,30],147],[[-1,30],147,[166,167]],[147,126],[[147,27],11],[[],27],[147,131],[147,[[136,[131]]]],0,[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[147,79,163],164],[[147,-1],[[172,[11]]],173],[[147,131],11],[147,54],0,[147,180],[147,152],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[186,186],[187,187],[188,188],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[188,[[8,[181]]]],[186,[[8,[189]]]],[187,[[8,[190]]]],0,0,[186,[[8,[189]]]],[187,[[8,[190]]]],0,0,0,[[188,191],[[13,[115,192]]]],[[],186],[[],187],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],[27,11],[188,193],[[186,32],33],[[187,32],33],[[188,32],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,[188,[[8,[194]]]],0,0,[[186,195,27,-1],187,[167,166]],[[[8,[189]]],186],[[[8,[190]]],187],[[[8,[189]],[8,[190]]],188],[[196,[8,[126]],27],188],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[186,197],11],[[187,197],11],[[188,197],11],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[189,189],[190,190],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,-1,[]],[27,11],[27,11],[27,11],[[189,32],33],[[190,32],33],[[198,32],33],[[198,32],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],27],[[],27],[[],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,[190,[[13,[199,198]]]],0,[[181,200],189],[[181,199],190],[[181,201],189],[[181,194],190],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,197,37],11],[[189,197],11],[[190,197],11],0,0,[202,56],[[202,27],56],[-1,-2,[],[]],[-1,-2,[],[]],[202,202],[[-1,-2],11,[],[]],[[202,27],126],0,[27,-1,[]],[27,-1,[]],0,[27,11],[[202,32],33],[-1,-1,[]],[[-1,30],202,[166,167]],[[202,126],203],[202,[[141,[42]]]],[[],27],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[202,126],[202,203],[[202,79,163],164],0,[[202,27],203],0,[202,152],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[37,-1,[]],[31,-1,[]],[-1,1,[]],0,0,[204,56],[[204,27],56],[-1,-2,[],[]],[-1,-2,[],[]],[204,204],[[-1,-2],11,[],[]],[27,-1,[]],[27,-1,[]],0,[27,11],[[204,32],33],[-1,-1,[]],[[-1,30],204,[166,167]],[204,205],[204,[[141,[42]]]],[[],27],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[204,205],[[204,79,163],164],0,[[204,-1],[[172,[11]]],173],[[204,27],205],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"String",1827],[4,"Wallet",1094],[3,"BlockDate",1828],[6,"PoolId",1094],[4,"SignedCertificate",1094],[3,"StakePool",1060],[3,"VotePlan",1829],[3,"Vec",1830],[3,"Value",1831],[3,"PersistentFragmentLog",1832],[15,"tuple"],[4,"Error",671],[4,"Result",1833],[3,"Path",1834],[8,"AsRef",1835],[3,"WalletState",185],[3,"Identifier",1836],[4,"Error",185],[3,"Address",1837],[3,"AddressReadable",1837],[3,"ConfigManager",185],[6,"Alias",185],[3,"PathBuf",1834],[3,"Connection",185],[3,"Config",185],[3,"Wallets",185],[15,"usize"],[8,"Deserializer",1838],[3,"SecretKey",185],[4,"Discrimination",1837],[15,"bool"],[3,"Formatter",1839],[6,"Result",1839],[4,"Error",1840],[3,"Error",1841],[3,"Error",1842],[15,"str"],[3,"RestSettings",1843],[3,"JormungandrRest",1844],[3,"Request",1845],[8,"Into",1835],[3,"Ed25519",1846],[3,"PublicKey",1847],[8,"Serializer",1848],[8,"Error",1849],[4,"Option",1850],[3,"TypeId",1851],[3,"CliController",360],[3,"AccountState",1852],[4,"Error",396],[6,"FragmentId",1853],[3,"FragmentLog",1854],[3,"HashMap",1855],[3,"SigningKey",1856],[4,"FragmentStatus",1854],[3,"Address",1857],[15,"u64"],[3,"MemPoolCheck",1858],[6,"VotePlanId",1859],[15,"u8"],[3,"AccountVotes",1859],[3,"WalletController",449],[4,"SecretKeyError",1847],[4,"Error",1860],[4,"Error",1861],[4,"RestError",1844],[4,"Error",1862],[4,"SigningKeyParseError",1856],[4,"Error",1863],[4,"FragmentSenderError",713],[4,"FragmentVerifierError",965],[3,"u5",1861],[3,"Iter",1855],[3,"FragmentBuilder",481],[4,"Fragment",1094],[4,"FragmentBuilderError",481],[3,"SettingsDto",1864],[4,"Initial",1865],[3,"Hash",1866],[3,"LinearFee",1094],[3,"Choice",1867],[15,"slice"],[3,"JormungandrProcess",1868],[3,"UpdateProposal",1094],[3,"SecretKey",1847],[3,"UpdateVote",1094],[4,"VoteTallyPayload",1869],[4,"WitnessMode",1870],[3,"FragmentChainSender",567],[3,"Duration",1871],[4,"FragmentChainSenderError",567],[8,"SyncNode",1872],[8,"Send",1873],[3,"RemoteJormungandr",1874],[3,"FragmentSenderSetup",850],[4,"BlockDateGenerator",713],[15,"u32"],[8,"Fn",1875],[3,"FragmentExporter",619],[8,"FragmentNode",1858],[4,"FragmentExporterError",619],[3,"PersistentLogViewer",671],[3,"FragmentSender",713],[8,"Clone",1876],[3,"SystemTime",1877],[4,"FragmentNodeError",1858],[4,"WalletError",1094],[4,"SyncNodeError",1872],[3,"DummySyncNode",850],[3,"Block0Configuration",1878],[8,"Iterator",1879],[3,"BlockchainConfiguration",1880],[3,"FragmentsProcessingSummary",1881],[8,"Sized",1873],[3,"DecryptedPrivateTally",1869],[6,"NodeAlias",1882],[3,"FragmentSenderSetupBuilder",850],[4,"VerifyStrategy",850],[4,"ExitStrategy",965],[3,"Wait",1883],[3,"PoolRegistration",1884],[3,"StakePool",1885],[3,"SumEd25519_12",1886],[3,"KeyPair",1887],[3,"RistrettoGroup2HashDh",1888],[3,"Identifier",1856],[3,"PayloadSlice",1889],[3,"InputOutputBuilder",1890],[8,"Payload",1889],[3,"Input",1094],[3,"SpendingCounter",1094],[8,"Gen",1891],[3,"Block",1094],[3,"Milli",1094],[3,"Value",1892],[15,"array"],[3,"ConfigParams",1893],[3,"TransactionBindingAuthData",1094],[4,"Ordering",1894],[3,"Contents",1895],[3,"Identifier",1887],[3,"Codec",1896],[4,"ReadError",1897],[8,"Read",1898],[4,"CertificateSlice",1899],[3,"Error",1839],[3,"Wallet",1567],[3,"SignedCertificate",1900],[3,"FragmentDef",1901],[3,"ActiveSlotsCoeff",1902],[3,"TransactionInput",1903],[3,"UnspecifiedAccountIdentifier",1904],[4,"InputEnum",1904],[3,"Identifier",1905],[3,"UtxoPointer",1906],[3,"Entry",1907],[8,"Hash",1908],[8,"BuildHasher",1908],[4,"InputType",1904],[8,"Hasher",1908],[3,"Hash",1909],[4,"Header",1910],[6,"TransactionSignDataHash",1911],[4,"Witness",1912],[3,"BftLeaderId",1909],[8,"CryptoRng",1913],[8,"RngCore",1913],[3,"PayloadAuthData",1889],[3,"PayloadData",1889],[3,"PerCertificateFee",1914],[3,"PerVoteCertificateFee",1914],[6,"Result",1842],[8,"Write",1898],[3,"Ed25519Extended",1915],[4,"WriteError",1897],[3,"ByteArray",1916],[3,"ByteBuilder",1917],[3,"TransactionBindingAuthDataPhantom",1911],[3,"Signature",1918],[3,"SpendingCounterIncreasing",1860],[3,"CommitteeIdDef",1919],[15,"f64"],[3,"InitialUTxO",1865],[3,"Destination",1865],[3,"WitnessData",1920],[3,"CommitteeCommunicationDataManager",1605],[3,"CommitteeMembershipDataManager",1605],[3,"CommitteeDataManager",1605],[3,"CommitteeCommunicationData",1690],[3,"CommitteeMembershipData",1690],[3,"VotePlanStatus",1921],[3,"DecryptedPrivateTallyError",1869],[3,"ElectionPublicKey",1922],[3,"MemberPublicKey",1922],[6,"Crs",1923],[3,"OsRng",1924],[3,"ChildPath",1925],[4,"Error",1690],[6,"OpeningVoteKey",1923],[3,"MemberCommunicationKey",1922],[3,"MemberCommunicationPublicKey",1922],[3,"Wallet",1758],[6,"SpendingKey",1758],[3,"Wallet",1796],[6,"SpendingKey",1796],[8,"TransactionHash",963],[8,"Block0ConfigurationBuilderExtension",1088],[13,"Rolling",840],[13,"FragmentNotInBlock",845],[13,"TooManyAttemptsFailed",845],[13,"FragmentNotInBlock",1039],[13,"FragmentNotRejected",1039],[13,"FragmentIsPendingForTooLong",1039],[13,"FragmentsArePendingForTooLong",1039],[13,"FragmentNotInMemPoolLogs",1039],[13,"UnexpectedRejectionReason",1039],[13,"AtLeastOneRejectedFragment",1039],[13,"TimeoutReachedWhileWaitingForAllFragmentsInBlock",1039],[13,"TransactionsWerePendingForTooLong",446],[13,"CannotFindProposal",446],[3,"FragmentVerifier",965],[6,"ConsensusVersion",1094],[6,"HeaderId",1094],[6,"WalletAlias",1094],[13,"InvalidBech32Key",1565],[8,"DiscriminationExtension",1792]]},\
"typed_bytes":{"doc":"","t":"IDDDSMLLLLLLLLLMALLLLLLLLLMLLLLLLLLLLLMMMMLLLLLLLLLLLDLLMLLLLMLLLLLLLLLLLLMLLLLLLLLLL","n":["ByteAccessor","ByteArray","ByteBuilder","ByteSlice","START_SIZE","array","as_byteslice","as_ref","as_ref","as_slice","as_slice","borrow","borrow","borrow_mut","borrow_mut","buffer","builder","clone","clone","clone_into","clone_into","cmp","eq","eq","equivalent","equivalent","expected","fmt","fmt","from","from","from","from_vec","hash","hash","into","into","partial_cmp","phantom","phantom","phantom","slice","sub","sub","sub_byteslice","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ByteBuilder","borrow","borrow_mut","buffer","bytes","clone","clone_into","default","expected","finalize","finalize_as_vec","fold","from","into","iter16","iter32","iter8","new","new_fixed","option","option_or_else","phantom","sub","to_owned","try_from","try_into","type_id","u128","u16","u32","u64","u8"],"q":[[0,"typed_bytes"],[53,"typed_bytes::builder"],[85,"core::clone"],[86,"core::marker"],[87,"core::cmp"],[88,"core::cmp"],[89,"core::fmt"],[90,"core::hash"],[91,"core::hash"],[92,"core::cmp"],[93,"core::any"],[94,"core::default"],[95,"core::iter::traits::iterator"],[96,"core::ops::function"],[97,"core::iter::traits::collect"],[98,"core::num::nonzero"],[99,"core::ops::function"]],"d":["","A typed Array of bytes","A dynamically created buffer for T","A typed slice of bytes","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A dynamically created buffer for T","","","","Append bytes in the builder","","","","","Finalize the buffer and return a fixed ByteArray of T","Finalize the buffer and return a fixed ByteArray of T","fold over an iterator","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Write an iterator of maximum 2^16 - 1 items using the …","Write an iterator of maximum 2^32 - 1 items using the …","Write an iterator of maximum 255 items using the closure <code>f</code>.","Create an unconstrained Builder","Create a builder of fixed size","Call ‘f’ on bytebuilder and the value if the value is …","Run the first closure if the value is not present, or the …","","","","","","","Append an u128 in the builder","Append an u16 in the builder","Append an u32 in the builder","Append an u64 in the builder","Append an u8 in the builder"],"i":[0,0,0,0,20,1,1,2,1,2,1,2,1,2,1,24,0,2,1,2,1,2,2,1,2,1,24,2,1,2,1,1,1,2,1,2,1,2,24,2,1,2,2,1,2,2,1,2,1,2,1,2,1,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"f":[0,0,0,0,0,0,[[[1,[-1]]],[[2,[-1]]],[]],[[[2,[-1]]],[[4,[3]]],[]],[[[1,[-1]]],[[4,[3]]],[]],[[[2,[-1]]],[[4,[3]]],[]],[[[1,[-1]]],[[4,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[2,[-1]]],[[2,[-1]]],5],[[[1,[-1]]],[[1,[-1]]],[5,6]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[2,[-1]],[2,[-1]]],8,9],[[[2,[-1]],[2,[-1]]],10,11],[[[1,[-1]],[1,[-1]]],10,[11,6]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[[2,[-1]],12],13,14],[[[1,[-1]],12],13,[14,6]],[-1,-1,[]],[[[15,[3]]],[[1,[-1]]],[]],[-1,-1,[]],[[[15,[3]]],[[1,[-1]]],[]],[[[2,[-1]],-2],7,16,17],[[[1,[-1]],-2],7,[16,6],17],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]],[2,[-1]]],[[18,[8]]],19],0,0,0,0,[[[2,[-2]]],[[2,[-1]]],[],[[20,[-1]]]],[[[1,[-2]]],[[2,[-1]]],[],[[20,[-1]]]],[[[2,[-1]],21,21],[[2,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[24,[-1]],[4,[3]]],[[24,[-1]]],[]],[[[24,[-1]]],[[24,[-1]]],5],[[-1,-2],7,[],[]],[[],[[24,[-1]]],25],0,[[[24,[-1]]],[[1,[-1]]],[]],[[[24,[-1]]],[[15,[3]]],[]],[[[24,[-1]],-2,-3],[[24,[-1]]],[],26,27],[-1,-1,[]],[-1,-2,[],[]],[[[24,[-1]],-2,-3],[[24,[-1]]],[],28,27],[[[24,[-1]],-2,-3],[[24,[-1]]],[],28,27],[[[24,[-1]],-2,-3],[[24,[-1]]],[],28,27],[[],[[24,[-1]]],[]],[29,[[24,[-1]]],[]],[[[24,[-1]],[18,[-2]],-3],[[24,[-1]]],[],[],30],[[[24,[-1]],[18,[-2]],-3,-4],[[24,[-1]]],[],[],30,30],0,[[[24,[-1]],-2],[[24,[-1]]],[],31],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[[[24,[-1]],32],[[24,[-1]]],[]],[[[24,[-1]],33],[[24,[-1]]],[]],[[[24,[-1]],34],[[24,[-1]]],[]],[[[24,[-1]],35],[[24,[-1]]],[]],[[[24,[-1]],3],[[24,[-1]]],[]]],"c":[],"p":[[3,"ByteArray",0],[3,"ByteSlice",0],[15,"u8"],[15,"slice"],[8,"Clone",85],[8,"Sized",86],[15,"tuple"],[4,"Ordering",87],[8,"Ord",87],[15,"bool"],[8,"PartialEq",87],[3,"Formatter",88],[6,"Result",88],[8,"Debug",88],[3,"Vec",89],[8,"Hash",90],[8,"Hasher",90],[4,"Option",91],[8,"PartialOrd",87],[8,"ByteAccessor",0],[15,"usize"],[4,"Result",92],[3,"TypeId",93],[3,"ByteBuilder",53],[8,"Default",94],[8,"Iterator",95],[8,"FnMut",96],[8,"IntoIterator",97],[3,"NonZeroUsize",98],[8,"FnOnce",96],[8,"Fn",96],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"uniffi_jormungandr_wallet":{"doc":"","t":"GDNNEDGNNNDNNNEDDNNDNDDDNDNGDELMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMFFFFLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLLMMMMLLLMMMMLLFMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLMLLLLLLLLLLLLLLM","n":["AccountId","BlockDate","CipherError","CoreError","Discrimination","Fragment","FragmentId","InvalidEncryptionKey","InvalidFragment","InvalidSpendingCounters","LinearFee","MalformedBlock0Hash","MalformedSecretKey","MalformedVotePlanId","PayloadTypeConfig","PerCertificateFee","PerVoteCertificateFee","Private","Production","Proposal","Public","SecretKeyEd25519Extended","Settings","SettingsRaw","Test","TimeEra","TimeError","Value","Wallet","WalletError","account_id","block0_date","block0_hash","block_date_from_system_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","confirm_transaction","constant","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_start","fees","ffi_jormungandr_wallet_62a5_rustbuffer_alloc","ffi_jormungandr_wallet_62a5_rustbuffer_free","ffi_jormungandr_wallet_62a5_rustbuffer_from_bytes","ffi_jormungandr_wallet_62a5_rustbuffer_reserve","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","max_expiration_date","new","new","new","new","options","payload_type","per_certificate_fees","per_vote_certificate_fees","serialize","set_state","settings_raw","slot","slot_duration","slot_start","slots_per_epoch","source","spending_counters","symmetric_cipher_decrypt","time_era","to_string","total_value","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniffi_reexport_scaffolding","vote","vote_plan_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","encryption_key"],"q":[[0,"uniffi_jormungandr_wallet"],[257,"uniffi_jormungandr_wallet::PayloadTypeConfig"],[258,"alloc::sync"],[259,"core::result"],[260,"uniffi::ffi::rustcalls"],[261,"uniffi::ffi::rustbuffer"],[262,"uniffi::ffi::foreignbytes"],[263,"core::fmt"],[264,"core::fmt"],[265,"wallet_core::error"],[266,"symmetric_cipher"],[267,"wallet::time"],[268,"alloc::vec"],[269,"core::error"],[270,"core::option"],[271,"alloc::string"],[272,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,7,7,0,0,0,7,7,7,0,7,7,7,0,0,0,34,35,0,34,0,0,0,35,0,7,0,0,0,1,26,26,0,1,3,22,33,26,36,37,38,35,39,34,6,25,7,1,3,22,33,26,36,37,38,35,39,34,6,25,7,9,2,36,37,37,37,38,38,36,1,36,1,3,22,33,26,36,37,38,35,39,34,6,25,7,1,3,22,33,26,36,37,38,35,39,34,6,25,7,26,1,3,22,33,26,36,37,38,35,39,34,6,25,7,6,39,26,0,0,0,0,7,7,1,3,22,33,26,36,37,38,35,39,34,6,6,25,7,7,7,7,22,33,1,3,22,33,26,36,37,38,35,39,34,6,25,7,1,3,22,33,26,36,37,38,35,39,34,6,25,7,9,2,0,1,3,22,25,33,33,36,36,22,1,3,6,26,39,39,7,1,0,26,7,1,26,1,3,22,33,26,36,37,38,35,39,34,6,25,7,1,3,22,33,26,36,37,38,35,39,34,6,25,7,1,3,22,33,26,36,37,38,35,39,34,6,25,7,0,1,33,1,3,22,33,26,36,37,38,35,39,34,6,25,7,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[[4,[3]],5],[[8,[6,7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[1,9],10],0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],0,[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],[11,10],0,0,0,[[12,13],14],[[14,13],10],[[15,13],14],[[14,12,13],14],[[7,16],17],[[7,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,7],[20,7],[21,7],[22,[[24,[23]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[4,[3]],5],[[8,[6,7]]]],[[[4,[25]]],[[8,[1,7]]]],[26,[[8,[3,7]]]],[[[24,[23]]],[[8,[22,7]]]],[[[24,[23]]],[[8,[25,7]]]],0,0,0,0,[22,[[24,[23]]]],[[1,5,[24,[27]]],[[8,[10,7]]]],[3,26],0,0,0,0,[7,[[29,[28]]]],[1,[[24,[27]]]],[[[24,[23]],[24,[23]]],[[8,[[24,[23]],7]]]],0,[-1,30,[]],[1,31],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],0,[[1,[4,[3]],33,23,6,23],[[8,[[24,[23]],7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0],"c":[],"p":[[3,"Wallet",0],[6,"AccountId",0],[3,"Settings",0],[3,"Arc",258],[15,"u64"],[3,"BlockDate",0],[4,"WalletError",0],[4,"Result",259],[6,"FragmentId",0],[15,"tuple"],[15,"usize"],[15,"i32"],[3,"RustCallStatus",260],[3,"RustBuffer",261],[3,"ForeignBytes",262],[3,"Formatter",263],[6,"Result",263],[3,"BlockDate",264],[3,"Error",265],[4,"Error",266],[4,"Error",267],[3,"Fragment",0],[15,"u8"],[3,"Vec",268],[3,"SecretKeyEd25519Extended",0],[3,"SettingsRaw",0],[15,"u32"],[8,"Error",269],[4,"Option",270],[3,"String",271],[6,"Value",0],[3,"TypeId",272],[3,"Proposal",0],[4,"PayloadTypeConfig",0],[4,"Discrimination",0],[3,"LinearFee",0],[3,"PerCertificateFee",0],[3,"PerVoteCertificateFee",0],[3,"TimeEra",0],[13,"Private",257]]},\
"valgrind":{"doc":"","t":"DNNNNDDENDNNNNNNNDIEDENNNNNNNNINNNNDDDENDEDDMMMMMMMLLLLLLLLLLLLLLLLMMMMMKMMMMMMMMMMAMLLLLLLLLLLMAMLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLMMLLLLLLLLLLLLKKMMMLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMAMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLMMMMNENNNNENNCCNNNNNNNDDNCCCLLLFLLLLLLLLMLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLAMFLLLLLLLLLLLLLLLLLLLMALLMALLLLLLMMMNNNNNNECAMMMNNDNNNNEDDLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMNEDNNNMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMCAIKRNNNNDEDNDMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDDDIDDLLLLLLMMMLLLLLMMKMMMMMMMMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLMMMMMMLLMMLLMMMMMMLLMMLLLLKLMMLLMMMMMMMMMMMMMMMMMLLLLMLMLLLMMLLLLLLLLLLMLLLNDENNNNENNDMLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLALLLLLLLLLLLLLLLLLLMLLLLENNDNLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLMLL","n":["AdvisorReview","CannotDeserialize","CannotDeserializeResponse","CannotDeserializeResponse","CertFileDoesNotExist","Certs","Challenge","Error","ErrorStatusCode","Fund","HashConversion","Http","Https","Io","IoError","KeyFileDoesNotExist","NodeConnection","Proposal","ProposalExtension","Protocol","ProxyClient","ProxyClientError","ProxyConnection","ProxyError","Read","Request","RequestError","Rest","ServerIsNotUp","ServerIsNotUp","SettingsExtensions","SettingsRead","StatusCode","UnsufficientHttpConfiguration","Url","ValgrindClient","ValgrindSettings","ValigrindStartupCommand","ValigrindStartupCommandError","VitStationConnection","VitStationRestClient","VitStationRestError","VitVersion","WalletNodeRestClient","address","address","api_token","assessor","auditability_note","auditability_rating_given","block0_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cert_path","cert_path","certificate","chain_committee_end_time","chain_proposal_id","chain_proposal_id_as_str","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_plans","chain_vote_start_time","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","challenges","client","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cors","data","debug","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enable_debug","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","fund_end_time","fund_goal","fund_id","fund_id","fund_name","fund_start_time","goals","groups","highlights","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","init","internal_id","internal_id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_wallet_proposal","into_wallet_settings","key_path","key_path","logger","new_use_https","next_fund_start_time","next_registration_snapshot_time","node_address","node_client","path_builder","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposers_rewards","proxy_client","ranking","registration_snapshot_time","rest_client","results_url","reviews_count","rewards_total","serialize","serialize","serialize","serialize","serialize","service_version","stage_dates","startup","survey_url","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_https","values","values","values","values","vit_address","vit_client","voting_power_threshold","vzip","vzip","vzip","vzip","vzip","vzip","source","text","source","text","CannotDeserialize","Error","HashConversion","HashParseError","IoError","NodeConnection","NodeRestError","NonSuccessErrorCode","PollError","ProxyClient","ProxyClientError","ProxyConnection","Read","ReadBytes","RequestError","Rest","SettingsRead","Url","ValgrindClient","ValgrindSettings","VitStationConnection","VitStationRestClient","VitStationRestError","WalletNodeRestClient","account_exists","account_state","active_vote_plan","add_api_segment_if_not_exists","are_fragments_in_blockchain","block0","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","challenges","clone","clone_into","cors","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_logs","drop","drop","drop","enable_debug","enable_logs","fmt","fmt","fmt","fmt","fragment_logs","fragments_statuses","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","funds","health","init","init","init","into","into","into","into_request","into_request","into_request","new","new_from_addresses","node","node_client","node_client","proposals","proxy","proxy_client","remove_api_segment_if_exists","review","send_fragment","send_fragments","send_fragments_at_once","settings","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_https","utils","vit","vit_client","vit_client","vit_station","vote_plan_history","vote_plan_statuses","votes_history","vzip","vzip","vzip","checks","response","status","CannotDeserialize","HashParseError","NonSuccessErrorCode","PollError","ReadBytes","RequestError","RestError","WalletNodeRestClient","rest","checks","response","status","CannotDeserialize","HashParseError","JormungandrRest","NonSuccessErrorCode","PollError","ReadBytes","RequestError","RestError","RestSettings","WalletNodeRestClient","account_exists","account_state","account_state","account_state_by_pk","account_state_by_pk","account_state_by_pk_raw","account_votes","account_votes","account_votes_all","account_votes_for_plan","account_votes_with_plan_id","address","block","block_as_bytes","borrow","borrow","borrow_mut","borrow_mut","certificate","clone","clone","clone_into","clone_into","cors","deref","deref","deref_mut","deref_mut","disable_logger","disable_logs","drop","drop","enable_debug","enable_logger","enable_logs","epoch_reward_history","fmt","fragment_logs","fragment_logs","fragment_statuses","fragments_statuses","from","from","init","init","inner","inner","into","into","into_request","into_request","leaders_log","network_stats","new","new","new_with_cert","new_with_custom_settings","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","raw","remaining_rewards","rest_client","reward_history","send_fragment","send_fragment","send_fragment_batch","send_fragments","send_raw_fragment","send_raw_fragments","set_origin","settings","settings","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","stats","tip","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","updates","use_https","vote_plan_statuses","vote_plan_statuses","vzip","vzip","checks","response","status","CannotDeserializeResponse","Error","ProxyClient","Request","ServerIsNotUp","StatusCode","address","block0","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","debug","deref","deref","deref_mut","deref_mut","disable_debug","drop","drop","enable_debug","fmt","fmt","from","from","from","health","init","init","into","into","into_request","into_request","new","path","print_request_path","print_response","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","source","text","SettingsExtensions","settings","SettingsExtensions","into_wallet_settings","API_TOKEN_HEADER","CannotDeserialize","CannotDeserializeResponse","ErrorStatusCode","RequestError","RestClientLogger","RestError","RestPathBuilder","ServerIsNotUp","VitStationRestClient","address","api_token","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge","challenge_raw","challenges","challenges","challenges_raw","client","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disable_log","disable_logs","drop","drop","drop","drop","enable_logs","enabled","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","fund","fund","fund_raw","funds","funds","funds_raw","genesis","genesis","genesis_raw","get","get_and_verify_status_code","graphql","health","health","health_raw","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_enabled","log_request","log_response","log_text","logger","new","new","path","path_builder","path_builder","post","proposal","proposal","proposal_raw","proposals","proposals","proposals_raw","review","review","review_raw","reviews","root","set_api_token","set_enabled","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_status_code","version","version","version_raw","vzip","vzip","vzip","vzip","source","text","AdvisorReview","Challenge","Choice","Fund","Proposal","ProposalExtension","Value","VitVersion","add","arbitrary","arbitrary","arbitrary_with","as_byte","as_ref","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","bytes","chain_committee_end_time","chain_proposal_id","chain_proposal_id_as_str","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_plans","chain_vote_start_time","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","challenges","checked_add","checked_sub","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","default","deref","deref","deref_mut","deref_mut","description","deserialize","deserialize_from_slice","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","from","from","from","from","from","fund_end_time","fund_goal","fund_id","fund_id","fund_name","fund_start_time","get_hash","get_hash","goals","groups","hash","hash","highlights","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","internal_id","internal_id","into","into","into_request","into_request","into_wallet_proposal","new","next_fund_start_time","next_registration_snapshot_time","partial_cmp","partial_cmp","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposers_rewards","ranking","registration_snapshot_time","results_url","reviews_count","rewards_total","saturating_add","scale","serialize","serialized_size","service_version","split_in","stage_dates","sub","sum","sum","survey_url","title","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","voting_power_threshold","vzip","vzip","zero","CertFileDoesNotExist","Certs","Error","Http","Https","Io","KeyFileDoesNotExist","Protocol","ProxyError","UnsufficientHttpConfiguration","ValigrindStartupCommand","address","augment_args","augment_args_for_update","block0_path","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cert_path","cert_path","clone","clone","clone_into","clone_into","command","command_for_update","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","key_path","key_path","node_address","schema","serialize","serialize","server","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vit_address","vzip","vzip","vzip","vzip","Error","NodeRest","Proxy","ProxyServerStub","VitStation","address","address","base_address","block0","block0","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","http_node_address","http_vit_address","init","init","into","into","into_request","into_request","new","new_http","new_https","node_rest_address","node_rest_address","protocol","protocol","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vit_address","vit_address","vzip","vzip"],"q":[[0,"valgrind"],[269,"valgrind::ProxyClientError"],[271,"valgrind::VitStationRestError"],[273,"valgrind::client"],[400,"valgrind::client::NodeRestError"],[403,"valgrind::client::node"],[412,"valgrind::client::node::RestError"],[415,"valgrind::client::node::rest"],[520,"valgrind::client::node::rest::RestError"],[523,"valgrind::client::proxy"],[573,"valgrind::client::proxy::Error"],[575,"valgrind::client::utils"],[577,"valgrind::client::utils::settings"],[579,"valgrind::client::vit_station"],[714,"valgrind::client::vit_station::RestError"],[716,"valgrind::data"],[867,"valgrind::startup"],[971,"valgrind::startup::server"],[1021,"alloc::string"],[1022,"core::result"],[1023,"serde::de"],[1024,"core::fmt"],[1025,"core::fmt"],[1026,"wallet_core::vote"],[1027,"wallet::blockchain"],[1028,"serde::ser"],[1029,"core::any"],[1030,"hdkeygen::account"],[1031,"jormungandr_lib::interfaces::account_state"],[1032,"jormungandr_lib::interfaces::vote"],[1033,"alloc::vec"],[1034,"url"],[1035,"chain_impl_mockchain::fragment"],[1036,"core::fmt"],[1037,"std::collections::hash::map"],[1038,"jormungandr_lib::interfaces::fragment_log"],[1039,"vit_servicing_station_tests::common::clients::rest"],[1040,"chain_crypto::hash"],[1041,"chain_ser::deser"],[1042,"chain_impl_mockchain::ledger::ledger"],[1043,"alloc::boxed"],[1044,"url::parser"],[1045,"serde_json::error"],[1046,"jortestkit::process::wait"],[1047,"reqwest::error"],[1048,"vit_servicing_station_lib::db::models::proposals"],[1049,"jormungandr_lib::interfaces::settings"],[1050,"core::error"],[1051,"core::option"],[1052,"vit_servicing_station_tests::common::clients::rest"],[1053,"jormungandr_lib::interfaces::vote"],[1054,"alloc::alloc"],[1055,"std::collections::hash::map"],[1056,"chain_impl_mockchain::key"],[1057,"chain_impl_mockchain::block"],[1058,"jormungandr_lib::interfaces::rewards_info"],[1059,"jormungandr_automation::jormungandr::legacy::rest"],[1060,"jormungandr_lib::interfaces::leadership_log"],[1061,"jormungandr_lib::interfaces::peer_stats"],[1062,"std::path"],[1063,"core::convert"],[1064,"jormungandr_lib::interfaces::peer_stats"],[1065,"jormungandr_lib::interfaces::value"],[1066,"chain_impl_mockchain::fragment"],[1067,"jormungandr_lib::interfaces::fragments_processing_summary"],[1068,"core::convert"],[1069,"jormungandr_lib::interfaces::stats"],[1070,"jormungandr_lib::interfaces::updates"],[1071,"reqwest::blocking::response"],[1072,"serde_json::value"],[1073,"quickcheck::arbitrary"],[1074,"chain_impl_mockchain::value"],[1075,"core::cmp"],[1076,"chain_ser::packer"],[1077,"std::io"],[1078,"chain_impl_mockchain::testing::arbitrary"],[1079,"chain_impl_mockchain::testing::arbitrary"],[1080,"core::marker"],[1081,"core::hash"],[1082,"clap_builder::builder::command"],[1083,"clap_builder::parser::matches::arg_matches"],[1084,"clap_builder"],[1085,"clap_builder::util::id"],[1086,"core::net::socket_addr"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a choice","","","","Unspent transaction value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,36,37,36,109,0,0,0,36,0,22,110,110,109,22,109,22,0,0,0,0,0,22,109,22,37,36,22,37,36,0,22,37,109,22,0,0,0,0,22,0,0,0,0,80,107,83,2,2,2,107,1,2,3,4,6,11,1,2,3,4,6,11,1,2,3,4,107,111,6,4,4,117,4,4,4,3,4,4,4,1,1,3,0,83,1,2,3,4,6,1,2,3,4,6,6,0,80,6,1,2,3,4,6,11,1,2,3,4,6,11,1,1,2,3,4,11,1,2,3,4,6,11,6,1,2,3,4,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,4,2,2,1,2,3,4,6,1,2,3,4,6,11,3,3,1,4,3,3,3,3,1,1,2,3,2,2,1,2,3,4,6,11,1,4,1,2,3,4,6,11,1,2,3,4,6,11,117,118,107,111,83,6,3,3,107,20,83,4,4,4,2,4,4,4,4,4,4,4,1,20,2,3,46,3,4,1,1,2,3,4,11,11,3,0,3,1,1,2,3,4,6,1,2,3,4,6,11,1,2,3,4,6,11,1,2,3,4,6,11,6,1,2,3,4,107,20,3,1,2,3,4,6,11,119,119,120,120,30,0,22,30,22,22,0,30,30,0,0,22,22,30,30,22,22,22,0,0,22,0,0,0,20,20,20,0,20,20,20,22,30,20,22,30,6,20,20,20,6,20,22,30,20,22,30,20,20,22,30,6,20,22,22,30,30,20,20,20,22,22,22,22,22,22,22,22,22,22,30,30,30,30,30,30,20,20,20,22,30,20,22,30,20,22,30,20,20,0,20,20,20,0,20,0,20,20,20,20,20,22,30,20,22,30,20,22,30,20,22,30,20,22,30,6,0,20,20,20,0,20,20,20,20,22,30,121,121,121,30,30,30,30,30,30,0,0,0,121,121,121,30,30,0,30,30,30,30,0,0,0,46,46,56,46,56,56,46,56,56,46,56,56,56,56,46,56,46,56,6,46,56,46,56,6,46,56,46,56,56,46,46,56,6,56,46,56,56,46,56,46,56,46,56,46,56,56,56,46,56,46,56,56,56,46,56,56,56,56,56,56,56,56,56,46,56,46,56,56,46,56,56,56,46,56,56,56,56,56,46,56,56,46,56,46,56,46,56,46,56,56,6,46,56,46,56,121,121,121,37,0,0,37,37,37,80,80,80,37,80,37,80,80,80,80,37,80,37,80,80,37,80,37,37,80,37,37,80,80,37,80,37,80,37,80,80,80,80,37,80,37,80,37,80,37,80,37,80,37,119,119,0,0,0,118,0,36,36,36,36,0,0,0,36,0,82,83,84,83,82,36,84,83,82,36,82,83,83,82,83,83,84,83,82,84,83,82,84,83,82,36,84,83,82,36,83,83,84,83,82,36,83,84,84,83,82,36,36,84,83,82,36,36,36,83,82,83,83,82,83,83,82,83,83,83,82,83,82,83,84,83,82,36,84,83,82,36,84,83,82,36,84,84,84,84,83,83,82,82,83,83,83,83,82,83,83,82,83,83,82,83,82,82,83,84,36,84,83,82,36,84,83,82,36,84,83,82,36,84,83,82,36,83,83,82,83,84,83,82,36,120,120,0,0,0,0,0,0,0,0,86,86,88,86,88,86,2,2,2,86,88,86,88,86,4,4,117,4,4,4,3,4,4,4,1,1,3,86,86,86,88,86,88,86,88,86,88,86,86,88,86,88,1,86,86,86,88,86,88,86,86,86,86,88,88,88,88,4,2,2,86,86,88,86,86,86,86,88,3,3,1,4,3,3,86,88,3,3,86,88,1,1,2,3,2,2,86,88,1,4,86,88,86,88,117,88,3,3,86,88,4,4,4,2,4,4,4,4,4,4,4,1,2,3,3,4,1,86,86,86,86,11,86,3,86,86,86,3,1,86,88,86,86,86,88,86,88,86,88,3,86,88,86,109,0,0,110,110,109,109,0,109,109,0,107,107,107,107,109,107,110,111,109,107,110,111,107,107,111,110,111,110,111,107,107,110,109,107,110,111,109,107,110,111,110,111,109,107,110,111,109,109,107,110,111,109,109,109,107,110,110,111,107,107,107,109,107,110,111,109,107,110,111,109,107,110,111,107,111,107,110,110,111,0,109,110,111,109,109,107,110,111,109,107,110,111,109,107,110,111,107,107,107,109,107,110,111,0,112,112,0,112,108,108,108,108,108,108,112,108,112,108,112,108,112,108,112,112,112,108,112,108,108,108,112,108,112,108,112,108,108,108,108,108,108,108,112,108,112,108,112,108,112,108,108,108,112],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],2],[[],3],[[],4],0,0,0,0,0,[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[6,6],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,0,[[],6],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],0,[-1,[[9,[1]]],10],[-1,[[9,[2]]],10],[-1,[[9,[3]]],10],[-1,[[9,[4]]],10],[-1,[[9,[11]]],10],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],0,[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,0,0,[[1,13],[[9,[7,14]]]],[[2,13],[[9,[7,14]]]],[[3,13],[[9,[7,14]]]],[[4,13],[[9,[7,14]]]],[[6,13],[[9,[7,14]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,17,[]],0,0,0,[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,-1],9,18],[[2,-1],9,18],[[3,-1],9,18],[[4,-1],9,18],[[11,-1],9,18],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[1],[2],[3],[4],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,21],[[9,[12,22]]]],[[20,21],[[9,[23,22]]]],[20,[[9,[[25,[24]],22]]]],[26,7],[[20,[25,[27]]],[[9,[12,22]]]],[20,[[9,[[25,[28]],22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[20,[[9,[[25,[1]],22]]]],[20,20],[[-1,-2],7,[],[]],0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[20,7],[8,7],[8,7],[8,7],0,[20,7],[[22,13],29],[[22,13],29],[[30,13],[[9,[7,14]]]],[[30,13],[[9,[7,14]]]],[20,[[9,[[32,[27,31]],22]]]],[[20,[25,[5]]],[[9,[[32,[27,33]],22]]]],[-1,-1,[]],[-1,-1,[]],[34,22],[35,22],[36,22],[37,22],[38,22],[30,22],[39,22],[[[41,[40]]],22],[42,22],[43,30],[39,30],[44,30],[45,30],[-1,-1,[]],[38,30],[20,[[9,[3,22]]]],[20,[[9,[7,37]]]],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[5,6],[[9,[20,22]]]],[[26,26,26,6],20],0,[20,46],0,[[20,47],[[9,[[25,[48]],22]]]],0,0,[26,7],[[20,47],[[9,[[32,[5,[25,[2]]]],22]]]],[[20,[25,[28]]],[[9,[27,22]]]],[[20,[25,[[25,[28]]]]],[[9,[[25,[27]],22]]]],[[20,[25,[[25,[28]]]],12],[[9,[[25,[27]],22]]]],[20,[[9,[49,22]]]],[22,[[51,[50]]]],[30,[[51,[50]]]],[-1,-2,[],[]],[-1,5,[]],[-1,5,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[20,52],[20,52],0,0,[[20,53,54],[[9,[[51,[[25,[28]]]],22]]]],[20,[[9,[[25,[24]],22]]]],[[20,53],[[9,[[51,[[25,[55]]]],22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[46,21],[[9,[12,30]]]],[[46,21],[[9,[23,30]]]],[[56,57],[[9,[23,30]]]],[[46,5],[[9,[23,30]]]],[[56,47],[[9,[23,30]]]],[[56,47],[[9,[5,30]]]],[[46,53],[[9,[[51,[[25,[55]]]],30]]]],[[56,53],[[9,[[51,[[25,[55,58]]]],30]]]],[56,[[9,[[32,[5,[25,[55,58]],59]],30]]]],[[46,54,53],[[9,[[51,[[25,[28]]]],30]]]],[[56,60,53],[[9,[[51,[[25,[28,58]]]],30]]]],[56,5],[[56,61],[[9,[62,30]]]],[[56,61],[[9,[[25,[28,58]],30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[46,46],[56,56],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[56,7],[46,7],[8,7],[8,7],0,[56,7],[46,7],[[56,63],[[9,[64,30]]]],[[56,13],[[9,[7,14]]]],[46,[[9,[[32,[27,31]],30]]]],[56,[[9,[[32,[61,31,59]],30]]]],[[46,[25,[5]]],[[9,[[32,[27,33]],30]]]],[[56,[25,[5,58]]],[[9,[[32,[5,33,59]],30]]]],[-1,-1,[]],[-1,-1,[]],[[],8],[[],8],[56,65],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[56,[[9,[[25,[66,58]],30]]]],[56,[[9,[[25,[67,58]],30]]]],[[26,6],46],[5,56],[[5,-1],56,[[69,[68]]]],[[5,6],56],[56,[[9,[[25,[70,58]],30]]]],[56,[[9,[[25,[70,58]],30]]]],[56,[[9,[[25,[70,58]],30]]]],[56,[[9,[[25,[5,58]],30]]]],[56,71],[56,[[9,[72,30]]]],0,[[56,63],[[9,[[25,[64,58]],30]]]],[[46,[25,[28]]],[[9,[7,30]]]],[[56,73],[[9,[74,30]]]],[[56,[25,[73,58]],12],[[9,[75,30]]]],[[46,[25,[[25,[28]]]],12],[[9,[7,30]]]],[[56,[25,[28,58]]],[[9,[7,30]]]],[[56,[25,[[25,[28,58]],58]]],[[9,[7,30]]]],[[56,-1],7,[[76,[5]]]],[46,[[9,[49,30]]]],[56,[[9,[49,30]]]],[56,[[9,[5,30]]]],[56,[[9,[77,30]]]],[[56,63],[[9,[77,30]]]],[56,[[9,[[25,[5,58]],30]]]],[46,[[9,[78,30]]]],[56,[[9,[78,30]]]],[56,[[9,[60,30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[56,[[9,[[32,[60,79,59]],30]]]],0,[46,[[9,[[25,[24]],30]]]],[56,[[9,[[25,[24,58]],30]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[80,[[9,[[25,[28]],37]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[[-1,-2],7,[],[]],0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[80,7],[8,7],[8,7],[80,7],[[37,13],29],[[37,13],29],[-1,-1,[]],[-1,-1,[]],[45,37],[80,[[9,[7,37]]]],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[5,80],[[80,47],5],[[80,47],7],[[80,81],7],[37,[[51,[50]]]],[-1,-2,[],[]],[-1,5,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,17,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,47],5],[[83,47],[[9,[81,36]]]],[83,[[9,[[25,[1]],36]]]],[82,5],[83,[[9,[81,36]]]],0,[84,84],[83,83],[82,82],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[83,7],[83,7],[8,7],[8,7],[8,7],[8,7],[83,7],0,[[84,13],29],[[83,13],29],[[82,13],29],[[36,13],29],[[36,13],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[43,36],[-1,-1,[]],[45,36],[[83,47],[[9,[3,36]]]],[[82,47],5],[[83,47],[[9,[81,36]]]],[83,[[9,[3,36]]]],[82,5],[83,[[9,[81,36]]]],[83,[[9,[[25,[28]],36]]]],[82,5],[83,[[9,[81,36]]]],[[83,47],[[9,[81,45]]]],[[83,47],[[9,[81,36]]]],[82,5],[83,[[9,[7,36]]]],[82,5],[83,[[9,[81,36]]]],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[84,12],[[84,47],7],[[84,81],7],[[84,47],7],0,[5,83],[-1,82,[[76,[5]]]],[[82,47],5],[83,82],0,[[83,47,5],[[9,[85,36]]]],[[83,47],[[9,[4,36]]]],[[82,47],5],[[83,47],[[9,[81,36]]]],[83,[[9,[[25,[4]],36]]]],[82,5],[83,[[9,[81,36]]]],[[83,47],[[9,[[32,[5,[25,[2]]]],36]]]],[[82,47],5],[[83,47],[[9,[81,36]]]],[82,5],0,[[83,5],7],[[84,12],7],[36,[[51,[50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[83,81],[[9,[7,36]]]],[83,[[9,[11,36]]]],[82,5],[83,[[9,[81,36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[86,86]],[-1,86,87],[-1,88,87],[[]],[88,28],[86,89],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,[[90,[28]]]],0,0,[-1,5,[]],0,0,0,0,0,0,0,0,0,0,[[86,86],[[9,[86,91]]]],[[86,86],[[9,[86,91]]]],[86,86],[88,88],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[86,86],92],[[88,88],92],[[-1,-2],92,[],[]],[[-1,-2],92,[],[]],[[],86],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],0,[[[93,[-1]]],[[9,[86,39]]],94],[[[93,[[95,[28]]]]],[[9,[-1,39]]],[]],[8,7],[8,7],[[86,86],12],[[88,88],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,0,0,[[86,13],[[9,[7,14]]]],[[86,13],[[9,[7,14]]]],[[88,13],[[9,[7,14]]]],[72,86],[-1,-1,[]],[96,86],[97,86],[-1,-1,[]],0,0,0,0,0,0,[[-1,-2],89,[98,99],100],[[-1,-2],89,[98,99],100],0,0,[[86,-1],7,101],[[88,-1],7,101],0,0,0,0,0,0,[[],8],[[],8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[28,88],0,0,[[86,86],[[51,[92]]]],[[88,88],[[51,[92]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[86,86],86],[[86,63],[[9,[86,91]]]],[[86,[93,[-1]]],[[9,[7,102]]],103],[86,8],0,[[86,63],104],0,[[86,86]],[-1,86,105],[-1,[[9,[86,91]]],105],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,[[9,[-2]]],[],[]],[[[95,[28]]],[[9,[86,91]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],86],0,0,0,0,0,0,0,0,0,0,0,0,[106,106],[106,106],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,[[9,[108,109]]]],0,0,[110,110],[111,111],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[],106],[[],106],[[],110],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[110]]],10],[-1,[[9,[111]]],10],[8,7],[8,7],[8,7],[8,7],[[109,13],29],[[109,13],29],[[107,13],29],[[110,13],29],[[111,13],29],[-1,-1,[]],[34,109],[112,109],[-1,-1,[]],[-1,-1,[]],[111,110],[-1,-1,[]],[113,[[9,[107,114]]]],[113,[[9,[107,114]]]],[[],[[51,[115]]]],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[110,5],[[110,-1],9,18],[[111,-1],9,18],0,[109,[[51,[50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[107,113],[[9,[7,114]]]],[[107,113],[[9,[7,114]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[108,5],0,[108,116],[108,[[25,[28]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,7],[8,7],[[112,13],29],[[112,13],29],[-1,-1,[]],[-1,-1,[]],[108,5],[108,5],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[110,5,5,5,[25,[28]]],108],[[5,5,5,[25,[28]]],108],[[111,5,5,5,[25,[28]]],108],[108,5],0,[108,110],0,[-1,5,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[108,5],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Challenge",0],[3,"AdvisorReview",0],[3,"Fund",0],[3,"Proposal",0],[3,"String",1021],[3,"ValgrindSettings",0],[15,"tuple"],[15,"usize"],[4,"Result",1022],[8,"Deserializer",1023],[3,"VitVersion",0],[15,"bool"],[3,"Formatter",1024],[3,"Error",1024],[3,"Request",1025],[3,"Proposal",1026],[3,"Settings",1027],[8,"Serializer",1028],[3,"TypeId",1029],[3,"ValgrindClient",273],[3,"AccountId",1030],[4,"Error",273],[3,"AccountState",1031],[3,"VotePlanStatus",1032],[3,"Vec",1033],[3,"Url",1034],[6,"FragmentId",1035],[15,"u8"],[6,"Result",1024],[4,"NodeRestError",273],[3,"FragmentLog",1036],[3,"HashMap",1037],[4,"FragmentStatus",1036],[3,"Error",1038],[4,"Error",1039],[4,"RestError",579],[4,"Error",523],[4,"Error",1040],[4,"ReadError",1041],[4,"Error",1042],[3,"Box",1043],[4,"ParseError",1044],[3,"Error",1045],[4,"Error",1046],[3,"Error",1047],[3,"WalletNodeRestClient",415],[15,"str"],[3,"FullProposalInfo",1048],[3,"SettingsDto",1049],[8,"Error",1050],[4,"Option",1051],[3,"RestClient",1039],[3,"Address",1052],[6,"VotePlanId",1032],[3,"AccountVotes",1032],[3,"JormungandrRest",415],[3,"Identifier",1053],[3,"Global",1054],[3,"RandomState",1037],[3,"Hash",1055],[3,"Hash",1056],[3,"Block",1057],[15,"u32"],[3,"EpochRewardsInfo",1058],[3,"BackwardCompatibleRest",1059],[3,"LeadershipLog",1060],[3,"PeerStats",1061],[3,"Path",1062],[8,"AsRef",1063],[3,"PeerRecord",1061],[3,"RawRest",1064],[3,"Value",1065],[4,"Fragment",1035],[3,"MemPoolCheck",1066],[3,"FragmentsProcessingSummary",1067],[8,"Into",1063],[3,"StakeDistributionDto",1068],[3,"NodeStatsDto",1069],[3,"UpdateProposalStateDef",1070],[3,"ProxyClient",523],[3,"Response",1071],[3,"RestPathBuilder",579],[3,"VitStationRestClient",579],[3,"RestClientLogger",579],[4,"Value",1072],[3,"Value",716],[8,"Gen",1073],[3,"Choice",716],[15,"u64"],[15,"array"],[4,"ValueError",1074],[4,"Ordering",1075],[3,"Codec",1076],[8,"Read",1077],[15,"slice"],[3,"NonZeroValue",1078],[3,"AverageValue",1078],[8,"Hash",1079],[8,"Sized",1080],[8,"BuildHasher",1079],[8,"Hasher",1079],[4,"WriteError",1041],[8,"Write",1077],[3,"SplitValueIn",1074],[8,"Iterator",1081],[3,"Command",1082],[3,"ValigrindStartupCommand",867],[3,"ProxyServerStub",971],[4,"Error",867],[4,"Protocol",867],[3,"Certs",867],[4,"Error",971],[3,"ArgMatches",1083],[6,"Error",1084],[3,"Id",1085],[4,"SocketAddr",1086],[8,"ProposalExtension",716],[8,"SettingsExtensions",577],[13,"CannotDeserializeResponse",573],[13,"CannotDeserializeResponse",714],[13,"NonSuccessErrorCode",520]]},\
"vcli":{"doc":"","t":"F","n":["main"],"q":[[0,"vcli"],[1,"vitup"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[15,"tuple"],[6,"Result",1]]},\
"vit_servicing_station_cli":{"doc":"","t":"AAAAAFANENNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAFENEDNNNDNLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLMLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLMMLLLLDDDDDDMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLFFLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLMMMLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLFFENNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMQIQK","n":["api_token","app","csv","db_utils","init_db","main","task","Add","ApiTokenCmd","Base64Decode","Db","DbConnection","DbPool","Error","Generate","Io","add_tokens","add_tokens_from_stream","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","exec","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","generate","handle_api_token_add","handle_api_token_add_with_db_backup","handle_generate","has_subcommand","init","init","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","db_url","n","size","tokens","source","token","ApiToken","ApiTokenCmd","CliApp","CsvData","CsvData","Db","Db","Error","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","deser","loaders","models","deserialize_unix_timestamp_from_rfc3339","CsvDataCmd","Diesel","Error","ImportSettings","InvalidFundData","Io","Load","LoadCmd","Serialization","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenges","command","command","command_for_update","command_for_update","db_url","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exec","exec","fmt","fmt","fmt","fmt","force_fund_id","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","funds","goals","group_id","groups","handle_load","handle_votes_load","has_subcommand","init","init","init","init","into","into","into","into","list_of_csv_paths","load_from_csv","proposals","reviews","serialize","settings","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","voteplans","votes","vzip","vzip","vzip","vzip","AdvisorReview","Challenge","Fund","FundStageDates","Proposal","Voteplan","assessment_qa_start","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_description","category_id","category_name","chain_committee_end_time","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_encryption_key","chain_vote_end_time","chain_vote_end_time","chain_vote_options","chain_vote_plans","chain_vote_start_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_id","chain_voteplan_payload","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","challenges","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default_challenge_id","default_fund_id","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","excellent","extra","feasibility_note","feasibility_rating_given","filtered_out","finalize_proposals_start","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","fund_end_time","fund_goal","fund_id","fund_id","fund_id","fund_name","fund_start_time","goals","good","groups","highlights","id","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","init","insight_sharing_start","internal_id","internal_id","into","into","into","into","into","into","into_db_challenge_values","into_db_proposal_and_challenge_info","next_fund_start_time","next_registration_snapshot_time","note","proposal_assessment_start","proposal_brief","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_submission_start","proposal_summary","proposal_title","proposal_url","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","rating_given","refine_proposals_start","registration_snapshot_time","results_url","rewards_total","snapshot_start","stage_dates","survey_url","tag","tallying_end","title","to_owned","to_owned","to_owned","to_owned","to_owned","token_identifier","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","vzip","vzip","backup_db_file","restore_db_file","Db","DbConnection","DbPool","Error","Init","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","exec","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","init_with_migrations","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","db_url","Error","ExecTask","ResultValue","exec"],"q":[[0,"vit_servicing_station_cli"],[7,"vit_servicing_station_cli::api_token"],[69,"vit_servicing_station_cli::api_token::ApiTokenCmd"],[73,"vit_servicing_station_cli::api_token::Error"],[75,"vit_servicing_station_cli::app"],[124,"vit_servicing_station_cli::csv"],[127,"vit_servicing_station_cli::csv::deser"],[128,"vit_servicing_station_cli::csv::loaders"],[240,"vit_servicing_station_cli::csv::models"],[468,"vit_servicing_station_cli::db_utils"],[470,"vit_servicing_station_cli::init_db"],[521,"vit_servicing_station_cli::init_db::Db"],[522,"vit_servicing_station_cli::task"],[526,"alloc::string"],[527,"vit_servicing_station_lib::db"],[528,"core::result"],[529,"clap_builder::builder::command"],[530,"core::fmt"],[531,"core::fmt"],[532,"diesel::result"],[533,"std::io::error"],[534,"clap_builder::parser::matches::arg_matches"],[535,"clap_builder"],[536,"alloc::vec"],[537,"core::option"],[538,"core::error"],[539,"core::any"],[540,"serde::de"],[541,"serde_json::error"],[542,"clap_builder::util::id"],[543,"std::path"],[544,"std::path"],[545,"serde::de"],[546,"vit_servicing_station_lib::db::models::proposals"],[547,"vit_servicing_station_lib::db::models::proposals"],[548,"vit_servicing_station_lib::db::models::funds"],[549,"vit_servicing_station_lib::db::models::challenges"],[550,"vit_servicing_station_lib::db::models::community_advisors_reviews"],[551,"tempfile::file"]],"d":["","","","","","","","Add provided tokens to database. If –tokens is not …","","","","","","","Generate API tokens, URL safe base64 encoded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","URL of the vit-servicing-station database to interact with","Number of tokens to generate","Size of the token","List of tokens in URL safe base64. If –tokens is not …","","","API token related operations","","","","CSV data loaders","","DB related operations","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Loads data into db","","","","","","","","","","","","","","","Path to the csv containing challenges information","","","","","URL of the vit-servicing-station database to interact with","","","","","","","","","","","","","","","","","","","","","","","","","","","","","override fund id. This setting is extremely useful in …","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Path to the csv containing funds information At the …","Path to the csv containing goals information","","Path to the csv containing goals information","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Path to the csv containing proposals information","Path to the csv containing advisor reviews information","","Additional import settings","","","","","","","","","","","","","","","","","","","Path to the csv containing voteplans information","Path to the folder containing csv with votes information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a DB with the proper migrations, DB file is …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","URL of the vit-servicing-station database to interact with","","","",""],"i":[0,0,0,0,0,0,0,9,0,5,5,5,5,0,9,5,9,9,9,9,5,9,5,9,9,9,5,9,5,9,5,9,9,9,9,9,9,5,5,9,5,5,5,5,5,9,9,9,9,9,9,9,9,5,9,5,9,5,5,5,9,5,9,5,9,9,9,5,9,58,59,59,58,60,60,24,25,0,25,24,25,24,0,24,24,25,24,25,24,24,24,25,24,25,24,25,24,24,25,25,25,25,25,25,24,24,24,24,25,24,25,24,25,25,25,24,25,24,25,24,24,24,25,24,0,0,0,0,0,27,0,0,27,27,32,0,27,31,31,32,32,27,31,32,30,27,31,32,30,31,31,32,31,32,31,30,27,31,32,30,27,31,32,30,30,27,31,32,30,31,32,31,31,31,32,32,32,31,32,27,27,31,32,30,27,27,27,27,31,32,30,31,32,31,32,31,31,31,31,31,31,32,27,31,32,30,27,31,32,30,31,31,31,31,30,31,27,27,27,31,32,30,27,31,32,30,27,31,32,30,31,32,31,32,31,31,27,31,32,30,0,0,0,0,0,0,42,47,47,47,41,42,43,44,45,47,41,42,43,44,45,47,45,45,45,43,45,45,45,43,45,43,45,45,41,43,45,43,45,43,45,45,44,44,41,41,42,43,44,45,41,42,43,44,45,41,42,0,0,41,42,43,44,45,47,41,42,43,44,45,47,44,41,42,43,44,45,47,41,42,43,44,45,47,41,42,43,44,45,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45,47,45,47,47,47,42,41,42,43,44,45,41,42,43,44,45,47,41,41,43,44,45,41,41,41,47,41,44,41,43,44,47,47,47,41,42,43,44,45,47,42,44,45,41,42,43,44,45,47,44,45,41,41,47,42,45,45,45,45,45,47,45,45,45,45,45,42,45,45,45,45,45,45,45,44,47,42,41,41,44,42,41,41,47,42,44,41,42,43,44,45,43,41,42,43,44,45,47,41,41,42,42,43,43,44,44,45,47,47,41,42,43,44,45,47,42,41,42,41,42,43,44,45,47,0,0,0,26,26,0,57,57,57,26,57,26,57,57,57,26,57,26,57,26,57,57,57,57,57,57,26,26,57,26,26,26,57,57,57,57,26,57,57,26,57,26,26,26,57,26,57,26,57,57,57,26,57,61,62,0,62,62],"f":[0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,[[[3,[2]],4],[[6,[1,5]]]],[4,[[6,[1,5]]]],[7,7],[7,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,1],[8,1],[[9,9],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[9,[[6,[1,5]]]],[[5,11],12],[[5,11],12],[[9,11],12],[13,5],[14,5],[-1,-1,[]],[15,5],[16,5],[-1,-1,[]],[17,[[6,[9,18]]]],[17,[[6,[9,18]]]],[[8,8],[[19,[2]]]],[[[20,[[19,[2]]]],21],[[6,[1,5]]]],[[[20,[[19,[2]]]],21],[[6,[1,5]]]],[[8,8],1],[21,10],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[20,[22]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[9,17],[[6,[1,18]]]],[[9,17],[[6,[1,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[7,7],[7,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,1],[8,1],[24,[[6,[25]]]],[[25,11],12],[[25,11],12],[5,25],[-1,-1,[]],[26,25],[27,25],[-1,-1,[]],[17,[[6,[24,18]]]],[17,[[6,[24,18]]]],[21,10],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[25,[[20,[22]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[24,17],[[6,[1,18]]]],[[24,17],[[6,[1,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[6,[28]]],29],0,0,0,0,0,0,0,0,0,[7,7],[7,7],[7,7],[7,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],7],[[],7],[[],7],[[],7],0,[[],30],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[6,[30]]],29],[8,1],[8,1],[8,1],[8,1],[[31,31],10],[[32,32],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[31,[[6,[1,27]]]],[32,[[6,[1,27]]]],[[27,11],12],[[27,11],12],[[31,11],12],[[32,11],12],0,[16,27],[-1,-1,[]],[33,27],[15,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[6,[31,18]]]],[17,[[6,[32,18]]]],[17,[[6,[31,18]]]],[17,[[6,[32,18]]]],0,0,[[],[[20,[34]]]],0,[31,[[6,[1,27]]]],[[21,35],[[6,[1,27]]]],[21,10],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[37,[[19,[36]]]]],[[38,[35]]]],[35,[[37,[[19,[-1]]]]],39],0,0,[[30,-1],6,40],0,[27,[[20,[22]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[31,17],[[6,[1,18]]]],[[32,17],[[6,[1,18]]]],[[31,17],[[6,[1,18]]]],[[32,17],[[6,[1,18]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[41,41],[42,42],[43,43],[44,44],[45,45],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],41],[[],42],[[],46],[[],46],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],0,[-1,[[6,[41]]],29],[-1,[[6,[42]]],29],[-1,[[6,[43]]],29],[-1,[[6,[44]]],29],[-1,[[6,[45]]],29],[-1,[[6,[47]]],29],[8,1],[8,1],[8,1],[8,1],[8,1],[8,1],[[41,41],10],[[42,42],10],[[43,43],10],[[44,44],10],[[45,45],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,0,0,0,0,0,[[41,11],12],[[42,11],12],[[43,11],12],[[44,11],12],[[45,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44],[[45,48],[[6,[[1,[49,50]],16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[41,[[6,[51]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[42,[[6,[52]]]],[-1,[[6,[-2]]],[],[]],[43,[[6,[53]]]],[-1,[[6,[-2]]],[],[]],[44,[[6,[54]]]],[-1,[[6,[-2]]],[],[]],[47,[[6,[55]]]],[-1,[[6,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,[[37,[56]]]],[[56,21],[[37,[1]]]],0,0,0,0,0,[7,7],[7,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,1],[8,1],[[57,57],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[57,[[6,[26]]]],[[26,11],12],[[26,11],12],[[57,11],12],[14,26],[-1,-1,[]],[13,26],[-1,-1,[]],[17,[[6,[57,18]]]],[17,[[6,[57,18]]]],[21,10],[[],8],[[],8],[21,[[6,[1,26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[26,[[20,[22]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[57,17],[[6,[1,18]]]],[[57,17],[[6,[1,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,6,[]]],"c":[],"p":[[15,"tuple"],[3,"String",526],[15,"slice"],[6,"DbConnection",527],[4,"Error",7],[4,"Result",528],[3,"Command",529],[15,"usize"],[4,"ApiTokenCmd",7],[15,"bool"],[3,"Formatter",530],[6,"Result",530],[3,"Error",527],[3,"Error",531],[4,"Error",532],[3,"Error",533],[3,"ArgMatches",534],[6,"Error",535],[3,"Vec",536],[4,"Option",537],[15,"str"],[8,"Error",538],[3,"TypeId",539],[4,"CliApp",75],[4,"Error",75],[4,"Error",470],[4,"Error",128],[15,"i64"],[8,"Deserializer",540],[3,"ImportSettings",128],[3,"LoadCmd",128],[4,"CsvDataCmd",128],[3,"Error",541],[3,"Id",542],[3,"Path",543],[3,"PathBuf",543],[6,"Result",533],[8,"AsRef",544],[8,"DeserializeOwned",540],[8,"Serializer",545],[3,"Fund",240],[3,"FundStageDates",240],[3,"Voteplan",240],[3,"Challenge",240],[3,"Proposal",240],[15,"i32"],[3,"AdvisorReview",240],[4,"ChallengeType",546],[3,"Proposal",546],[4,"ProposalChallengeInfo",546],[3,"Fund",547],[3,"FundStageDates",547],[3,"Voteplan",548],[3,"Challenge",549],[3,"AdvisorReview",550],[3,"NamedTempFile",551],[4,"Db",470],[13,"Add",69],[13,"Generate",69],[13,"Base64Decode",73],[13,"Init",521],[8,"ExecTask",522]]},\
"vit_servicing_station_cli_f10":{"doc":"","t":"AAAAAFANENNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLAAEENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMDDDMMMLLLLLLMMMMMMMMMMMMMMMLLLLFFMLLLLLLLLLLLMMMMLLLLLMMMMMMMMMLLLLLMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLFFFENNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLMQIQK","n":["api_token","app","csv","db_utils","init_db","main","task","Add","ApiTokenCmd","Base64Decode","Db","DbConnection","DbPool","Error","Generate","Io","add_tokens","add_tokens_from_stream","borrow","borrow","borrow_mut","borrow_mut","clap","eq","exec","fmt","fmt","fmt","from","from","from","from","from","from","from_clap","generate","handle_api_token_add","handle_api_token_add_whith_db_backup","handle_generate","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","db_url","n","size","tokens","source","token","ApiToken","ApiTokenCmd","CliApp","CsvData","CsvData","Db","Db","Error","borrow","borrow","borrow_mut","borrow_mut","clap","exec","fmt","fmt","from","from","from","from","from","from_clap","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","loaders","models","CsvDataCmd","Error","InvalidFundData","IoError","Load","borrow","borrow","borrow_mut","borrow_mut","clap","eq","exec","fmt","fmt","fmt","from","from","from","from_clap","handle_load","handle_load_with_db_backup","into","into","load_from_csv","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","challenges","db_url","funds","goals","proposals","reviews","voteplans","AdvisorReview","Challenge","Proposal","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","category_description","category_id","category_name","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","clone","clone","clone_into","clone_into","default_challenge_id","default_fund_id","description","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","excellent","feasibility_note","feasibility_rating_given","filtered_out","fmt","fmt","from","from","from","fund_id","fund_id","good","highlights","id","id","impact_alignment_note","impact_alignment_rating_given","internal_id","into","into","into","into_db_challenge_values","into_db_proposal_and_challenge_info","proposal_brief","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","rewards_total","title","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","backup_db_file","db_file_exists","restore_db_file","Db","DbConnectionError","DbPoolError","Error","Init","borrow","borrow","borrow_mut","borrow_mut","clap","eq","exec","fmt","fmt","fmt","from","from","from","from","from_clap","init_with_migrations","into","into","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","db_url","Error","ExecTask","ResultValue","exec"],"q":[[0,"vit_servicing_station_cli_f10"],[7,"vit_servicing_station_cli_f10::api_token"],[51,"vit_servicing_station_cli_f10::api_token::ApiTokenCmd"],[55,"vit_servicing_station_cli_f10::api_token::Error"],[57,"vit_servicing_station_cli_f10::app"],[91,"vit_servicing_station_cli_f10::csv"],[93,"vit_servicing_station_cli_f10::csv::loaders"],[127,"vit_servicing_station_cli_f10::csv::loaders::CsvDataCmd"],[134,"vit_servicing_station_cli_f10::csv::models"],[238,"vit_servicing_station_cli_f10::db_utils"],[241,"vit_servicing_station_cli_f10::init_db"],[274,"vit_servicing_station_cli_f10::init_db::Db"],[275,"vit_servicing_station_cli_f10::task"],[279,"alloc::string"],[280,"vit_servicing_station_lib_f10::db"],[281,"core::result"],[282,"clap::app"],[283,"core::fmt"],[284,"core::fmt"],[285,"diesel::result"],[286,"vit_servicing_station_lib_f10::db"],[287,"clap::args::arg_matches"],[288,"alloc::vec"],[289,"core::option"],[290,"core::error"],[291,"core::any"],[292,"std::path"],[293,"std::io::error"],[294,"serde::de"],[295,"vit_servicing_station_lib_f10::db::models::proposals"],[296,"tempfile::file"]],"d":["","","","","","","","Add provided tokens to database. If –tokens is not …","","","","","","","Generate API tokens, URL safe base64 encoded.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","URL of the vit-servicing-station database to interact with","Number of tokens to generate","Size of the token","List of tokens in URL safe base64. If –tokens is not …","","","API token related operations","","","","CSV data loaders","","DB related operations","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Load Funds, Voteplans and Proposals information into a …","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Path to the csv containing challenges information","URL of the vit-servicing-station database to interact with","Path to the csv containing funds information At the …","Path to the csv containing goals information","Path to the csv containing proposals information","Path to the csv containing advisor reviews information","Path to the csv containing voteplans information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a DB with the proper migrations, DB file is …","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","URL of the vit-servicing-station database to interact with","","","",""],"i":[0,0,0,0,0,0,0,8,0,5,5,5,5,0,8,5,8,8,5,8,5,8,8,8,8,5,5,8,5,5,5,5,5,8,8,8,8,8,8,5,8,5,5,5,8,5,8,5,8,5,8,42,43,43,42,44,44,23,24,0,24,23,24,23,0,24,23,24,23,23,23,24,24,24,24,24,24,23,23,24,23,24,24,24,23,24,23,24,23,24,23,0,0,0,0,25,25,27,25,27,25,27,27,27,27,25,25,27,25,25,27,27,27,27,25,27,27,25,25,25,27,25,27,25,27,25,27,45,45,45,45,45,45,45,0,0,0,35,35,35,31,32,35,31,32,35,32,32,32,32,32,32,32,32,32,32,32,32,32,31,31,31,32,31,32,0,0,31,31,32,35,31,32,31,31,31,32,32,32,35,35,35,35,31,32,31,32,35,31,32,35,31,31,35,35,35,32,31,32,35,31,32,32,32,32,32,32,35,32,32,32,32,32,32,32,32,32,32,32,32,31,31,31,31,32,31,32,35,31,32,35,35,31,32,35,31,32,35,0,0,0,0,26,26,0,41,26,41,26,41,41,41,41,26,26,41,26,26,26,41,41,41,26,41,26,26,26,41,26,41,26,41,26,41,46,47,0,47,47],"f":[0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,[[[3,[2]],4],[[6,[1,5]]]],[4,[[6,[1,5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[8,8],9],[8,[[6,[1,5]]]],[[5,10],11],[[5,10],11],[[8,10],11],[12,5],[13,5],[14,5],[15,5],[-1,-1,[]],[-1,-1,[]],[16,8],[[17,17],[[18,[2]]]],[[[19,[[18,[2]]]],20],[[6,[1,5]]]],[[[19,[[18,[2]]]],20],[[6,[1,5]]]],[[17,17],1],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[19,[21]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[23,[[6,[24]]]],[[24,10],11],[[24,10],11],[25,24],[26,24],[5,24],[-1,-1,[]],[-1,-1,[]],[16,23],[-1,-2,[],[]],[-1,-2,[],[]],[24,[[19,[21]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[27,27],9],[27,[[6,[1,25]]]],[[25,10],11],[[25,10],11],[[27,10],11],[-1,-1,[]],[15,25],[-1,-1,[]],[16,27],[[20,28,28,28,28,28,28],[[6,[1,25]]]],[[20,28,28,28,28,28,28],[[6,[1,25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[28,[[29,[[18,[-1]]]]],30],[25,[[19,[21]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,31],[32,32],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],33],[[],33],0,[-1,[[6,[31]]],34],[-1,[[6,[32]]],34],[-1,[[6,[35]]],34],[[31,31],9],[[32,32],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,0,0,0,[[31,10],11],[[32,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31],[[32,36],[[6,[[1,[37,38]],15]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[35,[[6,[39]]]],[-1,[[6,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[29,[40]]]],[20,[[29,[1]]]],[[40,20],[[29,[1]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[41,41],9],[41,[[6,[26]]]],[[26,10],11],[[26,10],11],[[41,10],11],[14,26],[-1,-1,[]],[12,26],[-1,-1,[]],[16,41],[20,[[6,[1,26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[26,[[19,[21]]]],[-1,2,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,6,[]]],"c":[],"p":[[15,"tuple"],[3,"String",279],[15,"slice"],[6,"DbConnection",280],[4,"Error",7],[4,"Result",281],[3,"App",282],[4,"ApiTokenCmd",7],[15,"bool"],[3,"Formatter",283],[6,"Result",283],[3,"Error",284],[4,"Error",285],[6,"Error",280],[3,"Error",286],[3,"ArgMatches",287],[15,"usize"],[3,"Vec",288],[4,"Option",289],[15,"str"],[8,"Error",290],[3,"TypeId",291],[4,"CliApp",57],[4,"Error",57],[4,"Error",93],[4,"Error",241],[4,"CsvDataCmd",93],[3,"Path",292],[6,"Result",286],[8,"DeserializeOwned",293],[3,"Challenge",134],[3,"Proposal",134],[15,"i32"],[8,"Deserializer",293],[3,"AdvisorReview",134],[4,"ChallengeType",294],[3,"Proposal",294],[4,"ProposalChallengeInfo",294],[3,"AdvisorReview",295],[3,"NamedTempFile",296],[4,"Db",241],[13,"Add",51],[13,"Generate",51],[13,"Base64Decode",55],[13,"Load",127],[13,"Init",274],[8,"ExecTask",275]]},\
"vit_servicing_station_lib":{"doc":"","t":"AAAAGGDLLMMLLLLLLLLFAMAALLLLALAAAAAAAAAAADLLLLLMLLLMLLLLLMLLLLLDDLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLMMMLLMLLMMLLMMLLLLLLLLLLLDNNNNEFFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMLLLLMMLLLLLLLLLLLLLDDDMLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMMMMMMMMMLLLMLLLMMMMMMMMMMLLLMMMMLLLLLLLLLLLLMMMMLLLDDFFLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLDFLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLDENNDGDEGDDDDDNNMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDGLLLLLLLLLLLLLLLLMMMMLLLLLLLDGLLLLLLLLLLLLLLLLMLLLLLLLDDDFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMLLLLLLLLLLLLMLLLLLLMMMMMLLLDFLLLMMLLLLLLLLMLLLMMLMLLLLLMLDGLMLLLLLLLLLLLLLLLLLLLLLLLLLDFLLLMMMMMMLLLLLLLLLLLLMMLLLLMLLLLLAAAAAAAAAAAFFFFFFFFFFFFFDDLLLLLLLLLLLLLLLLMMMLLFLLFMFFFFLLMLLLLLLLLFFFFFFFFFFFGDGFLLLFFLLLLLLLLLLFFFFFFLLLLLLRFFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLDLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLDLLLLLLLLLLLLLLLLDDDLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLOOOOOOCCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLDLLLLLDLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLOOCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLDLDLLLLLLLLLLLLLLLLLLOOCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOCCCCCCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLOOOOCCCCCGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLOOOOOOOCCCCCCCCAGGFMLRLLLLLALLLLMLALLLMLMLLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAACFFFFENNNNNNNLLLLLLLLLLLLLDDNNNNEDDNNMMMMMAMMAFMMFMMMMMMRDRRDDRRNNNNDEDRRDNRNMMLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLFMMMMMLFMLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFAAAFFFFFFFFFFFFFRAAAAFAARDDFLFLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGMMLLLLMLLLLLLLFMMLLLLMLAAFAAAAAAAACAAAAFFFFDLLLLLLLLLLLLLLDMFAAMAAFFFFFFFDLLMLLLLLLLMLLLLLCCAAAFFFFFFFFFFCAAFFFFCAAFFDGMAMMAFFAAMFFFFFFDGLLMLLLLLLMLLMLLLLMLFFAAAFFFFNNNENENNNENNNNDDEENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMFFCFAAAAFFFDLLLLLLLLLLMLLLLDGDDGDDLLLLLLLLLLLLMMLLLLLLLLLMMMLLLLLLLLLFLLLLLLFFALLLLLLMMMMALLLMMLLLLLLLLLLLLMMMMMMMMMMLLLDDLLLLLLLLLLLLLLMMLLLLLLFFLLLLMMLLMMLLLLLLLLMMMLLFCCAAAAFFDLLMLLLLLLLLLLLLMLFNNENNNNLLLLLLLLLFLLLLLLLLLLLLLDMMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLL","n":["db","server","utils","v0","DbConnection","DbConnectionPool","Error","borrow","borrow_mut","checkout","conn","deref","deref_mut","drop","fmt","fmt","from","init","into","load_db_connection_pool","models","pool","queries","schema","to_string","try_from","try_into","type_id","views_schema","vzip","api_tokens","challenges","community_advisors_reviews","funds","goals","groups","proposals","snapshot","vote","vote_options","voteplans","ApiTokenData","borrow","borrow_mut","build","clone","clone_into","creation_time","deref","deref_mut","drop","expire_time","fmt","from","init","into","to_owned","token","try_from","try_into","type_id","values","vzip","Challenge","ChallengeHighlights","borrow","borrow","borrow_mut","borrow_mut","build","challenge_type","challenge_url","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","fund_id","highlights","id","init","init","internal_id","into","into","proposers_rewards","rewards_total","serialize","serialize","sponsor","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","AdvisorReview","Excellent","FilteredOut","Good","NA","ReviewRanking","_impl_from_sql_row_for_reviewranking","_impl_queryable_for_advisorreview","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","build","build","build_from_row","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","feasibility_note","feasibility_rating_given","fmt","fmt","from","from","from_sql","id","impact_alignment_note","impact_alignment_rating_given","init","init","into","into","proposal_id","ranking","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","Fund","FundStageDates","FundWithLegacyFields","assessment_qa_start","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","chain_vote_plans","chain_vote_plans","challenges","challenges","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalize_proposals_start","fmt","fmt","from","from","from","from","fund_end_time","fund_end_time","fund_goal","fund_goal","fund_name","fund_name","fund_start_time","fund_start_time","goals","groups","groups","id","id","init","init","init","insight_sharing_start","into","into","into","next_fund_start_time","next_fund_start_time","next_registration_snapshot_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","registration_snapshot_time","results_url","serialize","serialize","serialize","snapshot_start","stage_dates","survey_url","tallying_end","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","voting_end","voting_power_threshold","voting_power_threshold","voting_start","vzip","vzip","vzip","Goal","InsertGoal","_impl_insertable_for_insertgoal","_impl_queryable_for_goal","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","fund_id","fund_id","goal_name","goal_name","id","init","init","into","into","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","values","vzip","vzip","Group","_impl_queryable_for_group","borrow","borrow_mut","build","clone","clone_into","cmp","compare","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","fund_id","group_id","init","into","partial_cmp","serialize","to_owned","token_identifier","try_from","try_into","type_id","values","vzip","Category","ChallengeType","CommunityChoice","CommunityChoice","FullProposalInfo","FullProposalsInfoRow","Proposal","ProposalChallengeInfo","ProposalExtraFields","ProposalVotePlan","ProposalVotePlanCommon","Proposer","SerdeProposalChallengeInfo","SerdeToProposalChallengeInfoError","Simple","Simple","_marker","alloc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","category_description","category_id","category_name","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_info","challenge_type","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","community","community_choice","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","fund_id","group_id","init","init","init","init","init","init","init","init","init","init","internal_id","into","into","into","into","into","into","into","into","into","into","length","proposal","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","root","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","simple","simple","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","voteplan","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChallengeInfo","ChallengeSqlValues","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","proposal_brief","proposal_goal","proposal_importance","proposal_metrics","serialize","to_owned","to_sql_values_with_proposal_id","try_from","try_into","type_id","vzip","ChallengeInfo","ChallengeSqlValues","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","proposal_solution","serialize","to_owned","to_sql_values_with_proposal_id","try_from","try_into","type_id","vzip","Contribution","Snapshot","Voter","_impl_insertable_for_contribution","_impl_insertable_for_snapshot","_impl_insertable_for_voter","_impl_queryable_for_contribution","_impl_queryable_for_snapshot","_impl_queryable_for_voter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","last_updated","reward_address","serialize","serialize","serialize","snapshot_tag","snapshot_tag","stake_public_key","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","values","values","values","values","values","values","voting_group","voting_group","voting_key","voting_key","voting_power","vzip","vzip","vzip","Vote","_impl_queryable_for_vote","borrow","borrow_mut","build","caster","choice","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fragment_id","from","init","into","proposal","raw_fragment","serialize","time","to_owned","try_from","try_into","type_id","values","voteplan_id","vzip","VoteOptions","VoteOptionsMap","as_csv_string","base","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_vec_string","init","into","parse_coma_separated_value","serialize","to_owned","to_vec_string","try_from","try_into","type_id","vzip","Voteplan","_impl_queryable_for_voteplan","borrow","borrow_mut","build","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","fund_id","id","init","into","serialize","to_owned","token_identifier","try_from","try_into","type_id","values","vzip","api_tokens","challenges","community_advisors_reviews","funds","goals","groups","proposals","search","snapshot","voteplans","votes","batch_insert_token_data","insert_token","insert_token_data","query_token","query_token_data_by_token","batch_insert_challenges","query_all_challenges","query_challenge_by_id","query_challenge_proposals_by_id","query_challenge_proposals_by_id_and_group_id","query_challenges_by_fund_id","batch_insert_advisor_reviews","query_reviews_by_fund_id","FundNextInfo","FundWithNext","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","fund","fund_name","id","init","init","insert_fund","into","into","join_fund","next","put_fund","query_all_funds","query_current_fund","query_fund_by_id","serialize","serialize","stage_dates","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","batch_insert","batch_insert","batch_insert_community_choice_challenge_data","batch_insert_groups","batch_insert_proposals","batch_insert_proposals_voteplans","batch_insert_simple_challenge_data","insert_proposal","query_all_proposals","query_proposal_by_id","query_proposals_by_voteplan_id_and_indexes","ChallengesSelectST","RANDOM","SelectProposalsST","_impl_query_id_for_random","as_expression","borrow","borrow_mut","build_challenges_query","build_proposals_query","clone","clone_into","deref","deref_mut","drop","execute","fmt","from","init","into","map_limit","map_offset","search","search_count","search_count_db","search_db","to_owned","try_from","try_into","type_id","vzip","walk_ast","BATCH_PUT_CHUNK_SIZE","batch_put_contributions","batch_put_voters","put_snapshot","query_all_snapshots","query_contributions_by_snapshot_tag","query_contributions_by_stake_public_key_and_snapshot_tag","query_contributions_by_voting_key_and_voter_group_and_snapshot_tag","query_snapshot_by_tag","query_total_voting_power_by_voting_group_and_snapshot_tag","query_voters_by_snapshot_tag","query_voters_by_voting_key_and_snapshot_tag","batch_insert_voteplans","insert_voteplan","query_voteplan_by_id","batch_insert_votes_data","query_votes_by_caster_and_voteplan_id","api_tokens","challenges","community_advisors_reviews","contributions","funds","goals","groups","proposal_community_choice_challenge","proposal_simple_challenge","proposals","proposals_voteplans","snapshots","voteplans","voters","votes","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_creation_time","_impl_query_id_for_expire_time","_impl_query_id_for_token","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","creation_time","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","execute","execute","execute","expire_time","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","api_tokens","creation_time","expire_time","token","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_challenge_type","_impl_query_id_for_challenge_url","_impl_query_id_for_description","_impl_query_id_for_fund_id","_impl_query_id_for_highlights","_impl_query_id_for_id","_impl_query_id_for_internal_id","_impl_query_id_for_proposers_rewards","_impl_query_id_for_rewards_total","_impl_query_id_for_title","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_type","challenge_url","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fund_id","highlights","id","init","init","init","init","init","init","init","init","init","init","init","internal_id","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","proposers_rewards","rewards_total","star","sub","sub","sub","sub","sub","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","challenge_type","challenge_url","challenges","description","fund_id","highlights","id","internal_id","proposers_rewards","rewards_total","title","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_assessor","_impl_query_id_for_auditability_note","_impl_query_id_for_auditability_rating_given","_impl_query_id_for_feasibility_note","_impl_query_id_for_feasibility_rating_given","_impl_query_id_for_id","_impl_query_id_for_impact_alignment_note","_impl_query_id_for_impact_alignment_rating_given","_impl_query_id_for_proposal_id","_impl_query_id_for_ranking","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","proposal_id","ranking","star","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","assessor","auditability_note","auditability_rating_given","community_advisors_reviews","feasibility_note","feasibility_rating_given","id","impact_alignment_note","impact_alignment_rating_given","proposal_id","ranking","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_reward_address","_impl_query_id_for_snapshot_tag","_impl_query_id_for_stake_public_key","_impl_query_id_for_value","_impl_query_id_for_voting_group","_impl_query_id_for_voting_key","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","mul","reward_address","snapshot_tag","stake_public_key","star","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","voting_group","voting_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","contributions","reward_address","snapshot_tag","stake_public_key","value","voting_group","voting_key","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_assessment_qa_start","_impl_query_id_for_finalize_proposals_start","_impl_query_id_for_fund_end_time","_impl_query_id_for_fund_goal","_impl_query_id_for_fund_name","_impl_query_id_for_fund_start_time","_impl_query_id_for_id","_impl_query_id_for_insight_sharing_start","_impl_query_id_for_next_fund_start_time","_impl_query_id_for_next_registration_snapshot_time","_impl_query_id_for_proposal_assessment_start","_impl_query_id_for_proposal_submission_start","_impl_query_id_for_refine_proposals_start","_impl_query_id_for_registration_snapshot_time","_impl_query_id_for_results_url","_impl_query_id_for_snapshot_start","_impl_query_id_for_survey_url","_impl_query_id_for_tallying_end","_impl_query_id_for_voting_end","_impl_query_id_for_voting_power_threshold","_impl_query_id_for_voting_start","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","assessment_qa_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","finalize_proposals_start","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fund_end_time","fund_goal","fund_name","fund_start_time","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insight_sharing_start","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","survey_url","tallying_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","assessment_qa_start","finalize_proposals_start","fund_end_time","fund_goal","fund_name","fund_start_time","funds","id","insight_sharing_start","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","survey_url","tallying_end","voting_end","voting_power_threshold","voting_start","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_fund_id","_impl_query_id_for_goal_name","_impl_query_id_for_id","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","goal_name","id","init","init","init","init","into","into","into","into","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","fund_id","goal_name","goals","id","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_fund_id","_impl_query_id_for_group_id","_impl_query_id_for_token_identifier","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","group_id","init","init","init","init","into","into","into","into","mul","star","sub","to_owned","to_owned","to_owned","to_owned","token_identifier","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","fund_id","group_id","groups","token_identifier","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_proposal_brief","_impl_query_id_for_proposal_goal","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_importance","_impl_query_id_for_proposal_metrics","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","proposal_brief","proposal_goal","proposal_id","proposal_importance","proposal_metrics","star","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","proposal_brief","proposal_community_choice_challenge","proposal_goal","proposal_id","proposal_importance","proposal_metrics","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_solution","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execute","execute","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","proposal_id","proposal_solution","star","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","proposal_id","proposal_simple_challenge","proposal_solution","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_proposal_id","_impl_query_id_for_chain_vote_options","_impl_query_id_for_challenge_id","_impl_query_id_for_extra","_impl_query_id_for_id","_impl_query_id_for_proposal_category","_impl_query_id_for_proposal_files_url","_impl_query_id_for_proposal_funds","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_impact_score","_impl_query_id_for_proposal_public_key","_impl_query_id_for_proposal_summary","_impl_query_id_for_proposal_title","_impl_query_id_for_proposal_url","_impl_query_id_for_proposer_contact","_impl_query_id_for_proposer_name","_impl_query_id_for_proposer_relevant_experience","_impl_query_id_for_proposer_url","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_id","chain_vote_options","challenge_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_proposal_id","chain_vote_options","challenge_id","extra","id","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposals","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_proposal_index","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_id","_impl_query_id_for_proposal_id","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","chain_voteplan_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","mul","mul","proposal_id","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","chain_proposal_index","chain_voteplan_id","id","proposal_id","proposals_voteplans","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_last_updated","_impl_query_id_for_tag","add","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","execute","execute","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","last_updated","mul","star","sub","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","last_updated","snapshots","tag","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_committee_end_time","_impl_query_id_for_chain_vote_encryption_key","_impl_query_id_for_chain_vote_end_time","_impl_query_id_for_chain_vote_start_time","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_chain_voteplan_payload","_impl_query_id_for_fund_id","_impl_query_id_for_id","_impl_query_id_for_token_identifier","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","fund_id","id","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_identifier","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","fund_id","id","token_identifier","voteplans","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_snapshot_tag","_impl_query_id_for_voting_group","_impl_query_id_for_voting_key","_impl_query_id_for_voting_power","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","mul","snapshot_tag","star","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","voting_group","voting_key","voting_power","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","snapshot_tag","voters","voting_group","voting_key","voting_power","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_caster","_impl_query_id_for_choice","_impl_query_id_for_fragment_id","_impl_query_id_for_proposal","_impl_query_id_for_raw_fragment","_impl_query_id_for_time","_impl_query_id_for_voteplan_id","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caster","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_id","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","mul","mul","mul","proposal","raw_fragment","star","sub","sub","sub","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voteplan_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","caster","choice","fragment_id","proposal","raw_fragment","time","voteplan_id","votes","full_proposals_info","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","distinct","drop","dsl","fmt","for_update","from","from","from_clause","group_by","init","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_committee_end_time","_impl_query_id_for_chain_proposal_id","_impl_query_id_for_chain_proposal_index","_impl_query_id_for_chain_vote_encryption_key","_impl_query_id_for_chain_vote_end_time","_impl_query_id_for_chain_vote_options","_impl_query_id_for_chain_vote_start_time","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_chain_voteplan_payload","_impl_query_id_for_challenge_id","_impl_query_id_for_challenge_type","_impl_query_id_for_extra","_impl_query_id_for_fund_id","_impl_query_id_for_group_id","_impl_query_id_for_id","_impl_query_id_for_proposal_brief","_impl_query_id_for_proposal_category","_impl_query_id_for_proposal_files_url","_impl_query_id_for_proposal_funds","_impl_query_id_for_proposal_goal","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_impact_score","_impl_query_id_for_proposal_importance","_impl_query_id_for_proposal_metrics","_impl_query_id_for_proposal_public_key","_impl_query_id_for_proposal_solution","_impl_query_id_for_proposal_summary","_impl_query_id_for_proposal_title","_impl_query_id_for_proposal_url","_impl_query_id_for_proposer_contact","_impl_query_id_for_proposer_name","_impl_query_id_for_proposer_relevant_experience","_impl_query_id_for_proposer_url","_impl_query_id_for_reviews_count","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fund_id","group_id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","proposal_brief","proposal_category","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","extra","full_proposals_info","fund_id","group_id","id","proposal_brief","proposal_category","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","bootstrapping","exit_codes","settings","signals","start_server","setup_cors","setup_tls","start_server","start_server_with_config","ApplicationExitCode","DbConnectionError","EmptyBlock0FolderError","LoadSettingsError","ServiceVersionError","SnapshotWatcherError","Success","WriteSettingsError","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","report","try_from","try_into","type_id","vzip","Cors","CorsOrigin","Debug","Disabled","Error","Info","LogLevel","ServiceSettings","Tls","Trace","Warn","address","allowed_origins","block0_path","block0_paths","cert_file","config","cors","db_url","default","dump_settings_to_file","enable_api_tokens","in_settings_file","load_settings_from_file","log","max_age_secs","out_settings_file","priv_key_file","service_version","tls","ADDRESS_DEFAULT","AllowedOrigins","BLOCK0_PATH_DEFAULT","CORS_ALLOWED_ORIGINS","Cors","CorsOrigin","DATABASE_URL","DB_URL_DEFAULT","Debug","Disabled","Error","Info","Log","LogLevel","ServiceSettings","TLS_CERT_FILE","TLS_PRIVATE_KEY_FILE","Tls","Trace","VIT_SERVICE_VERSION_ENV_VARIABLE","Warn","address","allowed_origins","as_ref","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","block0_path","block0_paths","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","cors","db_url","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","dump_settings_to_file","enable_api_tokens","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","from_str","from_str","group_id","group_id","group_id","group_id","in_settings_file","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_loaded","load_settings_from_file","log","log_level","log_output_path","max_age_secs","out_settings_file","override_from","parse_allowed_origins","priv_key_file","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_version","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch_signal_for_shutdown","collections","datetime","serde","dedup_by_key_keep_last","unix_timestamp_to_datetime","deserialize_fraction_from_string","deserialize_i64_from_str","deserialize_string_as_bytes","deserialize_truthy_falsy","deserialize_unix_timestamp_from_rfc3339","deserialize_vote_options_from_string","serialize_bin_as_str","serialize_fraction_to_string","serialize_i64_as_str","serialize_unix_timestamp_as_rfc3339","serialize_vote_options_to_string","V0_REQUEST_TRACE_NAME","api_token","context","endpoints","errors","filter","genesis_block","result","API_TOKEN_HEADER","ApiToken","ApiTokenManager","api_token_filter","as_ref","authorize_token","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","connection_pool","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","fmt","from","from","from","init","init","into","into","is_token_valid","new","new","revoke_token","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","Context","SharedContext","alloc","block0","borrow","borrow_mut","clone","clone_into","db_connection_pool","deref","deref_mut","drop","from","init","into","new","new_shared_context","phantom","ptr","to_owned","try_from","try_into","type_id","versioning","vzip","advisor_reviews","challenges","filter","funds","genesis","health","proposals","search","service_version","snapshot","votes","filter","handlers","logic","routes","schemas","get_reviews_with_proposal_id","get_advisor_reviews_with_proposal_id","group_reviews_by_assessor","filter","GroupedReviews","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","serialize","try_from","try_into","type_id","vzip","ChallengeWithProposals","challenge","filter","handlers","logic","proposals","routes","schemas","get_challenge_by_id","get_challenge_by_id_and_group_id","get_challenges","get_all_challenges","get_challenge_by_id","get_challenge_by_id_and_group_id","filter","ChallengeWithProposals","borrow","borrow_mut","challenge","deref","deref_mut","deserialize","drop","from","init","into","proposals","serialize","try_from","try_into","type_id","vzip","admin_filter","filter","handlers","logic","routes","get_all_funds","get_fund","get_fund_by_id","put_fund","get_all_funds","get_current_fund","get_fund_by_id","put_fund","admin_filter","filter","filter","handlers","routes","get_genesis","get_genesis_for_fund","get_genesis_response","filter","filter","handlers","routes","check_health","filter","ProposalVoteplanIdAndIndexes","ProposalsByVoteplanIdAndIndex","buf","handlers","indexes","len","logic","proposal_filter","proposals_filter","requests","routes","vote_plan_id","get_all_proposals","get_proposal","get_proposals_by_voteplan_id_and_index","get_all_proposals","get_proposal","get_proposals_by_voteplan_id_and_index","ProposalVoteplanIdAndIndexes","ProposalsByVoteplanIdAndIndex","borrow","borrow_mut","buf","deref","deref_mut","deserialize","drop","fmt","from","indexes","init","into","len","serialize","try_from","try_into","type_id","vote_plan_id","vzip","proposal_filter","proposals_filter","logic","requests","routes","search_count_filter","search_filter","search","search_count","Author","Challenge","Challenges","Column","Column","Constraint","Desc","Funds","ImpactScore","OrderBy","Proposal","Proposals","Random","Range","SearchCountQuery","SearchQuery","SearchResponse","Table","Text","Title","Type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_empty","limit","offset","order_by","query","serialize","serialize","serialize","serialize","serialize","serialize","serialize","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","lower","search","upper","column","descending","search_count_filter","search_filter","ServiceVersion","filter","handlers","logic","routes","schemas","service_version","service_version","filter","ServiceVersion","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","serialize","service_version","try_from","try_into","type_id","vzip","DelegatorInfo","Group","RawSnapshotInput","SnapshotInfoInput","Tag","VoterInfo","VotersInfo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","delegations_count","delegations_power","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","direct_voters_group","dreps","dreps","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","filter","fmt","fmt","fmt","from","from","from","get_delegator_info","get_voters_info","handlers","init","init","init","into","into","into","last_updated","last_updated","min_stake_threshold","representatives_group","routes","serialize","serialize","serialize","snapshot","snapshot","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_timestamp","update_timestamp","vec","vec","voter_info","voting_group","voting_groups","voting_power","voting_power_cap","voting_power_saturation","vzip","vzip","vzip","RawSnapshotInput","SnapshotInfoInput","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","direct_voters_group","dreps","drop","drop","fmt","fmt","from","from","get_delegator_info","get_voters_info","init","init","into","into","min_stake_threshold","representatives_group","serialize","serialize","snapshot","snapshot","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_timestamp","update_timestamp","voting_power_cap","vzip","vzip","filter","VoteCasterAndVoteplanId","filter","handlers","logic","requests","routes","get_vote_by_caster_and_voteplan_id","get_vote_by_caster_and_voteplan_id","VoteCasterAndVoteplanId","borrow","borrow_mut","caster","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","try_from","try_into","type_id","vote_plan_id","vzip","filter","BadRequest","DatabaseError","HandleError","InternalError","InvalidHeader","NotFound","UnauthorizedToken","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","handle_rejection","init","into","into_response","source","to_json","to_message","to_response","to_status_code","to_string","try_from","try_into","type_id","vzip","GenesisBlock","block0","block0_path","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_str","from_str","init","into","is_fund_id","to_owned","try_from","try_into","type_id","vzip","HandlerResult","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_response","try_from","try_into","type_id","vzip"],"q":[[0,"vit_servicing_station_lib"],[4,"vit_servicing_station_lib::db"],[30,"vit_servicing_station_lib::db::models"],[41,"vit_servicing_station_lib::db::models::api_tokens"],[63,"vit_servicing_station_lib::db::models::challenges"],[122,"vit_servicing_station_lib::db::models::community_advisors_reviews"],[189,"vit_servicing_station_lib::db::models::funds"],[290,"vit_servicing_station_lib::db::models::goals"],[342,"vit_servicing_station_lib::db::models::groups"],[374,"vit_servicing_station_lib::db::models::proposals"],[649,"vit_servicing_station_lib::db::models::proposals::community_choice"],[678,"vit_servicing_station_lib::db::models::proposals::simple"],[704,"vit_servicing_station_lib::db::models::snapshot"],[800,"vit_servicing_station_lib::db::models::vote"],[830,"vit_servicing_station_lib::db::models::vote_options"],[859,"vit_servicing_station_lib::db::models::voteplans"],[894,"vit_servicing_station_lib::db::queries"],[905,"vit_servicing_station_lib::db::queries::api_tokens"],[910,"vit_servicing_station_lib::db::queries::challenges"],[916,"vit_servicing_station_lib::db::queries::community_advisors_reviews"],[918,"vit_servicing_station_lib::db::queries::funds"],[961,"vit_servicing_station_lib::db::queries::goals"],[962,"vit_servicing_station_lib::db::queries::groups"],[963,"vit_servicing_station_lib::db::queries::proposals"],[972,"vit_servicing_station_lib::db::queries::search"],[1003,"vit_servicing_station_lib::db::queries::snapshot"],[1015,"vit_servicing_station_lib::db::queries::voteplans"],[1018,"vit_servicing_station_lib::db::queries::votes"],[1020,"vit_servicing_station_lib::db::schema"],[1035,"vit_servicing_station_lib::db::schema::api_tokens"],[1082,"vit_servicing_station_lib::db::schema::api_tokens::columns"],[1175,"vit_servicing_station_lib::db::schema::api_tokens::dsl"],[1182,"vit_servicing_station_lib::db::schema::challenges"],[1229,"vit_servicing_station_lib::db::schema::challenges::columns"],[1488,"vit_servicing_station_lib::db::schema::challenges::dsl"],[1509,"vit_servicing_station_lib::db::schema::community_advisors_reviews"],[1556,"vit_servicing_station_lib::db::schema::community_advisors_reviews::columns"],[1819,"vit_servicing_station_lib::db::schema::community_advisors_reviews::dsl"],[1840,"vit_servicing_station_lib::db::schema::contributions"],[1887,"vit_servicing_station_lib::db::schema::contributions::columns"],[2042,"vit_servicing_station_lib::db::schema::contributions::dsl"],[2055,"vit_servicing_station_lib::db::schema::funds"],[2102,"vit_servicing_station_lib::db::schema::funds::columns"],[2651,"vit_servicing_station_lib::db::schema::funds::dsl"],[2694,"vit_servicing_station_lib::db::schema::goals"],[2741,"vit_servicing_station_lib::db::schema::goals::columns"],[2834,"vit_servicing_station_lib::db::schema::goals::dsl"],[2841,"vit_servicing_station_lib::db::schema::groups"],[2888,"vit_servicing_station_lib::db::schema::groups::columns"],[2977,"vit_servicing_station_lib::db::schema::groups::dsl"],[2984,"vit_servicing_station_lib::db::schema::proposal_community_choice_challenge"],[3031,"vit_servicing_station_lib::db::schema::proposal_community_choice_challenge::columns"],[3160,"vit_servicing_station_lib::db::schema::proposal_community_choice_challenge::dsl"],[3171,"vit_servicing_station_lib::db::schema::proposal_simple_challenge"],[3218,"vit_servicing_station_lib::db::schema::proposal_simple_challenge::columns"],[3281,"vit_servicing_station_lib::db::schema::proposal_simple_challenge::dsl"],[3286,"vit_servicing_station_lib::db::schema::proposals"],[3333,"vit_servicing_station_lib::db::schema::proposals::columns"],[3764,"vit_servicing_station_lib::db::schema::proposals::dsl"],[3801,"vit_servicing_station_lib::db::schema::proposals_voteplans"],[3848,"vit_servicing_station_lib::db::schema::proposals_voteplans::columns"],[3963,"vit_servicing_station_lib::db::schema::proposals_voteplans::dsl"],[3972,"vit_servicing_station_lib::db::schema::snapshots"],[4019,"vit_servicing_station_lib::db::schema::snapshots::columns"],[4086,"vit_servicing_station_lib::db::schema::snapshots::dsl"],[4091,"vit_servicing_station_lib::db::schema::voteplans"],[4138,"vit_servicing_station_lib::db::schema::voteplans::columns"],[4375,"vit_servicing_station_lib::db::schema::voteplans::dsl"],[4394,"vit_servicing_station_lib::db::schema::voters"],[4441,"vit_servicing_station_lib::db::schema::voters::columns"],[4552,"vit_servicing_station_lib::db::schema::voters::dsl"],[4561,"vit_servicing_station_lib::db::schema::votes"],[4608,"vit_servicing_station_lib::db::schema::votes::columns"],[4793,"vit_servicing_station_lib::db::schema::votes::dsl"],[4808,"vit_servicing_station_lib::db::views_schema"],[4809,"vit_servicing_station_lib::db::views_schema::full_proposals_info"],[4856,"vit_servicing_station_lib::db::views_schema::full_proposals_info::columns"],[5663,"vit_servicing_station_lib::db::views_schema::full_proposals_info::dsl"],[5732,"vit_servicing_station_lib::server"],[5737,"vit_servicing_station_lib::server::bootstrapping"],[5741,"vit_servicing_station_lib::server::exit_codes"],[5762,"vit_servicing_station_lib::server::settings"],[5792,"vit_servicing_station_lib::server::settings::config"],[6041,"vit_servicing_station_lib::server::signals"],[6042,"vit_servicing_station_lib::utils"],[6045,"vit_servicing_station_lib::utils::collections"],[6046,"vit_servicing_station_lib::utils::datetime"],[6047,"vit_servicing_station_lib::utils::serde"],[6058,"vit_servicing_station_lib::v0"],[6066,"vit_servicing_station_lib::v0::api_token"],[6115,"vit_servicing_station_lib::v0::context"],[6140,"vit_servicing_station_lib::v0::endpoints"],[6151,"vit_servicing_station_lib::v0::endpoints::advisor_reviews"],[6156,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::handlers"],[6157,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::logic"],[6159,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::routes"],[6160,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::schemas"],[6175,"vit_servicing_station_lib::v0::endpoints::challenges"],[6183,"vit_servicing_station_lib::v0::endpoints::challenges::handlers"],[6186,"vit_servicing_station_lib::v0::endpoints::challenges::logic"],[6189,"vit_servicing_station_lib::v0::endpoints::challenges::routes"],[6190,"vit_servicing_station_lib::v0::endpoints::challenges::schemas"],[6207,"vit_servicing_station_lib::v0::endpoints::funds"],[6212,"vit_servicing_station_lib::v0::endpoints::funds::handlers"],[6216,"vit_servicing_station_lib::v0::endpoints::funds::logic"],[6220,"vit_servicing_station_lib::v0::endpoints::funds::routes"],[6222,"vit_servicing_station_lib::v0::endpoints::genesis"],[6225,"vit_servicing_station_lib::v0::endpoints::genesis::handlers"],[6228,"vit_servicing_station_lib::v0::endpoints::genesis::routes"],[6229,"vit_servicing_station_lib::v0::endpoints::health"],[6232,"vit_servicing_station_lib::v0::endpoints::health::handlers"],[6233,"vit_servicing_station_lib::v0::endpoints::health::routes"],[6234,"vit_servicing_station_lib::v0::endpoints::proposals"],[6246,"vit_servicing_station_lib::v0::endpoints::proposals::handlers"],[6249,"vit_servicing_station_lib::v0::endpoints::proposals::logic"],[6252,"vit_servicing_station_lib::v0::endpoints::proposals::requests"],[6273,"vit_servicing_station_lib::v0::endpoints::proposals::routes"],[6275,"vit_servicing_station_lib::v0::endpoints::search"],[6280,"vit_servicing_station_lib::v0::endpoints::search::logic"],[6282,"vit_servicing_station_lib::v0::endpoints::search::requests"],[6436,"vit_servicing_station_lib::v0::endpoints::search::requests::Constraint"],[6441,"vit_servicing_station_lib::v0::endpoints::search::requests::OrderBy"],[6443,"vit_servicing_station_lib::v0::endpoints::search::routes"],[6445,"vit_servicing_station_lib::v0::endpoints::service_version"],[6451,"vit_servicing_station_lib::v0::endpoints::service_version::handlers"],[6452,"vit_servicing_station_lib::v0::endpoints::service_version::logic"],[6453,"vit_servicing_station_lib::v0::endpoints::service_version::routes"],[6454,"vit_servicing_station_lib::v0::endpoints::service_version::schemas"],[6470,"vit_servicing_station_lib::v0::endpoints::snapshot"],[6563,"vit_servicing_station_lib::v0::endpoints::snapshot::handlers"],[6612,"vit_servicing_station_lib::v0::endpoints::snapshot::routes"],[6613,"vit_servicing_station_lib::v0::endpoints::votes"],[6619,"vit_servicing_station_lib::v0::endpoints::votes::handlers"],[6620,"vit_servicing_station_lib::v0::endpoints::votes::logic"],[6621,"vit_servicing_station_lib::v0::endpoints::votes::requests"],[6639,"vit_servicing_station_lib::v0::endpoints::votes::routes"],[6640,"vit_servicing_station_lib::v0::errors"],[6670,"vit_servicing_station_lib::v0::genesis_block"],[6691,"vit_servicing_station_lib::v0::result"],[6705,"core::fmt"],[6706,"core::fmt"],[6707,"alloc::string"],[6708,"core::any"],[6709,"serde::de"],[6710,"serde::ser"],[6711,"diesel::deserialize"],[6712,"diesel::backend"],[6713,"diesel::row"],[6714,"core::option"],[6715,"core::cmp"],[6716,"alloc::vec"],[6717,"diesel::result"],[6718,"diesel::result"],[6719,"diesel::sql_types"],[6720,"diesel::sql_types"],[6721,"diesel::sql_types"],[6722,"diesel::query_builder::ast_pass"],[6723,"diesel::query_builder::update_statement::target"],[6724,"diesel::query_source::joins"],[6725,"diesel::expression"],[6726,"warp::filters::cors"],[6727,"warp::server"],[6728,"warp::filter"],[6729,"core::clone"],[6730,"core::marker"],[6731,"core::marker"],[6732,"core::error"],[6733,"clap_builder::builder::command"],[6734,"clap_builder::parser::matches::arg_matches"],[6735,"clap_builder"],[6736,"clap_builder::util::id"],[6737,"std::io::error"],[6738,"core::ops::function"],[6739,"time::offset_date_time"],[6740,"fraction::prelude"],[6741,"warp::reject"],[6742,"bech32"],[6743,"alloc::alloc"],[6744,"core::iter::traits::collect"],[6745,"bech32"],[6746,"warp::filter::boxed"],[6747,"warp::reply"],[6748,"diesel::r2d2"],[6749,"warp::reply"],[6750,"http::status"],[6751,"serde::ser"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Timestamp for the latest update of the current snapshot","","","","","","","","Tag - a unique identifier of the current snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Insert a token asynchronously. This method is a wrapper …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …elper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Server binding address","If none provided, echos request origin","block0 static file path","archive block0 static file path","Path to server X.509 certificate chain file, must be …","","","Database url","","","Enable API Tokens feature","Load settings from file","","","If none provided, CORS responses won’t be cached","Dump current settings to file","Path to server private key file, must be PKCS8 with single …","","","","","","","","","Settings environment variables names","","","","","","","","","","","","","","","Server binding address","If none provided, echos request origin","","","","","","","","","","block0 static file path","archive block0 static file path","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","","","","","","","Database url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable API Tokens feature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Load settings from file","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Application logging level","Output log file path","If none provided, CORS responses won’t be cached","Dump current settings to file","","","Path to server private key file, must be PKCS8 with single …","","","","","","","","","","","","","","","","","","Enable the OTLP trace data exporter and set the collector…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all but the last occurrence of elements that …","","","","","","","","","","","","","","","","","","","","","Header where token should be present in requests","API Token wrapper type","API token manager is an abstraction on the API tokens for …","A warp filter that checks authorization through API tokens.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Raw Snapshot information update with timestamp.","Snapshot information update with timestamp.","","","Voter information in the current snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Timestamp for the latest update in voter info in the …","Timestamp for the latest update in voter info in the …","","","","","","","","","","","","","","","","","","","","","","","","","A listing of voter information in the current snapshot","","","","","","","","","Raw Snapshot information update with timestamp.","Snapshot information update with timestamp.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"if":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,-1,[]],[1,-1,[]],[1,2],[[3,4],5],[[3,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],[6,[[8,[7,3]]]],0,0,0,0,[-1,9,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[11,11],[[-1,-2],2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,2],0,[[11,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[11],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],12],0,0,[13,13],[12,12],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],0,[-1,[[8,[13]]],14],[-1,[[8,[12]]],14],[1,2],[1,2],[[13,13],15],[[12,12],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[13,4],5],[[12,4],5],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[13,-1],8,16],[[12,-1],8,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[12],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[],2],[[],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],17],[[],18],[-2,[[19,[17]]],20,[[21,[-1]]]],[17,17],[18,18],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[17]]],14],[-1,[[8,[18]]],14],[1,2],[1,2],[[17,17],15],[[18,18],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,[[17,4],5],[[18,4],5],[-1,-1,[]],[-1,-1,[]],[22,[[19,[17]]]],0,0,0,[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[17,-1],8,16],[[18,-1],8,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[18],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],23],0,0,0,0,[23,23],[24,24],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[23]]],14],[-1,[[8,[24]]],14],[1,2],[1,2],[1,2],[[23,23],15],[[24,24],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,[[23,4],5],[[24,4],5],[-1,-1,[]],[-1,-1,[]],[23,25],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[23,-1],8,16],[[24,-1],8,16],[[25,-1],8,16],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[23],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],26],[26,26],[27,27],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[26]]],14],[-1,[[8,[27]]],14],[1,2],[1,2],[[26,26],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[26,4],5],[[27,4],5],[-1,-1,[]],[26,27],[-1,-1,[]],0,0,0,0,0,[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[26,-1],8,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[27],[27],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[],28],[28,28],[[-1,-2],2,[],[]],[[28,28],29],[[-1,-2],29,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[28]]],14],[1,2],[[28,28],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[28,4],5],[-1,-1,[]],0,0,[[],1],[-1,-2,[],[]],[[28,28],[[22,[29]]]],[[28,-1],8,16],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[28],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],30],[[],31],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[33,33],[34,34],[35,35],[30,30],[36,36],[31,31],[37,37],[32,32],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[33]]],14],[-1,[[8,[34]]],14],[-1,[[8,[35]]],14],[-1,[[8,[30]]],14],[-1,[[8,[36]]],14],[-1,[[8,[38]]],14],[-1,[[8,[31]]],14],[-1,[[8,[37]]],14],[-1,[[8,[32]]],14],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[33,33],15],[[34,34],15],[[35,35],15],[[30,30],15],[[36,36],15],[[31,31],15],[[37,37],15],[[32,32],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,[[33,4],5],[[34,4],5],[[35,4],5],[[35,4],5],[[30,4],5],[[36,4],5],[[31,4],5],[[37,4],5],[[32,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[36,38],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[8,[-1]]],[]],[6,[[8,[35]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,-1],8,16],[[34,-1],8,16],[[35,-1],8,16],[[30,-1],8,16],[[36,-1],8,16],[[38,-1],8,16],[[31,-1],8,16],[[37,-1],8,16],[[32,-1],8,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[38,[[8,[36]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[30],[32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[39]]],14],[1,2],[[39,39],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[39,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],0,0,0,0,[[39,-1],8,16],[-1,-2,[],[]],[[39,6],40],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[41]]],14],[1,2],[[41,41],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[41,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],0,[[41,-1],8,16],[-1,-2,[],[]],[[41,6],42],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[[],44],[[],45],[43,43],[44,44],[45,45],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[43]]],14],[-1,[[8,[44]]],14],[-1,[[8,[45]]],14],[1,2],[1,2],[1,2],[[43,43],15],[[44,44],15],[[45,45],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[43,4],5],[[44,4],5],[[45,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[43,-1],8,16],[[44,-1],8,16],[[45,-1],8,16],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[43],[43],[44],[44],[45],[45],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[],46],0,0,[46,46],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[46]]],14],[1,2],[[46,46],15],[[46,4],5],0,[-1,-1,[]],[[],1],[-1,-2,[],[]],0,0,[[46,-1],8,16],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[46],0,[-1,-2,[],[]],0,0,[47,9],0,[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[47]]],14],[1,2],[[47,47],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[47,4],5],[-1,-1,[]],[[[48,[9]]],47],[[],1],[-1,-2,[],[]],[6,47],[[47,-1],8,16],[-1,-2,[],[]],[47,[[48,[9]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[],49],0,0,0,0,0,0,[49,49],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[49]]],14],[1,2],[[49,49],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[49,4],5],[-1,-1,[]],0,0,[[],1],[-1,-2,[],[]],[[49,-1],8,16],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[49],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[[50,[11]],51],[[52,[1]]]],[[53,7],[[8,[2,54]]]],[[11,51],[[52,[1]]]],[[53,7],[[8,[[22,[11]],54]]]],[[[50,[55]],51],[[8,[[22,[11]],56]]]],[[50,51],[[52,[1]]]],[7,[[8,[[48,[12]],54]]]],[[57,7],[[8,[12,54]]]],[[57,7],[[8,[[48,[30]],54]]]],[[57,9,7],[[8,[[48,[30]],54]]]],[[57,7],[[8,[[48,[12]],54]]]],[[[50,[18]],51],[[52,[1]]]],[[57,7],[[8,[[48,[18]],54]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[58]]],14],[-1,[[8,[59]]],14],[1,2],[1,2],[[58,4],5],[[59,4],5],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],[[23,51],[[52,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,51],[[8,[23,54]]]],0,[[23,7],[[8,[2,54]]]],[7,[[8,[[48,[57]],54]]]],[7,[[8,[58,54]]]],[[57,7],[[8,[23,54]]]],[[58,-1],8,16],[[59,-1],8,16],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[27]],51],[[52,[1]]]],[[50,51],[[52,[1]]]],[[[50,[40]],51],[[52,[1]]]],[[-1,51],[[52,[1]]],60],[[[50,[30]],51],[[52,[1]]]],[[-1,51],[[52,[1]]],60],[[[50,[42]],51],[[52,[1]]]],[[30,51],[[52,[1]]]],[[7,9],[[8,[[48,[31]],54]]]],[[57,9,7],[[8,[31,54]]]],[[9,[48,[61]],7],[[8,[[48,[31]],54]]]],0,0,0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[62]],[48,[63]]],[[8,[[69,[[2,[64,64,65,65,65,66,66,64,65,[67,[65]]]],68,-1]],54]]],20],[[[48,[62]],[48,[63]]],[[8,[[69,[[2,[64,65,65,65,65,65,66,65,65,66,65,65,65,65,70,[71,[65]],64,[67,[65]],64,66,66,66,65,65,64,65,[67,[65]],[67,[65]],[67,[65]],[67,[65]],[67,[65]],66,65,65]],72,-1]],54]]],20],[73,73],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[73,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],[74,[[8,[61,54]]]],[74,[[8,[61,54]]]],[[75,51],[[8,[76,54]]]],[[77,51],[[8,[61,54]]]],[[77,7],[[8,[61,54]]]],[[75,7],[[8,[76,54]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],[[73,[78,[-1]]],[[52,[2]]],20],0,[[[50,[45]],51],[[8,[2,54]]]],[[[50,[44]],51],[[8,[2,54]]]],[[43,7],[[8,[2,54]]]],[7,[[8,[[48,[43]],54]]]],[[9,7],[[8,[[48,[45]],54]]]],[[9,9,7],[[8,[[48,[45]],54]]]],[[9,9,9,7],[[8,[[48,[45]],54]]]],[[9,7],[[8,[43,54]]]],[[9,9,7],[[8,[61,54]]]],[[9,7],[[8,[[48,[44]],54]]]],[[9,9,7],[[8,[[48,[44]],54]]]],[[[50,[49]],51],[[52,[[48,[49]]]]]],[[49,51],[[52,[49]]]],[[57,7],[[8,[[48,[49]],54]]]],[[50,51],[[52,[1]]]],[[9,9,7],[[8,[[48,[46]],54]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[79],[-1,-2,[],[]],[-1,-2,[],[]],[79,79],[[-1,-2],2,[],[]],0,[79],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[79,4],5],[-1,[],[]],[-1,-1,[]],0,[79],0,[[],1],[-1,-2,[],[]],[79,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[79],0,[79,82],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[79],[79],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[83,-1],[],84],[[85,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[82,82],[86,86],[83,83],[85,85],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],86],[[],83],[[],85],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[83,-1],[],84],[[85,-1],[],84],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],0,[[82,4],5],[[86,4],5],[[83,4],5],[[85,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[83,-1],[],84],[[85,-1],[],84],0,[[83,-1],[],84],[[85,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,[78,[-1]]],[[52,[2]]],20],[[86,[78,[-1]]],[[52,[2]]],20],[[83,[78,[-1]]],[[52,[2]]],20],[[85,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[68],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[[-1,-2],2,[],[]],0,[68],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[68,4],5],[-1,[],[]],[-1,-1,[]],0,[68],0,[[],1],[-1,-2,[],[]],[68,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[68],0,[68,87],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[68],[68],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[88,-1],[],84],[[89,-1],[],84],[[90,-1],[],84],[[91,-1],[],84],[[92,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[87,87],[88,88],[89,89],[93,93],[94,94],[95,95],[90,90],[91,91],[92,92],[96,96],[97,97],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],88],[[],89],[[],93],[[],94],[[],95],[[],90],[[],91],[[],92],[[],96],[[],97],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],0,[[88,-1],[],84],[[89,-1],[],84],[[90,-1],[],84],[[91,-1],[],84],[[92,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[87,4],5],[[88,4],5],[[89,4],5],[[93,4],5],[[94,4],5],[[95,4],5],[[90,4],5],[[91,4],5],[[92,4],5],[[96,4],5],[[97,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[88,-1],[],84],[[89,-1],[],84],[[90,-1],[],84],[[91,-1],[],84],[[92,-1],[],84],0,0,0,[[88,-1],[],84],[[89,-1],[],84],[[90,-1],[],84],[[91,-1],[],84],[[92,-1],[],84],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,[78,[-1]]],[[52,[2]]],20],[[88,[78,[-1]]],[[52,[2]]],20],[[89,[78,[-1]]],[[52,[2]]],20],[[93,[78,[-1]]],[[52,[2]]],20],[[94,[78,[-1]]],[[52,[2]]],20],[[95,[78,[-1]]],[[52,[2]]],20],[[90,[78,[-1]]],[[52,[2]]],20],[[91,[78,[-1]]],[[52,[2]]],20],[[92,[78,[-1]]],[[52,[2]]],20],[[96,[78,[-1]]],[[52,[2]]],20],[[97,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[98],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[[-1,-2],2,[],[]],0,[98],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[98,4],5],[-1,[],[]],[-1,-1,[]],0,[98],0,[[],1],[-1,-2,[],[]],[98,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[98],0,[98,99],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[98],[98],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[100,-1],[],84],[[101,-1],[],84],[[102,-1],[],84],[[103,-1],[],84],[[104,-1],[],84],[[105,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,99],[100,100],[101,101],[106,106],[102,102],[107,107],[103,103],[108,108],[104,104],[109,109],[105,105],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],100],[[],101],[[],106],[[],102],[[],107],[[],103],[[],108],[[],104],[[],109],[[],105],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[100,-1],[],84],[[101,-1],[],84],[[102,-1],[],84],[[103,-1],[],84],[[104,-1],[],84],[[105,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],0,0,[[99,4],5],[[100,4],5],[[101,4],5],[[106,4],5],[[102,4],5],[[107,4],5],[[103,4],5],[[108,4],5],[[104,4],5],[[109,4],5],[[105,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[100,-1],[],84],[[101,-1],[],84],[[102,-1],[],84],[[103,-1],[],84],[[104,-1],[],84],[[105,-1],[],84],0,0,0,[[100,-1],[],84],[[101,-1],[],84],[[102,-1],[],84],[[103,-1],[],84],[[104,-1],[],84],[[105,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[99,[78,[-1]]],[[52,[2]]],20],[[100,[78,[-1]]],[[52,[2]]],20],[[101,[78,[-1]]],[[52,[2]]],20],[[106,[78,[-1]]],[[52,[2]]],20],[[102,[78,[-1]]],[[52,[2]]],20],[[107,[78,[-1]]],[[52,[2]]],20],[[103,[78,[-1]]],[[52,[2]]],20],[[108,[78,[-1]]],[[52,[2]]],20],[[104,[78,[-1]]],[[52,[2]]],20],[[109,[78,[-1]]],[[52,[2]]],20],[[105,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[110],[-1,-2,[],[]],[-1,-2,[],[]],[110,110],[[-1,-2],2,[],[]],0,[110],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[110,4],5],[-1,[],[]],[-1,-1,[]],0,[110],0,[[],1],[-1,-2,[],[]],[110,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[110],0,[110,111],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[110],[110],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[112,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,111],[113,113],[114,114],[112,112],[115,115],[116,116],[117,117],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],113],[[],114],[[],112],[[],115],[[],116],[[],117],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[112,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[111,4],5],[[113,4],5],[[114,4],5],[[112,4],5],[[115,4],5],[[116,4],5],[[117,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[112,-1],[],84],0,0,0,0,[[112,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,[78,[-1]]],[[52,[2]]],20],[[113,[78,[-1]]],[[52,[2]]],20],[[114,[78,[-1]]],[[52,[2]]],20],[[112,[78,[-1]]],[[52,[2]]],20],[[115,[78,[-1]]],[[52,[2]]],20],[[116,[78,[-1]]],[[52,[2]]],20],[[117,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[118],[-1,-2,[],[]],[-1,-2,[],[]],[118,118],[[-1,-2],2,[],[]],0,[118],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[118,4],5],[-1,[],[]],[-1,-1,[]],0,[118],0,[[],1],[-1,-2,[],[]],[118,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[118],0,[118,119],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[118],[118],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[120,-1],[],84],[[121,-1],[],84],[[122,-1],[],84],[[123,-1],[],84],[[124,-1],[],84],[[125,-1],[],84],[[126,-1],[],84],[[127,-1],[],84],[[128,-1],[],84],[[129,-1],[],84],[[130,-1],[],84],[[131,-1],[],84],[[132,-1],[],84],[[133,-1],[],84],[[134,-1],[],84],[[135,-1],[],84],[[136,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[120,120],[137,137],[138,138],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[139,139],[140,140],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],120],[[],137],[[],138],[[],121],[[],122],[[],123],[[],124],[[],125],[[],126],[[],127],[[],128],[[],129],[[],130],[[],131],[[],132],[[],133],[[],134],[[],135],[[],136],[[],139],[[],140],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[120,-1],[],84],[[121,-1],[],84],[[122,-1],[],84],[[123,-1],[],84],[[124,-1],[],84],[[125,-1],[],84],[[126,-1],[],84],[[127,-1],[],84],[[128,-1],[],84],[[129,-1],[],84],[[130,-1],[],84],[[131,-1],[],84],[[132,-1],[],84],[[133,-1],[],84],[[134,-1],[],84],[[135,-1],[],84],[[136,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],0,[[119,4],5],[[120,4],5],[[137,4],5],[[138,4],5],[[121,4],5],[[122,4],5],[[123,4],5],[[124,4],5],[[125,4],5],[[126,4],5],[[127,4],5],[[128,4],5],[[129,4],5],[[130,4],5],[[131,4],5],[[132,4],5],[[133,4],5],[[134,4],5],[[135,4],5],[[136,4],5],[[139,4],5],[[140,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[120,-1],[],84],[[121,-1],[],84],[[122,-1],[],84],[[123,-1],[],84],[[124,-1],[],84],[[125,-1],[],84],[[126,-1],[],84],[[127,-1],[],84],[[128,-1],[],84],[[129,-1],[],84],[[130,-1],[],84],[[131,-1],[],84],[[132,-1],[],84],[[133,-1],[],84],[[134,-1],[],84],[[135,-1],[],84],[[136,-1],[],84],0,0,0,0,0,0,0,0,0,[[120,-1],[],84],[[121,-1],[],84],[[122,-1],[],84],[[123,-1],[],84],[[124,-1],[],84],[[125,-1],[],84],[[126,-1],[],84],[[127,-1],[],84],[[128,-1],[],84],[[129,-1],[],84],[[130,-1],[],84],[[131,-1],[],84],[[132,-1],[],84],[[133,-1],[],84],[[134,-1],[],84],[[135,-1],[],84],[[136,-1],[],84],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[119,[78,[-1]]],[[52,[2]]],20],[[120,[78,[-1]]],[[52,[2]]],20],[[137,[78,[-1]]],[[52,[2]]],20],[[138,[78,[-1]]],[[52,[2]]],20],[[121,[78,[-1]]],[[52,[2]]],20],[[122,[78,[-1]]],[[52,[2]]],20],[[123,[78,[-1]]],[[52,[2]]],20],[[124,[78,[-1]]],[[52,[2]]],20],[[125,[78,[-1]]],[[52,[2]]],20],[[126,[78,[-1]]],[[52,[2]]],20],[[127,[78,[-1]]],[[52,[2]]],20],[[128,[78,[-1]]],[[52,[2]]],20],[[129,[78,[-1]]],[[52,[2]]],20],[[130,[78,[-1]]],[[52,[2]]],20],[[131,[78,[-1]]],[[52,[2]]],20],[[132,[78,[-1]]],[[52,[2]]],20],[[133,[78,[-1]]],[[52,[2]]],20],[[134,[78,[-1]]],[[52,[2]]],20],[[135,[78,[-1]]],[[52,[2]]],20],[[136,[78,[-1]]],[[52,[2]]],20],[[139,[78,[-1]]],[[52,[2]]],20],[[140,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[141],[-1,-2,[],[]],[-1,-2,[],[]],[141,141],[[-1,-2],2,[],[]],0,[141],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[141,4],5],[-1,[],[]],[-1,-1,[]],0,[141],0,[[],1],[-1,-2,[],[]],[141,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[141],0,[141,142],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[141],[141],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[143,-1],[],84],[[144,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[142,142],[143,143],[145,145],[144,144],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],143],[[],145],[[],144],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[143,-1],[],84],[[144,-1],[],84],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[142,4],5],[[143,4],5],[[145,4],5],[[144,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[143,-1],[],84],[[144,-1],[],84],0,[[143,-1],[],84],[[144,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[142,[78,[-1]]],[[52,[2]]],20],[[143,[78,[-1]]],[[52,[2]]],20],[[145,[78,[-1]]],[[52,[2]]],20],[[144,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[146],[-1,-2,[],[]],[-1,-2,[],[]],[146,146],[[-1,-2],2,[],[]],0,[146],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[146,4],5],[-1,[],[]],[-1,-1,[]],0,[146],0,[[],1],[-1,-2,[],[]],[146,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[146],0,[146,147],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[146],[146],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[148,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[147,147],[148,148],[149,149],[150,150],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],148],[[],149],[[],150],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[148,-1],[],84],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[147,4],5],[[148,4],5],[[149,4],5],[[150,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[148,-1],[],84],0,[[148,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[147,[78,[-1]]],[[52,[2]]],20],[[148,[78,[-1]]],[[52,[2]]],20],[[149,[78,[-1]]],[[52,[2]]],20],[[150,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[151],[-1,-2,[],[]],[-1,-2,[],[]],[151,151],[[-1,-2],2,[],[]],0,[151],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[151,4],5],[-1,[],[]],[-1,-1,[]],0,[151],0,[[],1],[-1,-2,[],[]],[151,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[151],0,[151,152],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[151],[151],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],153],[[],154],[[],155],[[],156],[[],157],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[152,4],5],[[153,4],5],[[154,4],5],[[155,4],5],[[156,4],5],[[157,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[152,[78,[-1]]],[[52,[2]]],20],[[153,[78,[-1]]],[[52,[2]]],20],[[154,[78,[-1]]],[[52,[2]]],20],[[155,[78,[-1]]],[[52,[2]]],20],[[156,[78,[-1]]],[[52,[2]]],20],[[157,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[158],[-1,-2,[],[]],[-1,-2,[],[]],[158,158],[[-1,-2],2,[],[]],0,[158],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[158,4],5],[-1,[],[]],[-1,-1,[]],0,[158],0,[[],1],[-1,-2,[],[]],[158,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[158],0,[158,159],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[158],[158],[-1,-2,[],[]],0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[159,159],[160,160],[161,161],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],160],[[],161],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[159,4],5],[[160,4],5],[[161,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[159,[78,[-1]]],[[52,[2]]],20],[[160,[78,[-1]]],[[52,[2]]],20],[[161,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,[[],2],0,[[]],0,[162],[-1,-2,[],[]],[-1,-2,[],[]],[162,162],[[-1,-2],2,[],[]],0,[162],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[162,4],5],[-1,[],[]],[-1,-1,[]],0,[162],0,[[],1],[-1,-2,[],[]],[162,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[162],0,[162,163],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[162],[162],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[164,-1],[],84],[[165,-1],[],84],[[166,-1],[],84],[[167,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[163,163],[164,164],[168,168],[169,169],[170,170],[171,171],[172,172],[165,165],[173,173],[174,174],[166,166],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[167,167],[181,181],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],164],[[],168],[[],169],[[],170],[[],171],[[],172],[[],165],[[],173],[[],174],[[],166],[[],175],[[],176],[[],177],[[],178],[[],179],[[],180],[[],167],[[],181],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[164,-1],[],84],[[165,-1],[],84],[[166,-1],[],84],[[167,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],0,[[163,4],5],[[164,4],5],[[168,4],5],[[169,4],5],[[170,4],5],[[171,4],5],[[172,4],5],[[165,4],5],[[173,4],5],[[174,4],5],[[166,4],5],[[175,4],5],[[176,4],5],[[177,4],5],[[178,4],5],[[179,4],5],[[180,4],5],[[167,4],5],[[181,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[164,-1],[],84],[[165,-1],[],84],[[166,-1],[],84],[[167,-1],[],84],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[164,-1],[],84],[[165,-1],[],84],[[166,-1],[],84],[[167,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[163,[78,[-1]]],[[52,[2]]],20],[[164,[78,[-1]]],[[52,[2]]],20],[[168,[78,[-1]]],[[52,[2]]],20],[[169,[78,[-1]]],[[52,[2]]],20],[[170,[78,[-1]]],[[52,[2]]],20],[[171,[78,[-1]]],[[52,[2]]],20],[[172,[78,[-1]]],[[52,[2]]],20],[[165,[78,[-1]]],[[52,[2]]],20],[[173,[78,[-1]]],[[52,[2]]],20],[[174,[78,[-1]]],[[52,[2]]],20],[[166,[78,[-1]]],[[52,[2]]],20],[[175,[78,[-1]]],[[52,[2]]],20],[[176,[78,[-1]]],[[52,[2]]],20],[[177,[78,[-1]]],[[52,[2]]],20],[[178,[78,[-1]]],[[52,[2]]],20],[[179,[78,[-1]]],[[52,[2]]],20],[[180,[78,[-1]]],[[52,[2]]],20],[[167,[78,[-1]]],[[52,[2]]],20],[[181,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[182],[-1,-2,[],[]],[-1,-2,[],[]],[182,182],[[-1,-2],2,[],[]],0,[182],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[182,4],5],[-1,[],[]],[-1,-1,[]],0,[182],0,[[],1],[-1,-2,[],[]],[182,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[182],0,[182,183],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[182],[182],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[184,-1],[],84],[[185,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[183,183],[184,184],[186,186],[187,187],[185,185],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],184],[[],186],[[],187],[[],185],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[184,-1],[],84],[[185,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[183,4],5],[[184,4],5],[[186,4],5],[[187,4],5],[[185,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[184,-1],[],84],[[185,-1],[],84],0,0,[[184,-1],[],84],[[185,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[183,[78,[-1]]],[[52,[2]]],20],[[184,[78,[-1]]],[[52,[2]]],20],[[186,[78,[-1]]],[[52,[2]]],20],[[187,[78,[-1]]],[[52,[2]]],20],[[185,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[188],[-1,-2,[],[]],[-1,-2,[],[]],[188,188],[[-1,-2],2,[],[]],0,[188],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[188,4],5],[-1,[],[]],[-1,-1,[]],0,[188],0,[[],1],[-1,-2,[],[]],[188,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[188],0,[188,189],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[188],[188],[-1,-2,[],[]],0,[[],2],[[],2],[[190,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[189,189],[191,191],[190,190],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],191],[[],190],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[190,-1],[],84],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[189,4],5],[[191,4],5],[[190,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[190,-1],[],84],0,[[190,-1],[],84],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[189,[78,[-1]]],[[52,[2]]],20],[[191,[78,[-1]]],[[52,[2]]],20],[[190,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,[[],2],0,[[]],0,[192],[-1,-2,[],[]],[-1,-2,[],[]],[192,192],[[-1,-2],2,[],[]],0,[192],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[192,4],5],[-1,[],[]],[-1,-1,[]],0,[192],0,[[],1],[-1,-2,[],[]],[192,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[192],0,[192,193],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[192],[192],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[194,-1],[],84],[[195,-1],[],84],[[196,-1],[],84],[[197,-1],[],84],[[198,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[193,193],[194,194],[199,199],[195,195],[196,196],[197,197],[200,200],[201,201],[198,198],[202,202],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],194],[[],199],[[],195],[[],196],[[],197],[[],200],[[],201],[[],198],[[],202],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[194,-1],[],84],[[195,-1],[],84],[[196,-1],[],84],[[197,-1],[],84],[[198,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[193,4],5],[[194,4],5],[[199,4],5],[[195,4],5],[[196,4],5],[[197,4],5],[[200,4],5],[[201,4],5],[[198,4],5],[[202,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[194,-1],[],84],[[195,-1],[],84],[[196,-1],[],84],[[197,-1],[],84],[[198,-1],[],84],0,[[194,-1],[],84],[[195,-1],[],84],[[196,-1],[],84],[[197,-1],[],84],[[198,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[193,[78,[-1]]],[[52,[2]]],20],[[194,[78,[-1]]],[[52,[2]]],20],[[199,[78,[-1]]],[[52,[2]]],20],[[195,[78,[-1]]],[[52,[2]]],20],[[196,[78,[-1]]],[[52,[2]]],20],[[197,[78,[-1]]],[[52,[2]]],20],[[200,[78,[-1]]],[[52,[2]]],20],[[201,[78,[-1]]],[[52,[2]]],20],[[198,[78,[-1]]],[[52,[2]]],20],[[202,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[203],[-1,-2,[],[]],[-1,-2,[],[]],[203,203],[[-1,-2],2,[],[]],0,[203],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[203,4],5],[-1,[],[]],[-1,-1,[]],0,[203],0,[[],1],[-1,-2,[],[]],[203,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[203],0,[203,204],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[203],[203],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[205,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,204],[206,206],[205,205],[207,207],[208,208],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],206],[[],205],[[],207],[[],208],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[205,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[204,4],5],[[206,4],5],[[205,4],5],[[207,4],5],[[208,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[205,-1],[],84],0,0,[[205,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[204,[78,[-1]]],[[52,[2]]],20],[[206,[78,[-1]]],[[52,[2]]],20],[[205,[78,[-1]]],[[52,[2]]],20],[[207,[78,[-1]]],[[52,[2]]],20],[[208,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[209],[-1,-2,[],[]],[-1,-2,[],[]],[209,209],[[-1,-2],2,[],[]],0,[209],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[209,4],5],[-1,[],[]],[-1,-1,[]],0,[209],0,[[],1],[-1,-2,[],[]],[209,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[209],0,[209,210],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[209],[209],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[211,-1],[],84],[[212,-1],[],84],[[213,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[210,210],[214,214],[215,215],[211,211],[216,216],[212,212],[213,213],[217,217],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],214],[[],215],[[],211],[[],216],[[],212],[[],213],[[],217],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[211,-1],[],84],[[212,-1],[],84],[[213,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[210,4],5],[[214,4],5],[[215,4],5],[[211,4],5],[[216,4],5],[[212,4],5],[[213,4],5],[[217,4],5],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[211,-1],[],84],[[212,-1],[],84],[[213,-1],[],84],0,0,0,[[211,-1],[],84],[[212,-1],[],84],[[213,-1],[],84],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[210,[78,[-1]]],[[52,[2]]],20],[[214,[78,[-1]]],[[52,[2]]],20],[[215,[78,[-1]]],[[52,[2]]],20],[[211,[78,[-1]]],[[52,[2]]],20],[[216,[78,[-1]]],[[52,[2]]],20],[[212,[78,[-1]]],[[52,[2]]],20],[[213,[78,[-1]]],[[52,[2]]],20],[[217,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[[]],0,[72],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[-1,-2],2,[],[]],0,[72],[1,-1,[]],[1,-1,[]],[-1,[],[]],0,[1,2],0,[[72,4],5],[-1,[],[]],[-1,-1,[]],0,[72],0,[[],1],[-1,-2,[],[]],[72,80],[[[81,[-1,-2]]],2,[],[]],[[-1,61],[],[]],0,[[-1,61],[],[]],0,0,[72],0,[72,218],0,[[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[72],[72],[-1,-2,[],[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[219,-1],[],84],[[220,-1],[],84],[[221,-1],[],84],[[222,-1],[],84],[[223,-1],[],84],[[224,-1],[],84],[[225,-1],[],84],[[226,-1],[],84],[[227,-1],[],84],[[228,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[218,218],[219,219],[229,229],[230,230],[231,231],[232,232],[233,233],[220,220],[234,234],[235,235],[221,221],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[222,222],[242,242],[223,223],[224,224],[225,225],[226,226],[243,243],[244,244],[227,227],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[228,228],[251,251],[252,252],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],219],[[],229],[[],230],[[],231],[[],232],[[],233],[[],220],[[],234],[[],235],[[],221],[[],236],[[],237],[[],238],[[],239],[[],240],[[],241],[[],222],[[],242],[[],223],[[],224],[[],225],[[],226],[[],243],[[],244],[[],227],[[],245],[[],246],[[],247],[[],248],[[],249],[[],250],[[],228],[[],251],[[],252],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[[219,-1],[],84],[[220,-1],[],84],[[221,-1],[],84],[[222,-1],[],84],[[223,-1],[],84],[[224,-1],[],84],[[225,-1],[],84],[[226,-1],[],84],[[227,-1],[],84],[[228,-1],[],84],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],[[-1,-2],[[8,[1,56]]],[],[]],0,[[218,4],5],[[219,4],5],[[229,4],5],[[230,4],5],[[231,4],5],[[232,4],5],[[233,4],5],[[220,4],5],[[234,4],5],[[235,4],5],[[221,4],5],[[236,4],5],[[237,4],5],[[238,4],5],[[239,4],5],[[240,4],5],[[241,4],5],[[222,4],5],[[242,4],5],[[223,4],5],[[224,4],5],[[225,4],5],[[226,4],5],[[243,4],5],[[244,4],5],[[227,4],5],[[245,4],5],[[246,4],5],[[247,4],5],[[248,4],5],[[249,4],5],[[250,4],5],[[228,4],5],[[251,4],5],[[252,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[219,-1],[],84],[[220,-1],[],84],[[221,-1],[],84],[[222,-1],[],84],[[223,-1],[],84],[[224,-1],[],84],[[225,-1],[],84],[[226,-1],[],84],[[227,-1],[],84],[[228,-1],[],84],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[219,-1],[],84],[[220,-1],[],84],[[221,-1],[],84],[[222,-1],[],84],[[223,-1],[],84],[[224,-1],[],84],[[225,-1],[],84],[[226,-1],[],84],[[227,-1],[],84],[[228,-1],[],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[218,[78,[-1]]],[[52,[2]]],20],[[219,[78,[-1]]],[[52,[2]]],20],[[229,[78,[-1]]],[[52,[2]]],20],[[230,[78,[-1]]],[[52,[2]]],20],[[231,[78,[-1]]],[[52,[2]]],20],[[232,[78,[-1]]],[[52,[2]]],20],[[233,[78,[-1]]],[[52,[2]]],20],[[220,[78,[-1]]],[[52,[2]]],20],[[234,[78,[-1]]],[[52,[2]]],20],[[235,[78,[-1]]],[[52,[2]]],20],[[221,[78,[-1]]],[[52,[2]]],20],[[236,[78,[-1]]],[[52,[2]]],20],[[237,[78,[-1]]],[[52,[2]]],20],[[238,[78,[-1]]],[[52,[2]]],20],[[239,[78,[-1]]],[[52,[2]]],20],[[240,[78,[-1]]],[[52,[2]]],20],[[241,[78,[-1]]],[[52,[2]]],20],[[222,[78,[-1]]],[[52,[2]]],20],[[242,[78,[-1]]],[[52,[2]]],20],[[223,[78,[-1]]],[[52,[2]]],20],[[224,[78,[-1]]],[[52,[2]]],20],[[225,[78,[-1]]],[[52,[2]]],20],[[226,[78,[-1]]],[[52,[2]]],20],[[243,[78,[-1]]],[[52,[2]]],20],[[244,[78,[-1]]],[[52,[2]]],20],[[227,[78,[-1]]],[[52,[2]]],20],[[245,[78,[-1]]],[[52,[2]]],20],[[246,[78,[-1]]],[[52,[2]]],20],[[247,[78,[-1]]],[[52,[2]]],20],[[248,[78,[-1]]],[[52,[2]]],20],[[249,[78,[-1]]],[[52,[2]]],20],[[250,[78,[-1]]],[[52,[2]]],20],[[228,[78,[-1]]],[[52,[2]]],20],[[251,[78,[-1]]],[[52,[2]]],20],[[252,[78,[-1]]],[[52,[2]]],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[253,254],[[-1,255],[[256,[-1]]],[257,258,259,260]],[[-1,[22,[261]]],2,[257,258,259,260]],[[-1,261],2,[257,258,259,260]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[262,263],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,261],[[8,[2,[0,[264]]]]]],0,0,[6,[[8,[261,[0,[264]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[265,6],[266,266],[266,266],[266,266],[266,266],[266,266],[266,266],[266,266],[266,266],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[261,261],[255,255],[265,265],[267,267],[253,253],[268,268],[269,269],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],266],[[],266],[[],266],[[],266],[[],266],[[],266],[[],266],[[],266],0,0,[[],261],[[],255],[[],265],[[],267],[[],253],[[],268],[[],269],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[267],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[261]]],14],[-1,[[8,[255]]],14],[-1,[[8,[265]]],14],[-1,[[8,[267]]],14],[-1,[[8,[253]]],14],[-1,[[8,[268]]],14],[-1,[[8,[269]]],14],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[6,261],[[8,[2,[0,[264]]]]]],0,[[261,261],15],[[255,255],15],[[265,265],15],[[267,267],15],[[253,253],15],[[268,268],15],[[269,269],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[261,4],5],[[255,4],5],[[265,4],5],[[267,4],5],[[253,4],5],[[268,4],5],[[268,4],5],[[269,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[270,[[8,[261,271]]]],[270,[[8,[255,271]]]],[270,[[8,[253,271]]]],[270,[[8,[269,271]]]],[270,[[8,[261,271]]]],[270,[[8,[255,271]]]],[270,[[8,[253,271]]]],[270,[[8,[269,271]]]],[6,[[8,[-1]]],[]],[6,[[8,[265]]]],[6,[[8,[268]]]],[6,[[8,[-1]]],[]],[[],[[22,[272]]]],[[],[[22,[272]]]],[[],[[22,[272]]]],[[],[[22,[272]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[255,15],[6,[[8,[261,[0,[264]]]]]],0,0,0,0,0,[[261,261],261],[6,[[8,[267,273]]]],0,[[261,-1],8,16],[[255,-1],8,16],[[265,-1],8,16],[[267,-1],8,16],[[253,-1],8,16],[[268,-1],8,16],[[269,-1],8,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[261,270],[[8,[2,271]]]],[[255,270],[[8,[2,271]]]],[[253,270],[[8,[2,271]]]],[[269,270],[[8,[2,271]]]],[[261,270],[[8,[2,271]]]],[[255,270],[[8,[2,271]]]],[[253,270],[[8,[2,271]]]],[[269,270],[[8,[2,271]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],0,0,0,[[-1,-2],48,60,274],[61,275],[-1,[[8,[276]]],14],[-1,[[8,[61]]],14],[-1,[[8,[[48,[55]]]]],14],[-1,[[8,[15]]],14],[-1,[[8,[61]]],14],[-1,[[8,[47]]],14],[[[50,[55]],-1],8,16],[[276,-1],8,16],[[61,-1],8,16],[[61,-1],8,16],[[47,-1],8,16],0,0,0,0,0,[[277,15],[[0,[257,258]]]],0,0,0,0,0,[277,[[0,[257,258]]]],[53,[[50,[55]]]],[[9,277],[[8,[2,278]]]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[[48,[279,280]]]]],[]],[53,53],[[-1,-2],2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[-1,-2,[],[[282,[281]]]],[-1,-2,[],[[282,[281]]]],[[53,53],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[53,4],5],[-1,-1,[]],[-1,-1,[]],[[[50,[55]]],53],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[283,53],[[8,[15,54]]]],[7,283],[[[48,[55]]],53],[[283,53],[[8,[2,2]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[8,[2]]],[],284],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[285,285],[[-1,-2],2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[7,[48,[286]],9],285],[[7,[48,[287]],6],277],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],0,[-1,-2,[],[]],0,0,[[[288,[2]],277,15],[[0,[257,258]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[57,277],[[8,[[0,[289]],278]]]],[[57,277],[[8,[290,54]]]],[[[48,[18]]],290],[[[288,[2]],277],[[0,[257,258]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[290]]],14],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[290,-1],8,16],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[[[288,[2]],277],[[0,[257,258]]]],0,0,0,0,0,[[57,277],[[8,[[0,[289]],278]]]],[[57,9,277],[[8,[[0,[289]],278]]]],[277,[[8,[[0,[289]],278]]]],[277,[[8,[[48,[12]],54]]]],[[57,277],[[8,[291,54]]]],[[57,9,277],[[8,[291,54]]]],[[[288,[2]],277],[[0,[257,258]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[-1,[[8,[291]]],14],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],0,[[291,-1],8,16],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,[277,[[8,[[0,[289]],278]]]],[277,[[8,[[0,[289]],278]]]],[[57,277],[[8,[[0,[289]],278]]]],[[23,277],[[8,[[0,[289]],278]]]],[277,[[8,[[48,[57]],54]]]],[277,[[8,[58,54]]]],[[57,277],[[8,[23,54]]]],[[23,277],[[8,[2,54]]]],[277,[[0,[257,258]]]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,[277,[[8,[[0,[289]],278]]]],[[57,277],[[8,[[0,[289]],278]]]],[[[48,[55]]],[[8,[[0,[289]],278]]]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,[277,[[8,[[0,[289]],278]]]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,0,0,0,0,[[[288,[2]],277],[[0,[257,258]]]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,[[9,277],[[8,[[0,[289]],278]]]],[[57,9,277],[[8,[[0,[289]],278]]]],[[292,277],[[8,[[0,[289]],278]]]],[[9,277],[[8,[[48,[31]],54]]]],[[57,9,277],[[8,[31,54]]]],[[292,277],[[8,[[48,[31]],54]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[-1,[[8,[293]]],14],[1,2],[[293,4],5],[-1,-1,[]],0,[[],1],[-1,-2,[],[]],0,[[293,-1],8,16],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],0,[-1,-2,[],[]],[[[288,[2]],277],[[0,[257,258]]]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,[[[288,[2]],277],[[0,[257,258]]]],[[[288,[2]],277],[[0,[257,258]]]],[[75,277],[[8,[[0,[289]],278]]]],[[77,277],[[8,[[0,[289]],278]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,75],[77,77],[62,62],[63,63],[294,294],[295,295],[76,76],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[75]]],14],[-1,[[8,[77]]],14],[-1,[[8,[62]]],14],[-1,[[8,[63]]],14],[-1,[[8,[294]]],14],[-1,[[8,[295]]],14],[-1,[[8,[76]]],14],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],0,[[75,4],5],[[77,4],5],[[62,4],5],[[63,4],5],[[294,4],5],[[295,4],5],[[76,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,15],0,0,0,0,[[75,-1],8,16],[[77,-1],8,16],[[62,-1],8,16],[[63,-1],8,16],[[294,-1],8,16],[[295,-1],8,16],[[76,-1],8,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[[288,[2]],277],[[0,[257,258]]]],[[[288,[2]],277],[[0,[257,258]]]],0,[[[288,[2]],277],[[0,[257,258]]]],0,0,0,0,[277,[[8,[[0,[289]],278]]]],[277,[[8,[296,54]]]],[[[288,[2]],277],[[0,[257,258]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[296]]],14],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[296,-1],8,16],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[297,297],[298,298],[299,299],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[297]]],14],[-1,[[8,[298]]],14],[-1,[[8,[299]]],14],0,0,0,[1,2],[1,2],[1,2],[[297,297],15],[[298,298],15],[[299,299],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[288,[2]],277],[[0,[257,258]]]],[[297,4],5],[[298,4],5],[[299,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[9,9,277],[[8,[299,54]]]],[[9,9,277],[[8,[298,54]]]],0,[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[297,-1],8,16],[[298,-1],8,16],[[299,-1],8,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[300,300],[301,301],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[-1,[[8,[300]]],14],[-1,[[8,[301]]],14],0,0,[1,2],[1,2],[[300,4],5],[[301,4],5],[-1,-1,[]],[-1,-1,[]],[[9,9,277],[[8,[[0,[289]],278]]]],[[9,9,277],[[8,[[0,[289]],278]]]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[300,-1],8,16],[[301,-1],8,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,0,0,0,[[302,277],[[8,[[0,[289]],278]]]],[[9,9,277],[[8,[[48,[46]],54]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[-1,[[8,[302]]],14],[1,2],[[302,4],5],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[302,-1],8,16],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],0,[-1,-2,[],[]],[[[288,[2]],277],[[0,[257,258]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[[54,4],5],[[54,4],5],[303,54],[-1,-1,[]],[278,[[8,[[0,[289]],278]]]],[[],1],[-1,-2,[],[]],[54,304],[54,[[22,[264]]]],[54,305],[54,9],[54,304],[54,306],[-1,9,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[286,286],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[6,[[8,[286]]]],[6,[[8,[-1]]],[]],[[],1],[-1,-2,[],[]],[[286,57],15],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[[307,[-1]]],304,[259,308]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[3,"Error",4],[3,"Formatter",6705],[6,"Result",6705],[15,"str"],[6,"DbConnectionPool",4],[4,"Result",6706],[3,"String",6707],[3,"TypeId",6708],[3,"ApiTokenData",41],[3,"Challenge",63],[3,"ChallengeHighlights",63],[8,"Deserializer",6709],[15,"bool"],[8,"Serializer",6710],[4,"ReviewRanking",122],[3,"AdvisorReview",122],[6,"Result",6711],[8,"Backend",6712],[8,"Row",6713],[4,"Option",6714],[3,"Fund",189],[3,"FundStageDates",189],[3,"FundWithLegacyFields",189],[3,"Goal",290],[3,"InsertGoal",290],[3,"Group",342],[4,"Ordering",6715],[3,"Proposal",374],[3,"FullProposalInfo",374],[3,"ProposalVotePlan",374],[3,"Category",374],[3,"Proposer",374],[4,"ChallengeType",374],[4,"ProposalChallengeInfo",374],[3,"ProposalVotePlanCommon",374],[3,"SerdeProposalChallengeInfo",374],[3,"ChallengeInfo",649],[6,"ChallengeSqlValues",649],[3,"ChallengeInfo",678],[6,"ChallengeSqlValues",678],[3,"Snapshot",704],[3,"Voter",704],[3,"Contribution",704],[3,"Vote",800],[3,"VoteOptions",830],[3,"Vec",6716],[3,"Voteplan",859],[15,"slice"],[6,"DbConnection",4],[6,"QueryResult",6717],[3,"ApiToken",6066],[4,"HandleError",6640],[15,"u8"],[4,"Error",6717],[15,"i32"],[3,"FundWithNext",918],[3,"FundNextInfo",918],[8,"Iterator",6718],[15,"i64"],[4,"Constraint",6282],[4,"OrderBy",6282],[3,"Integer",6719],[3,"Text",6719],[3,"BigInt",6719],[3,"Nullable",6719],[3,"table",1182],[3,"BoxedSelectStatement",6720],[3,"Binary",6719],[3,"Array",6721],[3,"table",4809],[3,"RANDOM",972],[15,"u64"],[3,"SearchQuery",6282],[4,"SearchResponse",6282],[3,"SearchCountQuery",6282],[3,"AstPass",6722],[3,"table",1035],[3,"UpdateTarget",6723],[3,"OnClauseWrapper",6724],[3,"star",1082],[3,"creation_time",1082],[8,"AsExpression",6725],[3,"expire_time",1082],[3,"token",1082],[3,"star",1229],[3,"internal_id",1229],[3,"id",1229],[3,"rewards_total",1229],[3,"proposers_rewards",1229],[3,"fund_id",1229],[3,"challenge_type",1229],[3,"title",1229],[3,"description",1229],[3,"challenge_url",1229],[3,"highlights",1229],[3,"table",1509],[3,"star",1556],[3,"id",1556],[3,"proposal_id",1556],[3,"impact_alignment_rating_given",1556],[3,"feasibility_rating_given",1556],[3,"auditability_rating_given",1556],[3,"ranking",1556],[3,"assessor",1556],[3,"impact_alignment_note",1556],[3,"feasibility_note",1556],[3,"auditability_note",1556],[3,"table",1840],[3,"star",1887],[3,"value",1887],[3,"stake_public_key",1887],[3,"reward_address",1887],[3,"voting_key",1887],[3,"voting_group",1887],[3,"snapshot_tag",1887],[3,"table",2055],[3,"star",2102],[3,"id",2102],[3,"registration_snapshot_time",2102],[3,"next_registration_snapshot_time",2102],[3,"voting_power_threshold",2102],[3,"fund_start_time",2102],[3,"fund_end_time",2102],[3,"next_fund_start_time",2102],[3,"insight_sharing_start",2102],[3,"proposal_submission_start",2102],[3,"refine_proposals_start",2102],[3,"finalize_proposals_start",2102],[3,"proposal_assessment_start",2102],[3,"assessment_qa_start",2102],[3,"snapshot_start",2102],[3,"voting_start",2102],[3,"voting_end",2102],[3,"tallying_end",2102],[3,"fund_name",2102],[3,"fund_goal",2102],[3,"results_url",2102],[3,"survey_url",2102],[3,"table",2694],[3,"star",2741],[3,"id",2741],[3,"fund_id",2741],[3,"goal_name",2741],[3,"table",2841],[3,"star",2888],[3,"fund_id",2888],[3,"token_identifier",2888],[3,"group_id",2888],[3,"table",2984],[3,"star",3031],[3,"proposal_id",3031],[3,"proposal_brief",3031],[3,"proposal_importance",3031],[3,"proposal_goal",3031],[3,"proposal_metrics",3031],[3,"table",3171],[3,"star",3218],[3,"proposal_id",3218],[3,"proposal_solution",3218],[3,"table",3286],[3,"star",3333],[3,"id",3333],[3,"proposal_funds",3333],[3,"proposal_impact_score",3333],[3,"challenge_id",3333],[3,"proposal_id",3333],[3,"proposal_category",3333],[3,"proposal_title",3333],[3,"proposal_summary",3333],[3,"proposal_public_key",3333],[3,"proposal_url",3333],[3,"proposal_files_url",3333],[3,"proposer_name",3333],[3,"proposer_contact",3333],[3,"proposer_url",3333],[3,"proposer_relevant_experience",3333],[3,"chain_proposal_id",3333],[3,"chain_vote_options",3333],[3,"extra",3333],[3,"table",3801],[3,"star",3848],[3,"id",3848],[3,"chain_proposal_index",3848],[3,"proposal_id",3848],[3,"chain_voteplan_id",3848],[3,"table",3972],[3,"star",4019],[3,"last_updated",4019],[3,"tag",4019],[3,"table",4091],[3,"star",4138],[3,"id",4138],[3,"chain_vote_start_time",4138],[3,"chain_vote_end_time",4138],[3,"chain_committee_end_time",4138],[3,"fund_id",4138],[3,"chain_voteplan_id",4138],[3,"chain_voteplan_payload",4138],[3,"chain_vote_encryption_key",4138],[3,"token_identifier",4138],[3,"table",4394],[3,"star",4441],[3,"voting_power",4441],[3,"voting_key",4441],[3,"voting_group",4441],[3,"snapshot_tag",4441],[3,"table",4561],[3,"star",4608],[3,"proposal",4608],[3,"time",4608],[3,"choice",4608],[3,"fragment_id",4608],[3,"caster",4608],[3,"voteplan_id",4608],[3,"raw_fragment",4608],[3,"star",4856],[3,"id",4856],[3,"proposal_funds",4856],[3,"proposal_impact_score",4856],[3,"challenge_id",4856],[3,"reviews_count",4856],[3,"chain_vote_start_time",4856],[3,"chain_vote_end_time",4856],[3,"chain_committee_end_time",4856],[3,"fund_id",4856],[3,"chain_proposal_index",4856],[3,"proposal_id",4856],[3,"proposal_category",4856],[3,"proposal_title",4856],[3,"proposal_summary",4856],[3,"proposal_public_key",4856],[3,"proposal_url",4856],[3,"proposal_files_url",4856],[3,"proposer_name",4856],[3,"proposer_contact",4856],[3,"proposer_url",4856],[3,"proposer_relevant_experience",4856],[3,"chain_proposal_id",4856],[3,"chain_vote_options",4856],[3,"extra",4856],[3,"chain_voteplan_payload",4856],[3,"chain_vote_encryption_key",4856],[3,"challenge_type",4856],[3,"proposal_solution",4856],[3,"proposal_brief",4856],[3,"proposal_importance",4856],[3,"proposal_goal",4856],[3,"proposal_metrics",4856],[3,"chain_voteplan_id",4856],[3,"group_id",4856],[3,"Cors",5792],[3,"Builder",6726],[3,"Tls",5792],[3,"TlsServer",6727],[8,"Filter",6728],[8,"Clone",6729],[8,"Send",6730],[8,"Sync",6730],[3,"ServiceSettings",5792],[4,"ApplicationExitCode",5741],[3,"ExitCode",6731],[8,"Error",6732],[3,"CorsOrigin",5792],[3,"Command",6733],[3,"AllowedOrigins",5792],[4,"LogLevel",5792],[3,"Log",5792],[3,"ArgMatches",6734],[6,"Error",6735],[3,"Id",6736],[3,"Error",6737],[8,"Fn",6738],[3,"OffsetDateTime",6739],[6,"Fraction",6740],[6,"SharedContext",6115],[3,"Rejection",6741],[3,"u5",6742],[3,"Global",6743],[15,"char"],[8,"FromIterator",6744],[3,"ApiTokenManager",6066],[8,"WriteBase32",6742],[3,"Context",6115],[3,"GenesisBlock",6670],[3,"PathBuf",6745],[3,"BoxedFilter",6746],[8,"Reply",6747],[3,"GroupedReviews",6160],[3,"ChallengeWithProposals",6190],[6,"ProposalsByVoteplanIdAndIndex",6252],[3,"ProposalVoteplanIdAndIndexes",6252],[4,"Table",6282],[4,"Column",6282],[3,"ServiceVersion",6454],[3,"VoterInfo",6470],[3,"VotersInfo",6470],[3,"DelegatorInfo",6470],[3,"SnapshotInfoInput",6563],[3,"RawSnapshotInput",6563],[3,"VoteCasterAndVoteplanId",6621],[6,"PoolError",6748],[6,"Response",6747],[4,"Value",6749],[3,"StatusCode",6750],[3,"HandlerResult",6691],[8,"Serialize",6710],[6,"ProposalExtraFields",374],[3,"SerdeToProposalChallengeInfoError",374],[6,"VoteOptionsMap",830],[6,"BoxedQuery",1035],[6,"BoxedQuery",1182],[6,"BoxedQuery",1509],[6,"BoxedQuery",1840],[6,"BoxedQuery",2055],[6,"BoxedQuery",2694],[6,"BoxedQuery",2841],[6,"BoxedQuery",2984],[6,"BoxedQuery",3171],[6,"BoxedQuery",3286],[6,"BoxedQuery",3801],[6,"BoxedQuery",3972],[6,"BoxedQuery",4091],[6,"BoxedQuery",4394],[6,"BoxedQuery",4561],[6,"BoxedQuery",4809],[13,"Text",6436],[13,"Range",6436],[13,"Column",6441],[6,"Tag",6470],[6,"Group",6470]]},\
"vit_servicing_station_lib_f10":{"doc":"","t":"AAAAGGGGRFAAAMAMMAAFRDDLLLLLLLLLFLFLLLLLLMLMLLAAAAAAAADLLLLLMMLLLLMLLLLLDDLLLLLMMLLLLMLLLLLLLLLLLLLLMMMMLLMMLLMMLLLLLLLLLLLDNNNNEFFMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMLLMMLLLLLLLLLLLLLDDDMLLLLLLLMMMMLLLLLLLLLLLLLLMLLLLLLMMMMMMMMMMMMLLLMMMMMMMMMMLLLMMMMLLLLLLLLLLLLMMMMLLLDDFLLLLLLLLLLLLMMMMAMLLLLLLLDFLLLLLLLLMMLLLLLLLLDENNDGNDEDDDNNLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMMMMMMMMMMMMMMMMLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGLLLLLLLLLLLLMMMMLLLLLLLDGLLLLLLLLLLLLMLLLLLLLDGLMLLLLLLLLLLLLLLLLLLLDFLLLMMMMMMLLLLLLLLLMMLLLLLLLLAAAAAAAFFFFFFFFFFFFDDLLLLLLLLLLMMMFLLFMFFFFLLMLLLLLLLLFFFFFFFFFFFAAAAAAAAAGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLDLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLDDDLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLOOCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOCCCCCCCCCAGGFMLRLLLLLALLMALLLMLMLLLLMLMMLMLDLLLLLLLLMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAACFFFFENNNNNLLLLLLLLLLLLLLDDNNNNEDDNNMMMMAMMAFMMFMMMMMMRDRRDDRRNNNNDEDRRDNRNMMLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFMMMMMLFMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFAAFFFFFFFFFRAAAAFARDDFLFLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDGMMMLLLLMLLLFMMLLLLMLAAFAAAAACAAAAFFFFDLLLLLLLLLLCAAAAFFFFFDLLMLLLMLLLLLCCAAAFFFFFFFFFFCAAFFCAAFFDGMFAMMAAAMFFFFFFDGLLMLLLMLMLLLLMLFCFAAAAFFFDLLLLLLMLLLLNENNNNLLLLLLFLLLLLLLLLLLLDLLLLLLLLL","n":["db","server","utils","v0","Db","DbConnection","DbConnectionPool","Error","TEST_CONN_QUERY","load_db_connection_pool","migrations","models","queries","raw_connection","schema","statement_cache","transaction_manager","views_schema","embedded_migrations","initialize_db_with_migration","ALL_MIGRATIONS","EmbeddedMigration","_Dummy","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","revert","run","run","run_with_output","try_from","try_from","try_into","try_into","type_id","type_id","up_sql","version","version","vzip","vzip","api_tokens","challenges","community_advisors_reviews","funds","goals","proposals","vote_options","voteplans","ApiTokenData","borrow","borrow_mut","build","clone","clone_into","creation_time","expire_time","fmt","from","into","to_owned","token","try_from","try_into","type_id","values","vzip","Challenge","ChallengeHighlights","borrow","borrow","borrow_mut","borrow_mut","build","challenge_type","challenge_url","clone","clone","clone_into","clone_into","description","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","fund_id","highlights","id","internal_id","into","into","proposers_rewards","rewards_total","serialize","serialize","sponsor","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","AdvisorReview","Excellent","FilteredOut","Good","NA","ReviewRanking","_impl_from_sql_row_for_reviewranking","_impl_queryable_for_advisorreview","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","build","build","build_from_row","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","feasibility_note","feasibility_rating_given","fmt","fmt","from","from","from_sql","id","impact_alignment_note","impact_alignment_rating_given","into","into","proposal_id","ranking","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","Fund","FundStageDates","FundWithLegacyFields","assessment_qa_start","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","chain_vote_plans","chain_vote_plans","challenges","challenges","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalize_proposals_start","fmt","fmt","from","from","from","from","fund_end_time","fund_end_time","fund_goal","fund_goal","fund_name","fund_name","fund_start_time","fund_start_time","goals","id","id","insight_sharing_start","into","into","into","next_fund_start_time","next_fund_start_time","next_registration_snapshot_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","registration_snapshot_time","results_url","serialize","serialize","serialize","snapshot_start","stage_dates","survey_url","tallying_end","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","voting_end","voting_power_threshold","voting_power_threshold","voting_start","vzip","vzip","vzip","Goal","InsertGoal","_impl_queryable_for_goal","borrow","borrow_mut","build","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","fund_id","fund_id","goal_name","goal_name","goals_impl","id","into","serialize","to_owned","try_from","try_into","type_id","vzip","InsertGoal","_impl_insertable_for_insertgoal","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","from","fund_id","goal_name","into","to_owned","try_from","try_into","type_id","values","values","vzip","Category","ChallengeType","CommunityChoice","CommunityChoice","FullProposalInfo","FullProposalsInfoRow","Native","Proposal","ProposalChallengeInfo","Proposer","SerdeProposalChallengeInfo","SerdeToProposalChallengeInfoError","Simple","Simple","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","category_description","category_id","category_name","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_info","challenge_type","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","community","community_choice","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","fund_id","internal_id","into","into","into","into","into","into","into","into","proposal","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","serialize","serialize","serialize","serialize","serialize","serialize","serialize","simple","simple","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChallengeInfo","ChallengeSqlValues","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","into","proposal_brief","proposal_goal","proposal_importance","proposal_metrics","serialize","to_owned","to_sql_values_with_proposal_id","try_from","try_into","type_id","vzip","ChallengeInfo","ChallengeSqlValues","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","into","proposal_solution","serialize","to_owned","to_sql_values_with_proposal_id","try_from","try_into","type_id","vzip","VoteOptions","VoteOptionsMap","as_csv_string","base","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","into","parse_coma_separated_value","serialize","to_owned","try_from","try_into","type_id","vzip","Voteplan","_impl_queryable_for_voteplan","borrow","borrow_mut","build","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","fund_id","id","into","serialize","to_owned","try_from","try_into","type_id","values","vzip","api_tokens","challenges","community_advisors_reviews","funds","goals","proposals","voteplans","batch_insert_token_data","insert_token","insert_token_data","query_token","query_token_data_by_token","batch_insert_challenges","query_all_challenges","query_challenge_by_id","query_challenge_proposals_by_id","query_challenges_by_fund_id","batch_insert_advisor_reviews","query_reviews_by_fund_id","FundNextInfo","FundWithNext","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","fmt","fmt","from","from","fund","fund_name","id","insert_fund","into","into","join_fund","next","put_fund","query_all_funds","query_current_fund","query_fund_by_id","serialize","serialize","stage_dates","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","batch_insert","batch_insert_community_choice_challenge_data","batch_insert_proposals","batch_insert_simple_challenge_data","insert_proposal","query_all_proposals","query_proposal_by_id","query_proposals_by_voteplan_id_and_indexes","batch_insert_voteplans","insert_voteplan","query_voteplan_by_id","api_tokens","challenges","community_advisors_reviews","funds","goals","proposal_community_choice_challenge","proposal_simple_challenge","proposals","voteplans","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_creation_time","_impl_query_id_for_expire_time","_impl_query_id_for_token","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","creation_time","default","default","default","div","div","execute","execute","execute","expire_time","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","api_tokens","creation_time","expire_time","token","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_challenge_type","_impl_query_id_for_challenge_url","_impl_query_id_for_description","_impl_query_id_for_fund_id","_impl_query_id_for_highlights","_impl_query_id_for_id","_impl_query_id_for_internal_id","_impl_query_id_for_proposers_rewards","_impl_query_id_for_rewards_total","_impl_query_id_for_title","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_type","challenge_url","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","description","div","div","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fund_id","highlights","id","internal_id","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","proposers_rewards","rewards_total","star","sub","sub","sub","sub","sub","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","challenge_type","challenge_url","challenges","description","fund_id","highlights","id","internal_id","proposers_rewards","rewards_total","title","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_assessor","_impl_query_id_for_auditability_note","_impl_query_id_for_auditability_rating_given","_impl_query_id_for_feasibility_note","_impl_query_id_for_feasibility_rating_given","_impl_query_id_for_id","_impl_query_id_for_impact_alignment_note","_impl_query_id_for_impact_alignment_rating_given","_impl_query_id_for_proposal_id","_impl_query_id_for_ranking","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","impact_alignment_note","impact_alignment_rating_given","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","proposal_id","ranking","star","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","assessor","auditability_note","auditability_rating_given","community_advisors_reviews","feasibility_note","feasibility_rating_given","id","impact_alignment_note","impact_alignment_rating_given","proposal_id","ranking","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_assessment_qa_start","_impl_query_id_for_finalize_proposals_start","_impl_query_id_for_fund_end_time","_impl_query_id_for_fund_goal","_impl_query_id_for_fund_name","_impl_query_id_for_fund_start_time","_impl_query_id_for_id","_impl_query_id_for_insight_sharing_start","_impl_query_id_for_next_fund_start_time","_impl_query_id_for_next_registration_snapshot_time","_impl_query_id_for_proposal_assessment_start","_impl_query_id_for_proposal_submission_start","_impl_query_id_for_refine_proposals_start","_impl_query_id_for_registration_snapshot_time","_impl_query_id_for_results_url","_impl_query_id_for_snapshot_start","_impl_query_id_for_survey_url","_impl_query_id_for_tallying_end","_impl_query_id_for_voting_end","_impl_query_id_for_voting_power_threshold","_impl_query_id_for_voting_start","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","assessment_qa_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","finalize_proposals_start","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fund_end_time","fund_goal","fund_name","fund_start_time","id","insight_sharing_start","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","survey_url","tallying_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","assessment_qa_start","finalize_proposals_start","fund_end_time","fund_goal","fund_name","fund_start_time","funds","id","insight_sharing_start","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","survey_url","tallying_end","voting_end","voting_power_threshold","voting_start","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_fund_id","_impl_query_id_for_goal_name","_impl_query_id_for_id","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","div","div","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","goal_name","id","into","into","into","into","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","fund_id","goal_name","goals","id","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_proposal_brief","_impl_query_id_for_proposal_goal","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_importance","_impl_query_id_for_proposal_metrics","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","proposal_brief","proposal_goal","proposal_id","proposal_importance","proposal_metrics","star","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","proposal_brief","proposal_community_choice_challenge","proposal_goal","proposal_id","proposal_importance","proposal_metrics","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_solution","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","execute","execute","fmt","fmt","fmt","from","from","from","into","into","into","proposal_id","proposal_solution","star","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","proposal_id","proposal_simple_challenge","proposal_solution","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_proposal_id","_impl_query_id_for_chain_proposal_index","_impl_query_id_for_chain_vote_options","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_challenge_id","_impl_query_id_for_id","_impl_query_id_for_proposal_category","_impl_query_id_for_proposal_files_url","_impl_query_id_for_proposal_funds","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_impact_score","_impl_query_id_for_proposal_public_key","_impl_query_id_for_proposal_summary","_impl_query_id_for_proposal_title","_impl_query_id_for_proposal_url","_impl_query_id_for_proposer_contact","_impl_query_id_for_proposer_name","_impl_query_id_for_proposer_relevant_experience","_impl_query_id_for_proposer_url","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_id","chain_proposal_index","chain_vote_options","chain_voteplan_id","challenge_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_proposal_id","chain_proposal_index","chain_vote_options","chain_voteplan_id","challenge_id","id","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposals","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_committee_end_time","_impl_query_id_for_chain_vote_encryption_key","_impl_query_id_for_chain_vote_end_time","_impl_query_id_for_chain_vote_start_time","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_chain_voteplan_payload","_impl_query_id_for_fund_id","_impl_query_id_for_id","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","div","div","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","fund_id","id","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","fund_id","id","voteplans","full_proposals_info","BoxedQuery","SqlType","_impl_query_id_for_table","_marker","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","distinct","dsl","fmt","for_update","from","from","from_clause","group_by","into","into_update_target","join_target","limit","limit","offset","offset","order","primary_key","select","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","where_clause","_impl_query_id_for_chain_committee_end_time","_impl_query_id_for_chain_proposal_id","_impl_query_id_for_chain_proposal_index","_impl_query_id_for_chain_vote_encryption_key","_impl_query_id_for_chain_vote_end_time","_impl_query_id_for_chain_vote_options","_impl_query_id_for_chain_vote_start_time","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_chain_voteplan_payload","_impl_query_id_for_challenge_id","_impl_query_id_for_challenge_type","_impl_query_id_for_fund_id","_impl_query_id_for_id","_impl_query_id_for_proposal_brief","_impl_query_id_for_proposal_category","_impl_query_id_for_proposal_files_url","_impl_query_id_for_proposal_funds","_impl_query_id_for_proposal_goal","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_impact_score","_impl_query_id_for_proposal_importance","_impl_query_id_for_proposal_metrics","_impl_query_id_for_proposal_public_key","_impl_query_id_for_proposal_solution","_impl_query_id_for_proposal_summary","_impl_query_id_for_proposal_title","_impl_query_id_for_proposal_url","_impl_query_id_for_proposer_contact","_impl_query_id_for_proposer_name","_impl_query_id_for_proposer_relevant_experience","_impl_query_id_for_proposer_url","_impl_query_id_for_reviews_count","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div","div","div","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fund_id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","proposal_brief","proposal_category","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","full_proposals_info","fund_id","id","proposal_brief","proposal_category","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","bootstrapping","exit_codes","settings","signals","start_server","setup_cors","setup_tls","start_server","start_server_with_config","ApplicationExitCode","DbConnectionError","LoadSettingsError","ServiceVersionError","SnapshotWatcherError","WriteSettingsError","borrow","borrow_mut","eq","equivalent","equivalent","equivalent","fmt","from","from_i32","into","try_from","try_into","type_id","vzip","Cors","CorsOrigin","Debug","Disabled","Error","Info","LogLevel","ServiceSettings","Tls","Trace","Warn","address","allowed_origins","block0_path","cert_file","config","cors","db_url","default","dump_settings_to_file","enable_api_tokens","in_settings_file","load_settings_from_file","log","max_age_secs","out_settings_file","priv_key_file","service_version","tls","ADDRESS_DEFAULT","AllowedOrigins","BLOCK0_PATH_DEFAULT","CORS_ALLOWED_ORIGINS","Cors","CorsOrigin","DATABASE_URL","DB_URL_DEFAULT","Debug","Disabled","Error","Info","Log","LogLevel","ServiceSettings","TLS_CERT_FILE","TLS_PRIVATE_KEY_FILE","Tls","Trace","VIT_SERVICE_VERSION_ENV_VARIABLE","Warn","address","allowed_origins","as_ref","block0_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clap","clap","clap","clap","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cors","db_url","default","default","default","default","default","default","default","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dump_settings_to_file","enable_api_tokens","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_str","from_str","in_settings_file","into","into","into","into","into","into","into","is_loaded","load_settings_from_file","log","log_level","log_output_path","max_age_secs","out_settings_file","override_from","parse_allowed_origins","priv_key_file","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_version","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch_signal_for_shutdown","datetime","serde","unix_timestamp_to_datetime","deserialize_i64_from_str","deserialize_string_as_bytes","deserialize_truthy_falsy","deserialize_unix_timestamp_from_rfc3339","deserialize_vote_options_from_string","serialize_bin_as_str","serialize_i64_as_str","serialize_unix_timestamp_as_rfc3339","V0_REQUEST_TRACE_NAME","api_token","context","endpoints","errors","filter","result","API_TOKEN_HEADER","ApiToken","ApiTokenManager","api_token_filter","as_ref","authorize_token","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connection_pool","eq","equivalent","equivalent","equivalent","fmt","from","from","from","into","into","is_token_valid","new","new","revoke_token","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Context","SharedContext","alloc","block0","block0_path","borrow","borrow_mut","clone","clone_into","db_connection_pool","from","into","new","new_shared_context","phantom","ptr","to_owned","try_from","try_into","type_id","versioning","vzip","advisor_reviews","challenges","filter","funds","genesis","health","proposals","service_version","filter","handlers","logic","routes","schemas","get_reviews_with_proposal_id","get_advisor_reviews_with_proposal_id","group_reviews_by_assessor","filter","GroupedReviews","borrow","borrow_mut","deserialize","from","into","serialize","try_from","try_into","type_id","vzip","filter","handlers","logic","routes","schemas","get_challenge_by_id","get_challenges","get_all_challenges","get_challenge_by_id","filter","ChallengeWithProposals","borrow","borrow_mut","challenge","deserialize","from","into","proposals","serialize","try_from","try_into","type_id","vzip","admin_filter","filter","handlers","logic","routes","get_all_funds","get_fund","get_fund_by_id","put_fund","get_all_funds","get_current_fund","get_fund_by_id","put_fund","admin_filter","filter","filter","handlers","routes","get_genesis","filter","filter","handlers","routes","check_health","filter","ProposalVoteplanIdAndIndexes","ProposalsByVoteplanIdAndIndex","buf","filter","handlers","indexes","len","logic","requests","routes","vote_plan_id","get_all_proposals","get_proposal","get_proposals_by_voteplan_id_and_index","get_all_proposals","get_proposal","get_proposals_by_voteplan_id_and_index","ProposalVoteplanIdAndIndexes","ProposalsByVoteplanIdAndIndex","borrow","borrow_mut","buf","deserialize","fmt","from","indexes","into","len","serialize","try_from","try_into","type_id","vote_plan_id","vzip","filter","ServiceVersion","filter","handlers","logic","routes","schemas","service_version","service_version","filter","ServiceVersion","borrow","borrow_mut","deserialize","from","into","serialize","service_version","try_from","try_into","type_id","vzip","DatabaseError","HandleError","InternalError","InvalidHeader","NotFound","UnauthorizedToken","borrow","borrow_mut","fmt","fmt","from","from","handle_rejection","into","into_response","source","to_json","to_message","to_response","to_status_code","to_string","try_from","try_into","type_id","vzip","HandlerResult","borrow","borrow_mut","from","into","into_response","try_from","try_into","type_id","vzip"],"q":[[0,"vit_servicing_station_lib_f10"],[4,"vit_servicing_station_lib_f10::db"],[18,"vit_servicing_station_lib_f10::db::migrations"],[20,"vit_servicing_station_lib_f10::db::migrations::embedded_migrations"],[46,"vit_servicing_station_lib_f10::db::models"],[54,"vit_servicing_station_lib_f10::db::models::api_tokens"],[72,"vit_servicing_station_lib_f10::db::models::challenges"],[123,"vit_servicing_station_lib_f10::db::models::community_advisors_reviews"],[182,"vit_servicing_station_lib_f10::db::models::funds"],[269,"vit_servicing_station_lib_f10::db::models::goals"],[297,"vit_servicing_station_lib_f10::db::models::goals::goals_impl"],[317,"vit_servicing_station_lib_f10::db::models::proposals"],[502,"vit_servicing_station_lib_f10::db::models::proposals::community_choice"],[527,"vit_servicing_station_lib_f10::db::models::proposals::simple"],[549,"vit_servicing_station_lib_f10::db::models::vote_options"],[572,"vit_servicing_station_lib_f10::db::models::voteplans"],[602,"vit_servicing_station_lib_f10::db::queries"],[609,"vit_servicing_station_lib_f10::db::queries::api_tokens"],[614,"vit_servicing_station_lib_f10::db::queries::challenges"],[619,"vit_servicing_station_lib_f10::db::queries::community_advisors_reviews"],[621,"vit_servicing_station_lib_f10::db::queries::funds"],[656,"vit_servicing_station_lib_f10::db::queries::goals"],[657,"vit_servicing_station_lib_f10::db::queries::proposals"],[664,"vit_servicing_station_lib_f10::db::queries::voteplans"],[667,"vit_servicing_station_lib_f10::db::schema"],[676,"vit_servicing_station_lib_f10::db::schema::api_tokens"],[719,"vit_servicing_station_lib_f10::db::schema::api_tokens::columns"],[796,"vit_servicing_station_lib_f10::db::schema::api_tokens::dsl"],[803,"vit_servicing_station_lib_f10::db::schema::challenges"],[846,"vit_servicing_station_lib_f10::db::schema::challenges::columns"],[1061,"vit_servicing_station_lib_f10::db::schema::challenges::dsl"],[1082,"vit_servicing_station_lib_f10::db::schema::community_advisors_reviews"],[1125,"vit_servicing_station_lib_f10::db::schema::community_advisors_reviews::columns"],[1344,"vit_servicing_station_lib_f10::db::schema::community_advisors_reviews::dsl"],[1365,"vit_servicing_station_lib_f10::db::schema::funds"],[1408,"vit_servicing_station_lib_f10::db::schema::funds::columns"],[1869,"vit_servicing_station_lib_f10::db::schema::funds::dsl"],[1912,"vit_servicing_station_lib_f10::db::schema::goals"],[1955,"vit_servicing_station_lib_f10::db::schema::goals::columns"],[2032,"vit_servicing_station_lib_f10::db::schema::goals::dsl"],[2039,"vit_servicing_station_lib_f10::db::schema::proposal_community_choice_challenge"],[2082,"vit_servicing_station_lib_f10::db::schema::proposal_community_choice_challenge::columns"],[2187,"vit_servicing_station_lib_f10::db::schema::proposal_community_choice_challenge::dsl"],[2198,"vit_servicing_station_lib_f10::db::schema::proposal_simple_challenge"],[2241,"vit_servicing_station_lib_f10::db::schema::proposal_simple_challenge::columns"],[2292,"vit_servicing_station_lib_f10::db::schema::proposal_simple_challenge::dsl"],[2297,"vit_servicing_station_lib_f10::db::schema::proposals"],[2340,"vit_servicing_station_lib_f10::db::schema::proposals::columns"],[2717,"vit_servicing_station_lib_f10::db::schema::proposals::dsl"],[2756,"vit_servicing_station_lib_f10::db::schema::voteplans"],[2799,"vit_servicing_station_lib_f10::db::schema::voteplans::columns"],[2978,"vit_servicing_station_lib_f10::db::schema::voteplans::dsl"],[2995,"vit_servicing_station_lib_f10::db::views_schema"],[2996,"vit_servicing_station_lib_f10::db::views_schema::full_proposals_info"],[3039,"vit_servicing_station_lib_f10::db::views_schema::full_proposals_info::columns"],[3670,"vit_servicing_station_lib_f10::db::views_schema::full_proposals_info::dsl"],[3735,"vit_servicing_station_lib_f10::server"],[3740,"vit_servicing_station_lib_f10::server::bootstrapping"],[3744,"vit_servicing_station_lib_f10::server::exit_codes"],[3764,"vit_servicing_station_lib_f10::server::settings"],[3793,"vit_servicing_station_lib_f10::server::settings::config"],[3982,"vit_servicing_station_lib_f10::server::signals"],[3983,"vit_servicing_station_lib_f10::utils"],[3985,"vit_servicing_station_lib_f10::utils::datetime"],[3986,"vit_servicing_station_lib_f10::utils::serde"],[3994,"vit_servicing_station_lib_f10::v0"],[4001,"vit_servicing_station_lib_f10::v0::api_token"],[4037,"vit_servicing_station_lib_f10::v0::context"],[4059,"vit_servicing_station_lib_f10::v0::endpoints"],[4067,"vit_servicing_station_lib_f10::v0::endpoints::advisor_reviews"],[4072,"vit_servicing_station_lib_f10::v0::endpoints::advisor_reviews::handlers"],[4073,"vit_servicing_station_lib_f10::v0::endpoints::advisor_reviews::logic"],[4075,"vit_servicing_station_lib_f10::v0::endpoints::advisor_reviews::routes"],[4076,"vit_servicing_station_lib_f10::v0::endpoints::advisor_reviews::schemas"],[4087,"vit_servicing_station_lib_f10::v0::endpoints::challenges"],[4092,"vit_servicing_station_lib_f10::v0::endpoints::challenges::handlers"],[4094,"vit_servicing_station_lib_f10::v0::endpoints::challenges::logic"],[4096,"vit_servicing_station_lib_f10::v0::endpoints::challenges::routes"],[4097,"vit_servicing_station_lib_f10::v0::endpoints::challenges::schemas"],[4110,"vit_servicing_station_lib_f10::v0::endpoints::funds"],[4115,"vit_servicing_station_lib_f10::v0::endpoints::funds::handlers"],[4119,"vit_servicing_station_lib_f10::v0::endpoints::funds::logic"],[4123,"vit_servicing_station_lib_f10::v0::endpoints::funds::routes"],[4125,"vit_servicing_station_lib_f10::v0::endpoints::genesis"],[4128,"vit_servicing_station_lib_f10::v0::endpoints::genesis::handlers"],[4129,"vit_servicing_station_lib_f10::v0::endpoints::genesis::routes"],[4130,"vit_servicing_station_lib_f10::v0::endpoints::health"],[4133,"vit_servicing_station_lib_f10::v0::endpoints::health::handlers"],[4134,"vit_servicing_station_lib_f10::v0::endpoints::health::routes"],[4135,"vit_servicing_station_lib_f10::v0::endpoints::proposals"],[4146,"vit_servicing_station_lib_f10::v0::endpoints::proposals::handlers"],[4149,"vit_servicing_station_lib_f10::v0::endpoints::proposals::logic"],[4152,"vit_servicing_station_lib_f10::v0::endpoints::proposals::requests"],[4169,"vit_servicing_station_lib_f10::v0::endpoints::proposals::routes"],[4170,"vit_servicing_station_lib_f10::v0::endpoints::service_version"],[4176,"vit_servicing_station_lib_f10::v0::endpoints::service_version::handlers"],[4177,"vit_servicing_station_lib_f10::v0::endpoints::service_version::logic"],[4178,"vit_servicing_station_lib_f10::v0::endpoints::service_version::routes"],[4179,"vit_servicing_station_lib_f10::v0::endpoints::service_version::schemas"],[4191,"vit_servicing_station_lib_f10::v0::errors"],[4216,"vit_servicing_station_lib_f10::v0::result"],[4226,"core::result"],[4227,"diesel::connection"],[4228,"diesel::migration::errors"],[4229,"migrations_internals::connection"],[4230,"std::io"],[4231,"core::any"],[4232,"core::fmt"],[4233,"core::fmt"],[4234,"serde::ser"],[4235,"diesel::deserialize"],[4236,"diesel::backend"],[4237,"diesel::row"],[4238,"core::option"],[4239,"alloc::string"],[4240,"diesel::result"],[4241,"diesel::result"],[4242,"diesel::sqlite::connection"],[4243,"diesel::r2d2"],[4244,"r2d2"],[4245,"diesel::query_builder::update_statement::target"],[4246,"diesel::query_source::joins"],[4247,"diesel::expression"],[4248,"diesel::query_builder::ast_pass"],[4249,"warp::filters::cors"],[4250,"warp::server"],[4251,"warp::filter"],[4252,"core::clone"],[4253,"core::marker"],[4254,"core::marker"],[4255,"clap::app"],[4256,"clap::args::arg_matches"],[4257,"std::io::error"],[4258,"time::offset_date_time"],[4259,"warp::reject"],[4260,"warp::filter::boxed"],[4261,"warp::reply"],[4262,"diesel::r2d2"],[4263,"http::status"],[4264,"serde::ser"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Insert a token asynchronously. This method is a wrapper …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …elper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …eturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Server binding address","If none provided, echos request origin","block0 static file path","Path to server X.509 certificate chain file, must be …","","","Database url","","","Enable API Tokens feature","Load settings from file","","","If none provided, CORS responses won’t be cached","Dump current settings to file","Path to server private key file, must be PKCS8 with single …","","","","","","","","","Settings environment variables names","","","","","","","","","","","","","","","Server binding address","If none provided, echos request origin","","block0 static file path","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","","","Database url","","","","","","","","","","","","","","","","","Enable API Tokens feature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Load settings from file","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Application logging level","Output log file path","If none provided, CORS responses won’t be cached","Dump current settings to file","","","Path to server private key file, must be PKCS8 with single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Header where token should be present in requests","API Token wrapper type","API token manager is an abstraction on the API tokens for …","A warp filter that checks authorization through API tokens.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,5,0,0,0,0,0,0,7,234,7,234,7,234,7,234,7,0,7,0,7,234,7,234,7,234,7,7,7,7,234,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,17,16,17,16,16,16,16,17,16,17,16,16,17,16,17,16,17,17,17,16,16,16,17,16,17,16,16,16,16,16,17,16,16,16,17,16,17,16,17,16,17,16,17,16,17,16,16,17,16,0,21,21,21,21,0,0,0,22,22,22,21,22,21,22,21,22,21,21,22,21,22,21,22,21,22,21,21,21,22,22,22,22,22,21,22,21,22,21,22,22,22,21,22,22,22,21,22,21,22,21,22,21,22,21,22,22,21,22,0,0,0,28,27,28,29,27,28,29,27,27,29,27,29,27,28,27,28,27,28,27,28,27,27,27,28,28,28,28,27,28,27,28,29,29,27,29,27,29,27,29,27,29,27,27,29,28,27,28,29,27,29,27,29,28,28,28,27,29,27,27,28,29,28,27,27,28,27,28,27,28,29,27,28,29,27,28,29,27,28,27,29,28,27,28,29,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,31,30,31,0,30,30,30,30,30,30,30,30,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,36,37,0,0,36,0,0,0,0,0,36,37,235,34,35,36,32,37,38,33,235,34,35,36,32,37,38,33,32,33,34,34,34,32,32,32,32,32,32,32,32,32,32,33,33,34,35,36,32,37,33,34,35,36,32,37,33,38,0,34,35,36,32,37,38,33,34,35,36,32,37,33,34,34,34,35,35,35,36,36,36,32,32,32,37,37,37,33,33,33,34,35,36,36,32,37,33,235,34,35,36,32,37,38,38,33,36,32,32,235,34,35,36,32,37,38,33,33,32,32,32,32,32,32,32,32,32,32,35,35,35,35,32,34,35,36,32,37,38,33,0,38,34,35,36,32,37,33,36,235,34,35,36,32,37,37,38,33,235,34,35,36,32,37,38,33,235,34,35,36,32,37,38,33,32,235,34,35,36,32,37,38,33,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,44,236,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,56,55,56,55,56,55,56,55,56,55,56,56,0,55,56,0,55,0,0,0,0,55,56,56,55,56,55,56,55,56,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,237,61,0,61,61,61,61,61,0,61,61,237,0,61,61,61,237,61,237,61,61,61,61,237,61,237,237,61,237,61,0,61,61,61,61,61,61,61,61,237,0,0,0,65,67,64,68,65,67,64,68,65,67,64,68,65,67,64,68,65,67,64,68,65,67,0,68,65,67,65,67,68,65,67,0,64,68,65,67,64,68,65,67,64,68,65,67,65,67,0,65,67,64,68,65,67,0,64,68,65,67,64,68,65,67,64,68,65,67,64,68,65,67,64,68,65,67,0,0,0,0,0,0,0,0,0,0,238,70,0,70,70,70,70,70,0,70,70,238,0,70,70,70,238,70,238,70,70,70,70,238,70,238,238,70,238,70,0,70,70,70,70,70,70,70,70,238,0,0,0,0,0,0,0,0,0,0,72,73,74,75,76,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,0,0,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,72,73,77,78,79,74,75,76,80,81,0,72,73,74,75,76,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,0,0,0,0,71,72,73,77,78,79,74,75,76,80,81,72,73,74,75,76,0,0,0,72,73,74,75,76,0,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,71,72,73,77,78,79,74,75,76,80,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,239,82,0,82,82,82,82,82,0,82,82,239,0,82,82,82,239,82,239,82,82,82,82,239,82,239,239,82,239,82,0,82,82,82,82,82,82,82,82,239,0,0,0,0,0,0,0,0,0,0,84,85,86,87,88,89,83,84,85,90,86,91,87,92,88,93,89,0,0,0,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,84,85,90,86,91,87,92,88,93,89,84,85,86,87,88,89,84,85,90,86,91,87,92,88,93,89,0,0,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,0,0,0,83,84,85,90,86,91,87,92,88,93,89,84,85,86,87,88,89,0,0,0,84,85,86,87,88,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,83,84,85,90,86,91,87,92,88,93,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,94,0,94,94,94,94,94,0,94,94,240,0,94,94,94,240,94,240,94,94,94,94,240,94,240,240,94,240,94,0,94,94,94,94,94,94,94,94,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,0,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,0,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,0,0,0,0,0,0,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,0,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,0,0,0,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,95,96,113,114,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,241,117,0,117,117,117,117,117,0,117,117,241,0,117,117,117,241,117,241,117,117,117,117,241,117,241,241,117,241,117,0,117,117,117,117,117,117,117,117,241,0,0,0,119,120,118,119,121,120,118,119,121,120,118,119,121,120,118,119,121,120,118,119,121,120,119,121,120,119,120,119,121,120,118,119,121,120,118,119,121,120,0,0,0,118,119,121,120,119,120,0,119,120,118,119,121,120,118,119,121,120,118,119,121,120,118,119,121,120,118,119,121,120,118,119,121,120,0,0,0,0,0,0,0,0,0,0,242,122,0,122,122,122,122,122,0,122,122,242,0,122,122,122,242,122,242,122,122,122,122,242,122,242,242,122,242,122,0,122,122,122,122,122,122,122,122,242,0,0,0,0,0,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,124,125,126,127,128,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,0,0,0,0,0,0,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,129,0,129,129,129,129,129,0,129,129,243,0,129,129,129,243,129,243,129,129,129,129,243,129,243,243,129,243,129,0,129,129,129,129,129,129,129,129,243,0,0,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,131,132,131,132,130,131,132,130,131,132,130,131,132,0,0,0,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,130,131,132,0,0,0,0,0,0,0,0,244,133,0,133,133,133,133,133,0,133,133,244,0,133,133,133,244,133,244,133,133,133,133,244,133,244,244,133,244,133,0,133,133,133,133,133,133,133,133,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,136,137,138,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,0,0,0,0,0,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,135,136,137,138,139,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,0,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,135,136,137,138,139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,136,137,138,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,134,135,140,141,142,143,144,136,145,146,137,147,148,149,150,151,138,152,153,139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,245,154,0,154,154,154,154,154,0,154,154,245,0,154,154,154,245,154,245,154,154,154,154,245,154,245,245,154,245,154,0,154,154,154,154,154,154,154,154,245,0,0,0,0,0,0,0,0,156,157,158,159,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,0,0,0,0,0,0,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,156,161,157,158,159,162,163,160,156,157,158,159,160,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,0,0,155,156,161,157,158,159,162,163,160,156,157,158,159,160,0,156,157,158,159,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,155,156,161,157,158,159,162,163,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,164,0,164,164,164,164,164,0,164,164,246,0,164,164,164,246,164,246,164,164,164,164,246,164,246,246,164,246,164,0,164,164,164,164,164,164,164,164,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,167,168,169,170,171,172,173,174,175,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,0,0,0,0,0,0,0,0,0,0,0,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,166,167,168,169,170,171,172,173,174,175,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,0,0,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,166,167,168,169,170,171,172,173,174,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,167,168,169,170,171,172,173,174,175,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,165,166,176,177,178,179,180,167,181,182,168,183,184,185,186,187,169,188,189,170,171,172,190,191,173,174,175,192,193,194,195,196,197,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,0,0,212,212,212,212,0,0,0,212,212,206,198,206,200,0,206,206,0,0,206,206,0,206,198,206,200,206,206,0,0,0,0,0,0,0,0,212,212,212,212,0,0,0,0,0,0,212,0,212,206,198,209,206,206,200,209,211,198,212,213,206,200,209,211,198,212,213,200,206,200,198,213,206,200,209,211,198,212,213,206,200,209,211,198,212,213,206,206,206,200,209,211,198,212,213,211,206,200,209,211,198,212,213,0,206,206,200,209,211,198,212,213,206,206,206,200,200,200,209,209,209,211,211,211,198,198,198,212,212,212,213,213,213,206,200,209,211,198,212,212,213,206,200,209,211,198,212,213,206,200,198,213,209,212,206,206,200,209,211,198,212,213,200,0,206,213,213,198,206,206,0,200,206,200,209,211,198,212,213,206,206,206,200,209,211,198,212,213,212,206,200,209,211,198,212,213,206,200,209,211,198,212,213,206,200,209,211,198,212,213,206,200,209,211,198,212,213,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,219,49,219,49,49,49,219,49,49,49,49,49,219,49,49,219,49,219,219,49,219,49,219,49,219,49,219,49,219,49,0,0,217,220,220,220,220,220,220,220,220,220,220,0,217,217,220,220,220,220,220,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,223,223,223,223,223,223,223,223,223,0,0,0,0,0,0,0,0,0,0,0,224,224,224,224,224,224,224,224,224,224,224,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,0,0,226,225,0,0,0,226,0,0,0,0,0,0,0,0,226,226,225,226,226,226,226,226,225,226,226,226,226,226,226,0,0,0,0,0,0,0,0,0,0,0,227,227,227,227,227,227,227,227,227,227,227,50,0,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,0,232,232,232,232,232,232,232,232,232],"f":[0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],0,0,0,0,0,0,0,0,0,[5,6],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,8],[[4,[6,9]]]],[-1,[[4,[6,9]]],10],[[7,8],[[4,[6,9]]]],[[-1,11],[[4,[6,9]]],10],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,[7,1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[13,13],[[-1,-2],6,[],[]],0,0,[[13,14],15],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[13],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],0,0,[17,17],[16,16],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,[-1,[[4,[17]]],18],[-1,[[4,[16]]],18],[[17,17],19],[[16,16],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[17,14],15],[[16,14],15],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[17,-1],4,20],[[16,-1],4,20],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[16],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[],6],[[],6],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[[],22],[-2,[[23,[21]]],24,[[25,[-1]]]],[21,21],[22,22],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[-1,[[4,[21]]],18],[-1,[[4,[22]]],18],[[21,21],19],[[22,22],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],0,0,[[21,14],15],[[22,14],15],[-1,-1,[]],[-1,-1,[]],[26,[[23,[21]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[21,-1],4,20],[[22,-1],4,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[22],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],27],0,0,0,0,[27,27],[28,28],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[-1,[[4,[27]]],18],[-1,[[4,[28]]],18],[[27,27],19],[[28,28],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],0,[[27,14],15],[[28,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[27,29],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[27,-1],4,20],[[28,-1],4,20],[[29,-1],4,20],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[27],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[],30],[30,30],[[-1,-2],6,[],[]],[-1,[[4,[30]]],18],[[30,30],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[30,14],15],[-1,-1,[]],0,0,0,0,0,0,[-1,-2,[],[]],[[30,-1],4,20],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],6,[],[]],[-1,[[4,[31]]],18],[[31,14],15],[-1,-1,[]],[30,31],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[31],[31],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],32],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34,34],[35,35],[36,36],[32,32],[37,37],[33,33],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,0,[-1,[[4,[34]]],18],[-1,[[4,[35]]],18],[-1,[[4,[36]]],18],[-1,[[4,[32]]],18],[-1,[[4,[37]]],18],[-1,[[4,[38]]],18],[-1,[[4,[33]]],18],[[34,34],19],[[35,35],19],[[36,36],19],[[32,32],19],[[37,37],19],[[33,33],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[34,14],15],[[35,14],15],[[36,14],15],[[36,14],15],[[32,14],15],[[37,14],15],[[33,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[37,38],[-1,-1,[]],[-1,-1,[]],[1,[[4,[36]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[34,-1],4,20],[[35,-1],4,20],[[36,-1],4,20],[[32,-1],4,20],[[37,-1],4,20],[[38,-1],4,20],[[33,-1],4,20],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[38,[[4,[37]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[[-1,-2],6,[],[]],[-1,[[4,[40]]],18],[[40,40],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[40,14],15],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[[40,-1],4,20],[-1,-2,[],[]],[[40,1],41],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[[-1,-2],6,[],[]],[-1,[[4,[42]]],18],[[42,42],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[42,14],15],[-1,-1,[]],[-1,-2,[],[]],0,[[42,-1],4,20],[-1,-2,[],[]],[[42,1],43],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,[44,39],0,[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],6,[],[]],[-1,[[4,[44]]],18],[[44,44],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[44,14],15],[-1,-1,[]],[-1,-2,[],[]],[1,44],[[44,-1],4,20],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],0,0,0,0,0,0,[45,45],[[-1,-2],6,[],[]],[-1,[[4,[45]]],18],[[45,45],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[45,14],15],[-1,-1,[]],0,0,[-1,-2,[],[]],[[45,-1],4,20],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[45],[-1,-2,[],[]],0,0,0,0,0,0,0,[[[46,[13]],5],[[48,[47]]]],[[49,2],[[4,[6,50]]]],[[13,5],[[48,[47]]]],[[49,2],[[4,[[26,[13]],50]]]],[[[46,[51]],5],[[4,[[26,[13]],52]]]],[[46,5],[[48,[47]]]],[2,[[4,[[53,[16]],50]]]],[[54,2],[[4,[16,50]]]],[[54,2],[[4,[[53,[32]],50]]]],[[54,2],[[4,[[53,[16]],50]]]],[[[46,[22]],5],[[48,[47]]]],[[54,2],[[4,[[53,[22]],50]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[55]]],18],[-1,[[4,[56]]],18],[[55,14],15],[[56,14],15],[-1,-1,[]],[-1,-1,[]],0,0,0,[[27,5],[[48,[27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[27,[59,[[58,[57]]]]],[[4,[27,50]]]],0,[[27,2],[[4,[6,50]]]],[2,[[4,[[53,[54]],50]]]],[2,[[4,[55,50]]]],[[54,2],[[4,[27,50]]]],[[55,-1],4,20],[[56,-1],4,20],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[31]],5],[[48,[47]]]],[[[46,[41]],5],[[48,[47]]]],[[[46,[32]],5],[[48,[47]]]],[[[46,[43]],5],[[48,[47]]]],[[32,5],[[48,[47]]]],[2,[[4,[[53,[33]],50]]]],[[54,2],[[4,[33,50]]]],[[39,[53,[60]],2],[[4,[[53,[33]],50]]]],[[[46,[45]],5],[[48,[[53,[45]]]]]],[[45,5],[[48,[45]]]],[[54,2],[[4,[[53,[45]],50]]]],0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[61],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[[-1,-2],6,[],[]],0,[61],[-1,[],[]],0,0,[[61,14],15],[-1,[],[]],[-1,-1,[]],0,[61],0,[-1,-2,[],[]],[61,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[61],0,[61,64],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[61],[61],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[65,-1],[],66],[[67,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[68,68],[65,65],[67,67],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,[[],68],[[],65],[[],67],[[65,-1],[],66],[[67,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],0,[[64,14],15],[[68,14],15],[[65,14],15],[[67,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,-1],[],66],[[67,-1],[],66],0,[[65,-1],[],66],[[67,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[64,[69,[-1]]],[[48,[6]]],24],[[68,[69,[-1]]],[[48,[6]]],24],[[65,[69,[-1]]],[[48,[6]]],24],[[67,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[70],[-1,-2,[],[]],[-1,-2,[],[]],[70,70],[[-1,-2],6,[],[]],0,[70],[-1,[],[]],0,0,[[70,14],15],[-1,[],[]],[-1,-1,[]],0,[70],0,[-1,-2,[],[]],[70,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[70],0,[70,71],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[70],[70],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[72,-1],[],66],[[73,-1],[],66],[[74,-1],[],66],[[75,-1],[],66],[[76,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[71,71],[72,72],[73,73],[77,77],[78,78],[79,79],[74,74],[75,75],[76,76],[80,80],[81,81],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],72],[[],73],[[],77],[[],78],[[],79],[[],74],[[],75],[[],76],[[],80],[[],81],0,[[72,-1],[],66],[[73,-1],[],66],[[74,-1],[],66],[[75,-1],[],66],[[76,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[71,14],15],[[72,14],15],[[73,14],15],[[77,14],15],[[78,14],15],[[79,14],15],[[74,14],15],[[75,14],15],[[76,14],15],[[80,14],15],[[81,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[72,-1],[],66],[[73,-1],[],66],[[74,-1],[],66],[[75,-1],[],66],[[76,-1],[],66],0,0,0,[[72,-1],[],66],[[73,-1],[],66],[[74,-1],[],66],[[75,-1],[],66],[[76,-1],[],66],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[71,[69,[-1]]],[[48,[6]]],24],[[72,[69,[-1]]],[[48,[6]]],24],[[73,[69,[-1]]],[[48,[6]]],24],[[77,[69,[-1]]],[[48,[6]]],24],[[78,[69,[-1]]],[[48,[6]]],24],[[79,[69,[-1]]],[[48,[6]]],24],[[74,[69,[-1]]],[[48,[6]]],24],[[75,[69,[-1]]],[[48,[6]]],24],[[76,[69,[-1]]],[[48,[6]]],24],[[80,[69,[-1]]],[[48,[6]]],24],[[81,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[82],[-1,-2,[],[]],[-1,-2,[],[]],[82,82],[[-1,-2],6,[],[]],0,[82],[-1,[],[]],0,0,[[82,14],15],[-1,[],[]],[-1,-1,[]],0,[82],0,[-1,-2,[],[]],[82,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[82],0,[82,83],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[82],[82],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[84,-1],[],66],[[85,-1],[],66],[[86,-1],[],66],[[87,-1],[],66],[[88,-1],[],66],[[89,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[84,84],[85,85],[90,90],[86,86],[91,91],[87,87],[92,92],[88,88],[93,93],[89,89],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],84],[[],85],[[],90],[[],86],[[],91],[[],87],[[],92],[[],88],[[],93],[[],89],[[84,-1],[],66],[[85,-1],[],66],[[86,-1],[],66],[[87,-1],[],66],[[88,-1],[],66],[[89,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],0,0,[[83,14],15],[[84,14],15],[[85,14],15],[[90,14],15],[[86,14],15],[[91,14],15],[[87,14],15],[[92,14],15],[[88,14],15],[[93,14],15],[[89,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[84,-1],[],66],[[85,-1],[],66],[[86,-1],[],66],[[87,-1],[],66],[[88,-1],[],66],[[89,-1],[],66],0,0,0,[[84,-1],[],66],[[85,-1],[],66],[[86,-1],[],66],[[87,-1],[],66],[[88,-1],[],66],[[89,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[83,[69,[-1]]],[[48,[6]]],24],[[84,[69,[-1]]],[[48,[6]]],24],[[85,[69,[-1]]],[[48,[6]]],24],[[90,[69,[-1]]],[[48,[6]]],24],[[86,[69,[-1]]],[[48,[6]]],24],[[91,[69,[-1]]],[[48,[6]]],24],[[87,[69,[-1]]],[[48,[6]]],24],[[92,[69,[-1]]],[[48,[6]]],24],[[88,[69,[-1]]],[[48,[6]]],24],[[93,[69,[-1]]],[[48,[6]]],24],[[89,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[94],[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[[-1,-2],6,[],[]],0,[94],[-1,[],[]],0,0,[[94,14],15],[-1,[],[]],[-1,-1,[]],0,[94],0,[-1,-2,[],[]],[94,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[94],0,[94,95],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[94],[94],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[96,-1],[],66],[[97,-1],[],66],[[98,-1],[],66],[[99,-1],[],66],[[100,-1],[],66],[[101,-1],[],66],[[102,-1],[],66],[[103,-1],[],66],[[104,-1],[],66],[[105,-1],[],66],[[106,-1],[],66],[[107,-1],[],66],[[108,-1],[],66],[[109,-1],[],66],[[110,-1],[],66],[[111,-1],[],66],[[112,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,95],[96,96],[113,113],[114,114],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[115,115],[116,116],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],96],[[],113],[[],114],[[],97],[[],98],[[],99],[[],100],[[],101],[[],102],[[],103],[[],104],[[],105],[[],106],[[],107],[[],108],[[],109],[[],110],[[],111],[[],112],[[],115],[[],116],[[96,-1],[],66],[[97,-1],[],66],[[98,-1],[],66],[[99,-1],[],66],[[100,-1],[],66],[[101,-1],[],66],[[102,-1],[],66],[[103,-1],[],66],[[104,-1],[],66],[[105,-1],[],66],[[106,-1],[],66],[[107,-1],[],66],[[108,-1],[],66],[[109,-1],[],66],[[110,-1],[],66],[[111,-1],[],66],[[112,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],0,[[95,14],15],[[96,14],15],[[113,14],15],[[114,14],15],[[97,14],15],[[98,14],15],[[99,14],15],[[100,14],15],[[101,14],15],[[102,14],15],[[103,14],15],[[104,14],15],[[105,14],15],[[106,14],15],[[107,14],15],[[108,14],15],[[109,14],15],[[110,14],15],[[111,14],15],[[112,14],15],[[115,14],15],[[116,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[96,-1],[],66],[[97,-1],[],66],[[98,-1],[],66],[[99,-1],[],66],[[100,-1],[],66],[[101,-1],[],66],[[102,-1],[],66],[[103,-1],[],66],[[104,-1],[],66],[[105,-1],[],66],[[106,-1],[],66],[[107,-1],[],66],[[108,-1],[],66],[[109,-1],[],66],[[110,-1],[],66],[[111,-1],[],66],[[112,-1],[],66],0,0,0,0,0,0,0,0,0,[[96,-1],[],66],[[97,-1],[],66],[[98,-1],[],66],[[99,-1],[],66],[[100,-1],[],66],[[101,-1],[],66],[[102,-1],[],66],[[103,-1],[],66],[[104,-1],[],66],[[105,-1],[],66],[[106,-1],[],66],[[107,-1],[],66],[[108,-1],[],66],[[109,-1],[],66],[[110,-1],[],66],[[111,-1],[],66],[[112,-1],[],66],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[95,[69,[-1]]],[[48,[6]]],24],[[96,[69,[-1]]],[[48,[6]]],24],[[113,[69,[-1]]],[[48,[6]]],24],[[114,[69,[-1]]],[[48,[6]]],24],[[97,[69,[-1]]],[[48,[6]]],24],[[98,[69,[-1]]],[[48,[6]]],24],[[99,[69,[-1]]],[[48,[6]]],24],[[100,[69,[-1]]],[[48,[6]]],24],[[101,[69,[-1]]],[[48,[6]]],24],[[102,[69,[-1]]],[[48,[6]]],24],[[103,[69,[-1]]],[[48,[6]]],24],[[104,[69,[-1]]],[[48,[6]]],24],[[105,[69,[-1]]],[[48,[6]]],24],[[106,[69,[-1]]],[[48,[6]]],24],[[107,[69,[-1]]],[[48,[6]]],24],[[108,[69,[-1]]],[[48,[6]]],24],[[109,[69,[-1]]],[[48,[6]]],24],[[110,[69,[-1]]],[[48,[6]]],24],[[111,[69,[-1]]],[[48,[6]]],24],[[112,[69,[-1]]],[[48,[6]]],24],[[115,[69,[-1]]],[[48,[6]]],24],[[116,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[117],[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[[-1,-2],6,[],[]],0,[117],[-1,[],[]],0,0,[[117,14],15],[-1,[],[]],[-1,-1,[]],0,[117],0,[-1,-2,[],[]],[117,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[117],0,[117,118],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[117],[117],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[119,-1],[],66],[[120,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[118,118],[119,119],[121,121],[120,120],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],119],[[],121],[[],120],[[119,-1],[],66],[[120,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[118,14],15],[[119,14],15],[[121,14],15],[[120,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[119,-1],[],66],[[120,-1],[],66],0,[[119,-1],[],66],[[120,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[118,[69,[-1]]],[[48,[6]]],24],[[119,[69,[-1]]],[[48,[6]]],24],[[121,[69,[-1]]],[[48,[6]]],24],[[120,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[122],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[[-1,-2],6,[],[]],0,[122],[-1,[],[]],0,0,[[122,14],15],[-1,[],[]],[-1,-1,[]],0,[122],0,[-1,-2,[],[]],[122,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[122],0,[122,123],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[122],[122],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],124],[[],125],[[],126],[[],127],[[],128],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[123,14],15],[[124,14],15],[[125,14],15],[[126,14],15],[[127,14],15],[[128,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[123,[69,[-1]]],[[48,[6]]],24],[[124,[69,[-1]]],[[48,[6]]],24],[[125,[69,[-1]]],[[48,[6]]],24],[[126,[69,[-1]]],[[48,[6]]],24],[[127,[69,[-1]]],[[48,[6]]],24],[[128,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[129],[-1,-2,[],[]],[-1,-2,[],[]],[129,129],[[-1,-2],6,[],[]],0,[129],[-1,[],[]],0,0,[[129,14],15],[-1,[],[]],[-1,-1,[]],0,[129],0,[-1,-2,[],[]],[129,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[129],0,[129,130],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[129],[129],[-1,-2,[],[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,130],[131,131],[132,132],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],131],[[],132],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[130,14],15],[[131,14],15],[[132,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[130,[69,[-1]]],[[48,[6]]],24],[[131,[69,[-1]]],[[48,[6]]],24],[[132,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,[[],6],0,[[]],0,[133],[-1,-2,[],[]],[-1,-2,[],[]],[133,133],[[-1,-2],6,[],[]],0,[133],[-1,[],[]],0,0,[[133,14],15],[-1,[],[]],[-1,-1,[]],0,[133],0,[-1,-2,[],[]],[133,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[133],0,[133,134],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[133],[133],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[135,-1],[],66],[[136,-1],[],66],[[137,-1],[],66],[[138,-1],[],66],[[139,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[134,134],[135,135],[140,140],[141,141],[142,142],[143,143],[144,144],[136,136],[145,145],[146,146],[137,137],[147,147],[148,148],[149,149],[150,150],[151,151],[138,138],[152,152],[153,153],[139,139],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],135],[[],140],[[],141],[[],142],[[],143],[[],144],[[],136],[[],145],[[],146],[[],137],[[],147],[[],148],[[],149],[[],150],[[],151],[[],138],[[],152],[[],153],[[],139],[[135,-1],[],66],[[136,-1],[],66],[[137,-1],[],66],[[138,-1],[],66],[[139,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[134,14],15],[[135,14],15],[[140,14],15],[[141,14],15],[[142,14],15],[[143,14],15],[[144,14],15],[[136,14],15],[[145,14],15],[[146,14],15],[[137,14],15],[[147,14],15],[[148,14],15],[[149,14],15],[[150,14],15],[[151,14],15],[[138,14],15],[[152,14],15],[[153,14],15],[[139,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[135,-1],[],66],[[136,-1],[],66],[[137,-1],[],66],[[138,-1],[],66],[[139,-1],[],66],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[135,-1],[],66],[[136,-1],[],66],[[137,-1],[],66],[[138,-1],[],66],[[139,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[134,[69,[-1]]],[[48,[6]]],24],[[135,[69,[-1]]],[[48,[6]]],24],[[140,[69,[-1]]],[[48,[6]]],24],[[141,[69,[-1]]],[[48,[6]]],24],[[142,[69,[-1]]],[[48,[6]]],24],[[143,[69,[-1]]],[[48,[6]]],24],[[144,[69,[-1]]],[[48,[6]]],24],[[136,[69,[-1]]],[[48,[6]]],24],[[145,[69,[-1]]],[[48,[6]]],24],[[146,[69,[-1]]],[[48,[6]]],24],[[137,[69,[-1]]],[[48,[6]]],24],[[147,[69,[-1]]],[[48,[6]]],24],[[148,[69,[-1]]],[[48,[6]]],24],[[149,[69,[-1]]],[[48,[6]]],24],[[150,[69,[-1]]],[[48,[6]]],24],[[151,[69,[-1]]],[[48,[6]]],24],[[138,[69,[-1]]],[[48,[6]]],24],[[152,[69,[-1]]],[[48,[6]]],24],[[153,[69,[-1]]],[[48,[6]]],24],[[139,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[154],[-1,-2,[],[]],[-1,-2,[],[]],[154,154],[[-1,-2],6,[],[]],0,[154],[-1,[],[]],0,0,[[154,14],15],[-1,[],[]],[-1,-1,[]],0,[154],0,[-1,-2,[],[]],[154,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[154],0,[154,155],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[154],[154],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[156,-1],[],66],[[157,-1],[],66],[[158,-1],[],66],[[159,-1],[],66],[[160,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[155,155],[156,156],[161,161],[157,157],[158,158],[159,159],[162,162],[163,163],[160,160],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],156],[[],161],[[],157],[[],158],[[],159],[[],162],[[],163],[[],160],[[156,-1],[],66],[[157,-1],[],66],[[158,-1],[],66],[[159,-1],[],66],[[160,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[155,14],15],[[156,14],15],[[161,14],15],[[157,14],15],[[158,14],15],[[159,14],15],[[162,14],15],[[163,14],15],[[160,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[156,-1],[],66],[[157,-1],[],66],[[158,-1],[],66],[[159,-1],[],66],[[160,-1],[],66],0,[[156,-1],[],66],[[157,-1],[],66],[[158,-1],[],66],[[159,-1],[],66],[[160,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[155,[69,[-1]]],[[48,[6]]],24],[[156,[69,[-1]]],[[48,[6]]],24],[[161,[69,[-1]]],[[48,[6]]],24],[[157,[69,[-1]]],[[48,[6]]],24],[[158,[69,[-1]]],[[48,[6]]],24],[[159,[69,[-1]]],[[48,[6]]],24],[[162,[69,[-1]]],[[48,[6]]],24],[[163,[69,[-1]]],[[48,[6]]],24],[[160,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],0,[[]],0,[164],[-1,-2,[],[]],[-1,-2,[],[]],[164,164],[[-1,-2],6,[],[]],0,[164],[-1,[],[]],0,0,[[164,14],15],[-1,[],[]],[-1,-1,[]],0,[164],0,[-1,-2,[],[]],[164,62],[[[63,[-1,-2]]],6,[],[]],[[-1,60],[],[]],0,[[-1,60],[],[]],0,0,[164],0,[164,165],0,[[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[164],[164],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[166,-1],[],66],[[167,-1],[],66],[[168,-1],[],66],[[169,-1],[],66],[[170,-1],[],66],[[171,-1],[],66],[[172,-1],[],66],[[173,-1],[],66],[[174,-1],[],66],[[175,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[165,165],[166,166],[176,176],[177,177],[178,178],[179,179],[180,180],[167,167],[181,181],[182,182],[168,168],[183,183],[184,184],[185,185],[186,186],[187,187],[169,169],[188,188],[189,189],[170,170],[171,171],[172,172],[190,190],[191,191],[173,173],[174,174],[175,175],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[],166],[[],176],[[],177],[[],178],[[],179],[[],180],[[],167],[[],181],[[],182],[[],168],[[],183],[[],184],[[],185],[[],186],[[],187],[[],169],[[],188],[[],189],[[],170],[[],171],[[],172],[[],190],[[],191],[[],173],[[],174],[[],175],[[],192],[[],193],[[],194],[[],195],[[],196],[[],197],[[166,-1],[],66],[[167,-1],[],66],[[168,-1],[],66],[[169,-1],[],66],[[170,-1],[],66],[[171,-1],[],66],[[172,-1],[],66],[[173,-1],[],66],[[174,-1],[],66],[[175,-1],[],66],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[-1,-2],[[4,[47,52]]],[],[]],[[165,14],15],[[166,14],15],[[176,14],15],[[177,14],15],[[178,14],15],[[179,14],15],[[180,14],15],[[167,14],15],[[181,14],15],[[182,14],15],[[168,14],15],[[183,14],15],[[184,14],15],[[185,14],15],[[186,14],15],[[187,14],15],[[169,14],15],[[188,14],15],[[189,14],15],[[170,14],15],[[171,14],15],[[172,14],15],[[190,14],15],[[191,14],15],[[173,14],15],[[174,14],15],[[175,14],15],[[192,14],15],[[193,14],15],[[194,14],15],[[195,14],15],[[196,14],15],[[197,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[166,-1],[],66],[[167,-1],[],66],[[168,-1],[],66],[[169,-1],[],66],[[170,-1],[],66],[[171,-1],[],66],[[172,-1],[],66],[[173,-1],[],66],[[174,-1],[],66],[[175,-1],[],66],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[166,-1],[],66],[[167,-1],[],66],[[168,-1],[],66],[[169,-1],[],66],[[170,-1],[],66],[[171,-1],[],66],[[172,-1],[],66],[[173,-1],[],66],[[174,-1],[],66],[[175,-1],[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[165,[69,[-1]]],[[48,[6]]],24],[[166,[69,[-1]]],[[48,[6]]],24],[[176,[69,[-1]]],[[48,[6]]],24],[[177,[69,[-1]]],[[48,[6]]],24],[[178,[69,[-1]]],[[48,[6]]],24],[[179,[69,[-1]]],[[48,[6]]],24],[[180,[69,[-1]]],[[48,[6]]],24],[[167,[69,[-1]]],[[48,[6]]],24],[[181,[69,[-1]]],[[48,[6]]],24],[[182,[69,[-1]]],[[48,[6]]],24],[[168,[69,[-1]]],[[48,[6]]],24],[[183,[69,[-1]]],[[48,[6]]],24],[[184,[69,[-1]]],[[48,[6]]],24],[[185,[69,[-1]]],[[48,[6]]],24],[[186,[69,[-1]]],[[48,[6]]],24],[[187,[69,[-1]]],[[48,[6]]],24],[[169,[69,[-1]]],[[48,[6]]],24],[[188,[69,[-1]]],[[48,[6]]],24],[[189,[69,[-1]]],[[48,[6]]],24],[[170,[69,[-1]]],[[48,[6]]],24],[[171,[69,[-1]]],[[48,[6]]],24],[[172,[69,[-1]]],[[48,[6]]],24],[[190,[69,[-1]]],[[48,[6]]],24],[[191,[69,[-1]]],[[48,[6]]],24],[[173,[69,[-1]]],[[48,[6]]],24],[[174,[69,[-1]]],[[48,[6]]],24],[[175,[69,[-1]]],[[48,[6]]],24],[[192,[69,[-1]]],[[48,[6]]],24],[[193,[69,[-1]]],[[48,[6]]],24],[[194,[69,[-1]]],[[48,[6]]],24],[[195,[69,[-1]]],[[48,[6]]],24],[[196,[69,[-1]]],[[48,[6]]],24],[[197,[69,[-1]]],[[48,[6]]],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[198,199],[[-1,200],[[201,[-1]]],[202,203,204,205]],[[-1,[26,[206]]],6,[202,203,204,205]],[[-1,206],6,[202,203,204,205]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[207,207],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[207,14],15],[-1,-1,[]],[54,[[26,[207]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,206],[[4,[6,[0,[208]]]]]],0,0,[1,[[4,[206,[0,[208]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[209,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],210],[[],210],[[],210],[[],210],[206,206],[200,200],[209,209],[211,211],[198,198],[212,212],[213,213],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,0,[[],206],[[],200],[[],209],[[],211],[[],198],[[],212],[[],213],[211],[-1,[[4,[206]]],18],[-1,[[4,[200]]],18],[-1,[[4,[209]]],18],[-1,[[4,[211]]],18],[-1,[[4,[198]]],18],[-1,[[4,[212]]],18],[-1,[[4,[213]]],18],[[1,206],[[4,[6,[0,[208]]]]]],0,[[206,206],19],[[200,200],19],[[209,209],19],[[211,211],19],[[198,198],19],[[212,212],19],[[213,213],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[206,14],15],[[200,14],15],[[209,14],15],[[211,14],15],[[198,14],15],[[212,14],15],[[212,14],15],[[213,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[214,206],[214,200],[214,198],[214,213],[1,[[4,[209]]]],[1,[[4,[212]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[200,19],[1,[[4,[206,[0,[208]]]]]],0,0,0,0,0,[[206,206],206],[1,[[4,[211,215]]]],0,[[206,-1],4,20],[[200,-1],4,20],[[209,-1],4,20],[[211,-1],4,20],[[198,-1],4,20],[[212,-1],4,20],[[213,-1],4,20],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],0,0,[60,216],[-1,[[4,[60]]],18],[-1,[[4,[[53,[51]]]]],18],[-1,[[4,[19]]],18],[-1,[[4,[60]]],18],[-1,[[4,[44]]],18],[[[46,[51]],-1],4,20],[[60,-1],4,20],[[60,-1],4,20],0,0,0,0,0,[[217,19],[[0,[202,203]]]],0,0,0,0,[217,[[0,[202,203]]]],[49,[[46,[51]]]],[[39,217],[[4,[6,218]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,49],[[-1,-2],6,[],[]],0,[[49,49],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[49,14],15],[-1,-1,[]],[-1,-1,[]],[[[46,[51]]],49],[-1,-2,[],[]],[-1,-2,[],[]],[[219,49],[[4,[19,50]]]],[2,219],[[[53,[51]]],49],[[219,49],[[4,[6,6]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[220,220],[[-1,-2],6,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],[[2,1,[53,[51]],39],220],[[2,1,1],217],0,0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],0,[-1,-2,[],[]],0,0,[[[221,[6]],217,19],[[0,[202,203]]]],0,0,0,0,0,0,0,0,0,0,[[54,217],[[4,[[0,[222]],218]]]],[[54,217],[[4,[223,50]]]],[[[53,[22]]],223],[[[221,[6]],217],[[0,[202,203]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[223]]],18],[-1,-1,[]],[-1,-2,[],[]],[[223,-1],4,20],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,[[54,217],[[4,[[0,[222]],218]]]],[217,[[4,[[0,[222]],218]]]],[217,[[4,[[53,[16]],50]]]],[[54,217],[[4,[224,50]]]],[[[221,[6]],217],[[0,[202,203]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[224]]],18],[-1,-1,[]],[-1,-2,[],[]],0,[[224,-1],4,20],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,[217,[[4,[[0,[222]],218]]]],[217,[[4,[[0,[222]],218]]]],[[54,217],[[4,[[0,[222]],218]]]],[[27,217],[[4,[[0,[222]],218]]]],[217,[[4,[[53,[54]],50]]]],[217,[[4,[55,50]]]],[[54,217],[[4,[27,50]]]],[[27,217],[[4,[6,50]]]],[217,[[0,[202,203]]]],[[[221,[6]],217],[[0,[202,203]]]],0,0,0,[217,[[4,[[0,[222]],218]]]],[[[221,[6]],217],[[0,[202,203]]]],0,0,0,[217,[[4,[[0,[222]],218]]]],[[[221,[6]],217],[[0,[202,203]]]],0,0,0,[[[221,[6]],217],[[0,[202,203]]]],0,0,0,0,0,0,0,[217,[[4,[[0,[222]],218]]]],[[54,217],[[4,[[0,[222]],218]]]],[[225,217],[[4,[[0,[222]],218]]]],[217,[[4,[[53,[33]],50]]]],[[54,217],[[4,[33,50]]]],[[225,217],[[4,[[53,[33]],50]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[226]]],18],[[226,14],15],[-1,-1,[]],0,[-1,-2,[],[]],0,[[226,-1],4,20],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],0,[-1,-2,[],[]],[[[221,[6]],217],[[0,[202,203]]]],0,[[[221,[6]],217],[[0,[202,203]]]],0,0,0,0,[217,[[4,[[0,[222]],218]]]],[217,[[4,[227,50]]]],[[[221,[6]],217],[[0,[202,203]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[227]]],18],[-1,-1,[]],[-1,-2,[],[]],[[227,-1],4,20],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[50,14],15],[[50,14],15],[228,50],[-1,-1,[]],[218,[[4,[[0,[222]],218]]]],[-1,-2,[],[]],[50,229],[50,[[26,[208]]]],[50,230],[50,39],[50,229],[50,231],[-1,39,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[232,[-1]]],229,[204,233]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]]],"c":[],"p":[[15,"str"],[6,"DbConnectionPool",4],[6,"Error",4],[4,"Result",4226],[6,"DbConnection",4],[15,"tuple"],[3,"EmbeddedMigration",20],[8,"SimpleConnection",4227],[4,"RunMigrationsError",4228],[8,"MigrationConnection",4229],[8,"Write",4230],[3,"TypeId",4231],[3,"ApiTokenData",54],[3,"Formatter",4232],[6,"Result",4232],[3,"Challenge",72],[3,"ChallengeHighlights",72],[8,"Deserializer",4233],[15,"bool"],[8,"Serializer",4234],[4,"ReviewRanking",123],[3,"AdvisorReview",123],[6,"Result",4235],[8,"Backend",4236],[8,"Row",4237],[4,"Option",4238],[3,"Fund",182],[3,"FundStageDates",182],[3,"FundWithLegacyFields",182],[3,"Goal",269],[3,"InsertGoal",297],[3,"Proposal",317],[3,"FullProposalInfo",317],[3,"Category",317],[3,"Proposer",317],[4,"ChallengeType",317],[4,"ProposalChallengeInfo",317],[3,"SerdeProposalChallengeInfo",317],[3,"String",4239],[3,"ChallengeInfo",502],[6,"ChallengeSqlValues",502],[3,"ChallengeInfo",527],[6,"ChallengeSqlValues",527],[3,"VoteOptions",549],[3,"Voteplan",572],[15,"slice"],[15,"usize"],[6,"QueryResult",4240],[3,"ApiToken",4001],[4,"HandleError",4191],[15,"u8"],[4,"Error",4240],[3,"Vec",4241],[15,"i32"],[3,"FundWithNext",621],[3,"FundNextInfo",621],[3,"SqliteConnection",4242],[3,"ConnectionManager",4243],[3,"PooledConnection",4244],[15,"i64"],[3,"table",676],[3,"UpdateTarget",4245],[3,"OnClauseWrapper",4246],[3,"star",719],[3,"creation_time",719],[8,"AsExpression",4247],[3,"expire_time",719],[3,"token",719],[3,"AstPass",4248],[3,"table",803],[3,"star",846],[3,"internal_id",846],[3,"id",846],[3,"rewards_total",846],[3,"proposers_rewards",846],[3,"fund_id",846],[3,"challenge_type",846],[3,"title",846],[3,"description",846],[3,"challenge_url",846],[3,"highlights",846],[3,"table",1082],[3,"star",1125],[3,"id",1125],[3,"proposal_id",1125],[3,"impact_alignment_rating_given",1125],[3,"feasibility_rating_given",1125],[3,"auditability_rating_given",1125],[3,"ranking",1125],[3,"assessor",1125],[3,"impact_alignment_note",1125],[3,"feasibility_note",1125],[3,"auditability_note",1125],[3,"table",1365],[3,"star",1408],[3,"id",1408],[3,"registration_snapshot_time",1408],[3,"next_registration_snapshot_time",1408],[3,"voting_power_threshold",1408],[3,"fund_start_time",1408],[3,"fund_end_time",1408],[3,"next_fund_start_time",1408],[3,"insight_sharing_start",1408],[3,"proposal_submission_start",1408],[3,"refine_proposals_start",1408],[3,"finalize_proposals_start",1408],[3,"proposal_assessment_start",1408],[3,"assessment_qa_start",1408],[3,"snapshot_start",1408],[3,"voting_start",1408],[3,"voting_end",1408],[3,"tallying_end",1408],[3,"fund_name",1408],[3,"fund_goal",1408],[3,"results_url",1408],[3,"survey_url",1408],[3,"table",1912],[3,"star",1955],[3,"id",1955],[3,"fund_id",1955],[3,"goal_name",1955],[3,"table",2039],[3,"star",2082],[3,"proposal_id",2082],[3,"proposal_brief",2082],[3,"proposal_importance",2082],[3,"proposal_goal",2082],[3,"proposal_metrics",2082],[3,"table",2198],[3,"star",2241],[3,"proposal_id",2241],[3,"proposal_solution",2241],[3,"table",2297],[3,"star",2340],[3,"id",2340],[3,"proposal_funds",2340],[3,"proposal_impact_score",2340],[3,"chain_proposal_index",2340],[3,"challenge_id",2340],[3,"proposal_id",2340],[3,"proposal_category",2340],[3,"proposal_title",2340],[3,"proposal_summary",2340],[3,"proposal_public_key",2340],[3,"proposal_url",2340],[3,"proposal_files_url",2340],[3,"proposer_name",2340],[3,"proposer_contact",2340],[3,"proposer_url",2340],[3,"proposer_relevant_experience",2340],[3,"chain_proposal_id",2340],[3,"chain_vote_options",2340],[3,"chain_voteplan_id",2340],[3,"table",2756],[3,"star",2799],[3,"id",2799],[3,"chain_vote_start_time",2799],[3,"chain_vote_end_time",2799],[3,"chain_committee_end_time",2799],[3,"fund_id",2799],[3,"chain_voteplan_id",2799],[3,"chain_voteplan_payload",2799],[3,"chain_vote_encryption_key",2799],[3,"table",2996],[3,"star",3039],[3,"id",3039],[3,"proposal_funds",3039],[3,"proposal_impact_score",3039],[3,"chain_proposal_index",3039],[3,"chain_vote_start_time",3039],[3,"chain_vote_end_time",3039],[3,"chain_committee_end_time",3039],[3,"fund_id",3039],[3,"challenge_id",3039],[3,"reviews_count",3039],[3,"proposal_id",3039],[3,"proposal_category",3039],[3,"proposal_title",3039],[3,"proposal_summary",3039],[3,"proposal_public_key",3039],[3,"proposal_url",3039],[3,"proposal_files_url",3039],[3,"proposer_name",3039],[3,"proposer_contact",3039],[3,"proposer_url",3039],[3,"proposer_relevant_experience",3039],[3,"chain_proposal_id",3039],[3,"chain_vote_options",3039],[3,"chain_voteplan_id",3039],[3,"chain_voteplan_payload",3039],[3,"chain_vote_encryption_key",3039],[3,"challenge_type",3039],[3,"proposal_solution",3039],[3,"proposal_brief",3039],[3,"proposal_importance",3039],[3,"proposal_goal",3039],[3,"proposal_metrics",3039],[3,"Cors",3793],[3,"Builder",4249],[3,"Tls",3793],[3,"TlsServer",4250],[8,"Filter",4251],[8,"Clone",4252],[8,"Send",4253],[8,"Sync",4253],[3,"ServiceSettings",3793],[4,"ApplicationExitCode",3744],[8,"Error",4254],[3,"CorsOrigin",3793],[3,"App",4255],[3,"AllowedOrigins",3793],[4,"LogLevel",3793],[3,"Log",3793],[3,"ArgMatches",4256],[3,"Error",4257],[3,"OffsetDateTime",4258],[6,"SharedContext",4037],[3,"Rejection",4259],[3,"ApiTokenManager",4001],[3,"Context",4037],[3,"BoxedFilter",4260],[8,"Reply",4261],[3,"GroupedReviews",4076],[3,"ChallengeWithProposals",4097],[6,"ProposalsByVoteplanIdAndIndex",4152],[3,"ProposalVoteplanIdAndIndexes",4152],[3,"ServiceVersion",4179],[6,"PoolError",4243],[6,"Response",4261],[4,"Value",4262],[3,"StatusCode",4263],[3,"HandlerResult",4216],[8,"Serialize",4234],[3,"_Dummy",20],[3,"SerdeToProposalChallengeInfoError",317],[6,"VoteOptionsMap",549],[6,"BoxedQuery",676],[6,"BoxedQuery",803],[6,"BoxedQuery",1082],[6,"BoxedQuery",1365],[6,"BoxedQuery",1912],[6,"BoxedQuery",2039],[6,"BoxedQuery",2198],[6,"BoxedQuery",2297],[6,"BoxedQuery",2756],[6,"BoxedQuery",2996]]},\
"vit_servicing_station_server":{"doc":"","t":"ENNNDMLLLLFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLL","n":["ConfigTracingError","InitSubscriber","InstallOpenTelemetryPipeLine","Io","LogGuard","_nonblocking_worker_guard","borrow","borrow","borrow_mut","borrow_mut","check_and_build_proper_path","config_tracing","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","init","init","into","into","into_request","into_request","main","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"vit_servicing_station_server"],[43,"std::path"],[44,"std::io::error"],[45,"vit_servicing_station_lib::server::settings::config"],[46,"std::path"],[47,"url"],[48,"core::result"],[49,"core::fmt"],[50,"core::fmt"],[51,"std::io::error"],[52,"tonic::request"],[53,"vit_servicing_station_lib::server::exit_codes"],[54,"core::error"],[55,"alloc::string"],[56,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,9,9,9,0,8,8,9,8,9,0,0,8,9,8,9,8,8,9,9,9,8,9,9,9,9,8,9,8,9,8,9,0,9,9,8,9,8,9,8,9,8,9],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[3,[2]]]],[[4,[6,[5]],[6,[7]]],[[10,[8,9]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,2],[8,2],[11,2],[[9,12],13],[[9,12],13],[-1,-1,[]],[-1,-1,[]],[14,9],[15,9],[16,9],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[],18],[9,[[6,[19]]]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Path",43],[15,"tuple"],[6,"Result",44],[4,"LogLevel",45],[3,"PathBuf",43],[4,"Option",46],[3,"Url",47],[3,"LogGuard",0],[4,"ConfigTracingError",0],[4,"Result",48],[15,"usize"],[3,"Formatter",49],[6,"Result",49],[4,"TraceError",50],[3,"Error",44],[3,"TryInitError",51],[3,"Request",52],[4,"ApplicationExitCode",53],[8,"Error",54],[3,"String",55],[3,"TypeId",56]]},\
"vit_servicing_station_server_f10":{"doc":"","t":"FFF","n":["check_and_build_proper_path","config_tracing","main"],"q":[[0,"vit_servicing_station_server_f10"],[3,"std::path"],[4,"std::io::error"],[5,"vit_servicing_station_lib_f10::server::settings::config"],[6,"std::path"],[7,"tracing_appender::non_blocking"],[8,"std::io::error"]],"d":["","",""],"i":[0,0,0],"f":[[1,[[3,[2]]]],[[4,[6,[5]]],[[9,[7,8]]]],[[],2]],"c":[],"p":[[3,"Path",3],[15,"tuple"],[6,"Result",4],[4,"LogLevel",5],[3,"PathBuf",3],[4,"Option",6],[3,"WorkerGuard",7],[3,"Error",4],[4,"Result",8]]},\
"vit_servicing_station_tests":{"doc":"","t":"AAAAAAAAAAAADDLLALLLLMMLLLLLLLLLDLLLALALLLLLMLLLLALLLLDCLLMLLLLLLALLLLLLDLLLLLMLLLLLLLLLLLLLLLLLLDCLLMLLLLALLLLLLLLDLLLMLLLLLLLLLLLLCDCALLLMLLLLALLLLLLLLDLLLMLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLCCCCANNENDNDDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLMALMLLLLLMAMALLLLLLLLMLLLLLLLLLLLLMMDLLLLLLLLMLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLRDLMLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLDDDDNDDDDDNDDDNNDDNDDDEDDIMMMMMMMMMMMMMFMMMMMAMMMMMMMMMMMMMFMMMMAMMMMMMMMMMMMMMMMMFKMKMMKMMKMMFFFFMMMMMMMMMMFMMMMMMMMMMMMMMMMMMMMMMMMMFFMMMMMFMMMMMNDELLLLLLLFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLCCCAAACCAADLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDDLMLLLLLLLLLMMLLLLLLLMMLLLLLLLLMLLMLLMMMMLFMLLMMMMMLLLLLLLLLLMMLLDLLLLLLMLLLLLLLLLLMLLMLLLLLLMLMLLLMLLLLMLLCCCCCCCCCCCCCCCCCAAACCCCADCCLLALLMLLLLLLLLLLLLLLLAMLLLLLDLLLLLLLLLLLLLLMLLMLMLLLLLDLLMLLLLLLLLLMLLLLLLLDLLLLLLLLLLLMLLLLCCCCDLLMLLLLLALLMLLLALCCCAAADLLMMLLLLLMLLLMLLLLLMMLDFMLLLLLLLLMLLLMLLMMMMMMLLLLMMMLDLLLLMLLLLLLLMMMMMLLLMMLLLLMLDLLLLLLLLLLLLLLLLMLMLCDCDDDDCIAMMMLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLAMMMLLLLLMMMMMMMMMLLLLLMMLLLLLKKKKCCCCMMMMMMMMMMMMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLMLLLMLLLLLLMLLLMLLMLLLMLLMLLLLLNDNNNNELLLLMLLLLLLLLLLLLLLMLLLLLLLLLFFFFMLMLLLLLLLLLLLDENDFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLDDDLLLLLLLLLLLMMLMLLLLLAMMMMMLLLLALRDLLLLLLLLLLLMLLMMLLLLLLRDLLLLLLLLLLLMLLMMLLLLLLDLLLLLLLLLLMLLLLLLRDDIDLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLKLMMMLMMLLLLLLLLLLLMMMMLLLLLLLLLLLDLLLLLLLLLLLMLLMLLLMLLLLDDDDDLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLMLMMMMMLLLLLLLLLLLDMLLALLLLFLFFFFLLFALLLLNNNDENNMLLLLLLMLLLLLLLLALLLLLLLMLLFFLLLLMLLMLLLLLLLLLLLLLLLLLLLLLAFDNNNNDEDMMMMMAMAMMFMMMFMMMMMMMAMMNNNNDEMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLDLMLMLMLMLLLLMLMLLLLLMMLLMLLLMLMLMLLMLMLMLLLLDLLLMLLLLFLLLLFMLLLLLLLLLLLLL","n":["common","cli","clients","data","db","load","logger","paths","raw_snapshot","server","snapshot","startup","VitCli","VitCliCommand","borrow","borrow_mut","commands","default","deref","deref_mut","drop","exe","exe","from","generate_tokens","init","into","new","try_from","try_into","type_id","vzip","VitCliCommand","api_token","borrow","borrow_mut","csv_data","csv_data","db","db","default","deref","deref_mut","drop","exe","from","init","into","new","token","try_from","try_into","type_id","vzip","CsvDataCommand","LoadCsvCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","load","load","new","try_from","try_into","type_id","vzip","LoadCsvCommand","advisor_reviews","borrow","borrow_mut","build","challenges","command","db_url","deref","deref_mut","drop","from","funds","goals","groups","init","into","new","proposals","proposals_voteplans","try_from","try_into","type_id","voteplans","vzip","DbCommand","InitDbCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","init","init","into","new","try_from","try_into","type_id","vzip","InitDbCommand","borrow","borrow_mut","build","command","db_url","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","vzip","ApiTokenAddCommand","ApiTokenCommand","ApiTokenGenerateCommand","add","add","borrow","borrow_mut","command","deref","deref_mut","drop","from","generate","generate","init","into","new","try_from","try_into","type_id","vzip","ApiTokenAddCommand","borrow","borrow_mut","build","command","db_url","deref","deref_mut","drop","from","init","into","new","tokens","tokens_as_str","try_from","try_into","type_id","vzip","ApiTokenGenerateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","n","new","size","try_from","try_into","type_id","vzip","RawRestClient","RestClient","RestError","SearchRequestBuilder","rest","CannotDeserialize","CannotDeserializeResponse","Error","ErrorStatusCode","RawRestClient","RequestError","RestClient","SearchRequestBuilder","ServerIsNotUp","advisor_reviews","api_token","borrow","borrow","borrow_mut","borrow_mut","challenges","clone","clone_into","delegator_info","deref","deref","deref_mut","deref_mut","disable_log","drop","drop","enable_log","fmt","fmt","fmt","from","from","from","from","from","fund","funds","genesis","health","init","init","into","into","into","logger","logger","new","origin","path","path_builder","path_builder","proposal","proposals","proposals_by_voteplan_id_and_index","put_raw_snapshot","put_snapshot_info","query","raw","raw","search","search","search_count","service_version","set_api_token","set_origin","set_timeout","snapshot_tags","source","timeout","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_status_code","voter_info","vzip","vzip","source","text","RestClientLogger","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","enabled","fmt","from","init","into","is_enabled","log_post_body","log_request","log_response","log_text","set_enabled","to_owned","try_from","try_into","type_id","vzip","RestPathBuilder","address","admin","advisor_reviews","borrow","borrow_mut","challenges","clone","clone_into","deref","deref_mut","drop","fmt","from","fund","funds","genesis","health","init","into","new","path","proposal","proposals","proposals_with_group","raw_snapshot","root","search","search_count","service_version","snapshot_delegator_info","snapshot_info","snapshot_tags","snapshot_voter_info","to_owned","try_from","try_into","type_id","vzip","ORIGIN","RestClient","advisor_reviews","api_token","borrow","borrow_mut","challenges","client","clone","clone_into","delegator_info","deref","deref_mut","disable_log","drop","enable_log","fmt","from","fund","funds","genesis","get","health","init","into","log_response","log_text","logger","new","origin","path_builder","path_builder","post","proposal","proposals","proposals_by_voteplan_id_and_index","put","put_raw_snapshot","put_snapshot_info","search","search_count","service_version","set_api_token","set_origin","set_timeout","snapshot_tags","timeout","to_owned","try_from","try_into","type_id","voter_info","vzip","SearchRequestBuilder","borrow","borrow_mut","by_author","by_body","by_funds","by_funds_exact","by_impact_score","by_range","by_text","by_title","by_type","default","deref","deref_mut","drop","from","init","into","into","limit","offset","on","on_challenges","on_proposals","order_by_asc","order_by_desc","order_by_random","order_by_title","query","try_from","try_into","type_id","vzip","ArbitraryGenerator","ArbitrarySnapshotGenerator","ArbitraryValidVotePlanConfig","ArbitraryValidVotingTemplateGenerator","Challenge","ChallengeConfig","ChallengeTemplate","CsvConverter","CurrentFund","ExternalValidVotingTemplateGenerator","Fund","FundDates","FundInfo","FundTemplate","Io","Proposal","ProposalConfig","ProposalTemplate","Review","ReviewTemplate","SingleVotePlanParameters","Snapshot","TemplateLoad","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","assessment_qa_start","assessor","auditability_note","auditability_rating_given","calculate_challenges_total_funds","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_id","challenge_type","challenge_type","challenge_url","challenges","challenges","challenges","challenges","challenges","challenges_count","csv_converter","current_fund","current_fund_id","current_proposal_id","dates","description","feasibility_note","feasibility_rating_given","files_url","finalize_proposals_start","fund_goal","fund_id","fund_id","fund_name","funds","funds","funds","funds","funds","generator","generator","goal","goals","goals","groups","highlight","id","id","id","id_generator","id_generator","impact_alignment_note","impact_alignment_rating_given","info","insight_sharing_start","internal_id","internal_id","multivoteplan_snapshot","next_challenge","next_challenge_id","next_fund","next_fund_start_time","next_funds","next_proposal","next_proposal_id","next_registration_snapshot_time","next_review","next_review_id","parameters","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposal_assessment_start","proposal_challenge_info","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_submission_start","proposal_summary","proposal_title","proposal_url","proposals","proposals","proposals","proposals","proposals","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","proposers_rewards","ranking","refine_proposals_start","registration_snapshot_time","results_url","reviews","reviews","reviews","reviews_count","rewards_info","rewards_total","rewards_total","survey_url","template_generator","template_generator","threshold","title","token","token_hash","tokens","vote_encryption_key","vote_options","vote_plan","vote_plans","voteplans","voteplans","voting_power_threshold","voting_start","voting_tally_end","voting_tally_start","CannotBuildCsvWithFunds","CsvConverter","Error","advisor_reviews","borrow","borrow","borrow_mut","borrow_mut","build_file","challenges","convert_advisor_review","convert_challenge","convert_fund","convert_goals","convert_group","convert_proposal","convert_proposal_to_voteplan_proposal","convert_voteplan","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","funds","goals","groups","init","init","into","into","proposals","proposals_voteplans","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unix_timestamp_to_rfc3339","voteplans","vzip","vzip","ArbitraryGenerator","ArbitrarySnapshotGenerator","Snapshot","arbitrary","snapshot","voting","ArbitraryGenerator","ArbitrarySnapshotGenerator","generator","snapshot_generator","ArbitraryGenerator","borrow","borrow_mut","bytes","clone","clone_into","default","deref","deref_mut","drop","from","hash","id","id_generator","init","into","new","next_i32","next_u32","next_u64","random_index","random_size","to_owned","token","token_hash","tokens","try_from","try_into","type_id","valid_vote_plan_parameters","vote_plan_def","vote_plan_def_collection","vzip","ArbitrarySnapshotGenerator","FundDateTimes","advisor_reviews","assessment_qa_start","borrow","borrow","borrow_mut","borrow_mut","challenge_with_fund_id","challenges","challenges_with_fund_id","clone","clone_into","current_fund_id","current_proposal_id","default","deref","deref","deref_mut","deref_mut","drop","drop","end","finalize_proposals_start","from","from","fund_date_times","funds","gen_single_fund","gen_single_proposal","goals","goals_with_fund_id","id_generator","init","init","insight_sharing_start","into","into","next","next_snapshot","proposal_assessment_start","proposal_submission_start","proposals","rand_datetime_in_range","refine_proposals_start","review_with_proposal_id","snapshot","snapshot","snapshot_start","start","tallying_end","template_generator","to_owned","token","try_from","try_from","try_into","try_into","type_id","type_id","voteplan_with_fund_id","voteplans","voting_end","voting_start","vzip","vzip","Snapshot","advisor_reviews","advisor_reviews_mut","any_token","borrow","borrow_mut","challenges","challenges","challenges_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","fund_by_id","funds","funds","funds_mut","goals","goals","groups","init","into","new","proposal_by_id","proposals","proposals","proposals_mut","reviews","to_owned","token_hash","tokens","tokens","try_from","try_into","type_id","voteplans","voteplans","voteplans_mut","vzip","ArbitraryValidVotePlanConfig","ArbitraryValidVotingTemplateGenerator","ChallengeConfig","ChallengeTemplate","CurrentFund","ExternalValidVotingTemplateGenerator","FundDates","FundInfo","FundTemplate","ProposalConfig","ProposalTemplate","ReviewTemplate","SingleVotePlanParameters","TemplateLoad","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","builder","generator","parameters","parse_challenges","parse_funds","parse_proposals","parse_reviews","template","ArbitraryValidVotePlanConfig","ChallengeConfig","ProposalConfig","borrow","borrow_mut","challenge","challenge","challenges","challenges","clone","clone_into","default","deref","deref_mut","drop","from","get_challenges","init","into","next_challenge","next_fund","next_proposal","next_review","pop_proposal","proposal","template_generator","to_owned","try_from","try_into","type_id","vzip","ChallengeConfig","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","proposal","proposals","proposals","proposals_len","proposers_rewards","proposers_rewards","rewards_total","rewards_total","to_owned","try_from","try_into","type_id","vzip","ProposalConfig","borrow","borrow_mut","challenge_id","clone","clone_into","default","deref","deref_mut","drop","fmt","from","funds","funds","init","into","to_owned","try_from","try_into","type_id","vzip","ValidVotePlanGenerator","borrow","borrow_mut","build","convert_to_vote_plan","deref","deref_mut","drop","from","init","into","new","parameters","try_from","try_into","type_id","vzip","CurrentFund","FundDates","FundInfo","SingleVotePlanParameters","ValidVotePlanParameters","borrow","borrow_mut","current_fund","deref","deref_mut","drop","from","from","fund","init","into","next_funds","try_from","try_into","type_id","vote_plan","vzip","CurrentFund","FundDates","FundInfo","current","dates","info","CurrentFund","borrow","borrow_mut","calculate_challenges_total_funds","challenges_count","deref","deref_mut","drop","from","from_single","info","init","into","new","reviews_count","set_vote_encryption_key","to_fund","try_from","try_into","type_id","vote_options","vote_plans","vzip","FundDates","as_timestamp","assessment_qa_start","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","finalize_proposals_start","fmt","from","init","insight_sharing_start","into","into","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","to_owned","try_from","try_into","type_id","voting_start","voting_tally_end","voting_tally_start","vzip","FundInfo","borrow","borrow_mut","clone","clone_into","dates","default","deref","deref_mut","drop","fmt","from","from","fund_goal","fund_id","fund_name","goals","groups","init","into","into","results_url","survey_url","to_owned","try_from","try_into","type_id","voting_power_threshold","vzip","SingleVotePlanParameters","alias","borrow","borrow_mut","deref","deref_mut","drop","from","from","init","into","proposals","set_vote_encryption_key","try_from","try_into","type_id","vote_encryption_key","vote_encryption_key","vote_plan","vote_plan","vzip","ArbitraryValidVotingTemplateGenerator","ChallengeTemplate","ExternalValidVotingTemplateGenerator","FundTemplate","ProposalChallengeInfoTemplate","ProposalTemplate","ReviewTemplate","TemplateLoad","ValidVotingTemplateGenerator","arbitrary","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_type","challenge_type","challenge_url","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","external","feasibility_note","feasibility_rating_given","files_url","from","from","from","from","from","fund_id","goal","highlight","id","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","internal_id","internal_id","into","into","into","into","into","next_challenge","next_fund","next_proposal","next_review","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposal_challenge_info","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_summary","proposal_title","proposal_url","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","ranking","rewards_info","rewards_total","serialize","serialize","serialize","serialize","serialize","threshold","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ArbitraryValidVotingTemplateGenerator","borrow","borrow_mut","challenge_type","challenges","clone","clone_into","default","deref","deref_mut","drop","from","funds","gen_challenge_url","gen_highlights","gen_http_address","generator","impact_score","init","into","new","next_challenge","next_challenge_id","next_challenge_id","next_fund","next_proposal","next_proposal_id","next_proposal_id","next_review","next_review_id","next_review_id","proposal","proposal_category","proposal_fund","proposals","proposals_challenge_info","proposer","reviews","to_owned","try_from","try_into","type_id","vzip","Challenge","ExternalValidVotingTemplateGenerator","Fund","Io","Proposal","Review","TemplateLoad","borrow","borrow","borrow_mut","borrow_mut","challenges","challenges_count","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","funds","init","init","into","into","new","next_challenge","next_fund","next_proposal","next_review","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposals","proposals_count","reviews","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbInserter","DbInserterError","DieselError","RowId","_impl_queryable_by_name_for_rowid","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","connection","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","init","init","init","insert_advisor_reviews","insert_challenges","insert_funds","insert_proposals","insert_token","insert_tokens","insert_vote_plans","into","into","into","new","row_id","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SnapshotRandomizer","VitRestRequestGenerator","VotingPowerRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","max_splits","max_splits","new","random","random_fund_id","random_group_id","random_proposal_id","random_token","random_usize","rest","rest_client","rest_client","snapshot","snapshot","snapshot_randomizer","to_owned","try_from","try_into","type_id","voting_power","vzip","DEFAULT_MAX_SPLITS","VitRestRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","max_splits","new","next","rest_client","snapshot_randomizer","split","to_owned","try_from","try_into","type_id","vzip","DEFAULT_MAX_SPLITS","VotingPowerRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","max_splits","new","next","rest_client","snapshot","split","to_owned","try_from","try_into","type_id","vzip","Logger","any_error","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","log_file","log_file","log_lines","new","try_from","try_into","type_id","vzip","BLOCK0_BIN","RawSnapshot","RawSnapshotBuilder","RawSnapshotExtension","RawSnapshotUpdater","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone_into","content","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","direct_voters_group","dreps","drop","drop","drop","empty","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","into_full_snapshot_infos","into_full_snapshot_infos","min_stake_threshold","raw_snapshot","representatives_group","serialize","tag","tag","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update_timestamp","voting_power_cap","voting_registrations","voting_registrations_count","vzip","vzip","vzip","with_dreps","with_min_stake_threshold","with_tag","with_tag","with_timestamp","with_voting_power_cap","with_voting_registrations","with_voting_registrations_count","Server","borrow","borrow_mut","deref","deref_mut","drop","drop","from","init","into","is_token_valid","is_up","log_file","logger","new","process","rest_client","rest_client_with_token","settings","settings","try_from","try_into","type_id","vzip","Snapshot","SnapshotBuilder","SnapshotUpdater","VoterInfo","VotingPower","add_contributions_to_voter","add_new_arbitrary_voters","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone_into","clone_into","clone_into","content","contributions_count","default","default","delegations_count","delegations_power","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","groups","init","init","init","init","init","into","into","into","into","into","last_updated","serialize","serialize","snapshot","tag","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_timestamp","update_voting_power","voter_info","voters_count","voting_group","voting_power","voting_power_saturation","vzip","vzip","vzip","vzip","vzip","with_contributions_count","with_entries_count","with_groups","with_tag","with_tag","with_timestamp","NEXT_AVAILABLE_PORT_NUMBER","__private_field","borrow","borrow_mut","db","deref","deref","deref_mut","drop","empty_db","from","get_available_port","get_cli_exe","get_exe","get_working_directory","init","into","quick_start","server","try_from","try_into","type_id","vzip","CannotCreateDatabase","CannotExtractTempPath","DatabaseUrlEnvVar","DbBuilder","DbBuilderError","DbInserterError","MissingDatabaseUrlEnvVar","advisor_reviews","borrow","borrow","borrow_mut","borrow_mut","build","build_async","challenges","create_database","default","deref","deref","deref_mut","deref_mut","drop","drop","embedded_migrations","fmt","fmt","from","from","from","from","from","funds","init","init","initialize_db_with_migrations","initialize_db_with_migrations_async","insert_all","into","into","new","proposals","source","to_string","tokens","try_from","try_from","try_insert_challenges","try_insert_funds","try_insert_proposals","try_insert_reviews","try_insert_tokens","try_insert_vote_plans","try_into","try_into","type_id","type_id","vzip","vzip","with_advisor_reviews","with_challenges","with_funds","with_proposals","with_snapshot","with_token","with_tokens","migrations","runner","BootstrapCommandBuilder","CargoError","DbBuilderError","FailToBootstrap","ProcessSpawnError","ServerBootstrapper","ServerBootstrapperError","ServerSettingsBuilder","address","allowed_origins","allowed_origins","block0_path","block0_paths","bootstrap","cert_file","command","cors","db_url","dump_settings","enable_api_tokens","exe","in_settings_file","load_settings","log_file","log_level","max_age_secs","out_settings_file","priv_key_file","service_version","service_version","settings","settings","settings_builder","CargoError","DbBuilderError","FailToBootstrap","ProcessSpawnError","ServerBootstrapper","ServerBootstrapperError","allowed_origins","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","init","init","into","into","new","service_version","settings_builder","source","start","start_with_exe","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_allowed_origins","with_api_tokens","with_block0_path","with_db_path","with_localhost_address","with_log_level","with_service_version","BootstrapCommandBuilder","address","address","allowed_origins","allowed_origins","block0_path","block0_path","block0_paths","block0_paths","borrow","borrow_mut","build","cert_file","cert_file","db_url","db_url","default","deref","deref_mut","drop","enable_api_tokens","enable_api_tokens","exe","from","in_settings_file","in_settings_file","init","into","log_file","log_file","log_level","log_level","max_age_secs","max_age_secs","new","out_settings_file","out_settings_file","priv_key_file","priv_key_file","service_version","service_version","try_from","try_into","type_id","vzip","ServerSettingsBuilder","borrow","borrow_mut","build","cors","default","deref","deref_mut","drop","dump_settings","format_localhost_address","from","init","into","load_settings","settings","try_from","try_into","type_id","vzip","with_api_tokens","with_block0_folder_path","with_block0_path","with_cors","with_db_path","with_localhost_address","with_log_level","with_log_output_path","with_random_localhost_address"],"q":[[0,"vit_servicing_station_tests"],[1,"vit_servicing_station_tests::common"],[12,"vit_servicing_station_tests::common::cli"],[32,"vit_servicing_station_tests::common::cli::commands"],[54,"vit_servicing_station_tests::common::cli::commands::csv_data"],[72,"vit_servicing_station_tests::common::cli::commands::csv_data::load"],[97,"vit_servicing_station_tests::common::cli::commands::db"],[115,"vit_servicing_station_tests::common::cli::commands::db::init"],[132,"vit_servicing_station_tests::common::cli::commands::token"],[153,"vit_servicing_station_tests::common::cli::commands::token::add"],[172,"vit_servicing_station_tests::common::cli::commands::token::generate"],[190,"vit_servicing_station_tests::common::clients"],[195,"vit_servicing_station_tests::common::clients::rest"],[276,"vit_servicing_station_tests::common::clients::rest::Error"],[278,"vit_servicing_station_tests::common::clients::rest::logger"],[303,"vit_servicing_station_tests::common::clients::rest::path"],[342,"vit_servicing_station_tests::common::clients::rest::raw"],[395,"vit_servicing_station_tests::common::clients::rest::search"],[429,"vit_servicing_station_tests::common::data"],[576,"vit_servicing_station_tests::common::data::csv_converter"],[624,"vit_servicing_station_tests::common::data::generator"],[630,"vit_servicing_station_tests::common::data::generator::arbitrary"],[634,"vit_servicing_station_tests::common::data::generator::arbitrary::generator"],[667,"vit_servicing_station_tests::common::data::generator::arbitrary::snapshot_generator"],[733,"vit_servicing_station_tests::common::data::generator::snapshot"],[775,"vit_servicing_station_tests::common::data::generator::voting"],[800,"vit_servicing_station_tests::common::data::generator::voting::builder"],[831,"vit_servicing_station_tests::common::data::generator::voting::builder::challenge"],[857,"vit_servicing_station_tests::common::data::generator::voting::builder::proposal"],[878,"vit_servicing_station_tests::common::data::generator::voting::generator"],[895,"vit_servicing_station_tests::common::data::generator::voting::parameters"],[917,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund"],[923,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::current"],[946,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::dates"],[978,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::info"],[1007,"vit_servicing_station_tests::common::data::generator::voting::parameters::vote_plan"],[1028,"vit_servicing_station_tests::common::data::generator::voting::template"],[1174,"vit_servicing_station_tests::common::data::generator::voting::template::arbitrary"],[1217,"vit_servicing_station_tests::common::data::generator::voting::template::external"],[1271,"vit_servicing_station_tests::common::db"],[1328,"vit_servicing_station_tests::common::load"],[1363,"vit_servicing_station_tests::common::load::rest"],[1387,"vit_servicing_station_tests::common::load::voting_power"],[1411,"vit_servicing_station_tests::common::logger"],[1429,"vit_servicing_station_tests::common::paths"],[1430,"vit_servicing_station_tests::common::raw_snapshot"],[1507,"vit_servicing_station_tests::common::server"],[1531,"vit_servicing_station_tests::common::snapshot"],[1654,"vit_servicing_station_tests::common::startup"],[1677,"vit_servicing_station_tests::common::startup::db"],[1742,"vit_servicing_station_tests::common::startup::db::embedded_migrations"],[1743,"vit_servicing_station_tests::common::startup::db::embedded_migrations::migrations"],[1744,"vit_servicing_station_tests::common::startup::server"],[1777,"vit_servicing_station_tests::common::startup::server::bootstrap"],[1828,"vit_servicing_station_tests::common::startup::server::command"],[1873,"vit_servicing_station_tests::common::startup::server::settings"],[1902,"alloc::string"],[1903,"alloc::vec"],[1904,"std::path"],[1905,"core::result"],[1906,"core::any"],[1907,"std::process"],[1908,"std::path"],[1909,"core::convert"],[1910,"std::collections::hash::map"],[1911,"vit_servicing_station_lib::db::models::challenges"],[1912,"vit_servicing_station_lib::v0::endpoints::snapshot"],[1913,"core::fmt"],[1914,"core::fmt"],[1915,"reqwest::error"],[1916,"serde_json::error"],[1917,"vit_servicing_station_lib::db::models::funds"],[1918,"url"],[1919,"vit_servicing_station_lib::db::models::proposals"],[1920,"vit_servicing_station_lib::v0::endpoints::proposals::requests"],[1921,"vit_servicing_station_lib::v0::endpoints::search::requests"],[1922,"vit_servicing_station_lib::v0::endpoints::search::requests"],[1923,"core::time"],[1924,"core::error"],[1925,"core::option"],[1926,"reqwest::blocking::response"],[1927,"reqwest::blocking::client"],[1928,"vit_servicing_station_lib::v0::endpoints::search::requests"],[1929,"vit_servicing_station_lib::db::models::api_tokens"],[1930,"vit_servicing_station_lib::db::models::voteplans"],[1931,"vit_servicing_station_lib::db::models::goals"],[1932,"vit_servicing_station_lib::db::models::groups"],[1933,"chain_impl_mockchain::testing::scenario::template"],[1934,"vit_servicing_station_lib::db::models::goals"],[1935,"chain_impl_mockchain::certificate::vote_plan"],[1936,"vit_servicing_station_lib::db::models::funds"],[1937,"serde::ser"],[1938,"vit_servicing_station_lib::db::models::challenges"],[1939,"diesel::deserialize"],[1940,"diesel::backend"],[1941,"diesel::row"],[1942,"diesel::result"],[1943,"vit_servicing_station_lib::db"],[1944,"jortestkit::load::request"],[1945,"jortestkit::load::request"],[1946,"snapshot_lib"],[1947,"snapshot_lib"],[1948,"fraction::prelude"],[1949,"snapshot_lib::registration"],[1950,"std::process"],[1951,"core::sync::atomic"],[1952,"assert_fs::fixture::dir"],[1953,"vit_servicing_station_lib::db"],[1954,"diesel::result"],[1955,"assert_cmd::cargo"],[1956,"vit_servicing_station_lib::server::settings::config"],[1957,"vit_servicing_station_lib::server::settings::config"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Gets working directory Uses std::env::current_exe() for …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","","todo: add error mapping","","","","todo: add error mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","todo: add error mapping","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","todo: add error mapping","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,0,10,10,10,0,10,0,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,0,0,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,27,27,0,27,0,27,0,0,27,24,37,24,27,24,27,24,24,24,24,24,27,24,27,24,24,27,24,24,27,27,24,24,27,27,27,24,24,24,24,24,27,24,24,27,0,37,24,37,0,24,37,24,24,24,24,24,56,0,24,0,24,24,24,24,24,24,24,27,37,24,27,24,27,24,27,24,27,24,24,24,27,152,152,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,67,0,0,0,0,0,67,0,0,0,67,67,0,0,67,0,0,0,0,0,0,0,92,65,65,65,90,64,64,64,85,64,64,62,62,0,61,83,98,103,90,0,77,79,79,91,62,65,65,64,92,91,91,62,91,0,61,85,98,103,0,98,63,61,91,91,62,63,62,65,74,79,65,65,90,92,64,62,0,87,98,87,92,77,87,98,92,87,98,86,0,0,0,0,92,64,64,64,65,64,92,64,64,64,0,61,84,98,103,64,64,64,84,62,65,92,92,91,61,98,103,90,63,84,62,91,79,83,63,62,0,0,61,88,90,88,90,0,61,91,92,92,92,71,0,0,70,70,71,70,71,70,70,0,0,0,0,0,0,0,0,70,71,70,71,70,71,71,71,70,71,70,70,70,70,71,70,71,70,70,71,70,71,70,71,70,71,0,70,70,71,0,0,0,0,0,0,0,0,0,0,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,79,80,80,79,80,79,79,79,79,79,79,79,79,79,80,79,80,79,80,79,80,80,80,79,79,79,79,79,79,79,79,80,79,80,80,79,80,80,80,80,79,0,80,79,79,80,80,80,80,79,79,79,80,79,80,79,80,79,79,79,80,80,80,79,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,77,77,77,77,77,77,77,77,0,77,77,77,77,77,77,0,77,0,0,0,0,0,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,0,0,0,0,0,0,65,65,65,63,64,62,65,95,63,64,62,65,95,64,64,64,64,64,62,62,63,64,62,65,95,63,64,62,65,95,63,64,62,65,95,63,64,62,65,95,62,63,64,62,65,95,63,64,62,65,95,0,65,65,64,63,64,62,65,95,62,63,62,63,62,65,95,65,65,63,64,62,65,95,64,62,63,64,62,65,95,87,87,87,87,0,0,0,0,64,64,64,65,64,64,64,64,64,64,64,62,65,63,62,63,64,62,65,95,63,62,63,64,62,65,95,63,64,62,65,95,63,64,62,65,95,63,64,62,65,95,63,64,62,65,95,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,67,0,67,67,67,67,0,103,67,103,67,103,103,103,103,103,67,103,67,103,67,67,67,103,67,67,103,103,67,103,67,103,103,103,103,103,0,0,0,0,103,103,103,67,103,67,103,67,103,67,103,67,103,67,0,0,109,0,0,111,105,109,111,105,109,105,111,111,105,109,111,105,109,111,105,109,109,109,111,105,109,109,111,105,109,111,111,111,111,111,111,111,111,105,109,111,105,109,109,111,105,109,111,105,109,111,105,109,111,105,109,0,0,0,113,113,113,113,113,113,113,113,113,113,113,114,117,113,113,113,113,113,113,113,0,114,117,117,113,114,113,113,113,113,0,113,0,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,42,119,120,42,119,120,119,120,42,42,42,42,119,42,119,120,42,119,120,42,119,119,42,119,120,42,42,119,120,42,119,120,120,42,119,120,42,119,120,153,42,119,120,119,42,42,119,42,42,119,120,42,42,119,120,42,119,120,119,119,119,119,42,119,120,119,119,119,120,119,119,119,119,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,0,0,0,0,130,130,43,133,52,134,130,43,133,52,134,130,133,130,43,52,134,43,52,134,43,133,43,133,134,134,43,133,52,134,130,43,133,52,134,130,52,134,43,133,52,134,130,52,134,52,52,52,52,134,134,134,134,43,133,52,134,130,43,133,52,134,134,130,130,133,43,133,52,134,130,43,133,52,134,130,52,52,134,130,43,133,43,52,134,43,133,52,134,130,43,133,52,134,130,43,133,52,134,130,133,130,52,133,134,134,134,43,133,52,134,130,133,133,133,133,130,133,0,135,135,135,0,135,135,135,135,0,135,0,0,0,0,135,135,0,0,135,135,135,135,140,140,140,0,0,140,140,139,139,140,139,140,139,139,139,139,139,139,140,139,140,139,140,0,140,140,139,140,140,140,140,139,139,140,0,0,139,139,140,139,139,140,140,139,139,140,139,139,139,139,139,139,139,140,139,140,139,140,139,139,139,139,139,139,139,0,0,0,138,138,138,138,0,0,0,148,145,148,148,148,0,148,0,149,148,0,148,148,148,0,148,148,148,148,148,145,148,0,149,145,138,138,138,138,0,0,145,145,138,145,138,145,145,138,145,138,145,138,138,138,145,138,138,138,138,145,138,145,138,145,145,145,138,145,145,138,145,138,145,138,145,138,145,138,145,145,145,145,145,145,145,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,149,149,149,149,149,149,149,149,0,149,149,149,149,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[2,-1,[]],[2,-1,[]],[2,3],0,0,[-1,-1,[]],[[1,4],[[6,[5]]]],[[],2],[-1,-2,[],[]],[7,1],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[10,11],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,12],0,[10,13],[[],10],[2,-1,[]],[2,-1,[]],[2,3],0,[-1,-1,[]],[[],2],[-1,-2,[],[]],[7,10],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,[12,14],[15,12],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[[14,-1],14,[[17,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[14,15],[[14,-1],14,[[17,[16]]]],0,[[14,-1],14,[[17,[16]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[14,-1],14,[[17,[16]]]],[[14,-1],14,[[17,[16]]]],[[14,-1],14,[[17,[16]]]],[[],2],[-1,-2,[],[]],[15,14],[[14,-1],14,[[17,[16]]]],[[14,-1],14,[[17,[16]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[14,-1],14,[[17,[16]]]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],0,[[],2],[13,18],[-1,-2,[],[]],[15,13],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,15],0,[[18,-1],18,[[17,[16]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[15,18],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,[11,19],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],0,[11,20],[[],2],[-1,-2,[],[]],[15,11],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[19,15],0,[[19,-1],19,[[21,[5]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[15,19],[[19,[22,[5]]],19],[[19,23],19],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,15],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[20,4],20],[15,20],[[20,4],20],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,23],[[8,[[26,[5,[6,[25]]]],27]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,[[8,[[6,[28]],27]]]],[24,24],[[-1,-2],3,[],[]],[[24,23,23],[[8,[29,27]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[24,3],[2,3],[2,3],[24,3],[[24,30],31],[[27,30],31],[[27,30],31],[32,24],[-1,-1,[]],[33,27],[-1,-1,[]],[34,27],[[24,23],[[8,[35,27]]]],[24,[[8,[35,27]]]],[24,[[8,[[6,[36]],27]]]],[24,[[8,[3,27]]]],[[],2],[[],2],[24,37],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[38,24],0,0,[24,39],0,[[24,23,23],[[8,[40,27]]]],[[24,23],[[8,[[6,[40]],27]]]],[[24,[22,[41]]],[[8,[[6,[40]],27]]]],[[24,42],[[8,[3,27]]]],[[24,43],[[8,[3,27]]]],0,0,0,0,[[24,44],[[8,[45,27]]]],[[24,44],[[8,[46,27]]]],[24,[[8,[47,27]]]],[[24,5],3],[[24,-1],3,[[21,[5]]]],[[24,48],3],[24,[[8,[[6,[5]],27]]]],[27,[[50,[49]]]],0,[-1,-2,[],[]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[24,51],[[8,[3,27]]]],[[24,23,23],[[8,[52,27]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[53,53],[[-1,-2],3,[],[]],[[],53],[2,-1,[]],[2,-1,[]],[2,3],0,[[53,30],31],[-1,-1,[]],[[],2],[-1,-2,[],[]],[53,54],[[53,23],3],[[53,23],3],[[53,51],3],[[53,23],3],[[53,54],3],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[39,39],[[39,23],5],[-1,-2,[],[]],[-1,-2,[],[]],[39,5],[39,39],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[39,30],31],[-1,-1,[]],[[39,23],5],[39,5],[39,5],[39,5],[[],2],[-1,-2,[],[]],[38,39],[[39,23],5],[[39,23,23],5],[39,5],[[39,23],5],[[39,23],5],0,[39,5],[39,5],[39,5],[[39,23,23],5],[[39,23],5],[39,5],[[39,23,23],5],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[[37,23],[[8,[51,27]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[37,[[8,[51,27]]]],[37,[[8,[55,33]]]],[37,37],[[-1,-2],3,[],[]],[[37,23,23],[[8,[51,27]]]],[2,-1,[]],[2,-1,[]],[37,3],[2,3],[37,3],[[37,30],31],[-1,-1,[]],[[37,23],[[8,[51,27]]]],[37,[[8,[51,27]]]],[37,[[8,[51,27]]]],[[37,23],[[8,[51,33]]]],[37,[[8,[51,27]]]],[[],2],[-1,-2,[],[]],[[37,51],3],[[37,23],3],0,[38,37],0,[37,39],0,[[37,23,5],[[8,[51,33]]]],[[37,23,23],[[8,[51,27]]]],[[37,23],[[8,[51,27]]]],[[37,23],[[8,[51,27]]]],[[37,23,5],[[8,[51,33]]]],[[37,23,5],[[8,[51,27]]]],[[37,23,5],[[8,[51,27]]]],[[37,-1],[[8,[51,27]]],[[21,[5]]]],[[37,-1],[[8,[51,27]]],[[21,[5]]]],[37,[[8,[51,27]]]],[[37,5],3],[[37,-1],3,[[21,[5]]]],[[37,48],3],[37,[[8,[51,27]]]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[37,23,23],[[8,[51,27]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[56,-1],56,[[21,[5]]]],[[56,-1],56,[[21,[5]]]],[[56,[50,[46]],[50,[46]]],56],[[56,46],56],[[56,46],56],[[56,[50,[46]],[50,[46]],57],56],[[56,-1,57],56,[[21,[5]]]],[[56,-1],56,[[21,[5]]]],[[56,58],56],[[],56],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[56,44],[-1,-2,[],[]],[[56,59],56],[[56,59],56],[[56,60],56],[56,56],[56,56],[[56,57],56],[[56,57],56],[56,56],[56,56],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[6,[28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[6,[35]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],61],[-1,62,[]],0,[-1,63,[]],0,0,[-1,64,[]],0,0,[-1,65,[]],0,0,[7,[[8,[[66,[62]],67]]]],[7,[[8,[[66,[63]],67]]]],[7,[[8,[[66,[64]],67]]]],[7,[[8,[[66,[65]],67]]]],0,0,0,0,0,0,0,0,0,0,[[],[[6,[40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[5,68]]]],[[],5],0,0,0,0,0,[[],[[6,[69]]]],0,0,0,0,0,0,0,0,[[70,[6,[25]],-1],[[8,[3,71]]],[[17,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[70,[6,[23]],[6,[[6,[5]]]],-1],[[8,[3,71]]],[[17,[16]]]],[[70,[6,[28]],-1],[[8,[3,71]]],[[17,[16]]]],[25,[[6,[5]]]],[28,[[6,[5]]]],[35,[[6,[5]]]],[72,[[6,[5]]]],[73,[[6,[5]]]],[40,[[6,[5]]]],[40,[[6,[5]]]],[69,[[6,[5]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[71,30],31],[[71,30],31],[-1,-1,[]],[-1,-1,[]],[[70,[6,[35]],-1],[[8,[3,71]]],[[17,[16]]]],[[70,[6,[72]],-1],[[8,[3,71]]],[[17,[16]]]],[[70,[6,[73]],-1],[[8,[3,71]]],[[17,[16]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[70,[6,[40]],-1],[[8,[3,71]]],[[17,[16]]]],[[70,[6,[40]],-1],[[8,[3,71]]],[[17,[16]]]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[46,5],[[70,[6,[69]],-1],[[8,[3,71]]],[[17,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[74,[[75,[36]]]],[74,74],[[-1,-2],3,[],[]],[[],74],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[74,5],[74,76],0,[[],2],[-1,-2,[],[]],[[],74],[74,76],[74,4],[74,59],[[74,2],2],[74,2],[-1,-2,[],[]],[74,[[3,[5,68]]]],[74,5],[74,[[26,[5,68]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[74,77],[74,78],[74,[[6,[78]]]],[-1,-2,[],[]],0,0,[[79,[22,[40]]],[[6,[25]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[79,76],28],[[79,[22,[35]]],[[6,[28]]]],[[79,76],[[6,[28]]]],[79,79],[[-1,-2],3,[],[]],0,0,[[],79],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],0,0,[-1,-1,[]],[-1,-1,[]],[79,80],[79,[[6,[35]]]],[79,35],[[79,35],40],[[79,[22,[35]]],[[6,[81]]]],[[79,76],[[6,[81]]]],0,[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[79,[22,[35]]],[[6,[40]]]],[[82,82],82],0,[[79,76],25],[79,61],0,0,0,0,0,[-1,-2,[],[]],[79,[[3,[5,68]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[79,76,80,5],69],[[79,[22,[35]]],[[6,[69]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[61,[[6,[25]]]],[61,[[6,[25]]]],[61,[[3,[5,68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[61,[[6,[28]]]],0,[61,[[6,[28]]]],[61,61],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[61,30],31],[-1,-1,[]],[[61,76],[[50,[35]]]],[61,[[6,[35]]]],0,[61,[[6,[35]]]],[61,[[6,[81]]]],0,[61,[[6,[73]]]],[[],2],[-1,-2,[],[]],[[[6,[35]],[6,[40]],[6,[28]],[26,[5,68]],[6,[69]],[6,[25]],[6,[81]]],61],[[61,23],[[50,[40]]]],[61,[[6,[40]]]],0,[61,[[6,[40]]]],0,[-1,-2,[],[]],[61,5],[61,[[26,[5,68]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[61,[[6,[69]]]],0,[61,[[6,[69]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[83,84],83],[[83,[6,[84]]],83],0,[83,83],[[-1,-2],3,[],[]],[[],83],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[83,[[22,[84]]]],[[],2],[-1,-2,[],[]],[83,62],[83,63],[83,64],[83,65],[83,85],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],3,[],[]],[[],84],[2,-1,[]],[2,-1,[]],[2,3],[[84,30],31],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[84,85],84],[[84,[6,[85]]],84],0,[84,2],[[84,59],84],0,[[84,59],84],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[85,85],[[-1,-2],3,[],[]],[[],85],[2,-1,[]],[2,-1,[]],[2,3],[[85,30],31],[-1,-1,[]],[[85,46],85],0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[86,87],61],[88,89],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[77,86],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[90,77],0,[[],2],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[78,91],90],0,[[],2],[-1,-2,[],[]],[[[6,[78]],91],90],0,[[90,5,23],3],[[90,[6,[69]],[6,[28]]],35],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,[-1,-2,[],[]],0,[82,46],0,[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[-1,-2],3,[],[]],[[],92],[2,-1,[]],[2,-1,[]],[2,3],0,[[92,30],31],[-1,-1,[]],[[],2],0,[92,93],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[91,91],[[-1,-2],3,[],[]],0,[[],91],[2,-1,[]],[2,-1,[]],[2,3],[[91,30],31],[92,91],[-1,-1,[]],0,0,0,0,0,[[],2],[91,35],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,[88,5],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[78,88],[-1,-1,[]],[[],2],[-1,-2,[],[]],[88,[[6,[94]]]],[[88,5],3],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[88,[[50,[5]]]],0,[88,78],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[63,63],[64,64],[62,62],[65,65],[95,95],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,[-1,[[8,[63]]],96],[-1,[[8,[64]]],96],[-1,[[8,[62]]],96],[-1,[[8,[65]]],96],[-1,[[8,[95]]],96],[2,3],[2,3],[2,3],[2,3],[2,3],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,62,[]],[-1,63,[]],[-1,64,[]],[-1,65,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[63,-1],8,97],[[64,-1],8,97],[[62,-1],8,97],[[65,-1],8,97],[[95,-1],8,97],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[98,58],0,[98,98],[[-1,-2],3,[],[]],[[],98],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],0,[98,5],[98,[[50,[99]]]],[98,5],0,[98,46],[[],2],[-1,-2,[],[]],[[],98],[98,62],[98,76],0,[98,63],[98,64],[98,76],0,[98,65],[98,76],0,[[98,62,46],64],[98,100],[98,46],0,[[98,58],101],[98,102],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[103,2],[103,103],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[67,30],31],[[67,30],31],[-1,-1,[]],[104,67],[-1,-1,[]],0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[7,7,7,7],[[8,[103,67]]]],[103,62],[103,63],[103,64],[103,65],[7,[[8,[[66,[62]],67]]]],[7,[[8,[[66,[63]],67]]]],[7,[[8,[[66,[64]],67]]]],[7,[[8,[[66,[65]],67]]]],0,[103,2],0,[67,[[50,[49]]]],[-1,-2,[],[]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[106,[105]]],107,[[108,[-1]]]],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[[109,30],31],[[109,30],31],[-1,-1,[]],[-1,-1,[]],[110,109],[-1,-1,[]],[[],2],[[],2],[[],2],[[111,[22,[25]]],[[8,[3,109]]]],[[111,[22,[28]]],[[8,[3,109]]]],[[111,[22,[35]]],[[8,[3,109]]]],[[111,[22,[40]]],[[8,[3,109]]]],[[111,68],[[8,[3,109]]]],[[111,[22,[68]]],[[8,[3,109]]]],[[111,[22,[35]]],[[8,[3,109]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,111],0,[109,[[50,[49]]]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[113,113],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[113,30],31],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,0,[61,113],0,[113,76],[113,5],[113,[[3,[76,5]]]],[113,5],[113,2],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[114,114],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[114,30],31],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,[[61,24],114],[114,[[8,[115,116]]]],0,0,[114,[[3,[114,[50,[114]]]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[117,30],31],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,[[43,24],117],[117,[[8,[115,116]]]],0,0,[117,[[3,[117,[50,[117]]]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[118,54],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[118,7],0,[118,[[6,[5]]]],[7,118],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,42],[120,42],[42,42],[[-1,-2],3,[],[]],0,[[],42],[[],119],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[8,[42]]],96],0,0,[2,3],[2,3],[2,3],[-1,42,[[21,[5]]]],[[42,30],31],[[119,30],31],[[120,30],31],[-1,-1,[]],[-1,-1,[]],[42,120],[-1,-1,[]],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,121],[[8,[[6,[122]],123]]],[]],[[42,121],[[8,[[6,[122]],123]]]],0,0,0,[[42,-1],8,97],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[42,[[8,[[6,[122]]]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[119,124],119],[[119,125],119],[[119,-1],119,[[21,[5]]]],[[120,-1],120,[[21,[5]]]],[[119,46],119],[[119,126],119],[[119,[6,[127]]],119],[[119,2],119],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[128,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[128,23],54],[[128,23],54],0,[128,118],[[129,32,7],128],0,[128,24],[[128,23],24],[128,32],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,[[130,[6,[131]],132],130],[130,130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[133,43],[130,43],[43,43],[52,52],[134,134],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,[[],43],[[],133],0,0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[8,[52]]],96],[-1,[[8,[134]]],96],[2,3],[2,3],[2,3],[2,3],[2,3],[[52,52],54],[[134,134],54],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[43,30],31],[[133,30],31],[[52,30],31],[[134,30],31],[[130,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[122,134],[-1,-1,[]],[43,130],0,[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[52,-1],8,97],[[134,-1],8,97],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[130,130],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[133,2],133],[[133,2],133],[[133,[6,[-1]]],133,[[21,[5]]]],[[133,-1],133,[[21,[5]]]],[[130,-1],130,[[21,[5]]]],[[133,46],133],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[135,136],[2,-1,[]],[2,-1,[]],[2,3],[[],5],[-1,-1,[]],[[],4],[[],7],[[],7],[[],7],[[],2],[-1,-2,[],[]],[137,[[8,[[3,[128,61]],138]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,[[8,[5,140]]]],[139,[[8,[5,140]]]],0,[139,[[8,[[3,[5,141]],140]]]],[[],139],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],0,[[140,30],31],[[140,30],31],[-1,-1,[]],[109,140],[142,140],[-1,-1,[]],[143,140],0,[[],2],[[],2],[23,[[8,[3,140]]]],[23,[[8,[3,140]]]],[[139,112],[[8,[3,140]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],139],0,[140,[[50,[49]]]],[-1,5,[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[139,112],[[8,[3,140]]]],[[139,112],[[8,[3,140]]]],[[139,112],[[8,[3,140]]]],[[139,112],[[8,[3,140]]]],[[139,112],[[8,[3,140]]]],[[139,112],[[8,[3,140]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[139,[6,[25]]],139],[[139,[6,[28]]],139],[[139,[6,[35]]],139],[[139,[6,[40]]],139],[[139,61],139],[[139,68],139],[[139,[6,[68]]],139],0,[[],144],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[137,32],7],0,0,0,[-1,32,[[17,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],145],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[138,30],31],[[138,30],31],[-1,-1,[]],[140,138],[146,138],[104,138],[-1,-1,[]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[],145],0,0,[138,[[50,[49]]]],[[145,137],[[8,[128,138]]]],[[145,137,7],[[8,[128,138]]]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[145,-1],145,[[21,[5]]]],[[145,54],145],[[145,-1],145,[[21,[5]]]],[[145,-1],145,[[21,[5]]]],[[145,4],145],[[145,147],145],[[145,5],145],0,[[148,-1],148,[[21,[5]]]],0,[[148,-1],148,[[21,[5]]]],0,[[148,[50,[5]]],148],0,[[148,[50,[5]]],148],0,[-1,-2,[],[]],[-1,-2,[],[]],[148,15],[[148,16],148],0,[[148,-1],148,[[21,[5]]]],0,[[],148],[2,-1,[]],[2,-1,[]],[2,3],[[148,54],148],0,0,[-1,-1,[]],[[148,16],148],0,[[],2],[-1,-2,[],[]],[[148,16],148],0,[[148,23],148],0,[[148,4],148],0,[7,148],[[148,16],148],0,[[148,16],148],0,[[148,-1],148,[[21,[5]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[149,32],0,[[],149],[2,-1,[]],[2,-1,[]],[2,3],[[137,32],7],[4,150],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,32,[[17,[16]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],[[149,54],149],[[149,-1],149,[[17,[16]]]],[[149,-1],149,[[21,[5]]]],[[149,151],149],[[149,-1],149,[[21,[5]]]],[[149,4],149],[[149,147],149],[[149,7],149],[149,149]],"c":[],"p":[[3,"VitCli",12],[15,"usize"],[15,"tuple"],[15,"u32"],[3,"String",1902],[3,"Vec",1903],[3,"PathBuf",1904],[4,"Result",1905],[3,"TypeId",1906],[3,"VitCliCommand",32],[3,"ApiTokenCommand",132],[3,"CsvDataCommand",54],[3,"DbCommand",97],[3,"LoadCsvCommand",72],[3,"Command",1907],[3,"Path",1904],[8,"AsRef",1908],[3,"InitDbCommand",115],[3,"ApiTokenAddCommand",153],[3,"ApiTokenGenerateCommand",172],[8,"Into",1908],[15,"slice"],[15,"str"],[3,"RestClient",195],[3,"AdvisorReview",1909],[3,"HashMap",1910],[4,"Error",195],[3,"Challenge",1911],[3,"DelegatorInfo",1912],[3,"Formatter",1913],[6,"Result",1913],[3,"ServiceSettings",1914],[3,"Error",1915],[3,"Error",1916],[3,"Fund",1917],[15,"u8"],[3,"RestClient",342],[3,"Url",1918],[3,"RestPathBuilder",303],[3,"FullProposalInfo",1919],[3,"ProposalVoteplanIdAndIndexes",1920],[3,"RawSnapshot",1430],[3,"Snapshot",1531],[3,"SearchQuery",1921],[4,"SearchResponse",1921],[15,"i64"],[3,"ServiceVersion",1922],[3,"Duration",1923],[8,"Error",1924],[4,"Option",1925],[3,"Response",1926],[3,"VoterInfo",1531],[3,"RestClientLogger",278],[15,"bool"],[3,"Client",1927],[3,"SearchRequestBuilder",395],[4,"Column",1921],[4,"ChallengeType",1919],[15,"u64"],[4,"Table",1921],[3,"Snapshot",733],[3,"ChallengeTemplate",1028],[3,"FundTemplate",1028],[3,"ProposalTemplate",1028],[3,"ReviewTemplate",1028],[3,"LinkedList",1928],[4,"TemplateLoad",1217],[3,"ApiTokenData",1929],[3,"Voteplan",1930],[3,"CsvConverter",576],[4,"Error",576],[3,"InsertGoal",1931],[3,"Group",1932],[3,"ArbitraryGenerator",634],[15,"array"],[15,"i32"],[3,"ValidVotePlanParameters",895],[3,"VotePlanDef",1933],[3,"ArbitrarySnapshotGenerator",667],[3,"FundDateTimes",667],[3,"Goal",1931],[3,"OffsetDateTime",1934],[3,"ArbitraryValidVotePlanConfig",800],[3,"ChallengeConfig",831],[3,"ProposalConfig",857],[3,"ValidVotePlanGenerator",878],[8,"ValidVotingTemplateGenerator",1028],[3,"SingleVotePlanParameters",1007],[3,"VotePlan",1935],[3,"CurrentFund",923],[3,"FundInfo",978],[3,"FundDates",946],[3,"FundStageDates",1917],[3,"ProposalDef",1933],[3,"ProposalChallengeInfoTemplate",1028],[8,"Deserializer",1936],[8,"Serializer",1937],[3,"ArbitraryValidVotingTemplateGenerator",1174],[3,"ChallengeHighlights",1911],[3,"Category",1919],[4,"ProposalChallengeInfo",1919],[3,"Proposer",1919],[3,"ExternalValidVotingTemplateGenerator",1217],[3,"Error",1938],[3,"RowId",1271],[6,"Result",1939],[8,"Backend",1940],[8,"NamedRow",1941],[4,"DbInserterError",1271],[4,"Error",1942],[3,"DbInserter",1271],[6,"DbConnection",1943],[3,"SnapshotRandomizer",1328],[3,"VitRestRequestGenerator",1363],[3,"Request",1944],[4,"RequestFailure",1944],[3,"VotingPowerRequestGenerator",1387],[3,"Logger",1411],[3,"RawSnapshotBuilder",1430],[3,"RawSnapshotUpdater",1430],[3,"RepsVotersAssigner",1945],[3,"SnapshotInfo",1946],[4,"Error",1946],[3,"Dreps",1946],[3,"Value",1947],[6,"Fraction",1948],[3,"VotingRegistration",1949],[3,"Server",1507],[3,"Child",1907],[3,"SnapshotUpdater",1531],[3,"KeyContribution",1946],[3,"Identifier",1950],[3,"SnapshotBuilder",1531],[3,"VotingPower",1531],[3,"NEXT_AVAILABLE_PORT_NUMBER",1654],[3,"AtomicU32",1951],[3,"TempDir",1952],[4,"ServerBootstrapperError",1777],[3,"DbBuilder",1677],[4,"DbBuilderError",1677],[6,"DbConnectionPool",1943],[4,"VarError",1953],[4,"ConnectionError",1942],[3,"Runner",1954],[3,"ServerBootstrapper",1777],[3,"CargoError",1955],[4,"LogLevel",1914],[3,"BootstrapCommandBuilder",1828],[3,"ServerSettingsBuilder",1873],[4,"SocketAddr",1956],[3,"Cors",1914],[13,"CannotDeserializeResponse",276],[8,"RawSnapshotExtension",1430]]},\
"vit_servicing_station_tests_f10":{"doc":"","t":"AAAAAAAAAADDLLALLLLMMLLLLLLLLLDLLLALALLLLLMLLLLALLLLDCLLMLLLLLLALLLLLLDLLLLLMLLLLLLLLLLLLLLLLDCLLMLLLLALLLLLLLLDLLLMLLLLLLLLLLLLCDCALLLMLLLLALLLLLLLLDLLLMLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLCCCANNENDNDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLMALMLLLAMLLLLLLLLLLLLLLLMMDLLLLLLLLMLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLRDLMLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLDDDDNDDDDDNDDDNNDDNDDDEDDIMMMMMMMMMMMMMFMMMMMAMMMMMMMMMMMFMMMMAMMMMMMMMMMMMMMMMFKMKMMKMMKMMFFFFMMMMMMMMMMFMMMMMMMMMMMMMMMMMMMMMMMMMFFMMMMMFMMMMMNDELLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLFLLLCCCAAACCAADLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLDDDLMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMLLLMLLLMMMMLFMLLMMMMMMMLLLLLLLLLLLLLLMMLLLDLLLLLLMLLLLLLLLLLMLLMLLLLLMLMLLLMLLLLMLLCCCCCCCCCCCCCCCCCAAACCCCADCCLLALLMLLLLLLLLLLLLLLLAMLLLLLDLLLLLLLLLLLLLLMLLMLMLLLLLDLLMLLLLLLLLLMLLLLLLLDLLLLLLLLLLLMLLLLCCCCDLLMLLLLLALLMLLLALCCCAAADLLMMLLLLLMLLLMLLLLLMMLDFMLLLLLLLLMLLLMLLMMMMMMLLLLMMMLDLLLLMLLLLLLLMMMMLLLMMLLLLMLDLLLLLLLLLLLLLLLLMLMLCDCDDDDCIAMMMLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLAMMMLLLLLMMMMMMMMMLLLLLMMLLLLLKKKKCCCCMMMMMMMMMMMMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLMLLMLLLLLLMLLLMLLMLLLMLLMLLLLLNDNNNNELLLLMLLLLLLLLLLLLLLMLLLLLLLLLFFFFMLMLLLLLLLLLLLDENLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLMLLLLAMMMLLLLLDLLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLMLLLLLLRRDLLLLLLLLLLLMLLMLLLMLLLLDMLLALLLLFLFFFFLLFALLLLNNDENNRMLLLLLLMLLLLLLLLLLLLLLLLMLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLDNNNNDEDMMMMAMAMMFMMMFMMMMMMMAMMNNNNDEMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLDLMLMLMLLLLMLMLLLLLMMLLMLLLMLMLMLLMLMLMLLLLDLLLMLLLLFLLLLFMLLLLLLLLLLLL","n":["common","cli","clients","data","db","load","logger","paths","server","startup","VitCli","VitCliCommand","borrow","borrow_mut","commands","default","deref","deref_mut","drop","exe","exe","from","generate_tokens","init","into","new","try_from","try_into","type_id","vzip","VitCliCommand","api_token","borrow","borrow_mut","csv_data","csv_data","db","db","default","deref","deref_mut","drop","exe","from","init","into","new","token","try_from","try_into","type_id","vzip","CsvDataCommand","LoadCsvCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","load","load","new","try_from","try_into","type_id","vzip","LoadCsvCommand","advisor_reviews","borrow","borrow_mut","build","challenges","command","db_url","deref","deref_mut","drop","from","funds","goals","init","into","new","proposals","try_from","try_into","type_id","voteplans","vzip","DbCommand","InitDbCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","init","init","into","new","try_from","try_into","type_id","vzip","InitDbCommand","borrow","borrow_mut","build","command","db_url","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","vzip","ApiTokenAddCommand","ApiTokenCommand","ApiTokenGenerateCommand","add","add","borrow","borrow_mut","command","deref","deref_mut","drop","from","generate","generate","init","into","new","try_from","try_into","type_id","vzip","ApiTokenAddCommand","borrow","borrow_mut","build","command","db_url","deref","deref_mut","drop","from","init","into","new","tokens","tokens_as_str","try_from","try_into","type_id","vzip","ApiTokenGenerateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","n","new","size","try_from","try_into","type_id","vzip","RawRestClient","RestClient","RestError","rest","CannotDeserialize","CannotDeserializeResponse","Error","ErrorStatusCode","RawRestClient","RequestError","RestClient","ServerIsNotUp","advisor_reviews","api_token","borrow","borrow","borrow_mut","borrow_mut","challenges","clone","clone_into","deref","deref","deref_mut","deref_mut","disable_log","drop","drop","enable_log","fmt","fmt","fmt","from","from","from","from","from","fund","funds","genesis","health","init","init","into","into","into","logger","logger","new","origin","path","path_builder","path_builder","proposal","proposals","proposals_by_voteplan_id_and_index","raw","raw","service_version","set_api_token","set_origin","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_status_code","vzip","vzip","source","text","RestClientLogger","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","enabled","fmt","from","init","into","is_enabled","log_post_body","log_request","log_response","log_text","set_enabled","to_owned","try_from","try_into","type_id","vzip","RestPathBuilder","address","admin","advisor_reviews","borrow","borrow_mut","challenges","clone","clone_into","deref","deref_mut","drop","fmt","from","fund","funds","genesis","health","init","into","new","path","proposal","proposals","root","service_version","snapshot","snapshot_tags","snapshot_voting_power","to_owned","try_from","try_into","type_id","vzip","ORIGIN","RestClient","advisor_reviews","api_token","borrow","borrow_mut","challenges","client","clone","clone_into","deref","deref_mut","disable_log","drop","enable_log","fmt","from","fund","funds","genesis","get","health","init","into","log_response","log_text","logger","new","origin","path_builder","path_builder","post","proposal","proposals","proposals_by_voteplan_id_and_index","put","put_snapshot","service_version","set_api_token","set_origin","snapshot_tags","to_owned","try_from","try_into","type_id","voting_power","vzip","ArbitraryGenerator","ArbitrarySnapshotGenerator","ArbitraryValidVotePlanConfig","ArbitraryValidVotingTemplateGenerator","Challenge","ChallengeConfig","ChallengeTemplate","CsvConverter","CurrentFund","ExternalValidVotingTemplateGenerator","Fund","FundDates","FundInfo","FundTemplate","Io","Proposal","ProposalConfig","ProposalTemplate","Review","ReviewTemplate","SingleVotePlanParameters","Snapshot","TemplateLoad","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","assessment_qa_start","assessor","auditability_note","auditability_rating_given","calculate_challenges_total_funds","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_id","challenge_type","challenge_type","challenge_url","challenges","challenges","challenges","challenges","challenges","challenges_count","csv_converter","current_fund","dates","description","feasibility_note","feasibility_rating_given","files_url","finalize_proposals_start","fund_goal","fund_id","fund_id","fund_name","funds","funds","funds","funds","funds","generator","generator","goal","goals","goals","highlight","id","id","id","id_generator","id_generator","impact_alignment_note","impact_alignment_rating_given","info","insight_sharing_start","internal_id","internal_id","multivoteplan_snapshot","next_challenge","next_challenge_id","next_fund","next_fund_start_time","next_funds","next_proposal","next_proposal_id","next_registration_snapshot_time","next_review","next_review_id","parameters","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposal_assessment_start","proposal_challenge_info","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_submission_start","proposal_summary","proposal_title","proposal_url","proposals","proposals","proposals","proposals","proposals","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","proposers_rewards","ranking","refine_proposals_start","registration_snapshot_time","results_url","reviews","reviews","reviews","reviews_count","rewards_info","rewards_total","rewards_total","survey_url","template_generator","template_generator","threshold","title","token","token_hash","tokens","vote_encryption_key","vote_options","vote_plan","vote_plans","voteplans","voteplans","voting_power_threshold","voting_start","voting_tally_end","voting_tally_start","CannotBuildCsvWithFunds","CsvConverter","Error","advisor_reviews","borrow","borrow","borrow_mut","borrow_mut","build_file","challenges","convert_advisor_review","convert_challenge","convert_fund","convert_goals","convert_proposal","convert_voteplan","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","funds","goals","init","init","into","into","proposals","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unix_timestamp_to_rfc3339","voteplans","vzip","vzip","ArbitraryGenerator","ArbitrarySnapshotGenerator","Snapshot","arbitrary","snapshot","voting","ArbitraryGenerator","ArbitrarySnapshotGenerator","generator","snapshot_generator","ArbitraryGenerator","borrow","borrow_mut","bytes","clone","clone_into","default","deref","deref_mut","drop","from","hash","id","id_generator","init","into","new","next_u32","next_u64","random_index","random_size","to_owned","token","token_hash","tokens","try_from","try_into","type_id","valid_vote_plan_parameters","vote_plan_def","vote_plan_def_collection","vzip","ArbitrarySnapshotGenerator","FundDateTimes","VoteplanDateTimes","advisor_reviews","assessment_qa_start","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","challenge_with_fund_id","challenges","challenges_with_fund_id","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","end","end","finalize_proposals_start","from","from","from","fund_date_times","funds","gen_single_fund","gen_single_proposal","goals","goals_with_fund_id","id_generator","init","init","init","insight_sharing_start","into","into","into","next","next_snapshot","proposal_assessment_start","proposal_submission_start","proposals","rand_datetime_in_range","refine_proposals_start","review_with_proposal_id","snapshot","snapshot","snapshot_start","start","start","tally","tallying_end","template_generator","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","voteplan_date_times","voteplan_with_fund_id","voteplans","voting_end","voting_start","vzip","vzip","vzip","Snapshot","advisor_reviews","advisor_reviews_mut","any_token","borrow","borrow_mut","challenges","challenges","challenges_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","fund_by_id","funds","funds","funds_mut","goals","goals","init","into","new","proposal_by_id","proposals","proposals","proposals_mut","reviews","to_owned","token_hash","tokens","tokens","try_from","try_into","type_id","voteplans","voteplans","voteplans_mut","vzip","ArbitraryValidVotePlanConfig","ArbitraryValidVotingTemplateGenerator","ChallengeConfig","ChallengeTemplate","CurrentFund","ExternalValidVotingTemplateGenerator","FundDates","FundInfo","FundTemplate","ProposalConfig","ProposalTemplate","ReviewTemplate","SingleVotePlanParameters","TemplateLoad","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","builder","generator","parameters","parse_challenges","parse_funds","parse_proposals","parse_reviews","template","ArbitraryValidVotePlanConfig","ChallengeConfig","ProposalConfig","borrow","borrow_mut","challenge","challenge","challenges","challenges","clone","clone_into","default","deref","deref_mut","drop","from","get_challenges","init","into","next_challenge","next_fund","next_proposal","next_review","pop_proposal","proposal","template_generator","to_owned","try_from","try_into","type_id","vzip","ChallengeConfig","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","proposal","proposals","proposals","proposals_len","proposers_rewards","proposers_rewards","rewards_total","rewards_total","to_owned","try_from","try_into","type_id","vzip","ProposalConfig","borrow","borrow_mut","challenge_id","clone","clone_into","default","deref","deref_mut","drop","fmt","from","funds","funds","init","into","to_owned","try_from","try_into","type_id","vzip","ValidVotePlanGenerator","borrow","borrow_mut","build","convert_to_vote_plan","deref","deref_mut","drop","from","init","into","new","parameters","try_from","try_into","type_id","vzip","CurrentFund","FundDates","FundInfo","SingleVotePlanParameters","ValidVotePlanParameters","borrow","borrow_mut","current_fund","deref","deref_mut","drop","from","from","fund","init","into","next_funds","try_from","try_into","type_id","vote_plan","vzip","CurrentFund","FundDates","FundInfo","current","dates","info","CurrentFund","borrow","borrow_mut","calculate_challenges_total_funds","challenges_count","deref","deref_mut","drop","from","from_single","info","init","into","new","reviews_count","set_vote_encryption_key","to_fund","try_from","try_into","type_id","vote_options","vote_plans","vzip","FundDates","as_timestamp","assessment_qa_start","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","finalize_proposals_start","fmt","from","init","insight_sharing_start","into","into","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","to_owned","try_from","try_into","type_id","voting_start","voting_tally_end","voting_tally_start","vzip","FundInfo","borrow","borrow_mut","clone","clone_into","dates","default","deref","deref_mut","drop","fmt","from","from","fund_goal","fund_id","fund_name","goals","init","into","into","results_url","survey_url","to_owned","try_from","try_into","type_id","voting_power_threshold","vzip","SingleVotePlanParameters","alias","borrow","borrow_mut","deref","deref_mut","drop","from","from","init","into","proposals","set_vote_encryption_key","try_from","try_into","type_id","vote_encryption_key","vote_encryption_key","vote_plan","vote_plan","vzip","ArbitraryValidVotingTemplateGenerator","ChallengeTemplate","ExternalValidVotingTemplateGenerator","FundTemplate","ProposalChallengeInfoTemplate","ProposalTemplate","ReviewTemplate","TemplateLoad","ValidVotingTemplateGenerator","arbitrary","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_type","challenge_type","challenge_url","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","external","feasibility_note","feasibility_rating_given","files_url","from","from","from","from","from","fund_id","goal","highlight","id","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","internal_id","internal_id","into","into","into","into","into","next_challenge","next_fund","next_proposal","next_review","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposal_challenge_info","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_summary","proposal_title","proposal_url","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","ranking","rewards_info","rewards_total","serialize","serialize","serialize","serialize","serialize","threshold","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ArbitraryValidVotingTemplateGenerator","borrow","borrow_mut","challenge_type","challenges","clone","clone_into","default","deref","deref_mut","drop","from","funds","gen_highlights","gen_http_address","generator","impact_score","init","into","new","next_challenge","next_challenge_id","next_challenge_id","next_fund","next_proposal","next_proposal_id","next_proposal_id","next_review","next_review_id","next_review_id","proposal","proposal_category","proposal_fund","proposals","proposals_challenge_info","proposer","reviews","to_owned","try_from","try_into","type_id","vzip","Challenge","ExternalValidVotingTemplateGenerator","Fund","Io","Proposal","Review","TemplateLoad","borrow","borrow","borrow_mut","borrow_mut","challenges","challenges_count","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","funds","init","init","into","into","new","next_challenge","next_fund","next_proposal","next_review","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposals","proposals_count","reviews","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbInserter","DbInserterError","DieselError","borrow","borrow","borrow_mut","borrow_mut","connection","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","init","init","insert_advisor_reviews","insert_challenges","insert_funds","insert_proposals","insert_token","insert_tokens","into","into","new","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SnapshotRandomizer","VitRestRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","new","random","random_fund_id","random_proposal_id","random_token","random_usize","rest","rest_client","snapshot","snapshot_randomizer","to_owned","try_from","try_into","type_id","vzip","VitRestRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","new","next","rest_client","snapshot_randomizer","split","to_owned","try_from","try_into","type_id","vzip","Logger","any_error","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","log_file","log_file","log_lines","new","try_from","try_into","type_id","vzip","BLOCK0_BIN","MIGRATION_DIR","Server","borrow","borrow_mut","deref","deref_mut","drop","drop","from","init","into","is_token_valid","is_up","log_file","logger","new","process","rest_client","rest_client_with_token","settings","settings","try_from","try_into","type_id","vzip","NEXT_AVAILABLE_PORT_NUMBER","__private_field","borrow","borrow_mut","db","deref","deref","deref_mut","drop","empty_db","from","get_available_port","get_cli_exe","get_exe","get_working_directory","init","into","quick_start","server","try_from","try_into","type_id","vzip","CannotCreateDatabase","CannotExtractTempPath","DbBuilder","DbBuilderError","DbInserterError","MigrationsError","VIT_STATION_DB","advisor_reviews","borrow","borrow","borrow_mut","borrow_mut","build","build_into_path","challenges","default","deref","deref","deref_mut","deref_mut","disable_migrations","do_migration","drop","drop","fmt","fmt","from","from","from","from","from","funds","init","init","into","into","migrations_folder","new","proposals","source","to_string","tokens","try_do_migration","try_from","try_from","try_insert_challenges","try_insert_funds","try_insert_proposals","try_insert_reviews","try_insert_tokens","try_into","try_into","type_id","type_id","vzip","vzip","with_advisor_reviews","with_challenges","with_funds","with_migrations_from","with_proposals","with_snapshot","with_token","with_tokens","BootstrapCommandBuilder","CargoError","DbBuilderError","FailToBootstrap","ProcessSpawnError","ServerBootstrapper","ServerBootstrapperError","ServerSettingsBuilder","address","allowed_origins","allowed_origins","block0_path","bootstrap","cert_file","command","cors","db_url","dump_settings","enable_api_tokens","exe","in_settings_file","load_settings","log_file","log_level","max_age_secs","out_settings_file","priv_key_file","service_version","service_version","settings","settings","settings_builder","CargoError","DbBuilderError","FailToBootstrap","ProcessSpawnError","ServerBootstrapper","ServerBootstrapperError","allowed_origins","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","init","init","into","into","new","service_version","settings_builder","source","start","start_with_exe","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_allowed_origins","with_api_tokens","with_block0_path","with_db_path","with_localhost_address","with_log_level","with_service_version","BootstrapCommandBuilder","address","address","allowed_origins","allowed_origins","block0_path","block0_path","borrow","borrow_mut","build","cert_file","cert_file","db_url","db_url","default","deref","deref_mut","drop","enable_api_tokens","enable_api_tokens","exe","from","in_settings_file","in_settings_file","init","into","log_file","log_file","log_level","log_level","max_age_secs","max_age_secs","new","out_settings_file","out_settings_file","priv_key_file","priv_key_file","service_version","service_version","try_from","try_into","type_id","vzip","ServerSettingsBuilder","borrow","borrow_mut","build","cors","default","deref","deref_mut","drop","dump_settings","format_localhost_address","from","init","into","load_settings","settings","try_from","try_into","type_id","vzip","with_api_tokens","with_block0_path","with_cors","with_db_path","with_localhost_address","with_log_level","with_log_output_path","with_random_localhost_address"],"q":[[0,"vit_servicing_station_tests_f10"],[1,"vit_servicing_station_tests_f10::common"],[10,"vit_servicing_station_tests_f10::common::cli"],[30,"vit_servicing_station_tests_f10::common::cli::commands"],[52,"vit_servicing_station_tests_f10::common::cli::commands::csv_data"],[70,"vit_servicing_station_tests_f10::common::cli::commands::csv_data::load"],[93,"vit_servicing_station_tests_f10::common::cli::commands::db"],[111,"vit_servicing_station_tests_f10::common::cli::commands::db::init"],[128,"vit_servicing_station_tests_f10::common::cli::commands::token"],[149,"vit_servicing_station_tests_f10::common::cli::commands::token::add"],[168,"vit_servicing_station_tests_f10::common::cli::commands::token::generate"],[186,"vit_servicing_station_tests_f10::common::clients"],[190,"vit_servicing_station_tests_f10::common::clients::rest"],[259,"vit_servicing_station_tests_f10::common::clients::rest::Error"],[261,"vit_servicing_station_tests_f10::common::clients::rest::logger"],[286,"vit_servicing_station_tests_f10::common::clients::rest::path"],[320,"vit_servicing_station_tests_f10::common::clients::rest::raw"],[367,"vit_servicing_station_tests_f10::common::data"],[511,"vit_servicing_station_tests_f10::common::data::csv_converter"],[555,"vit_servicing_station_tests_f10::common::data::generator"],[561,"vit_servicing_station_tests_f10::common::data::generator::arbitrary"],[565,"vit_servicing_station_tests_f10::common::data::generator::arbitrary::generator"],[597,"vit_servicing_station_tests_f10::common::data::generator::arbitrary::snapshot_generator"],[678,"vit_servicing_station_tests_f10::common::data::generator::snapshot"],[719,"vit_servicing_station_tests_f10::common::data::generator::voting"],[744,"vit_servicing_station_tests_f10::common::data::generator::voting::builder"],[775,"vit_servicing_station_tests_f10::common::data::generator::voting::builder::challenge"],[801,"vit_servicing_station_tests_f10::common::data::generator::voting::builder::proposal"],[822,"vit_servicing_station_tests_f10::common::data::generator::voting::generator"],[839,"vit_servicing_station_tests_f10::common::data::generator::voting::parameters"],[861,"vit_servicing_station_tests_f10::common::data::generator::voting::parameters::fund"],[867,"vit_servicing_station_tests_f10::common::data::generator::voting::parameters::fund::current"],[890,"vit_servicing_station_tests_f10::common::data::generator::voting::parameters::fund::dates"],[922,"vit_servicing_station_tests_f10::common::data::generator::voting::parameters::fund::info"],[950,"vit_servicing_station_tests_f10::common::data::generator::voting::parameters::vote_plan"],[971,"vit_servicing_station_tests_f10::common::data::generator::voting::template"],[1117,"vit_servicing_station_tests_f10::common::data::generator::voting::template::arbitrary"],[1159,"vit_servicing_station_tests_f10::common::data::generator::voting::template::external"],[1213,"vit_servicing_station_tests_f10::common::db"],[1253,"vit_servicing_station_tests_f10::common::load"],[1281,"vit_servicing_station_tests_f10::common::load::rest"],[1303,"vit_servicing_station_tests_f10::common::logger"],[1321,"vit_servicing_station_tests_f10::common::paths"],[1323,"vit_servicing_station_tests_f10::common::server"],[1347,"vit_servicing_station_tests_f10::common::startup"],[1370,"vit_servicing_station_tests_f10::common::startup::db"],[1434,"vit_servicing_station_tests_f10::common::startup::server"],[1466,"vit_servicing_station_tests_f10::common::startup::server::bootstrap"],[1517,"vit_servicing_station_tests_f10::common::startup::server::command"],[1560,"vit_servicing_station_tests_f10::common::startup::server::settings"],[1588,"alloc::string"],[1589,"alloc::vec"],[1590,"std::path"],[1591,"core::result"],[1592,"core::any"],[1593,"std::process"],[1594,"std::path"],[1595,"core::convert"],[1596,"std::collections::hash::map"],[1597,"vit_servicing_station_lib_f10::db::models::challenges"],[1598,"core::fmt"],[1599,"core::fmt"],[1600,"reqwest::error"],[1601,"serde_json::error"],[1602,"vit_servicing_station_lib_f10::db::models::funds"],[1603,"url"],[1604,"vit_servicing_station_lib_f10::db::models::proposals"],[1605,"vit_servicing_station_lib_f10::v0::endpoints::proposals::requests"],[1606,"vit_servicing_station_lib_f10::db::models::proposals"],[1607,"core::error"],[1608,"core::option"],[1609,"reqwest::blocking::response"],[1610,"reqwest::blocking::client"],[1611,"alloc::collections::linked_list"],[1612,"vit_servicing_station_lib_f10::db::models::api_tokens"],[1613,"vit_servicing_station_lib_f10::db::models::voteplans"],[1614,"vit_servicing_station_lib_f10::db::models::goals::goals_impl"],[1615,"chain_impl_mockchain::testing::scenario::template"],[1616,"vit_servicing_station_lib_f10::db::models::goals"],[1617,"time::offset_date_time"],[1618,"chain_impl_mockchain::certificate::vote_plan"],[1619,"vit_servicing_station_lib_f10::db::models::funds"],[1620,"serde::ser"],[1621,"vit_servicing_station_lib_f10::db::models::proposals"],[1622,"diesel::result"],[1623,"diesel::sqlite::connection"],[1624,"jortestkit::load::request"],[1625,"jortestkit::load::request"],[1626,"assert_fs::fixture::dir"],[1627,"diesel::migration::errors"],[1628,"diesel::result"],[1629,"vit_servicing_station_lib_f10::server::settings::config"],[1630,"vit_servicing_station_lib_f10::server::settings::config"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Gets working directory Uses std::env::current_exe() for …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","todo: add error mapping","","","","todo: add error mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","todo: add error mapping","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","todo: add error mapping","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,0,10,10,10,0,10,0,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,0,0,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,27,27,0,27,0,27,0,27,24,36,24,27,24,27,24,24,24,24,27,24,27,24,24,27,24,24,27,27,24,24,27,27,27,24,24,24,24,24,27,24,24,27,0,36,24,36,0,24,36,24,24,24,0,24,24,24,24,27,24,27,24,27,24,27,24,27,24,24,27,122,122,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,0,55,0,0,0,0,0,55,0,0,0,55,55,0,0,55,0,0,0,0,0,0,0,82,53,53,53,80,52,52,52,75,52,52,50,50,0,49,73,88,94,80,0,66,81,50,53,53,52,82,81,81,50,81,0,49,75,88,94,0,88,51,49,81,50,51,50,53,62,68,53,53,80,82,52,50,0,77,88,77,82,66,77,88,82,77,88,76,0,0,0,0,82,52,52,52,53,52,82,52,52,52,0,49,74,88,94,52,52,52,74,50,53,82,82,81,49,88,94,80,51,74,50,81,68,73,51,50,0,0,49,78,80,78,80,0,49,81,82,82,82,59,0,0,58,58,59,58,59,58,58,0,0,0,0,0,0,58,59,58,59,58,59,59,59,58,59,58,58,58,59,58,59,58,59,58,59,58,59,58,59,0,58,58,59,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,68,69,69,72,68,69,72,68,68,68,68,68,68,68,69,72,68,69,72,68,69,72,68,69,72,69,69,72,68,68,68,68,68,68,68,68,69,72,68,69,69,72,68,69,69,69,69,68,0,69,68,68,69,69,69,72,72,69,68,68,68,69,72,68,69,72,68,69,72,68,68,68,68,69,69,69,72,68,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,0,66,66,66,66,66,66,66,66,0,66,66,66,66,66,66,0,66,0,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,0,0,0,0,0,53,53,53,51,52,50,53,85,51,52,50,53,85,52,52,52,52,52,50,50,51,52,50,53,85,51,52,50,53,85,51,52,50,53,85,51,52,50,53,85,50,51,52,50,53,85,51,52,50,53,85,0,53,53,52,51,52,50,53,85,50,51,50,51,50,53,85,53,53,51,52,50,53,85,52,50,51,52,50,53,85,77,77,77,77,0,0,0,0,52,52,52,53,52,52,52,52,52,52,52,50,53,51,50,51,52,50,53,85,51,50,51,52,50,53,85,51,52,50,53,85,51,52,50,53,85,51,52,50,53,85,51,52,50,53,85,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,55,0,55,55,55,55,0,94,55,94,55,94,94,94,94,94,55,94,55,94,55,55,55,94,55,55,94,94,55,94,55,94,94,94,94,94,0,0,0,0,94,94,94,55,94,55,94,55,94,55,94,55,94,55,0,0,96,98,96,98,96,98,98,96,98,96,98,96,96,96,98,96,96,98,96,98,98,98,98,98,98,98,96,98,96,96,98,96,98,96,98,96,98,96,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,101,100,101,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,0,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,107,107,107,0,107,107,107,107,0,107,0,0,0,0,107,107,0,0,107,107,107,107,112,112,0,0,112,112,0,111,111,112,111,112,111,111,111,111,111,112,111,112,111,111,111,112,112,112,111,112,112,112,112,111,111,112,111,112,111,111,111,112,112,111,111,111,112,111,111,111,111,111,111,112,111,112,111,112,111,111,111,111,111,111,111,111,0,110,110,110,110,0,0,0,118,115,118,118,0,118,0,119,118,0,118,118,118,0,118,118,118,118,118,115,118,0,119,115,110,110,110,110,0,0,115,115,110,115,110,115,115,110,115,110,115,110,110,110,115,110,110,110,110,115,110,115,110,115,115,115,110,115,115,110,115,110,115,110,115,110,115,110,115,115,115,115,115,115,115,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,119,119,119,119,119,119,119,119,0,119,119,119,119,0,119,119,119,119,119,119,119,119,119,119,119,119,119],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[2,-1,[]],[2,-1,[]],[2,3],0,0,[-1,-1,[]],[[1,4],[[6,[5]]]],[[],2],[-1,-2,[],[]],[7,1],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[10,11],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,12],0,[10,13],[[],10],[2,-1,[]],[2,-1,[]],[2,3],0,[-1,-1,[]],[[],2],[-1,-2,[],[]],[7,10],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,[12,14],[15,12],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[[14,-1],14,[[17,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[14,15],[[14,-1],14,[[17,[16]]]],0,[[14,-1],14,[[17,[16]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[14,-1],14,[[17,[16]]]],[[14,-1],14,[[17,[16]]]],[[],2],[-1,-2,[],[]],[15,14],[[14,-1],14,[[17,[16]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[14,-1],14,[[17,[16]]]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],0,[13,18],[[],2],[-1,-2,[],[]],[15,13],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,15],0,[[18,-1],18,[[17,[16]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[15,18],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,[11,19],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],0,[11,20],[[],2],[-1,-2,[],[]],[15,11],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[19,15],0,[[19,-1],19,[[21,[5]]]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[15,19],[[19,[22,[5]]],19],[[19,23],19],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,15],0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[20,4],20],[15,20],[[20,4],20],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[24,23],[[8,[[26,[5,[6,[25]]]],27]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,[[8,[[6,[28]],27]]]],[24,24],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[24,3],[2,3],[2,3],[24,3],[[24,29],30],[[27,29],30],[[27,29],30],[31,24],[-1,-1,[]],[32,27],[33,27],[-1,-1,[]],[[24,23],[[8,[34,27]]]],[24,[[8,[34,27]]]],[24,[[8,[[6,[35]],27]]]],[24,[[8,[3,27]]]],[[],2],[[],2],[24,36],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[37,24],0,0,[24,38],0,[[24,23],[[8,[39,27]]]],[24,[[8,[[6,[39]],27]]]],[[24,[22,[40]]],[[8,[[6,[41]],27]]]],0,0,[24,[[8,[42,27]]]],[[24,5],3],[[24,-1],3,[[21,[5]]]],[27,[[44,[43]]]],[-1,-2,[],[]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[24,45],[[8,[3,27]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[[-1,-2],3,[],[]],[[],46],[2,-1,[]],[2,-1,[]],[2,3],0,[[46,29],30],[-1,-1,[]],[[],2],[-1,-2,[],[]],[46,47],[[46,23],3],[[46,23],3],[[46,45],3],[[46,23],3],[[46,47],3],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[38,38],[[38,23],5],[-1,-2,[],[]],[-1,-2,[],[]],[38,5],[38,38],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[38,29],30],[-1,-1,[]],[[38,23],5],[38,5],[38,5],[38,5],[[],2],[-1,-2,[],[]],[37,38],[[38,23],5],[[38,23],5],[38,5],0,[38,5],[[38,23],5],[38,5],[[38,23,23],5],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[[36,23],[[8,[45,27]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[36,[[8,[45,27]]]],[36,[[8,[48,32]]]],[36,36],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[36,3],[2,3],[36,3],[[36,29],30],[-1,-1,[]],[[36,23],[[8,[45,27]]]],[36,[[8,[45,27]]]],[36,[[8,[45,27]]]],[[36,23],[[8,[45,32]]]],[36,[[8,[45,27]]]],[[],2],[-1,-2,[],[]],[[36,45],3],[[36,23],3],0,[37,36],0,[36,38],0,[[36,23,5],[[8,[45,32]]]],[[36,23],[[8,[45,27]]]],[36,[[8,[45,27]]]],[[36,23],[[8,[45,27]]]],[[36,23,5],[[8,[45,32]]]],[[36,23,5],[[8,[45,27]]]],[36,[[8,[45,27]]]],[[36,5],3],[[36,-1],3,[[21,[5]]]],[36,[[8,[45,27]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[36,23,23],[[8,[45,27]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[6,[28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[6,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],49],[-1,50,[]],0,[-1,51,[]],0,0,[-1,52,[]],0,0,[-1,53,[]],0,0,[7,[[8,[[54,[50]],55]]]],[7,[[8,[[54,[51]],55]]]],[7,[[8,[[54,[52]],55]]]],[7,[[8,[[54,[53]],55]]]],0,0,0,0,0,0,0,0,0,0,[[],[[6,[41]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[5,56]]]],[[],5],0,0,0,0,0,[[],[[6,[57]]]],0,0,0,0,0,0,0,0,[[58,[6,[25]],-1],[[8,[3,59]]],[[17,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[58,[6,[23]],[6,[[6,[5]]]],-1],[[8,[3,59]]],[[17,[16]]]],[[58,[6,[28]],-1],[[8,[3,59]]],[[17,[16]]]],[25,[[6,[5]]]],[28,[[6,[5]]]],[34,[[6,[5]]]],[60,[[6,[5]]]],[41,[[6,[5]]]],[57,[[6,[5]]]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[59,29],30],[[59,29],30],[-1,-1,[]],[-1,-1,[]],[[58,[6,[34]],-1],[[8,[3,59]]],[[17,[16]]]],[[58,[6,[60]],-1],[[8,[3,59]]],[[17,[16]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[58,[6,[41]],-1],[[8,[3,59]]],[[17,[16]]]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[61,5],[[58,[6,[57]],-1],[[8,[3,59]]],[[17,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[62,[[63,[35]]]],[62,62],[[-1,-2],3,[],[]],[[],62],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[62,5],[62,64],0,[[],2],[-1,-2,[],[]],[[],62],[62,4],[62,65],[[62,2],2],[62,2],[-1,-2,[],[]],[62,[[3,[5,56]]]],[62,5],[62,[[26,[5,56]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[62,66],[62,67],[62,[[6,[67]]]],[-1,-2,[],[]],0,0,0,[[68,[22,[41]]],[[6,[25]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[68,64],28],[[68,[22,[34]]],[[6,[28]]]],[[68,64],[[6,[28]]]],[68,68],[[-1,-2],3,[],[]],[[],68],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[68,69],[68,[[6,[34]]]],[68,34],[[68,34],41],[[68,[22,[34]]],[[6,[70]]]],[[68,64],[[6,[70]]]],0,[[],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[68,[22,[34]]],[[6,[41]]]],[[71,71],71],0,[[68,64],25],[68,49],0,0,0,0,0,0,0,[-1,-2,[],[]],[68,[[3,[5,56]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[68,72],[[68,64],57],[[68,[22,[34]]],[[6,[57]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[49,[[6,[25]]]],[49,[[6,[25]]]],[49,[[3,[5,56]]]],[-1,-2,[],[]],[-1,-2,[],[]],[49,[[6,[28]]]],0,[49,[[6,[28]]]],[49,49],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[49,29],30],[-1,-1,[]],[[49,64],[[44,[34]]]],[49,[[6,[34]]]],0,[49,[[6,[34]]]],[49,[[6,[70]]]],0,[[],2],[-1,-2,[],[]],[[[6,[34]],[6,[41]],[6,[28]],[26,[5,56]],[6,[57]],[6,[25]],[6,[70]]],49],[[49,23],[[44,[41]]]],[49,[[6,[41]]]],0,[49,[[6,[41]]]],0,[-1,-2,[],[]],[49,5],[49,[[26,[5,56]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[49,[[6,[57]]]],0,[49,[[6,[57]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[73,74],73],[[73,[6,[74]]],73],0,[73,73],[[-1,-2],3,[],[]],[[],73],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[73,[[22,[74]]]],[[],2],[-1,-2,[],[]],[73,50],[73,51],[73,52],[73,53],[73,75],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[[-1,-2],3,[],[]],[[],74],[2,-1,[]],[2,-1,[]],[2,3],[[74,29],30],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[74,75],74],[[74,[6,[75]]],74],0,[74,2],[[74,65],74],0,[[74,65],74],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[75,75],[[-1,-2],3,[],[]],[[],75],[2,-1,[]],[2,-1,[]],[2,3],[[75,29],30],[-1,-1,[]],[[75,61],75],0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[76,77],49],[78,79],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[66,76],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,3],[80,66],[-1,-1,[]],0,[[],2],[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[67,81],80],0,[[],2],[-1,-2,[],[]],[[[6,[67]],81],80],0,[[80,5,23],3],[[80,[6,[57]],[6,[28]]],34],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,[-1,-2,[],[]],0,[71,61],0,[-1,-2,[],[]],[-1,-2,[],[]],[82,82],[[-1,-2],3,[],[]],[[],82],[2,-1,[]],[2,-1,[]],[2,3],0,[[82,29],30],[-1,-1,[]],[[],2],0,[82,83],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[-1,-2],3,[],[]],0,[[],81],[2,-1,[]],[2,-1,[]],[2,3],[[81,29],30],[-1,-1,[]],[82,81],0,0,0,0,[[],2],[81,34],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,[78,5],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[67,78],[-1,-1,[]],[[],2],[-1,-2,[],[]],[78,[[6,[84]]]],[[78,5],3],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[78,[[44,[5]]]],0,[78,67],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[51,51],[52,52],[50,50],[53,53],[85,85],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,[-1,[[8,[51]]],86],[-1,[[8,[52]]],86],[-1,[[8,[50]]],86],[-1,[[8,[53]]],86],[-1,[[8,[85]]],86],[2,3],[2,3],[2,3],[2,3],[2,3],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,50,[]],[-1,51,[]],[-1,52,[]],[-1,53,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,-1],8,87],[[52,-1],8,87],[[50,-1],8,87],[[53,-1],8,87],[[85,-1],8,87],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[88,89],0,[88,88],[[-1,-2],3,[],[]],[[],88],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],0,[88,[[44,[90]]]],[88,5],0,[88,61],[[],2],[-1,-2,[],[]],[[],88],[88,50],[88,64],0,[88,51],[88,52],[88,64],0,[88,53],[88,64],0,[[88,50,61],52],[88,91],[88,61],0,[[88,89],92],[88,93],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[94,2],[94,94],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[55,29],30],[[55,29],30],[-1,-1,[]],[95,55],[-1,-1,[]],0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[7,7,7,7],[[8,[94,55]]]],[94,50],[94,51],[94,52],[94,53],[7,[[8,[[54,[50]],55]]]],[7,[[8,[[54,[51]],55]]]],[7,[[8,[[54,[52]],55]]]],[7,[[8,[[54,[53]],55]]]],0,[94,2],0,[55,[[44,[43]]]],[-1,-2,[],[]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[96,29],30],[[96,29],30],[-1,-1,[]],[-1,-1,[]],[97,96],[[],2],[[],2],[[98,[22,[25]]],[[8,[3,96]]]],[[98,[22,[28]]],[[8,[3,96]]]],[[98,[22,[34]]],[[8,[3,96]]]],[[98,[22,[41]]],[[8,[3,96]]]],[[98,56],[[8,[3,96]]]],[[98,[22,[56]]],[[8,[3,96]]]],[-1,-2,[],[]],[-1,-2,[],[]],[99,98],[96,[[44,[43]]]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[100,100],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[100,29],30],[-1,-1,[]],[[],2],[-1,-2,[],[]],[49,100],0,[100,64],[100,64],[100,5],[100,2],0,0,0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[101,101],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[[101,29],30],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[49,24],101],[101,[[8,[102,103]]]],0,0,[101,[[3,[101,[44,[101]]]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[104,47],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[104,7],0,[104,[[6,[5]]]],[7,104],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[2,3],[105,3],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[105,23],47],[[105,23],47],0,[105,104],[[106,31,7],105],0,[105,24],[[105,23],24],[105,31],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[107,108],[2,-1,[]],[2,3],[109,7],[-1,-1,[]],[[],4],[[],7],[[],7],[[],7],[[],2],[-1,-2,[],[]],[109,[[8,[[3,[105,49]],110]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,109],[[8,[7,112]]]],[[111,-1],[[8,[7,112]]],[[17,[16]]]],0,[[],111],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[111,111],[[111,99,16],[[8,[3,112]]]],[2,3],[2,3],[[112,29],30],[[112,29],30],[-1,-1,[]],[-1,-1,[]],[113,112],[114,112],[96,112],0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],111],0,[112,[[44,[43]]]],[-1,5,[]],0,[[111,99],[[8,[3,112]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[111,99],[[8,[3,112]]]],[[111,99],[[8,[3,112]]]],[[111,99],[[8,[3,112]]]],[[111,99],[[8,[3,112]]]],[[111,99],[[8,[3,112]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,[6,[25]]],111],[[111,[6,[28]]],111],[[111,[6,[34]]],111],[[111,-1],111,[[17,[16]]]],[[111,[6,[41]]],111],[[111,49],111],[[111,56],111],[[111,[6,[56]]],111],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[109,31],7],0,0,0,[-1,31,[[17,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],115],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[110,29],30],[[110,29],30],[-1,-1,[]],[116,110],[95,110],[-1,-1,[]],[112,110],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[],115],0,0,[110,[[44,[43]]]],[[115,109],[[8,[105,110]]]],[[115,109,7],[[8,[105,110]]]],[-1,5,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[115,-1],115,[[21,[5]]]],[[115,47],115],[[115,-1],115,[[21,[5]]]],[[115,-1],115,[[21,[5]]]],[[115,4],115],[[115,117],115],[[115,5],115],0,[[118,-1],118,[[21,[5]]]],0,[[118,-1],118,[[21,[5]]]],0,[[118,-1],118,[[21,[5]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[118,15],[[118,16],118],0,[[118,-1],118,[[21,[5]]]],0,[[],118],[2,-1,[]],[2,-1,[]],[2,3],[[118,47],118],0,0,[-1,-1,[]],[[118,16],118],0,[[],2],[-1,-2,[],[]],[[118,16],118],0,[[118,23],118],0,[[118,4],118],0,[7,118],[[118,16],118],0,[[118,16],118],0,[[118,-1],118,[[21,[5]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[119,31],0,[[],119],[2,-1,[]],[2,-1,[]],[2,3],[[109,31],7],[4,120],[-1,-1,[]],[[],2],[-1,-2,[],[]],[-1,31,[[17,[16]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],[[119,47],119],[[119,-1],119,[[21,[5]]]],[[119,121],119],[[119,-1],119,[[21,[5]]]],[[119,4],119],[[119,117],119],[[119,7],119],[119,119]],"c":[],"p":[[3,"VitCli",10],[15,"usize"],[15,"tuple"],[15,"u32"],[3,"String",1588],[3,"Vec",1589],[3,"PathBuf",1590],[4,"Result",1591],[3,"TypeId",1592],[3,"VitCliCommand",30],[3,"ApiTokenCommand",128],[3,"CsvDataCommand",52],[3,"DbCommand",93],[3,"LoadCsvCommand",70],[3,"Command",1593],[3,"Path",1590],[8,"AsRef",1594],[3,"InitDbCommand",111],[3,"ApiTokenAddCommand",149],[3,"ApiTokenGenerateCommand",168],[8,"Into",1594],[15,"slice"],[15,"str"],[3,"RestClient",190],[3,"AdvisorReview",1595],[3,"HashMap",1596],[4,"Error",190],[3,"Challenge",1597],[3,"Formatter",1598],[6,"Result",1598],[3,"ServiceSettings",1599],[3,"Error",1600],[3,"Error",1601],[3,"Fund",1602],[15,"u8"],[3,"RestClient",320],[3,"Url",1603],[3,"RestPathBuilder",286],[3,"Proposal",1604],[3,"ProposalVoteplanIdAndIndexes",1605],[3,"FullProposalInfo",1604],[3,"ServiceVersion",1606],[8,"Error",1607],[4,"Option",1608],[3,"Response",1609],[3,"RestClientLogger",261],[15,"bool"],[3,"Client",1610],[3,"Snapshot",678],[3,"ChallengeTemplate",971],[3,"FundTemplate",971],[3,"ProposalTemplate",971],[3,"ReviewTemplate",971],[3,"LinkedList",1611],[4,"TemplateLoad",1159],[3,"ApiTokenData",1612],[3,"Voteplan",1613],[3,"CsvConverter",511],[4,"Error",511],[3,"InsertGoal",1614],[15,"i64"],[3,"ArbitraryGenerator",565],[15,"array"],[15,"i32"],[15,"u64"],[3,"ValidVotePlanParameters",839],[3,"VotePlanDef",1615],[3,"ArbitrarySnapshotGenerator",597],[3,"FundDateTimes",597],[3,"Goal",1616],[3,"OffsetDateTime",1617],[3,"VoteplanDateTimes",597],[3,"ArbitraryValidVotePlanConfig",744],[3,"ChallengeConfig",775],[3,"ProposalConfig",801],[3,"ValidVotePlanGenerator",822],[8,"ValidVotingTemplateGenerator",971],[3,"SingleVotePlanParameters",950],[3,"VotePlan",1618],[3,"CurrentFund",867],[3,"FundInfo",922],[3,"FundDates",890],[3,"FundStageDates",1602],[3,"ProposalDef",1615],[3,"ProposalChallengeInfoTemplate",971],[8,"Deserializer",1619],[8,"Serializer",1620],[3,"ArbitraryValidVotingTemplateGenerator",1117],[4,"ChallengeType",1604],[3,"ChallengeHighlights",1597],[3,"Category",1604],[4,"ProposalChallengeInfo",1604],[3,"Proposer",1604],[3,"ExternalValidVotingTemplateGenerator",1159],[3,"Error",1621],[4,"DbInserterError",1213],[4,"Error",1622],[3,"DbInserter",1213],[3,"SqliteConnection",1623],[3,"SnapshotRandomizer",1253],[3,"VitRestRequestGenerator",1281],[3,"Request",1624],[4,"RequestFailure",1624],[3,"Logger",1303],[3,"Server",1323],[3,"Child",1593],[3,"NEXT_AVAILABLE_PORT_NUMBER",1347],[3,"AtomicU32",1625],[3,"TempDir",1626],[4,"ServerBootstrapperError",1466],[3,"DbBuilder",1370],[4,"DbBuilderError",1370],[4,"RunMigrationsError",1627],[4,"ConnectionError",1622],[3,"ServerBootstrapper",1466],[3,"CargoError",1628],[4,"LogLevel",1599],[3,"BootstrapCommandBuilder",1517],[3,"ServerSettingsBuilder",1560],[4,"SocketAddr",1629],[3,"Cors",1599],[13,"CannotDeserializeResponse",259]]},\
"vitup":{"doc":"","t":"NNGAAAAAAANEDNNNERNENNRRRNNNDNNNDDILMMMLLLLLFFLLLMMLMFFMLLLLLFLLLLLLLLLLLLMFMFLALLLLLLLMMMAKKLMLMLLMMLLLLLLLLAMMLLLCCCCCACCCCCCCAAAADNNNEENNNNLMMLLLLLLLLLLLLLLFLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMENNILLLLLLLLLLFLLLLLFKKLLLLLLFFFFFNNENNDLLLLMLLLLLLMLLLLMLMLMLMLLLLMLLMLDMLLMLLLLLLLLLMLLLLLLLLLDIKAMAAFIKDLLLLLLLLLLLLLLMLLLLLLLLNNNNNENNNNNNNENNCELLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLALLLALLLLLLLLLAALLLLLLLLLLLLLLLALLLDLLLLMLLLLLLLLLLFLLLLMMMLLLLLMLNDEDNNDNENNDMMAMAMMMMMMMMMMMMMMMAMMMAMMDMLLLLLLLLLLLLLLLLLLMMLLLLLLNCNECNNENNCNECCNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLDLLLLMLLMLLLLLLLLMLLLLMMMMMMLLLLLLDLLLLMLLMLLLLLLLLMLLLLMLMMMMMMLLLLLLLCCCAAADLLLLLLMLLLLLLLLLLLLMMMLLLLLLDMLLLLLLLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLLLMMMMLLLLLLDLLLLLLLLLLLLLLMLLMMLLMMLLLLLLDDLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLMMLMLLLLLLLLLLNNNNNEEENNNNNLLLLLLLLLLLLLLLALLLLLLLLLNNNNNEEDEDDDDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNNNEDDDNNAMMMMMMMMMMMMMMMMMAMMMMMMMAMMMMMMMMMMMMMMMMMMMMMDLLLLMLLMLLLMLLLLLMLLLLMMMMMMMMMLLLLLMLNNNENNNDDNNLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLCCCCDCLLLLLLLLLMLLLLLLMLMMLLMMMMMMMMMMMMMMMMMLLLLLMMMMMLDLLLLLLMLLLLLLLLLLLLLLLLLLNNNNNNENNENNNNELLLLLLLLAALLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLDENLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEEDDNNNNNNNLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNEDNNNNNNNENNENNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAANNENENDNNENNENENNNNNNENEEEDNENNNNNDNDNNNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNDDDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNEDDNNNCDDRNDNEDRNNEDDRDDENNNLAMMMMAMLLALALLMMMMMFLLLLMLLLLMLAMLLMAAMLMLFFLAMMMMAMMLLLMLMMAMMAMLMMMMMMMMMMMMMMMMMMMMMMMMDLMLLLLLLLLLMLLLLLLLLLLLDLLMMLLLLMMLFLLLLLLLLLMLMLLLMLLDCCCLLLLLLLMLCCLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLNNDENRRLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLCCREDRNENNLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNNREDNNLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMNNRENDRRLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLNENNNLLLLLLLLLLLLLLLLLLLLLFLLLLLLDLLLLLLLLLLLLMLLLLLLLLMLCCDLLLLLAMLLLLLLLALLLAMLLLLLLDDLLMLLLLMLLLLMLLLLLLLLLLMLLLLMLLMLLLLMMMMMMMMLLMLLLLLLLLMLLDLLLLLFFFFLLLLLLLMMMMLLLMLMLLLLLDDLLMLLLLLLLLMLLLLLLLLLLMLLLLMLLMLLLLMMMMMLLMLLLLLLLLMMMLLDLLLLLLLLLLLLLLLMLLLLLMLNRNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLLLLMMMMNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMAAAAAANNNNNEDDALLLLLLLLAMLLLLLALLMLLLLLLLLLLLLLMALLLLLLLLLMLMLLAANEDDDNNNNNNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNEDNNNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLLLMLLLLLMLLNEDDDNNNNNNMMMNNNNNEDNNNDMMNNDDEGNNNENNNNNNNDNEDNDDENNNNNNENNMMMMMMMAMAAMMAMMMMAMMMMAMMMMMMFMMMAAFMMMMMMDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLMLLLLLLLLMFNNNDDENRRLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMMLFLLLLLLLLLLLLLLLDGENNNLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLMLLLLMLLLLLLLLLLLLNNDNDEGNENNNDDMMAMMMAAMMMMMMMMMFAFMMMMDLLLLLLLLLLLLLLLMMMFLLMLLLLMNDGNNENGGLMMLMLLLLMLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLMLLLLLLLLMLLLNNENDDDDMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMNNENNNNNNFLLLLLLLLLLLLLLFLLLLLFLFFLLLLLNNENENDNNNLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLFFMLLFLMLLLLLLLLLLLLLLLLLLLLLLNENNDNMLMLMLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLLMLMLLLNNENNNNNACLLAALLLLLLLLLLLLFLLLLCCAAALAFLLLLALFFFCAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFADLLLFLLLLLMLFFFFFFFFLLFLFFFLLLLDDDLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFDDLLLLLLMLLLLLLLLLFLLLLLLLLLLLLLLLMLLLLLLLLMLLLDDDDMMMAMMAMMMAADLLLMLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLMLMLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLMLLLLLLLLLLDLLLLMLLLLLLLLLLLMLLLLLLLLLADDRDGNNDNNDNENENLMMMLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLMMAMMAMMMLFMLLLLLLLLLLLMLLLMLLDGNNNENLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLMLMMLLMLLLLLLLLLLLLLMRRREDRRRRNRMLLLLMLLLLLLLFLLLLLLLLLLLLLFLLLLLLLMLLLLLLLLLLLDLFLLLLLLLFLLLLFFFFFLFLLLLLDLLLMLLLLLLLLLLMLLLLLLDLLLLLLLLMLLLALLLALLLMLALMFALLMLLLLMLMFFFFFFNNNNNNNENDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNDIDDEDDEGDNEEDDMMMMMMMMMLLMMMAMMMLLLMMLLFFMMLLLMKKMKKMMMMMMMMMMAMMMMMLLLMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMCCCDICCCCCCCCCCCMACCAKKMKKAADLLMLLLLLLMLLLLLLLLLLLNNNNEDDLLMLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLFLLLLMDDCDCNEDNNNNNNNNNDNGCCDDICCRLLLLMLMLMLMLMLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLAMALMLLLLLLLLLLLLLLLLLLLLLLLLLLFLMLMLLLLLLLLLLLLLLLLMMMLLLCCMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLKLLLMKLLMKLLLMKLLLMLMMLLMLLLLLMMMLLLLLLMMMLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMRRDGLMLMLMMLLLLMMLLLLLMLMLLLMMMLLMMMLLLMMLLLLLLNDENNLLLLLLLLLLLLLLLLLLFFLLLLLLLLLMLLLLLLLLLLNNNNENNNNNNNNNNNNNNNNGNCNCCCRLLALLLLLLLLLLLLLLLLLALALLLLLMMMMMMMMMMMMMMMMMENDLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLMLLGDLLMLLLMMLLLLMMLLLMLLMLLLMLMMLMMMMLLLLLMLDMMLLLLLLLLLLLMLLLMLLLLIIIRRDLLLLLLLLLLLLLLKKKLLLLMLMFFF","n":["Err","Ok","Result","builders","cli","client","config","error","mode","testing","Archive","ArchiveConfError","ArchiveConfiguration","Cert","Controller","DiscoverArchiveByFile","Error","FOLLOWER","Fund","Initial","Io","Json","LEADER_1","LEADER_2","LEADER_3","LegacyFund","NotImplemented","Qr","ReviewGenerator","Token","TooManyOptions","Url","VitBackendSettingsBuilder","VitVotePlanDefBuilder","WalletExtension","__clone_box","archive_db","assessors_per_proposal_count","block_folder","borrow","borrow","borrow_mut","borrow_mut","build","build_current_fund","build_servicing_station_parameters","build_topology","clone","clone_into","committee_wallet","committee_wallet","config","config","convert_to_blockchain_date","convert_to_human_date","current_id","default","deref","deref","deref_mut","deref_mut","discover_archive_input_files","drop","drop","dump_qrs","fmt","fmt","from","from","from","from","from","from","from","fund_name","generate_qr_and_hashes","generator","get_configuration_from_file_url","header","helpers","in_current_span","init","init","into","into","into_request","into_request","options","private","proposals_count","reviews","save_qr_code","save_qr_code_hash","session_settings","session_settings","skip_qr_generation","skip_qr_generation","source","span","span","split_by","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","utils","vote_phases","voting_tokens","vzip","vzip","write_token","ArchiveConfError","ArchiveConfiguration","QrError","VitVotePlanDefBuilder","WalletExtension","archive","build_current_fund","build_servicing_station_parameters","convert_to_blockchain_date","convert_to_human_date","discover_archive_input_files","generate_qr_and_hashes","get_configuration_from_file_url","qr","static_data","time","vote_plan","ArchiveConfiguration","CannotFindArchiveDB","CannotFindBlock0Folder","DiscoverArchiveByFile","DiscoverArchiveByFileError","Error","ExpectedUrlToFolder","IncorrectFolderUrl","NotImplemented","Url","__clone_box","archive_db","block_folder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","discover_archive_input_files","drop","drop","drop","find_archive_db","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_configuration_from_file_url","header","header","in_current_span","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","path","path","possible_extensions","possible_extensions","Error","Image","Io","WalletExtension","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","generate_qr_and_hashes","header","in_current_span","init","into","into_request","pin_to_bytes","save_qr_code","save_qr_code_hash","source","to_string","try_from","try_into","type_id","vzip","build_current_fund","build_next_funds","build_servicing_station_parameters","convert_to_blockchain_date","convert_to_human_date","Cert","Fund","Initial","LegacyFund","Token","VitVotePlanDefBuilder","borrow","borrow_mut","build","committee","committee_wallet","default","deref","deref_mut","drop","from","fund_name","fund_name","init","into","into_request","options","options","private","private","proposals_count","proposals_count","split_by","split_by","try_from","try_into","type_id","vote_phases","vote_phases","voting_token","voting_tokens","voting_tokens","vzip","ReviewGenerator","assessors_per_proposal_count","borrow","borrow_mut","current_id","deref","deref_mut","drop","from","generate","generate_assessor_name","generate_community_reviews","generate_review","generate_standard_reviews","generator","increment_id","init","into","into_request","new","try_from","try_into","type_id","vzip","DeploymentTree","SessionSettingsExtension","from_dir","logger","root","session_settings","tree","init","SessionSettingsExtension","from_dir","DeploymentTree","block0_path","borrow","borrow_mut","deref","deref_mut","drop","from","from","genesis_path","init","into","into_request","new","qr_codes_path","root","root_path","try_from","try_into","type_id","voting_token","vzip","wallet_search_pattern","wallet_secret","Advanced","Committee","Data","Diff","Generate","GenerateCommand","Import","Mock","MockFarm","Qr","Quick","Snapshot","Start","StartCommand","Time","Validate","ValidateError","VitCliCommand","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","generate","has_subcommand","has_subcommand","has_subcommand","import","init","init","init","into","into","into","into_request","into_request","into_request","start","time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","validate","vzip","vzip","vzip","DiffCommand","augment_args","augment_args_for_update","borrow","borrow_mut","color","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","get_formatter","group_id","init","into","into_request","local","output","target","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vit_station","vzip","All","CommitteeIdCommandArgs","DataCommandArgs","ExternalDataCommandArgs","Import","Perf","QrCommandArgs","Random","RandomDataCommandArgs","Reviews","Scores","SnapshotCommandArgs","address","challenges","committee","config","data","funds","global_pin","global_pin","initials","initials","initials_mapping","initials_mapping","log_level","log_level","log_level","output_directory","output_directory","output_directory","proposals","public_key","qr","reviews","skip_qr_generation","skip_qr_generation","snapshot","snapshot","testing","CommitteeIdCommandArgs","address","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","public_key","testing","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","All","AllRandomDataCommandArgs","Cert","DataCommandArgs","ExternalDataCommandArgs","Fund","Import","Initial","LegacyFund","Perf","PerfDataCommandArgs","Random","RandomDataCommandArgs","RandomReviewsDataCommandArgs","RandomScoresDataCommandArgs","Reviews","Scores","Token","__clone_box","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","exec","exec","external","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","has_subcommand","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","perf","random","serialize","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","ExternalDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","challenges","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","funds","group_id","init","into","into_request","log_level","output_directory","proposals","reviews","skip_qr_generation","snapshot","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","PerfDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","challenges","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","funds","group_id","init","into","into_request","log_level","move_single_user_secrets","output_directory","parts","proposals","reviews","single","snapshot","split_secrets","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AllRandomDataCommandArgs","RandomReviewsDataCommandArgs","RandomScoresDataCommandArgs","all","reviews","scores","AllRandomDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","log_level","output_directory","snapshot","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","RandomReviewsDataCommandArgs","assessors_per_proposal_count","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","output_file","proposals","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","RandomScoresDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","maximal_score","minimal_score","output_file","proposals","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","QrCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","initials","initials_mapping","into","into_request","log_level","output_directory","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Snapshot","SnapshotCommandArgs","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","exec","fmt","from","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","init","initial","initials","initials_mapping","into","into","into_request","into_request","log_level","output_directory","serialize","skip_qr_generation","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","CannotFindProposalWithId","CannotParseRatingToFloat","Challenges","Csv","Ideascale","ImportCommand","ImportError","ImportFromIdeascaleFormatCommand","Io","Proposals","Reviews","Scores","Serialize","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","ideascale","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CannotFindProposalWithId","CannotParseRatingToFloat","Challenges","Csv","Csv","Error","Format","ImportChallenges","ImportFromIdeascaleFormatCommand","ImportProposals","ImportReviews","ImportScores","InputScores","Io","Json","Proposals","Reviews","Scores","Serialize","__clone_box","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","compare","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","get_hash","group_id","group_id","group_id","group_id","has_subcommand","hash","header","in_current_span","init","init","init","init","init","init","init","init","input","input","input","input","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","output","output","output","partial_cmp","proposal_id","proposals","rating_given","serialize","serialize","source","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AdvancedStartCommandArgs","CannotReadConfiguration","CannotReadParameters","CannotSpawnCommand","Farm","Join","Mock","MockError","MockFarmCommand","MockStartCommandArgs","QuickStartCommandArgs","ServerError","SetGlobalDefault","advanced","challenges","config","config","config","endpoint","endpoint","funds","https","initials","initials_mapping","jcli","jcli","jormungandr","jormungandr","log_level","log_level","log_level","mock","mode","mode","next_vote_timestamp","params","private","proposals","proposals","quick","reviews","slot_duration","slots_in_epoch","snapshot","snapshot","snapshot_timestamp","tally_end_epoch","tally_end_timestamp","tally_start_epoch","tally_start_timestamp","testing_directory","testing_directory","token","token","token","version","vitup_log_level","vitup_log_level","vote_start_epoch","vote_start_timestamp","voting_power","AdvancedStartCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","challenges","command","command_for_update","config","deref","deref_mut","drop","endpoint","exec","fmt","from","from_arg_matches","from_arg_matches_mut","funds","group_id","init","into","into_request","jcli","jormungandr","log_level","mode","proposals","reviews","snapshot","testing_directory","token","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vitup_log_level","vzip","CannotReadConfiguration","CannotReadParameters","CannotSpawnCommand","Error","Farm","Join","Mock","MockFarmCommand","MockStartCommandArgs","ServerError","SetGlobalDefault","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","config","config","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","log_level","params","source","to_string","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","FOLLOWER","LEADER_1","LEADER_2","LEADER_3","QuickStartCommandArgs","VitBackendSettingsBuilder","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","endpoint","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","https","init","initials","initials_mapping","into","into_request","jcli","jormungandr","log_level","mode","next_vote_timestamp","private","proposals","slot_duration","slots_in_epoch","snapshot","snapshot_timestamp","tally_end_epoch","tally_end_timestamp","tally_start_epoch","tally_start_timestamp","testing_directory","token","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","version","vitup_log_level","vote_start_epoch","vote_start_timestamp","voting_power","vzip","TimeCommand","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Challenge","Config","Config","Data","Deployment","Deployment","Error","Ideascale","Ideascale","IdeascaleError","Io","Proposal","Review","Template","ValidateCommand","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","deployment","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","header","ideascale","in_current_span","init","init","into","into","into_request","into_request","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","ConfigValidateCommand","Error","ValidationError","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","into","into","into_request","into_request","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Assert","BadGateway","Challenges","Check","CheckError","CheckIter","DeploymentValidateCommand","Fund","Proposals","Reviews","Settings","Times","VotePlan","WalletBackend","__clone_box","__clone_box","address","augment_args","augment_args_for_update","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get","group_id","header","header","idx","in_current_span","init","init","init","init","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","par_bridge","progress_with","size_hint","source","to_bytes","to_owned","to_owned","to_string","to_string","to_units","to_utf16chars","to_utf8chars","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","CannotFindChallengeWithId","CannotFindChallengeWithId","Challenge","ChallengeError","Data","EmptyProposalFunds","Error","IdeascaleValidateCommand","IllegalChars","Io","Io","Parse","Parse","Parse","Proposal","ProposalError","ProposalFundsIllegalChar","Review","ReviewError","RewardsTotalMismatchWithProposersRewards","Template","Template","Template","Template","WrongFundId","ZeroRewardsTotal","add_prefix","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_and_eventually_fix_private_data","check_and_eventually_fix_proposal_funds","check_and_eventually_fix_proposal_syntax","check_proposals_wrong_syntax","command","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exec","fix","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","generate_vit_database","group_id","header","header","header","header","in_current_span","in_current_span","in_current_span","in_current_span","init","init","init","init","init","input","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mail_replacement","output","parse_proposals_as_value","prefix","save_proposals","source","source","source","source","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_to_fix_proposals_missing_type","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","validate_challenges","validate_proposals","validate_reviews","vote_plan_def","vzip","vzip","vzip","vzip","vzip","args","rest","Accept","Clear","Command","Control","ControlCommand","Count","CountPersistentLogCommand","Custom","Disruption","DisruptionCommand","Files","Files","FilesCommand","Fragments","FragmentsCommand","Get","Health","Hold","List","List","Logs","LogsCommand","Mock","MockCommand","MockFilesCommand","MockStartCommand","MockStartCustomCommand","PersistentLog","PersistentLogCommand","Reject","Reset","Reset","SetAvailable","SetErrorCode","SetErrorCodeCommand","SetFundId","SetFundIdCommand","SetUnavailable","Standard","Start","Status","Stop","Utils","UtilsCommand","VitupClientCommand","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","endpoint","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","folder","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","fund_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","params","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Error","Reqwest","Serde","VitupAdminRestClient","VitupDisruptionRestClient","VitupRest","accept_all_fragments","address","address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_logs","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_with_port","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","get","get_logs","header","hold_all_fragments","in_current_span","init","init","init","init","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_up","is_up","list_files","list_files","make_available","make_unavailable","new","new_with_token","path","post","post_skip_response","reject_all_fragments","reset","reset_fragments_behavior","reset_with_config","set_error_code","set_fund_id","source","start_custom","start_default","status","stop","to_string","token","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AboveThreshold","AroundLevel","BelowThreshold","Block0Initial","Block0Initials","Blockchain","Blockchain","CannotCreateFile","CannotWriteToFile","CertificatesBuilder","Config","ConfigBuilder","DIRECT_VOTING_GROUP","External","Initials","Io","MigrationError","MigrationFilesBuilder","REP_VOTING_GROUP","Real","Representative","Role","Service","StaticData","VOTE_TIME_FORMAT","VoteBlockchainTime","VotePlan","VoteTime","Voter","Wallet","ZeroFunds","__clone_box","additional","additional","block0","block0_time","block_content_max_size","blockchain","blockchain","borrow","borrow_mut","builder","calculate_vote_duration","certs","clone","clone_into","committees","config","consensus_leader_ids","current_fund","data","date_format","default","deref","deref_mut","deserialize","down_script_content","drop","extend_from_initials_file","fmt","from","https","init","initials","initials","into","into_request","linear_fees","migrations","mode","next_funds","print_report","private","protocol","read_config","read_voter_hirs","serialize","service","service","slot_duration","slots_per_epoch","snapshot","static_data","tally_end","tally_start","to_owned","try_from","try_into","tx_max_expiry_epochs","type_id","up_script_content","version","vote_plan","vote_plan","vote_start","vote_time","vote_time","vzip","above_threshold","address","below_threshold","count","funds","funds","level","name","pin","pin","pin","pin","pin","role","role","role","role","role","role","zero_funds","find_best_match","tally_end_timestamp","tally_start_timestamp","vote_start_timestamp","AdditionalServices","__clone_box","archive","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","explorer","fmt","from","init","into","into_request","serialize","to_owned","try_from","try_into","type_id","vzip","Blockchain","__clone_box","block0_date_as_unix","block0_time","block_content_max_size","borrow","borrow_mut","clone","clone_into","committees","consensus_leader_ids","default","default_block0_time","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","linear_fees","serialize","slot_duration","to_owned","try_from","try_into","tx_max_expiry_epochs","type_id","vzip","ConfigBuilder","ReviewGenerator","VitVotePlanDefBuilder","WalletExtension","block0_initials","block0_initials_count","block_content_max_size","borrow","borrow_mut","build","challenges_count","config","consensus_leaders_ids","convert_to_blockchain_date","convert_to_human_date","default","deref","deref_mut","drop","extend_block0_initials","fees","from","fund_id","generate_qr_and_hashes","init","initials","into","into_request","next_vote_timestamp","next_vote_timestamp_from_string","next_vote_timestamp_from_string_if_some","private","proposals_count","reviews_count","set_external_committees","slot_duration_in_seconds","snapshot_initials","snapshot_timestamp","snapshot_timestamp_from_string","snapshot_timestamp_from_string_if_some","try_from","try_into","type_id","use_https","version","vote_timing","voting_power","vzip","CannotCreateFile","CannotWriteToFile","CertificatesBuilder","Error","Io","SERVER_CRT","SERVER_KEY","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","server_crt_content","server_key_content","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block0Initial","Block0Initials","DIRECT_VOTING_GROUP","Error","Initials","REP_VOTING_GROUP","Representative","Role","UnknownRole","Voter","__clone_box","__clone_box","block0","block0","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","from_str","get_hash","hash","header","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","serialize","serialize","snapshot","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AboveThreshold","AroundLevel","BelowThreshold","External","GRACE_VALUE","Initial","Initials","Wallet","ZeroFunds","__clone_box","__clone_box","any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_to_external_utxo","count","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","extend","extend_from_external","external_templates","fmt","fmt","from","from","init","init","into","into","into_request","into_request","new_above_threshold","new_from_external","new_random_wallet","push","serialize","serialize","templates","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zero_funds_count","zero_funds_pin","above_threshold","address","below_threshold","count","funds","funds","level","name","pin","pin","pin","pin","pin","role","role","role","role","role","role","zero_funds","CannotCreateFile","CannotWriteToFile","DOWN","Error","Io","MigrationFilesBuilder","UP","VERSION","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","down_script_content","drop","drop","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","up_script_content","vzip","vzip","Interactive","Mode","Monitor","Service","Standard","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","header","init","into","into","into_request","parse_mode_from_str","to_owned","to_string","try_from","try_into","type_id","vzip","Service","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","https","init","into","into_request","serialize","to_owned","try_from","try_into","type_id","version","vzip","CurrentFund","NextFund","StaticData","__clone_box","borrow","borrow_mut","clone","clone_into","current","current_fund","default","deref","deref_mut","deserialize","drop","fmt","from","info","init","into","into_request","next","next_funds","serialize","to_owned","try_from","try_into","type_id","vzip","CurrentFund","CurrentFundDates","__clone_box","__clone_box","assessment_qa_start","borrow","borrow","borrow_mut","borrow_mut","challenges","clone","clone","clone_into","clone_into","dates","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","finalize_proposals_start","fmt","fmt","from","from","fund_info","init","init","insight_sharing_start","into","into","into_request","into_request","next_snapshot_time","next_vote_start_time","options","proposal_assessment_start","proposal_submission_start","proposals","refine_proposals_start","reviews","serialize","serialize","snapshot_time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","voting_power","vzip","vzip","FundInfo","__clone_box","borrow","borrow_mut","clone","clone_into","default_goals","default_groups","default_result_url","default_survey_url","deref","deref_mut","deserialize","drop","fmt","from","from","fund_id","fund_name","goals","groups","init","into","into_request","results_url","serialize","survey_url","to_owned","try_from","try_into","type_id","vzip","NextFund","NextFundDates","__clone_box","__clone_box","assessment_qa_start","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dates","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","finalize_proposals_start","fmt","fmt","from","from","fund_info","init","init","insight_sharing_start","into","into","into_request","into_request","next_snapshot_time","next_vote_start_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","serialize","serialize","snapshot_time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","voting_start","voting_tally_end","voting_tally_start","vzip","vzip","VotePlan","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","private","serialize","to_owned","try_from","try_into","type_id","vote_time","vzip","Blockchain","FORMAT","Real","VoteBlockchainTime","VoteTime","__clone_box","__clone_box","blockchain","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","real","real_from_str","serialize","serialize","slots_per_epoch","tally_end","tally_start","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vote_start","vzip","vzip","wait_for_tally_end","wait_for_tally_start","wait_for_vote_start","find_best_match","tally_end_timestamp","tally_start_timestamp","vote_start_timestamp","AssertionFailed","Block0","Block0ConfigurationError","Block0EncodeError","Block0Error","Builder","CannotFindConfig","CannotFindSnapshotFile","Certs","ChainAddressError","ChainBech32Error","ClientRestError","ControllerError","Data","EnvironmentIsDown","Error","FragmentSender","FragmentVerifier","GlobError","ImageReadError","ImportError","Interactive","IoError","Main","MockError","MonitorResourcesError","NoChallengeIdAndGroupFound","NoChallengeIdFound","Node","ParseTime","ProxyNotFound","SerdeError","SerdeYamlError","SetGlobalDefault","SnapshotIntialReadError","SyncTimeoutOccurred","TemplateLoadError","TransactionNotInBlock","UnknownLogLevel","ValgrindError","Validate","VerificationFailed","VitRestError","VitServerBootstrapperError","VitStationControllerError","Wallet","WalletProxyController","WalletProxyError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","alias","group","id","info","info","node","proposal_id","status","timeout","interactive","mock","monitor","service","spawn","standard","Describe","Exit","Explorer","Send","Show","VitInteractiveCommand","VitInteractiveCommandExec","VitUserInteractionController","args","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","controller","controller","controller_mut","deref","deref","deref_mut","deref_mut","describe","drop","drop","explorers","fmt","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","into_request","into_request","parse_and_exec","proxies","show","tear_down","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vit_controller","vit_controller_mut","vit_stations","vzip","vzip","describe","show","All","Describe","DescribeAll","DescribeVitStations","DescribeWalletProxies","Nodes","Proxies","Stations","Topology","VotePlan","Wallets","alias","alias","alias","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","exec","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","BlockHeight","FragmentCount","Fragments","Logs","PeerStats","Show","ShowStatus","Stats","Status","VotePlans","VoteTimeStatus","alias","alias","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_date","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","VitUserInteractionController","borrow","borrow_mut","default","deref","deref_mut","drop","explorers","explorers","finalize","from","init","into","into_request","new","proxies","proxies","proxies_mut","try_from","try_into","type_id","vit_stations","vit_stations","vit_stations_mut","vzip","All","Describe","DescribeAll","DescribeVitStations","DescribeWalletProxies","Nodes","Proxies","Stations","Topology","VotePlan","Wallets","alias","alias","alias","BlockHeight","FragmentCount","Fragments","Logs","PeerStats","Show","ShowStatus","Stats","Status","VotePlans","VoteTimeStatus","alias","alias","Accept","CannotParseUuid","Configuration","Context","ContextError","ContextLock","Crypto","Disabled","Forget","FragmentRecieveStrategy","Hyper","IO","InvalidCertificate","InvalidKey","Io","Jammed","Ledger","LedgerState","Mock","MockConfigError","MockState","Moderate","NetworkCongestion","NetworkCongestionData","NetworkCongestionMode","None","Normal","ParseConfiguration","Pending","ReadConfiguration","Reject","RestError","Rusls","SpawnCommand","address","alloc","available","block0_bin","block0_configuration","block_account_endpoint_counter","block_content_size_avg","config","config","congestion","context","controller","error_code","farm","fragment_logs","fragment_strategy","is_private","ledger","ledger_state","ledger_state","local","mempool_tx_count","mempool_usage_ratio","mock_state","mode","network_congestion","phantom","port","protocol","ptr","read_config","received_fragments","received_fragments_count","rejected_fragments_count","rest","snapshot","start_rest_server","state","token","version","vit_state","voters","working_dir","Configuration","Error","ParseConfiguration","ReadConfiguration","SpawnCommand","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","local","port","protocol","read_config","serialize","source","to_owned","to_string","token","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_dir","write_config","Disabled","Jammed","Moderate","NetworkCongestion","NetworkCongestionData","NetworkCongestionMode","Normal","PRIVATE_FRAGMENT_SIZE","PUBLIC_FRAGMENT_SIZE","__clone_box","__clone_box","__clone_box","block_content_size_avg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fragments_total_size","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","is_private","jammed_percentage","mempool_tx_count","mempool_usage_ratio","mode","new","received_fragments_count","rejected_fragments_count","set_mode","shift_slot_back","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Context","ContextLock","Error","Io","Ledger","Mock","address","address","alloc","api_token","available","block0_bin","borrow","borrow","borrow_mut","borrow_mut","check_if_rest_available","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","phantom","protocol","ptr","reset","set_api_token","source","state","state","state_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","working_dir","CannotFindMock","Certs","Config","Config","Context","ContextError","ContextLock","Controller","ControllerError","EnvironmentAlreadyExist","Io","Io","MockBootstrap","MockController","address","alloc","config","config","configuration","configuration","context","controller","https","local","mock_id","mock_id","phantom","port","process","protocol","ptr","read_config","rest","start_rest_server","state","token","working_directory","working_directory","Config","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","local","port","protocol","read_config","serialize","to_owned","token","try_from","try_into","type_id","vzip","working_directory","CannotFindMock","Context","ContextLock","Controller","EnvironmentAlreadyExist","Error","Io","MockId","MockState","address","address","alloc","api_token","base","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","get_active_mocks","header","in_current_span","init","init","into","into","into_request","into_request","new","phantom","protocol","ptr","set_api_token","shutdown_mock","source","start_mock","start_mock_on_random_port","state","state_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vec","vzip","vzip","working_dir","Certs","Config","Error","Io","MockBootstrap","MockController","NEXT_AVAILABLE_PORT_NUMBER","OCCUPIED_PORTS","__private_field","__private_field","address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","configuration","configuration","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_available_port","header","https","https","in_current_span","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_up","mock_id","mock_id","new","port","port","process","serialize","shutdown","source","spawn","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","working_directory","working_directory","CannotParseUuid","Crypto","Error","Hyper","IO","InvalidCertificate","InvalidKey","Rest","Rusls","authorize_token","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","get_active_mocks","header","in_current_span","init","into","into_request","shutdown_mock","source","start_mock_on_random_port","start_rest_server","to_string","try_from","try_into","type_id","vzip","Accept","CannotFindFragment","Error","Forget","FragmentRecieveStrategy","Ledger","LedgerState","None","Pending","Reject","__clone_box","absolute_slot_count","accounts","active_vote_plans","batch_message","block0_configuration","block0_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","curr_slot_start_time","current_blockchain_age","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","expiry_date","fees","fmt","fmt","fmt","fmt","fragment_logs","fragment_logs","fragment_strategy","from","from","from","from","header","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","is_fragment_valid","is_transaction_valid","ledger","message","new","override_fragment_status","received_fragments","received_fragments","set_fragment_status","set_fragment_strategy","set_status_for_fragment_id","set_status_for_recent_fragment","settings","source","statuses","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Builder","Error","Io","Ledger","MockState","Snapshot","available","block0_bin","block0_bin","block_account_endpoint","block_account_endpoint_counter","borrow","borrow","borrow_mut","borrow_mut","controller","decrement_block_account_endpoint","defined_wallets","deref","deref","deref_mut","deref_mut","drop","drop","error_code","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","ledger","ledger_mut","ledger_state","network_congestion","new","node_stats","reset_block_account_endpoint","set_block_account_endpoint","set_congestion","set_fund_id","set_version","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_fund","version","version","vit","vit_mut","vit_state","voters","voters","voters_mut","vzip","vzip","CannotParseUuid","Crypto","Error","Hyper","IO","InvalidCertificate","InvalidKey","Rusls","admin","admin_filter","borrow","borrow_mut","control","cors","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","header","health_handler","in_current_span","init","into","into_request","load_cert","load_private_key","node","reject","search","source","ssl","start_rest_server","to_string","try_from","try_into","type_id","vit_ss","vzip","admin_filter","fund_put_filter","put_fund","control_filter","handlers","routes","authorize_token","command_accept","command_available","command_block_account","command_congestion_jammed","command_congestion_moderate","command_congestion_normal","command_congestion_reset","command_create_snapshot","command_error_code","command_forget","command_fund_id","command_pending","command_reject","command_reset","command_reset_block_account","command_reset_mock","command_update_accept","command_update_forget","command_update_fund","command_update_pending","command_update_reject","command_version","file_lister_handler","update_fragment_id","control_filter","cors_filter","default_headers","handlers","GetMessageStatusesQuery","as_fragment_ids","borrow","borrow_mut","debug_message","deref","deref_mut","deserialize","drop","fmt","fragment_ids","from","get_account","get_account_votes","get_account_votes_with_plan","get_active_vote_plans","get_fragment_logs","get_fragment_statuses","get_node_stats","get_settings","init","into","into_identifier","into_request","parse_account_id","post_fragments","post_message","try_from","try_into","type_id","vzip","ForcedErrorCode","GeneralException","InvalidBatch","account_does_not_exist","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","code","code","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","hex_encoding_malformed","init","init","init","into","into","into","into_request","into_request","into_request","proposal_not_found","report_invalid","summary","summary","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","filter_challenges","filter_proposals","limit_and_offset","make_error","mock_order_by_error","search","search_count","search_impl","sort_challenges","sort_proposals","load_cert","load_private_key","get_all_funds","get_all_proposals","get_challenge_by_id","get_challenge_by_id_and_group_id","get_challenges","get_delegator_info","get_fund","get_fund_by_id","get_proposal","get_proposal_by_idx","get_review_by_id","get_tags","get_voters_info","ArbitraryVoterHIR","VoterSnapshot","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","contributions","contributions_by_stake_public_key_and_snapshot_tag","contributions_by_voting_key_and_voter_group_and_snapshot_tag","default","deref","deref","deref_mut","deref_mut","drop","drop","epoch_now","fmt","fmt","from","from","from_config_or_default","init","init","insert_contributions","insert_voters","into","into","into_request","into_request","put_snapshot_tag","snapshot_by_tag","snapshot_tags","tags","total_voting_power_by_voting_group_and_snapshot_tag","try_from","try_from","try_into","try_into","type_id","type_id","voters","voters_by_voting_key_and_snapshot_tag","vzip","vzip","ExplorerMonitorController","MonitorController","VitStationMonitorController","WalletProxyMonitorController","controller","controller","controller","explorer","hersir_controller","inner","main","progress_bar","progress_bar","progress_bar","vit_station","wallet","ExplorerMonitorController","alias","borrow","borrow_mut","controller","deref","deref_mut","drop","finish_monitoring","from","init","into","into_request","is_up","new","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","shutdown","status","try_from","try_into","type_id","vzip","MonitorController","borrow","borrow_mut","build_progress_bar","deref","deref_mut","drop","finalize","from","hersir_controller","init","inner","into","into_request","monitor_nodes","new","spawn_explorer","spawn_node","spawn_vit_station","spawn_vit_station_archiver","spawn_wallet_proxy","spawn_wallet_proxy_custom","try_from","try_into","type_id","vzip","VitStationMonitorController","alias","borrow","borrow_mut","controller","deref","deref_mut","drop","finish_monitoring","from","init","into","into_request","is_up","new","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","rest","shutdown","status","try_from","try_into","type_id","vzip","WalletProxyMonitorController","alias","borrow","borrow_mut","client","controller","deref","deref_mut","drop","finish_monitoring","from","init","into","into_request","is_up","new","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","shutdown","status","try_from","try_into","type_id","vzip","manager","APIToken","APITokenManager","API_TOKEN_HEADER","ControlContext","ControlContextLock","Idle","InvalidHeader","ManagerService","ParseError","Running","ServerStopper","Starting","State","Stopping","TokenError","UnauthorizedToken","__clone_box","address","alloc","api_token","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone_into","context","control_context","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","equivalent","file_lister","fmt","fmt","fmt","from","from","from","from","from","from_string","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","into_response","is_token_valid","new","new","phantom","ptr","rest","runtime","server_stopper","service","setup","should_start","should_stop","source","start_rest_server","state","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verification_token","vzip","vzip","vzip","working_directory","write_base32","write_base32","ControlContext","ControlContextLock","Idle","Running","Starting","State","Stopping","__clone_box","address","address","alloc","api_token","api_token","api_token_mut","borrow","borrow","borrow_mut","borrow_mut","clear_requests","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","header","init","init","into","into","into_request","into_request","new","phantom","ptr","request_to_start","request_to_stop","serialize","server_stopper","server_stopper","set_parameters","set_server_stopper","setup","setup","setup_mut","should_start","should_stop","start","state","state","state_mut","stop","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_directory","working_directory","BLOCKCHAIN","COMMITTEE","COMMITTEES","Error","FolderDump","NETWORK","PRIVATE_DATA","PRIVATE_KEYS","QR_CODES","RootFolderDoesNotExist","WALLET","blockchain_items","borrow","borrow","borrow_mut","borrow_mut","content","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","dump_json","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","is_storage","new","push_blockchain","push_network","push_path","push_private_data_keys","push_qr_code","push_wallet_private_keys","root","serialize","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ServerStopper","__clone_box","authorize_token","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","file_lister_handler","from","init","into","into_request","report_invalid","start_default_handler","start_handler","start_rest_server","status_handler","stop","stop_handler","to_owned","try_from","try_into","type_id","vzip","ManagerService","borrow","borrow_mut","clear_requests","control_context","deref","deref_mut","drop","from","init","into","into_request","new","request_to_start","request_to_stop","runtime","setup","spawn","try_from","try_into","type_id","vzip","NetworkSpawnParams","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","endpoint","fmt","from","init","interactive","into","into_request","leader_node","monitor","new","nodes_params","passive_node","protocol","proxy_params","service","session_settings","session_settings","spawn_network","standard","to_owned","token","token","try_from","try_into","type_id","version","version","vzip","working_directory","spawn_network","vit_interaction","spawn_network","single_run","spawn_network","spawn_network","CannotBootstrap","CannotBootstrapExplorer","CannotCreateFile","CannotGetWallet","CannotSpawnNode","CannotWriteYamlFile","Controller","DataError","DbBuilder","DbGenerator","ExplorerController","FragmentIsPendingForTooLong","FragmentNotInMemPoolLogs","GrpcError","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidFragmentLogs","InvalidNetworkStats","InvalidNodeStats","Io","Io","Io","Migration","NoExplorerDefinedInSettings","NoVitStationArchiverDefinedInSettings","NoVitStationDefinedInSettings","NoWalletProxiesDefinedInSettings","NodeFailedToBootstrap","NodeFailedToBootstrap","NodeFailedToShutdown","NodeFailedToShutdown","PortAlreadyBinded","PortAlreadyBinded","Reqwest","Reqwest","RestError","RestError","SerializationError","Valgrind","ValidVotePlanParameters","ValidVotingTemplateGenerator","VitController","VitControllerBuilder","VitControllerError","VitSettings","VitStationController","VitStationControllerError","VitStationSettings","WalletProxyController","WalletProxyController","WalletProxyControllerError","WalletProxyError","WalletProxySettings","WalletProxySpawnParams","address","alias","alias","alias","alias","archive_conf","base_address","block0_path","block0_paths","borrow","borrow_mut","client","committees","controller_builder","controllers","cors","current_fund","db_url","deref","deref_mut","drop","enable_api_tokens","explorer_process","from","from","generate_database","generate_random_database","hersir_controller","in_settings_file","init","into","into_request","log","next_challenge","next_fund","next_funds","next_proposal","next_review","node_backend_address","out_settings_file","parameters","process","process","protocol","protocol","proxy_address","rest_client","service_version","settings","settings","settings","status","status","tls","try_from","try_into","type_id","valgrind","version","vit_settings","vit_station_address","vit_stations","vzip","wallet_proxies","alias","alias","alias","duration","logs","logs","message","alias","alias","alias","alias","cause","cause","duration","duration","fragment_id","fragment_id","logs","logs","logs","logs","message","path","path","DataError","DbGenerator","ExplorerController","ValidVotePlanParameters","ValidVotingTemplateGenerator","VitController","VitControllerBuilder","VitControllerError","VitStationController","VitStationControllerError","VitStationSettings","WalletProxyController","WalletProxyControllerError","WalletProxyError","WalletProxySettings","WalletProxySpawnParams","current_fund","explorer","generate_database","generate_random_database","main","next_challenge","next_fund","next_funds","next_proposal","next_review","vit_station","wallet_proxy","ExplorerController","address","alias","alias","borrow","borrow_mut","client","deref","deref_mut","drop","explorer_process","from","init","into","into_request","new","shutdown","status","try_from","try_into","type_id","vzip","CannotBootstrap","CannotBootstrapExplorer","CannotGetWallet","Controller","Error","VitController","VitControllerBuilder","__clone_box","archive_conf","archive_conf","block0_file","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","committee","committees","controlled_wallets","controller_builder","default","defined_nodes","defined_vote_plan","defined_vote_plans","defined_wallets","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","explorer","fmt","fmt","from","from","from","from","header","hersir_controller","hersir_controller","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","new","new","settings","source","spawn_explorer","spawn_node","spawn_vit_station","spawn_vit_station_archive","spawn_wallet_proxy","spawn_wallet_proxy_custom","to_owned","to_string","topology","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vit_settings","vit_settings","vote_plans","vzip","vzip","vzip","wait_for_bootstrap","wallet","wallet","wallets","working_directory","alias","ArbitraryValidVotingTemplateGenerator","BootstrapCommandBuilder","DataError","DbBuilder","DbGenerator","Err","Error","ExternalValidVotingTemplateGenerator","InvalidFragmentLogs","Io","NoVitStationArchiverDefinedInSettings","NoVitStationDefinedInSettings","NodeFailedToBootstrap","NodeFailedToShutdown","Ok","PortAlreadyBinded","Reqwest","RestClient","RestError","Result","VIT_CONFIG","VIT_STATION_LOG","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","VitStationController","VitStationSettings","_DERIVE_core_fmt_Debug_FOR_Error","__clone_box","__clone_box","__clone_box","address","address","advisor_reviews","advisor_reviews","allowed_origins","allowed_origins","block0_path","block0_path","block0_paths","block0_paths","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build_async","cert_file","cert_file","challenge_type","challenges","challenges","challenges","challenges","challenges_count","clone","clone","clone","clone_into","clone_into","clone_into","controller","current_fund","data","db_url","db_url","default","default","default","delegator_info","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_log","drop","drop","drop","drop","drop","drop","drop","dump_settings_to_file","enable_api_tokens","enable_api_tokens","enable_log","exe","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fund","funds","funds","funds","funds","gen_challenge_url","gen_highlights","gen_http_address","generate_database","generate_random_database","generator","genesis","header","health","impact_score","in_current_span","in_settings_file","in_settings_file","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","log_file","log_file","log_level","log_level","max_age_secs","max_age_secs","new","new","new","new","new","new","next_challenge","next_challenge","next_challenge","next_challenge_id","next_challenge_id","next_fund","next_fund","next_fund","next_funds","next_proposal","next_proposal","next_proposal","next_proposal_id","next_proposal_id","next_review","next_review","next_review","next_review_id","next_review_id","out_settings_file","out_settings_file","parameters","path_builder","priv_key_file","priv_key_file","proposal","proposal","proposal_category","proposal_fund","proposals","proposals","proposals","proposals","proposals_by_voteplan_id_and_index","proposals_challenge_info","proposals_count","proposer","put_raw_snapshot","put_snapshot_info","raw","reviews","reviews","search","search_count","service_version","service_version","service_version","set_api_token","set_origin","set_timeout","snapshot_tags","source","to_owned","to_owned","to_owned","to_string","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voter_info","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_advisor_reviews","with_challenges","with_funds","with_proposals","with_snapshot","with_token","with_tokens","alias","alias","duration","logs","logs","message","VIT_CONFIG","VIT_STATION_LOG","VitStationController","VitStationSettings","address","address","alias","alias","as_named_process","block0_path","block0_paths","borrow","borrow_mut","challenges","check_running","cors","db_url","delegator_info","deref","deref_mut","drop","drop","enable_api_tokens","from","in_settings_file","init","into","into_request","log","out_settings_file","process","proposals","put_raw_snapshot","rest_client","service_version","settings","shutdown","snapshot_tags","status","status","tls","try_from","try_into","type_id","voter_info","vzip","wait","DbBuilder","DbGenerator","Error","Io","Migration","borrow","borrow","borrow_mut","borrow_mut","build","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","generate_database","generate_random_database","header","in_current_span","init","init","into","into","into_request","into_request","new","parameters","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CannotCreateFile","CannotSpawnNode","CannotWriteYamlFile","Err","Error","FragmentIsPendingForTooLong","FragmentNotInMemPoolLogs","GrpcError","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidNetworkStats","InvalidNodeStats","Io","NoExplorerDefinedInSettings","NoWalletProxiesDefinedInSettings","NodeFailedToBootstrap","NodeFailedToShutdown","Ok","PortAlreadyBinded","Reqwest","RestError","Result","SerializationError","WalletProxyController","WalletProxyController","WalletProxyControllerError","WalletProxySettings","WalletProxySpawnParams","_DERIVE_core_fmt_Debug_FOR_Error","borrow","borrow_mut","controller","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","header","in_current_span","init","into","into_request","settings","source","spawn_params","to_string","try_from","try_into","type_id","vzip","alias","alias","alias","alias","cause","cause","duration","duration","fragment_id","fragment_id","logs","logs","logs","logs","message","path","path","Error","Valgrind","WalletProxyController","address","alias","alias","as_named_process","block0","borrow","borrow","borrow_mut","borrow_mut","check_running","client","client","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","process","settings","settings","shutdown","source","status","status","to_string","try_from","try_from","try_into","try_into","type_id","type_id","valgrind","vzip","vzip","VitStationSettings","WalletProxySettings","__clone_box","address","address","base_address","base_node_backend_address","base_vit_address","block0_path","block0_paths","borrow","borrow_mut","clone","clone_into","cors","db_url","deref","deref_mut","drop","enable_api_tokens","fmt","from","in_settings_file","init","into","into_request","log","node_backend_address","node_backend_address","out_settings_file","prepare","protocol","proxy_address","service_version","tls","to_owned","try_from","try_into","type_id","vit_address","vit_station_address","vzip","WalletProxySpawnParams","alias","base_address","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","override_settings","protocol","try_from","try_into","type_id","version","vzip","with_base_address","with_protocol","with_version","PrepareSettings","PrepareVitServerSettings","PrepareWalletProxySettings","VIT_STATION","VIT_STATION_ARCHIVE","VitSettings","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","new","prepare","prepare","prepare","to_owned","try_from","try_into","type_id","vit_stations","vzip","wallet_proxies","spawn_network","vitup_setup","vitup_setup_default"],"q":[[0,"vitup"],[10,"vitup::builders"],[115,"vitup::builders::helpers"],[132,"vitup::builders::helpers::archive"],[204,"vitup::builders::helpers::archive::DiscoverArchiveByFileError"],[208,"vitup::builders::helpers::qr"],[237,"vitup::builders::helpers::static_data"],[240,"vitup::builders::helpers::time"],[242,"vitup::builders::helpers::vote_plan"],[280,"vitup::builders::reviews"],[304,"vitup::builders::utils"],[311,"vitup::builders::utils::logger"],[312,"vitup::builders::utils::session_settings"],[314,"vitup::builders::utils::tree"],[338,"vitup::cli"],[434,"vitup::cli::diff"],[465,"vitup::cli::generate"],[504,"vitup::cli::generate::committee"],[532,"vitup::cli::generate::data"],[622,"vitup::cli::generate::data::external"],[656,"vitup::cli::generate::data::perf"],[693,"vitup::cli::generate::data::random"],[699,"vitup::cli::generate::data::random::all"],[728,"vitup::cli::generate::data::random::reviews"],[756,"vitup::cli::generate::data::random::scores"],[785,"vitup::cli::generate::qr"],[815,"vitup::cli::generate::snapshot"],[863,"vitup::cli::import"],[901,"vitup::cli::import::ideascale"],[1120,"vitup::cli::start"],[1181,"vitup::cli::start::advanced"],[1220,"vitup::cli::start::mock"],[1311,"vitup::cli::start::quick"],[1367,"vitup::cli::time"],[1393,"vitup::cli::validate"],[1457,"vitup::cli::validate::config"],[1503,"vitup::cli::validate::deployment"],[1618,"vitup::cli::validate::ideascale"],[1775,"vitup::client"],[1777,"vitup::client::args"],[2210,"vitup::client::rest"],[2311,"vitup::config"],[2409,"vitup::config::Block0Initial"],[2429,"vitup::config::VoteTime"],[2433,"vitup::config::additional"],[2457,"vitup::config::blockchain"],[2488,"vitup::config::builder"],[2536,"vitup::config::certs"],[2580,"vitup::config::initials"],[2666,"vitup::config::initials::block0"],[2729,"vitup::config::initials::block0::Initial"],[2749,"vitup::config::migrations"],[2794,"vitup::config::mode"],[2827,"vitup::config::service"],[2851,"vitup::config::static_data"],[2880,"vitup::config::static_data::current"],[2940,"vitup::config::static_data::info"],[2972,"vitup::config::static_data::next"],[3030,"vitup::config::vote_plan"],[3054,"vitup::config::vote_time"],[3112,"vitup::config::vote_time::VoteTime"],[3116,"vitup::error"],[3219,"vitup::error::Error"],[3228,"vitup::mode"],[3234,"vitup::mode::interactive"],[3291,"vitup::mode::interactive::args"],[3293,"vitup::mode::interactive::args::describe"],[3403,"vitup::mode::interactive::args::show"],[3489,"vitup::mode::interactive::controller"],[3514,"vitup::mode::interactive::describe"],[3528,"vitup::mode::interactive::show"],[3541,"vitup::mode::mock"],[3618,"vitup::mode::mock::config"],[3671,"vitup::mode::mock::congestion"],[3747,"vitup::mode::mock::context"],[3807,"vitup::mode::mock::farm"],[3845,"vitup::mode::mock::farm::config"],[3873,"vitup::mode::mock::farm::context"],[3935,"vitup::mode::mock::farm::controller"],[4041,"vitup::mode::mock::farm::rest"],[4080,"vitup::mode::mock::ledger_state"],[4171,"vitup::mode::mock::mock_state"],[4242,"vitup::mode::mock::rest"],[4287,"vitup::mode::mock::rest::admin"],[4290,"vitup::mode::mock::rest::control"],[4293,"vitup::mode::mock::rest::control::handlers"],[4318,"vitup::mode::mock::rest::control::routes"],[4319,"vitup::mode::mock::rest::cors"],[4321,"vitup::mode::mock::rest::node"],[4322,"vitup::mode::mock::rest::node::handlers"],[4353,"vitup::mode::mock::rest::reject"],[4407,"vitup::mode::mock::rest::search"],[4417,"vitup::mode::mock::rest::ssl"],[4419,"vitup::mode::mock::rest::vit_ss"],[4432,"vitup::mode::mock::snapshot"],[4479,"vitup::mode::monitor"],[4495,"vitup::mode::monitor::explorer"],[4521,"vitup::mode::monitor::main"],[4547,"vitup::mode::monitor::vit_station"],[4574,"vitup::mode::monitor::wallet"],[4601,"vitup::mode::service"],[4602,"vitup::mode::service::manager"],[4708,"vitup::mode::service::manager::context"],[4784,"vitup::mode::service::manager::file_lister"],[4842,"vitup::mode::service::manager::rest"],[4869,"vitup::mode::service::manager::service"],[4891,"vitup::mode::spawn"],[4929,"vitup::mode::spawn::interactive"],[4931,"vitup::mode::spawn::monitor"],[4932,"vitup::mode::spawn::service"],[4934,"vitup::mode::spawn::standard"],[4935,"vitup::mode::standard"],[5053,"vitup::mode::standard::VitControllerError"],[5054,"vitup::mode::standard::VitStationControllerError"],[5060,"vitup::mode::standard::WalletProxyError"],[5077,"vitup::mode::standard::controllers"],[5105,"vitup::mode::standard::controllers::explorer"],[5127,"vitup::mode::standard::controllers::main"],[5219,"vitup::mode::standard::controllers::main::Error"],[5220,"vitup::mode::standard::controllers::vit_station"],[5488,"vitup::mode::standard::controllers::vit_station::Error"],[5494,"vitup::mode::standard::controllers::vit_station::controller"],[5541,"vitup::mode::standard::controllers::vit_station::data"],[5586,"vitup::mode::standard::controllers::wallet_proxy"],[5643,"vitup::mode::standard::controllers::wallet_proxy::Error"],[5660,"vitup::mode::standard::controllers::wallet_proxy::controller"],[5713,"vitup::mode::standard::controllers::wallet_proxy::settings"],[5755,"vitup::mode::standard::controllers::wallet_proxy::spawn_params"],[5778,"vitup::mode::standard::settings"],[5808,"vitup::testing"],[5811,"dyn_clone::sealed"],[5812,"core::result"],[5813,"chain_impl_mockchain::testing::scenario::template"],[5814,"alloc::vec"],[5815,"chain_impl_mockchain::tokens::identifier"],[5816,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::current"],[5817,"hersir::builder::settings"],[5818,"hersir::builder::topology"],[5819,"time::offset_date_time"],[5820,"alloc::string"],[5821,"core::convert"],[5822,"hersir::config::wallet"],[5823,"std::collections::hash::map"],[5824,"std::path"],[5825,"core::convert"],[5826,"core::fmt"],[5827,"std::io::error"],[5828,"thor::wallet"],[5829,"thor::wallet"],[5830,"core::fmt"],[5831,"core::marker"],[5832,"hersir::config"],[5833,"core::error"],[5834,"core::option"],[5835,"tracing::span"],[5836,"core::any"],[5837,"url::parser"],[5838,"image::error"],[5839,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::info"],[5840,"hersir::config::vote_plan"],[5841,"jormungandr_lib::interfaces::mint_token"],[5842,"vit_servicing_station_tests::common::data::generator::voting::template"],[5843,"vit_servicing_station_tests::common::data::generator::voting::template"],[5844,"tracing_core::dispatcher"],[5845,"std::path"],[5846,"clap_builder::builder::command"],[5847,"clap_builder::parser::matches::arg_matches"],[5848,"clap_builder"],[5849,"diffy::patch::format"],[5850,"clap_builder::util::id"],[5851,"serde::de"],[5852,"core::fmt"],[5853,"core::cmp"],[5854,"csv::error"],[5855,"core::num::dec2flt"],[5856,"core::hash"],[5857,"core::marker"],[5858,"tokio::runtime::task::error"],[5859,"valgrind::client"],[5860,"core::time"],[5861,"valgrind::client"],[5862,"indicatif::progress"],[5863,"indicatif::iter"],[5864,"encode_unicode::utf8_iterators"],[5865,"encode_unicode::utf16_iterators"],[5866,"encode_unicode::decoding_iterators"],[5867,"encode_unicode::decoding_iterators"],[5868,"vit_servicing_station_tests::common::data::generator::voting::template"],[5869,"vit_servicing_station_tests::common::data::generator::voting::template::external"],[5870,"vit_servicing_station_tests::common::data::generator::voting::template"],[5871,"reqwest::blocking::response"],[5872,"time::format_description::borrowed_format_item"],[5873,"chain_addr"],[5874,"valgrind::startup"],[5875,"core::fmt"],[5876,"jormungandr_lib::time"],[5877,"jormungandr_lib::interfaces::block0_configuration::leader_id"],[5878,"chain_impl_mockchain::fee"],[5879,"jormungandr_lib::interfaces::committee"],[5880,"mainnet_lib::network::snapshot"],[5881,"valgrind::startup"],[5882,"core::ops::function"],[5883,"hersir::config"],[5884,"chain_impl_mockchain::ledger::ledger"],[5885,"jormungandr_automation::testing::block0"],[5886,"thor::fragment::sender"],[5887,"glob"],[5888,"thor::fragment::verifier"],[5889,"time::error::parse"],[5890,"jormungandr_lib::interfaces::block0_configuration"],[5891,"hersir::controller::monitor::node"],[5892,"hersir::controller::error"],[5893,"thor::wallet"],[5894,"jortestkit::console::interactive"],[5895,"jormungandr_automation::testing::verify"],[5896,"jortestkit::measurement::benchmark::consumption_benchmark"],[5897,"chain_crypto::bech32"],[5898,"vit_servicing_station_tests::common::startup::server::bootstrap"],[5899,"chain_addr"],[5900,"jortestkit::console::interactive"],[5901,"chain_impl_mockchain::date"],[5902,"vit_servicing_station_tests::common::data::generator::snapshot"],[5903,"jormungandr_lib::interfaces::blockdate"],[5904,"core::net::socket_addr"],[5905,"vit_servicing_station_lib::v0::endpoints::service_version::schemas"],[5906,"core::sync::atomic"],[5907,"std::collections::hash::set"],[5908,"std::sync::mutex"],[5909,"alloc::sync"],[5910,"warp::reject"],[5911,"uuid::error"],[5912,"rustls::error"],[5913,"chain_crypto::hash"],[5914,"hyper::error"],[5915,"warp::reply"],[5916,"chain_impl_mockchain::account"],[5917,"chain_impl_mockchain::vote::status"],[5918,"chain_impl_mockchain::fragment"],[5919,"jormungandr_lib::interfaces::fragments_processing_summary"],[5920,"chain_impl_mockchain::key"],[5921,"jormungandr_lib::time"],[5922,"chain_impl_mockchain::transaction::transaction"],[5923,"chain_impl_mockchain::fragment"],[5924,"jormungandr_lib::interfaces::settings"],[5925,"jormungandr_lib::interfaces::fragment_log"],[5926,"mainnet_tools::snapshot::convert"],[5927,"jormungandr_lib::interfaces::stats"],[5928,"vit_servicing_station_lib::db::models::funds"],[5929,"warp::filter"],[5930,"core::clone"],[5931,"warp::filter::boxed"],[5932,"warp::filters::cors"],[5933,"http::header::map"],[5934,"jormungandr_lib::interfaces::vote"],[5935,"chain_impl_mockchain::account"],[5936,"bytes::bytes"],[5937,"vit_servicing_station_lib::db::models::challenges"],[5938,"vit_servicing_station_lib::v0::endpoints::search::requests"],[5939,"vit_servicing_station_lib::db::models::proposals"],[5940,"vit_servicing_station_lib::v0::endpoints::search::requests"],[5941,"rustls::key"],[5942,"vit_servicing_station_lib::db::models::snapshot"],[5943,"vit_servicing_station_lib::db::models::snapshot"],[5944,"hersir::controller::monitor::node"],[5945,"hersir::controller::monitor"],[5946,"hersir::config::spawn_params"],[5947,"hersir::controller::monitor::node"],[5948,"alloc::alloc"],[5949,"bech32"],[5950,"base64::decode"],[5951,"hyper::body::body"],[5952,"http::response"],[5953,"bech32"],[5954,"walkdir::dent"],[5955,"jortestkit::console::interactive"],[5956,"jormungandr_automation::jormungandr::explorer"],[5957,"hersir::config::blockchain::configuration"],[5958,"hersir::config::committee"],[5959,"hersir::builder::settings::node"],[5960,"hersir::config"],[5961,"jormungandr_automation::jormungandr::process"],[5962,"vit_servicing_station_lib::db::models::community_advisors_reviews"],[5963,"std::collections::hash::map"],[5964,"std::process"],[5965,"vit_servicing_station_lib::server::settings::config"],[5966,"vit_servicing_station_lib::db::models::challenges"],[5967,"url"],[5968,"vit_servicing_station_tests::common::clients::rest::path"],[5969,"vit_servicing_station_lib::db::models::proposals"],[5970,"vit_servicing_station_tests::common::snapshot"],[5971,"vit_servicing_station_tests::common::snapshot"],[5972,"jortestkit::measurement::attribute::consumption"],[5973,"jormungandr_automation::jormungandr::grpc::client"],[5974,"yaml_rust::scanner"],[5975,"jormungandr_automation::jormungandr::rest"]],"d":["Contains the error value","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","start advanced backend from scratch","Committee Id","generate data only","Prints differences between new deployment and target env","Generates fund data","","Import data","start mock env","start multiple mock environments","generate qrs","start backend from scratch","generate snapshot data only","Starts catalyst backend","","Convert time defined in config to UTC","Validates static ideascale data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply coloring during diff","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","Local environment to compare","Output file. If not defined it will output to stdout","Target environment to compare","","","","","","Vit servicing station server binary","","generate all random data","","","","generate data from external data","generate data for performance tests","","generate random data","","generate reviews random data","generate reviews random data","","","challenges import json","","configuration","","funds import json","","","how many qr to generate","how many addresses to generate","","","","","","Careful! directory would be removed before export","Careful! directory would be removed before export","Careful! directory would be removed before export","proposals import json","","","reviews import json","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","generate all random data","","","","","","generate data from external data","","","generate data for performance tests","","generate random data","","","","generate reviews random data","generate reviews random data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","challenges import json","","","configuration","","","","","","Returns the argument unchanged.","","","funds import json","","","Calls <code>U::from(self)</code>.","","","Careful! directory would be removed before export","proposals import json","reviews import json","","","","","","","","","","","","","","challenges import json","","","configuration","","","","","","Returns the argument unchanged.","","","funds import json","","","Calls <code>U::from(self)</code>.","","","","Careful! directory would be removed before export","","proposals import json","reviews import json","","","","","","","","","","","","","","","","","","","","","","","how many qr to generate","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","how many qr to generate","","Calls <code>U::from(self)</code>.","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","how many addresses to generate","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","challenges import json","how many qr to generate","","path to config file","endopint in format: 127.0.0.1:80","endopint in format: 127.0.0.1:80","funds import json","use https mode for backend","how many addresses to generate","json file which define funds for each account example: { …","path or name of the jcli to test","path or name of the jcli to test","path or name of the jormungandr node to test","path or name of the jormungandr node to test","level for all nodes","","level for all nodes","","interactive mode introduce easy way to interact with …","interactive mode introduce easy way to interact with …","vote tally end epoch of vote plan","","switch to private voting type","proposals import json","proposals number","","challenges import json","slot duration","slots in epoch","","","snapshot timestamp","vote tally end epoch of vote plan","vote tally end epoch of vote plan","vote start epoch of vote plan","vote start epoch of vote plan","set a directory in which the tests will be run, allowing …","set a directory in which the tests will be run, allowing …","token, only applicable if service mode is used","","token, only applicable if service mode is used","switch to private voting type","","","vote start epoch of vote plan","","voting power threshold for participating in voting","","","","","","challenges import json","","","how many qr to generate","","","","endopint in format: 127.0.0.1:80","","","Returns the argument unchanged.","","","funds import json","","","Calls <code>U::from(self)</code>.","","path or name of the jcli to test","path or name of the jormungandr node to test","level for all nodes","interactive mode introduce easy way to interact with …","proposals import json","challenges import json","","set a directory in which the tests will be run, allowing …","token, only applicable if service mode is used","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","path to config file","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","endopint in format: 127.0.0.1:80","","","Returns the argument unchanged.","","","","use https mode for backend","","how many addresses to generate","json file which define funds for each account example: { …","Calls <code>U::from(self)</code>.","","path or name of the jcli to test","path or name of the jormungandr node to test","level for all nodes","interactive mode introduce easy way to interact with …","vote tally end epoch of vote plan","switch to private voting type","proposals number","slot duration","slots in epoch","","snapshot timestamp","vote tally end epoch of vote plan","vote tally end epoch of vote plan","vote start epoch of vote plan","vote start epoch of vote plan","set a directory in which the tests will be run, allowing …","token, only applicable if service mode is used","","","","","","switch to private voting type","","vote start epoch of vote plan","","voting power threshold for participating in voting","","","","","","","","","Path to configuration file","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","target config","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","target address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","should i fix data is possible","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","input folder","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","should i fix data is possible","proposals import json","","prefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","start backend from scratch","","start mock env","","persistent log commands","","start custom","disruption","","start advanced backend from scratch","files commands","","","","start advanced backend from scratch","","","","","start backend from scratch","","mock","","","","","persistent log comamnds","","","","","","","","","","","start default","start commands","status command","stop command","utilscount commands  ","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Prints wallets, nodes which can be used. Draw topology","Exit interactive mode","Sends Explorer queries","send fragments","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Prints everything","","","","","Prints available node with aliases that can be used","Prints wallet proxies","Prints Vit Stations","Prints trusted peer info","Prints Votes Plan","Prints available wallets with aliases that can be used","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints block height","Prints fragments counts","Prints received fragment list","Prints logs, can filter logs to print only errors or …","Prints peers stats","","","Prints stats","Prints which nodes are upp","Active Vote Plans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Prints everything","","","","","Prints available node with aliases that can be used","Prints wallet proxies","Prints Vit Stations","Prints trusted peer info","Prints Votes Plan","Prints available wallets with aliases that can be used","","","","Prints block height","Prints fragments counts","Prints received fragment list","Prints logs, can filter logs to print only errors or …","Prints peers stats","","","Prints stats","Prints which nodes are upp","Active Vote Plans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","key: Tag - a unique identifier of the current snapshot …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","API Token wrapper type","","Header where token should be present in requests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","send query to a running node","","","","","","Server binding address","","","","","","","block0 static file path","archive block0 static file path","","","","","","","","","Database url","","","","Enable API Tokens feature","","Returns the argument unchanged.","","","","","Load settings from file","","Calls <code>U::from(self)</code>.","","","","","","","","","Dump current settings to file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","Contains the error value","","","","","","","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Server binding address","","","","block0 static file path","archive block0 static file path","","","","","","Database url","","","","","","Enable API Tokens feature","Returns the argument unchanged.","Load settings from file","","Calls <code>U::from(self)</code>.","","","Dump current settings to file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Contains the error value","","","","","","","","","","","","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","send query to a running node","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Server binding address","","","","block0 static file path","archive block0 static file path","","","","","","Database url","","","","Enable API Tokens feature","","Returns the argument unchanged.","Load settings from file","","Calls <code>U::from(self)</code>.","","","","","Dump current settings to file","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[59,59,0,0,0,0,0,0,0,0,6,0,0,76,6,20,0,0,76,0,6,6,0,0,0,76,20,6,0,76,6,20,0,0,0,3,19,56,19,3,6,3,6,3,0,0,3,3,3,52,3,3,3,0,0,56,3,3,6,3,6,0,3,6,3,6,6,3,6,6,6,6,6,6,52,0,56,0,6,0,6,3,6,3,6,3,6,52,52,52,0,411,411,3,3,3,3,6,3,3,52,3,6,3,6,3,6,3,6,0,52,52,3,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,20,0,0,35,35,20,20,19,19,19,19,20,35,19,20,35,19,19,19,20,35,19,20,35,0,19,20,35,0,19,20,20,35,35,19,20,20,20,35,0,20,35,20,35,19,20,35,19,20,35,19,20,35,20,19,20,35,19,20,35,19,20,35,19,20,35,19,20,35,412,413,412,413,0,30,30,0,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,0,411,411,30,30,30,30,30,30,0,0,0,0,0,76,76,0,76,76,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,414,0,63,0,0,0,0,414,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,68,69,69,67,67,0,67,68,68,69,68,69,67,0,67,67,0,0,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,0,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,0,67,68,69,0,67,68,69,67,68,69,67,68,69,0,0,67,68,69,67,68,69,67,68,69,67,68,69,67,68,69,0,67,68,69,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,79,0,0,0,78,78,0,78,0,79,79,0,75,82,0,82,0,82,87,89,87,89,87,89,82,87,89,82,87,89,82,75,0,82,82,89,0,82,75,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,79,0,76,0,0,76,78,0,76,78,0,78,0,0,0,79,79,76,76,78,79,78,79,78,79,76,78,79,76,76,76,78,79,78,79,78,79,76,78,79,76,76,78,79,76,76,78,79,0,78,79,76,78,79,76,78,79,78,79,78,79,78,79,76,78,79,76,78,79,76,0,0,76,76,78,79,76,78,79,76,78,79,76,78,79,78,79,78,79,76,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,0,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,89,89,89,88,89,88,89,89,89,88,89,88,88,89,88,89,89,89,88,89,89,89,89,89,88,88,89,89,89,88,89,88,89,89,88,89,89,88,89,88,89,88,89,89,89,88,91,91,95,91,90,0,0,0,91,95,95,95,91,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,90,90,90,90,90,90,90,90,90,91,91,95,92,91,0,0,0,0,0,0,0,0,91,92,95,95,95,91,92,96,97,98,99,96,97,98,99,95,95,95,96,97,98,92,91,94,99,95,96,97,98,92,91,94,99,92,92,92,95,96,97,98,99,95,96,97,98,99,92,95,96,97,98,92,91,94,99,95,96,97,98,92,91,94,99,92,94,95,96,97,98,92,91,94,99,92,92,92,92,92,95,96,97,98,99,95,96,97,98,92,91,91,99,98,95,96,97,98,92,91,91,91,91,91,94,99,95,96,97,98,99,95,96,97,98,99,92,92,96,97,98,99,95,92,91,91,95,96,97,98,92,91,94,99,96,97,98,99,95,96,97,98,92,91,94,99,95,96,97,98,92,91,94,99,96,97,99,92,94,98,94,92,94,91,92,91,95,96,97,98,92,91,94,99,95,96,97,98,92,91,94,99,95,96,97,98,92,91,94,99,95,96,97,98,99,95,96,97,98,99,95,96,97,98,92,91,94,99,0,109,109,109,109,109,109,0,0,0,0,109,109,0,107,107,108,110,107,117,107,117,117,117,107,117,107,117,107,108,117,0,107,117,117,108,117,107,117,0,107,117,117,107,117,117,117,117,117,117,107,117,107,108,117,117,107,117,117,117,117,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,109,109,109,0,109,109,109,0,0,109,109,108,110,108,110,108,110,109,108,110,109,108,110,108,110,108,110,108,110,109,108,110,109,108,110,109,108,110,108,110,109,109,108,110,109,109,109,109,109,109,109,109,109,108,110,108,110,108,110,109,109,108,110,109,108,110,109,108,110,109,108,108,109,109,108,108,110,109,108,110,109,108,110,109,108,110,108,110,108,110,109,0,0,0,0,0,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,123,119,120,123,119,120,0,119,120,0,123,123,123,123,0,119,119,119,120,119,120,119,119,0,0,119,120,119,120,119,120,119,119,120,120,119,120,120,120,120,119,119,119,120,0,120,119,120,119,120,119,120,120,120,119,120,119,120,119,120,119,119,119,120,0,0,121,124,124,124,121,124,121,124,124,124,124,121,124,121,124,121,124,124,121,121,124,121,124,124,124,121,121,124,121,124,121,124,121,121,124,121,124,121,124,121,124,124,124,121,122,125,125,0,0,0,0,125,125,125,125,125,125,122,125,126,127,127,127,126,127,125,126,122,127,125,126,122,125,126,125,126,127,127,127,125,126,122,127,125,126,122,127,125,126,122,127,125,127,125,125,122,122,127,125,126,122,122,127,127,126,127,125,122,126,122,127,125,126,122,127,125,126,122,126,127,125,126,122,125,126,126,126,126,126,126,126,126,122,126,125,126,125,122,126,126,126,127,125,126,122,127,125,126,122,127,125,126,122,127,127,127,125,126,122,140,144,123,0,123,140,0,0,140,123,140,140,143,144,123,0,140,123,0,144,123,140,143,144,144,144,138,138,138,138,123,140,143,144,138,123,140,143,144,138,138,138,138,138,138,138,123,140,143,144,138,123,140,143,144,138,123,140,143,144,138,138,138,123,123,140,140,143,143,144,144,138,123,123,123,123,123,123,123,140,140,140,140,143,143,143,144,144,144,138,138,138,138,123,140,143,144,123,140,143,144,138,123,140,143,144,138,138,123,140,143,144,138,123,140,143,144,138,138,138,138,138,123,140,143,144,123,140,143,144,138,123,140,143,144,138,123,140,143,144,138,138,123,140,143,144,138,138,138,138,138,138,138,123,140,143,144,0,0,154,151,0,149,0,161,0,157,163,0,149,155,0,153,0,151,153,154,152,159,149,0,163,0,0,0,0,160,0,154,153,154,153,153,0,153,0,153,157,155,155,155,163,0,0,148,164,165,158,162,148,164,165,158,162,163,149,151,152,153,154,155,157,159,160,161,163,149,151,152,153,154,155,157,159,160,161,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,165,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,148,149,151,152,153,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,164,148,164,165,158,162,163,149,151,152,153,154,155,157,159,160,161,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,158,148,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,148,163,149,151,152,153,164,165,154,155,157,158,159,160,161,162,0,166,166,0,0,0,150,167,167,167,150,156,166,167,150,156,166,150,167,150,156,166,167,150,156,166,167,167,150,156,166,166,166,167,150,150,156,156,166,166,166,167,150,166,150,166,167,150,156,166,150,156,167,150,156,166,167,150,156,166,167,150,150,156,150,150,167,167,167,167,167,150,150,150,150,150,150,166,156,156,156,156,166,167,167,167,150,156,166,167,150,156,166,167,150,156,166,167,150,156,166,194,194,194,0,0,0,189,198,198,0,0,0,0,194,0,198,0,0,0,189,11,0,0,0,0,0,0,0,11,194,194,8,0,8,186,179,179,0,8,8,8,0,8,0,8,8,179,181,179,203,8,0,8,8,8,8,197,8,8,8,8,202,8,0,8,8,8,179,0,0,203,8,209,8,0,0,8,0,8,179,16,186,0,16,16,8,8,8,179,8,197,202,0,8,16,0,209,8,415,416,417,418,419,416,418,419,415,417,418,420,419,415,417,418,420,419,416,420,421,421,421,421,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,179,179,179,179,179,179,179,179,179,179,179,0,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,0,0,0,0,181,181,181,181,181,181,181,181,181,0,0,181,181,181,181,181,181,181,181,0,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,192,192,0,0,192,0,0,190,192,190,192,190,190,190,192,190,192,190,192,192,192,190,192,192,192,192,190,192,190,192,190,192,190,190,192,192,190,192,190,192,190,192,190,192,0,0,0,0,0,0,11,0,193,11,186,11,0,186,186,11,193,186,11,193,186,11,186,11,186,11,186,11,193,186,11,193,186,11,186,11,193,11,11,11,11,11,186,11,11,193,193,186,11,193,11,11,11,11,11,11,193,193,186,11,193,186,11,193,186,11,193,186,11,186,186,11,11,193,186,11,193,186,11,193,186,11,193,186,11,193,194,194,194,194,0,0,0,194,194,182,194,182,182,194,182,194,182,194,182,194,0,182,182,182,194,182,194,182,194,182,194,182,182,182,182,194,182,194,182,194,182,194,182,194,182,182,194,182,182,194,182,182,194,182,194,182,194,182,194,182,194,182,182,415,416,417,418,419,416,418,419,415,417,418,420,419,415,417,418,420,419,416,420,198,198,0,0,198,0,0,0,197,198,197,198,197,197,197,198,197,198,197,197,198,198,198,197,198,198,198,198,197,198,197,198,197,198,198,198,197,198,197,198,197,198,197,197,198,199,0,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,0,199,199,199,199,199,199,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,0,0,203,203,203,203,203,0,203,203,203,203,203,203,203,203,0,203,203,203,0,203,203,203,203,203,203,203,0,0,204,205,205,204,205,204,205,204,204,205,204,205,204,204,205,204,205,204,205,204,205,204,205,205,204,205,204,205,204,204,205,205,204,205,204,205,205,205,204,205,205,204,205,204,204,205,205,204,205,204,205,204,205,204,205,204,204,205,0,206,206,206,206,206,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,207,208,208,207,208,207,208,207,208,207,208,207,207,208,207,208,207,208,207,208,207,208,208,207,208,207,208,207,207,208,208,207,208,207,208,208,208,208,208,208,207,208,208,207,208,207,208,207,208,207,208,208,208,208,207,208,0,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,189,0,189,0,0,189,16,189,189,16,189,16,189,16,189,16,189,16,189,16,189,16,189,16,189,16,189,16,189,189,16,189,16,189,16,189,16,189,189,189,16,16,16,16,189,16,189,16,189,16,189,16,16,189,16,16,16,16,421,421,421,421,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,0,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,422,423,423,424,425,426,427,426,424,0,0,0,0,0,0,235,235,235,235,235,0,0,0,0,235,235,233,235,233,235,235,235,0,233,233,233,235,233,235,0,233,235,237,235,233,235,235,235,235,233,235,233,235,233,235,233,237,0,233,233,235,233,235,233,235,235,235,233,233,237,233,235,0,0,238,0,0,0,0,238,238,238,238,238,238,239,240,241,239,240,241,239,240,241,238,238,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,239,240,241,238,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,245,245,245,245,245,0,0,245,245,245,0,246,242,246,242,246,242,245,245,245,246,242,245,246,242,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,246,242,245,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,245,246,242,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,0,0,0,0,238,238,238,238,238,238,239,240,241,245,245,245,245,245,0,0,245,245,245,0,246,242,290,113,0,0,0,0,113,255,290,0,113,113,113,113,116,255,116,0,116,0,0,255,0,0,0,290,255,115,290,115,290,0,113,115,259,251,253,253,284,253,254,0,259,0,0,253,253,0,284,284,252,284,0,253,250,254,254,0,252,253,251,250,250,251,0,284,254,254,0,0,0,259,250,253,253,253,250,0,0,115,115,115,250,250,115,250,115,250,250,250,115,250,115,250,250,115,250,115,115,250,115,115,115,115,115,250,115,250,115,250,115,250,250,250,0,250,115,250,115,250,250,115,250,115,250,115,250,115,250,0,255,255,255,0,0,0,255,0,0,252,255,254,254,252,255,254,252,255,254,252,252,255,254,252,255,254,252,255,254,252,255,254,252,255,254,252,255,254,252,252,255,254,252,255,254,252,255,254,252,255,254,252,252,254,254,252,252,254,254,252,0,252,255,254,252,255,254,252,255,254,252,255,254,252,255,254,0,0,0,116,116,116,259,259,251,259,259,259,259,116,259,116,259,259,259,116,259,116,259,116,116,116,259,116,116,116,116,116,116,259,116,259,116,259,116,259,251,259,251,259,259,116,259,259,259,116,259,116,259,116,259,116,259,259,116,259,111,269,0,269,0,0,0,111,0,111,111,269,0,0,268,266,0,268,275,270,0,0,275,265,275,270,266,265,270,265,266,0,0,0,268,265,275,265,0,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,0,265,265,265,265,265,265,265,265,111,0,0,111,111,0,111,0,0,268,268,266,268,428,268,111,268,111,268,268,111,268,111,268,111,111,111,268,111,111,111,268,111,111,268,111,268,111,268,111,268,266,268,266,268,268,111,268,268,268,268,111,268,111,268,111,268,111,429,268,111,268,269,269,0,269,0,0,0,0,271,273,270,275,271,273,270,269,275,271,273,270,269,275,270,275,271,271,273,273,270,269,275,271,273,270,269,275,271,273,270,270,269,270,269,269,275,271,273,270,269,269,269,269,0,269,275,275,269,275,271,273,270,269,275,271,273,270,269,275,271,273,270,269,270,275,270,275,275,270,270,270,270,269,275,269,275,271,273,270,269,275,271,273,270,269,275,271,273,270,269,275,271,273,270,269,275,275,267,267,0,267,267,267,267,267,267,0,267,267,267,267,267,267,267,267,267,267,267,267,267,267,0,267,267,267,267,267,0,267,0,0,267,267,267,267,267,290,262,0,290,0,262,0,290,290,290,290,284,284,284,284,284,284,284,290,262,284,290,262,290,290,284,284,284,290,262,284,290,262,284,290,262,284,284,290,290,262,262,284,284,284,284,290,262,262,290,262,262,284,290,262,284,290,262,284,290,262,0,0,284,284,284,0,284,284,284,284,284,284,284,262,284,290,290,262,284,290,262,284,290,262,284,290,262,284,290,262,263,0,263,263,0,263,253,253,253,253,253,253,263,253,263,253,253,253,253,263,253,263,253,263,253,263,263,253,263,263,263,263,263,263,263,253,263,253,263,253,263,253,253,253,253,253,253,253,253,253,253,253,263,263,253,263,253,263,253,263,253,253,253,253,253,253,253,253,253,253,263,113,113,0,113,113,113,113,113,0,0,113,113,0,0,113,113,113,113,113,113,113,113,113,113,113,113,0,113,113,113,113,0,0,0,0,0,113,0,0,113,113,113,113,0,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,311,311,311,0,311,311,311,311,311,311,311,0,0,0,0,0,0,0,0,311,311,0,311,0,0,0,311,311,311,311,0,0,0,316,261,317,316,261,317,316,261,317,316,261,317,316,261,317,316,261,317,316,261,317,316,261,317,316,316,261,317,316,261,317,316,261,317,316,316,0,317,316,261,317,316,261,317,316,261,317,316,261,317,316,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,305,330,305,330,305,330,305,305,305,305,305,330,305,330,305,330,0,305,330,305,330,305,305,330,305,305,305,330,305,330,305,305,305,305,305,305,330,305,330,305,330,305,305,305,330,0,0,0,0,332,341,342,0,336,336,0,332,341,342,0,0,0,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,0,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,0,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,0,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,0,0,0,0,0,0,172,351,0,351,172,0,172,0,172,0,351,345,359,356,359,345,345,345,355,345,351,355,345,351,345,345,345,345,0,364,355,345,351,355,345,351,355,345,351,345,345,345,345,345,345,345,0,345,351,351,355,345,345,351,351,345,351,351,355,345,351,355,345,351,355,345,351,351,355,355,345,356,356,0,364,359,0,359,359,359,351,0,359,345,351,355,345,351,355,345,351,355,345,351,355,355,345,351,359,345,345,0,0,172,172,172,0,172,172,359,359,356,359,359,359,359,172,359,172,359,172,172,359,172,359,172,172,359,172,172,172,172,172,172,172,172,359,172,172,359,172,359,172,359,172,359,356,356,359,359,172,359,359,359,359,359,359,359,359,359,359,359,359,359,359,172,172,359,172,359,172,359,172,359,172,359,359,0,0,0,0,0,0,0,0,0,361,0,169,169,361,169,361,169,169,361,169,361,169,169,361,0,361,361,169,361,361,361,361,169,361,169,361,169,361,0,169,169,169,169,169,169,169,169,169,361,361,169,361,169,361,169,361,169,361,0,360,0,360,360,360,360,360,360,360,0,360,360,360,360,0,0,0,0,0,360,0,360,360,360,360,360,0,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,0,365,365,365,365,365,365,365,365,365,365,365,365,0,365,365,365,0,365,365,365,365,365,0,365,365,0,0,365,365,365,365,365,365,365,365,365,365,0,0,0,0,0,0,32,32,216,32,216,216,32,0,145,0,0,216,216,216,216,227,216,216,216,145,227,216,145,216,227,227,216,227,216,227,216,227,216,227,216,227,216,216,212,0,0,0,0,0,0,0,0,0,0,216,0,0,0,0,410,247,249,248,343,371,343,410,410,5,5,248,371,371,0,410,5,410,5,5,5,410,247,5,5,0,0,4,410,5,5,5,410,340,340,5,340,340,408,410,404,249,248,343,408,408,249,410,0,249,248,249,248,410,5,5,5,248,343,4,408,377,5,377,430,431,432,431,431,432,432,433,434,435,436,437,438,433,436,435,436,433,434,435,436,434,437,438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,340,340,5,340,340,0,0,0,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,32,32,32,32,0,0,0,4,371,371,4,371,371,32,4,371,32,4,371,4,4,371,371,4,371,371,4,4,4,4,371,32,4,371,32,4,371,32,4,371,32,32,371,32,32,4,32,4,4,32,371,32,4,371,32,4,371,32,4,371,4,4,32,4,4,4,4,4,4,4,32,371,371,32,4,371,32,4,371,32,4,4,4,371,371,32,4,0,371,4,371,4,430,0,0,0,0,0,439,0,0,227,227,227,227,227,227,439,227,227,0,227,0,0,0,0,0,0,0,0,0,344,387,367,380,380,344,384,380,380,380,380,380,380,383,384,380,344,387,367,227,383,384,380,344,387,367,227,383,384,380,384,380,380,387,344,384,387,367,367,344,387,367,344,387,367,0,5,0,380,380,384,380,387,344,383,384,380,344,387,367,227,383,384,380,344,387,367,227,344,383,384,380,344,387,367,227,0,380,380,344,380,344,227,227,383,384,380,344,344,387,367,227,227,227,227,344,344,384,387,367,387,387,387,0,0,387,344,227,344,387,227,380,380,383,384,380,344,387,367,227,383,384,380,344,344,387,367,227,383,384,380,344,387,367,227,380,380,380,380,380,380,383,384,380,344,387,367,340,387,367,387,387,340,387,367,5,340,387,367,387,387,340,387,367,387,387,380,380,383,344,380,380,344,387,387,387,344,384,387,367,344,387,367,387,344,344,344,387,367,344,344,380,344,380,344,344,344,344,227,344,387,367,227,384,383,384,380,344,387,367,227,383,384,380,344,387,367,227,383,384,380,344,387,367,227,344,383,384,380,344,387,367,227,384,384,384,384,384,384,384,431,432,431,431,432,432,0,0,0,0,249,410,249,249,249,410,410,249,249,249,249,410,410,249,249,249,249,249,410,249,410,249,249,249,410,410,249,249,249,249,410,249,249,249,249,249,410,249,249,249,249,249,249,145,0,0,145,145,404,145,404,145,404,404,145,404,145,404,145,145,145,404,145,145,145,145,0,0,145,145,404,145,404,145,404,145,404,404,145,145,404,145,404,145,404,145,404,145,216,216,216,440,0,216,216,216,216,216,216,216,216,216,216,216,216,440,216,216,216,0,216,0,216,0,0,0,0,216,216,0,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,0,216,0,216,216,216,216,216,433,434,435,436,437,438,433,436,435,436,433,434,435,436,434,437,438,0,212,0,248,248,248,248,248,248,212,248,212,248,248,248,248,212,248,212,248,248,212,212,212,248,212,212,212,212,248,212,248,212,248,212,248,248,248,248,248,212,248,248,212,248,212,248,212,248,212,248,248,212,0,0,408,408,441,408,408,408,441,441,408,408,408,408,441,441,408,408,408,441,408,408,441,408,408,408,441,408,408,441,408,408,408,441,441,408,408,408,408,408,408,408,0,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,0,0,0,0,0,0,377,377,377,377,377,377,377,377,377,377,377,377,377,377,442,443,444,377,377,377,377,377,377,377,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[7,[[2,[4,5]],6]]]],[[8,[10,[9]],[10,[[2,[11,12]]]]],13],[[8,[10,[[2,[11,12]]]],[10,[9]],14],5],[3,15],[3,3],[[-1,-2],2,[],[]],0,0,[[3,8],3],0,[8,16],[8,[[2,[17,17,17]]]],0,[[],3],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[19,20]]],[[22,[21]]]],[18,2],[18,2],[[3,4,[24,[23,21]],-1],[[7,[2,6]]],[[26,[25]]]],[[6,27],28],[[6,27],28],[-1,-1,[]],[-1,-1,[]],[29,6],[30,6],[31,6],[32,6],[20,6],0,[[[10,[[2,[33,34]]]],[24,[23,21]],8,-1],[[7,[2,30]]],[[26,[25]]]],0,[-1,[[7,[19,35]]],[[26,[25]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],0,[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,[[-1,-2,[42,[41]]],2,[],[[26,[25]]]],[[-1,-2,[42,[41]]],2,[],[[26,[25]]]],[[3,43],3],0,[3,3],0,[6,[[45,[44]]]],[[3,46],3],0,0,[-1,-2,[],[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[3,-1,[42,[[2,[11,12]]]]],[[7,[2,6]]],[[26,[25]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[19,20]]],[[22,[21]]]],[18,2],[18,2],[18,2],[-1,[[7,[19,35]]],[[26,[25]]]],[[19,27],28],[[20,27],28],[[20,27],28],[[35,27],28],[[35,27],28],[-1,-1,[]],[-1,-1,[]],[48,20],[35,20],[-1,-1,[]],[-1,[[7,[19,35]]],[[26,[25]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[-1,[],[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[20,[[45,[44]]]],[-1,-2,[],[]],[-1,21,[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[[30,27],28],[[30,27],28],[49,30],[-1,-1,[]],[31,30],[[[10,[[2,[33,34]]]],[24,[23,21]],8,-1],[[7,[2,30]]],[[26,[25]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[50,[[10,[41]]]],[[-1,-2,[42,[41]]],2,[],[[26,[25]]]],[[-1,-2,[42,[41]]],2,[],[[26,[25]]]],[30,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],[[8,[10,[9]],[10,[[2,[11,12]]]]],13],[8,[[10,[51]]]],[[8,[10,[[2,[11,12]]]],[10,[9]],14],5],[8,16],[8,[[2,[17,17,17]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[52,[[10,[53]]]],[[52,33],52],0,[[],52],[18,-1,[]],[18,-1,[]],[18,2],[-1,-1,[]],[[52,21],52],0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[52,41],52],0,[[52,54],52],0,[[52,18],52],0,[[52,18],52],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[52,16],52],0,[[52,11,55],52],[[52,[10,[[2,[11,55]]]]],52],0,[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[18,-1,[]],[18,-1,[]],[18,2],[-1,-1,[]],[[56,[10,[57]]],[[59,[[10,[58]]]]]],[56,21],[[56,57,-1],58,[[22,[21]]]],[[56,57,-1],58,[[22,[21]]]],[[56,57,-1],58,[[22,[21]]]],0,[56,2],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[60,56],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,[-1,43,[[26,[25]]]],0,0,0,0,[61,[[7,[2,62]]]],0,[-1,43,[[26,[25]]]],0,[63,64],[-1,-2,[],[]],[-1,-2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[65,63],[-1,-1,[]],[63,64],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,63,[[26,[25]]]],[63,64],0,[63,64],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[63,64],[-1,-2,[],[]],[63,21],[[63,-1],64,[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],0,[18,2],[18,2],[18,2],[67,[[59,[2]]]],[68,[[59,[2]]]],[69,[[59,[2]]]],[[67,27],28],[[68,27],28],[[69,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[70,[[7,[67,71]]]],[70,[[7,[68,71]]]],[70,[[7,[69,71]]]],[70,[[7,[67,71]]]],[70,[[7,[68,71]]]],[70,[[7,[69,71]]]],0,[50,54],[50,54],[50,54],0,[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[67,70],[[7,[2,71]]]],[[68,70],[[7,[2,71]]]],[[69,70],[[7,[2,71]]]],[[67,70],[[7,[2,71]]]],[[68,70],[[7,[2,71]]]],[[69,70],[[7,[2,71]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],[72,[[59,[2]]]],[[72,27],28],[-1,-1,[]],[70,[[7,[72,71]]]],[70,[[7,[72,71]]]],[54,73],[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[72,70],[[7,[2,71]]]],[[72,70],[[7,[2,71]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],[75,[[59,[2]]]],[[75,27],28],[-1,-1,[]],[70,[[7,[75,71]]]],[70,[[7,[75,71]]]],[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[75,70],[[7,[2,71]]]],[[75,70],[[7,[2,71]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],2,[],[]],[[],66],[[],66],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[76]]],77],[18,2],[18,2],[18,2],[[76,76],54],[78,[[59,[2]]]],[79,[[59,[2]]]],0,[[78,27],28],[[79,27],28],[[76,27],[[7,[2,80]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[70,[[7,[78,71]]]],[70,[[7,[79,71]]]],[70,[[7,[78,71]]]],[70,[[7,[79,71]]]],[50,54],[50,54],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[[76,-1],7,81],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[78,70],[[7,[2,71]]]],[[79,70],[[7,[2,71]]]],[[78,70],[[7,[2,71]]]],[[79,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],66],[[],66],0,[18,-1,[]],[18,-1,[]],[18,2],[82,[[59,[2]]]],[[82,27],28],[-1,-1,[]],[70,[[7,[82,71]]]],[70,[[7,[82,71]]]],0,[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[82,70],[[7,[2,71]]]],[[82,70],[[7,[2,71]]]],[-1,-2,[],[]],0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],66],[[],66],0,[18,-1,[]],[18,-1,[]],[18,2],[83,[[59,[2]]]],[[83,27],28],[-1,-1,[]],[70,[[7,[83,71]]]],[70,[[7,[83,71]]]],0,[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[[83,63,-1],[[59,[2]]],[[26,[25]]]],0,0,0,0,0,0,[[83,63],[[59,[2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[83,70],[[7,[2,71]]]],[[83,70],[[7,[2,71]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],0,[18,-1,[]],[18,-1,[]],[18,2],[84,[[59,[2]]]],[[84,27],28],[-1,-1,[]],[70,[[7,[84,71]]]],[70,[[7,[84,71]]]],[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[84,70],[[7,[2,71]]]],[[84,70],[[7,[2,71]]]],[-1,-2,[],[]],0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],[85,[[59,[2]]]],[[85,27],28],[-1,-1,[]],[70,[[7,[85,71]]]],[70,[[7,[85,71]]]],[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[85,70],[[7,[2,71]]]],[[85,70],[[7,[2,71]]]],[-1,-2,[],[]],0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],[86,[[59,[2]]]],[[86,27],28],[-1,-1,[]],[70,[[7,[86,71]]]],[70,[[7,[86,71]]]],[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[86,70],[[7,[2,71]]]],[[86,70],[[7,[2,71]]]],[-1,-2,[],[]],0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],[87,[[59,[2]]]],[[87,27],28],[-1,-1,[]],[70,[[7,[87,71]]]],[70,[[7,[87,71]]]],0,[[],[[45,[74]]]],[[],18],0,0,[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[87,70],[[7,[2,71]]]],[[87,70],[[7,[2,71]]]],[-1,-2,[],[]],0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[88]]],77],[18,2],[18,2],[89,[[59,[2]]]],[[89,27],28],[-1,-1,[]],[-1,-1,[]],[70,[[7,[89,71]]]],[70,[[7,[89,71]]]],0,[[],[[45,[74]]]],[[],18],[[],18],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[[88,-1],7,81],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[89,70],[[7,[2,71]]]],[[89,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],[90,[[7,[2,91]]]],[[90,27],28],[-1,-1,[]],[70,[[7,[90,71]]]],[70,[[7,[90,71]]]],[50,54],0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[90,70],[[7,[2,71]]]],[[90,70],[[7,[2,71]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[-1,-2],2,[],[]],[[92,92],93],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[-1,-2],93,[],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[92]]],77],[-1,[[7,[94]]],77],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[[92,92],54],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[95,[[7,[2,91]]]],[96,[[7,[2,91]]]],[97,[[7,[2,91]]]],[98,[[7,[2,91]]]],[99,[[7,[2,91]]]],[[95,27],28],[[96,27],28],[[97,27],28],[[98,27],28],[[92,27],28],[[91,27],28],[[91,27],28],[[99,27],28],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[100,91],[101,91],[-1,-1,[]],[29,91],[31,91],[-1,-1,[]],[-1,-1,[]],[70,[[7,[95,71]]]],[70,[[7,[96,71]]]],[70,[[7,[97,71]]]],[70,[[7,[98,71]]]],[70,[[7,[99,71]]]],[70,[[7,[95,71]]]],[70,[[7,[96,71]]]],[70,[[7,[97,71]]]],[70,[[7,[98,71]]]],[70,[[7,[99,71]]]],[50,[[7,[92]]]],[[-1,-2],102,[103,104],105],[[],[[45,[74]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[50,54],[[92,-1],2,106],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,[[92,92],[[45,[93]]]],0,0,0,[[92,-1],7,81],[[94,-1],7,81],[91,[[45,[44]]]],[-1,-2,[],[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[95,70],[[7,[2,71]]]],[[96,70],[[7,[2,71]]]],[[97,70],[[7,[2,71]]]],[[98,70],[[7,[2,71]]]],[[99,70],[[7,[2,71]]]],[[95,70],[[7,[2,71]]]],[[96,70],[[7,[2,71]]]],[[97,70],[[7,[2,71]]]],[[98,70],[[7,[2,71]]]],[[99,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],66],[[],66],0,[18,-1,[]],[18,-1,[]],[18,2],0,[107,[[59,[2]]]],[[107,27],28],[-1,-1,[]],[70,[[7,[107,71]]]],[70,[[7,[107,71]]]],0,[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[107,70],[[7,[2,71]]]],[[107,70],[[7,[2,71]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[[],66],[[],66],0,0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[108,[[7,[2,109]]]],[110,[[7,[2,109]]]],[[108,27],28],[[110,27],28],[[109,27],28],[[109,27],28],[-1,-1,[]],[-1,-1,[]],[111,109],[112,109],[113,109],[62,109],[31,109],[114,109],[115,109],[116,109],[-1,-1,[]],[70,[[7,[108,71]]]],[70,[[7,[110,71]]]],[70,[[7,[108,71]]]],[70,[[7,[110,71]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[109,[[45,[44]]]],[-1,21,[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[108,70],[[7,[2,71]]]],[[110,70],[[7,[2,71]]]],[[108,70],[[7,[2,71]]]],[[110,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,2],0,[117,[[59,[2]]]],[[117,27],28],[-1,-1,[]],[70,[[7,[117,71]]]],[70,[[7,[117,71]]]],[[],[[45,[74]]]],0,[[],18],0,0,[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[117,70],[[7,[2,71]]]],[[117,70],[[7,[2,71]]]],0,0,0,0,0,[-1,-2,[],[]],0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],0,[18,-1,[]],[18,-1,[]],[18,2],[118,[[59,[2]]]],[[118,27],28],[-1,-1,[]],[70,[[7,[118,71]]]],[70,[[7,[118,71]]]],[[],[[45,[74]]]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[118,70],[[7,[2,71]]]],[[118,70],[[7,[2,71]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],0,0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[119,[[7,[2,120]]]],[[119,27],28],[[120,27],28],[[120,27],28],[-1,-1,[]],[121,120],[-1,-1,[]],[122,120],[123,120],[70,[[7,[119,71]]]],[70,[[7,[119,71]]]],[50,54],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],0,[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[120,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[119,70],[[7,[2,71]]]],[[119,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[124,[[7,[2,121]]]],[[124,27],28],[[121,27],28],[[121,27],28],[-1,-1,[]],[-1,-1,[]],[70,[[7,[124,71]]]],[70,[[7,[124,71]]]],[[],[[45,[74]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[124,70],[[7,[2,71]]]],[[124,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[66,66],[66,66],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,125],[126,126],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[18,2],[127,[[7,[2,122]]]],[[125,128],[[7,[129,122]]]],[[127,27],28],[[125,27],28],[[125,27],28],[[122,27],28],[[122,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[130,122],[70,[[7,[127,71]]]],[70,[[7,[127,71]]]],[[126,18],[[45,[125]]]],[[],[[45,[74]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],0,[-1,[],[]],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[],126],[126,18],0,[126,45],[126,45],[[126,18],45],[-1,[[131,[-2]]],[],[]],[[-1,132],[[133,[-2]]],[],[]],[126,[[2,[18,[45,[18]]]]]],[122,[[45,[44]]]],[-1,[[134,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,21,[]],[-1,[[135,[-2]]],[],[]],[-1,[[136,[-2]]],[],[]],[-1,[[137,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[127,70],[[7,[2,71]]]],[[127,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[138,50],21],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[138,[42,[139]],54,21],2],[[138,[42,[139]],54],[[7,[2,140]]]],[[138,139],[[7,[2,140]]]],[[138,[42,[139]],[142,[141]]],[[7,[2,140]]]],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[18,2],[18,2],[138,[[7,[2,123]]]],0,[[138,27],28],[[123,27],28],[[123,27],28],[[140,27],28],[[140,27],28],[[143,27],28],[[143,27],28],[[144,27],28],[[144,27],28],[-1,-1,[]],[140,123],[144,123],[31,123],[-1,-1,[]],[143,123],[145,123],[146,123],[146,140],[-1,-1,[]],[31,140],[29,140],[29,143],[146,143],[-1,-1,[]],[-1,-1,[]],[29,144],[146,144],[70,[[7,[138,71]]]],[70,[[7,[138,71]]]],[[138,64,64,64,64,18,18,18],[[7,[2,123]]]],[[],[[45,[74]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[],18],[[],18],[[],18],[[],18],[[],18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[[138,-1],[[7,[[10,[139]],140]]],[[26,[25]]]],0,[[138,-1,[10,[139]]],[[7,[2,140]]],[[26,[25]]]],[123,[[45,[44]]]],[140,[[45,[44]]]],[143,[[45,[44]]]],[144,[[45,[44]]]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[138,-1],[[7,[[10,[139]],140]]],[[26,[25]]]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[138,70],[[7,[2,71]]]],[[138,70],[[7,[2,71]]]],[[138,-1,147],[[7,[[142,[141]],144]]],[[26,[25]]]],[[138,-1,54,[142,[141]]],[[7,[[10,[139]],140]]],[[26,[25]]]],[[138,-1],[[7,[[142,[58]],143]]],[[26,[25]]]],[[138,18],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],0,[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],0,[148,[[59,[2]]]],[[149,150],[[59,[2]]]],[[151,150],[[59,[2]]]],[[152,150],[[59,[2]]]],[[153,150],[[59,[2]]]],[[154,150],[[59,[2]]]],[[155,156],[[59,[2]]]],[[157,156],[[59,[2]]]],[[158,156],[[59,[2]]]],[[159,156],[[59,[2]]]],[160,[[59,[2]]]],[161,[[59,[2]]]],[162,[[59,[2]]]],[[148,27],28],[[163,27],28],[[149,27],28],[[151,27],28],[[152,27],28],[[153,27],28],[[164,27],28],[[165,27],28],[[154,27],28],[[155,27],28],[[157,27],28],[[158,27],28],[[159,27],28],[[160,27],28],[[161,27],28],[[162,27],28],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[70,[[7,[148,71]]]],[70,[[7,[163,71]]]],[70,[[7,[149,71]]]],[70,[[7,[151,71]]]],[70,[[7,[152,71]]]],[70,[[7,[153,71]]]],[70,[[7,[164,71]]]],[70,[[7,[165,71]]]],[70,[[7,[154,71]]]],[70,[[7,[155,71]]]],[70,[[7,[157,71]]]],[70,[[7,[158,71]]]],[70,[[7,[159,71]]]],[70,[[7,[160,71]]]],[70,[[7,[161,71]]]],[70,[[7,[162,71]]]],[70,[[7,[148,71]]]],[70,[[7,[163,71]]]],[70,[[7,[149,71]]]],[70,[[7,[151,71]]]],[70,[[7,[152,71]]]],[70,[[7,[153,71]]]],[70,[[7,[164,71]]]],[70,[[7,[165,71]]]],[70,[[7,[154,71]]]],[70,[[7,[155,71]]]],[70,[[7,[157,71]]]],[70,[[7,[158,71]]]],[70,[[7,[159,71]]]],[70,[[7,[160,71]]]],[70,[[7,[161,71]]]],[70,[[7,[162,71]]]],0,[[],[[45,[74]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[50,54],[50,54],[50,54],[50,54],[50,54],[50,54],[50,54],[50,54],[50,54],[50,54],[50,54],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[148,70],[[7,[2,71]]]],[[163,70],[[7,[2,71]]]],[[149,70],[[7,[2,71]]]],[[151,70],[[7,[2,71]]]],[[152,70],[[7,[2,71]]]],[[153,70],[[7,[2,71]]]],[[164,70],[[7,[2,71]]]],[[165,70],[[7,[2,71]]]],[[154,70],[[7,[2,71]]]],[[155,70],[[7,[2,71]]]],[[157,70],[[7,[2,71]]]],[[158,70],[[7,[2,71]]]],[[159,70],[[7,[2,71]]]],[[160,70],[[7,[2,71]]]],[[161,70],[[7,[2,71]]]],[[162,70],[[7,[2,71]]]],[[148,70],[[7,[2,71]]]],[[163,70],[[7,[2,71]]]],[[149,70],[[7,[2,71]]]],[[151,70],[[7,[2,71]]]],[[152,70],[[7,[2,71]]]],[[153,70],[[7,[2,71]]]],[[164,70],[[7,[2,71]]]],[[165,70],[[7,[2,71]]]],[[154,70],[[7,[2,71]]]],[[155,70],[[7,[2,71]]]],[[157,70],[[7,[2,71]]]],[[158,70],[[7,[2,71]]]],[[159,70],[[7,[2,71]]]],[[160,70],[[7,[2,71]]]],[[161,70],[[7,[2,71]]]],[[162,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[150,[[7,[2,166]]]],[167,21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[150,[[7,[2,166]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[[167,-1],167,[[22,[21]]]],[18,2],[18,2],[18,2],[18,2],[[166,27],28],[[166,27],28],[-1,-1,[]],[-1,-1,[]],[167,150],[167,156],[-1,-1,[]],[168,166],[29,166],[-1,-1,[]],[[167,-1],[[7,[21,166]]],[[22,[21]]]],[150,[[7,[[10,[21]],166]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[150,[[7,[2,166]]]],[-1,[],[]],[[],18],[[],18],[[],18],[[],18],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[167,54],[150,54],[150,[[7,[169,166]]]],[156,[[7,[169,166]]]],[150,[[7,[2,166]]]],[150,[[7,[2,166]]]],[21,167],[[21,21],167],[[167,-1],21,[[22,[21]]]],[[167,-1],[[7,[170,166]]],[[22,[21]]]],[[167,-1],[[7,[2,166]]],[[22,[21]]]],[150,[[7,[2,166]]]],[150,[[7,[2,166]]]],[150,[[7,[2,166]]]],[[150,8],[[7,[170,166]]]],[[150,171],[[7,[2,166]]]],[[150,60],[[7,[2,166]]]],[166,[[45,[44]]]],[[156,8],[[7,[21,166]]]],[156,[[7,[21,166]]]],[156,[[7,[172,166]]]],[156,[[7,[21,166]]]],[-1,21,[]],[167,[[45,[21]]]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[8,129],0,[8,8],[[-1,-2],2,[],[]],0,0,0,0,0,[[],[[10,[173]]]],[[],8],[18,-1,[]],[18,-1,[]],[-1,[[7,[8]]],77],0,[18,2],[[8,-1,174],[[59,[2]]],[[26,[25]]]],[[8,27],28],[-1,-1,[]],0,[[],18],0,0,[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,[[8,[45,[4]]],2],0,[[8,-1],[[59,[175]]],[[26,[25]]]],[-1,[[59,[8]]],[[26,[25]],176]],[-1,[[59,[[10,[177]]]]],[[26,[25]]]],[[8,-1],7,81],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,47,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[178,178],[[-1,-2],2,[],[]],[[],178],[18,-1,[]],[18,-1,[]],[-1,[[7,[178]]],77],[18,2],0,[[178,27],28],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[178,-1],7,81],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[179,180],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[179,179],[[-1,-2],2,[],[]],0,0,[[],179],[[],17],[18,-1,[]],[18,-1,[]],[-1,[[7,[179]]],77],[18,2],[[179,27],28],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[[179,-1],7,81],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,47,[]],[-1,-2,[],[]],0,0,0,0,[[181,182],181],[[181,18,50],181],[[181,60],181],[-1,-2,[],[]],[-1,-2,[],[]],[181,8],[[181,18],181],0,[[181,[10,[183]]],181],0,0,[[],181],[18,-1,[]],[18,-1,[]],[18,2],[[181,[10,[177]],174],181],[[181,184],2],[-1,-1,[]],[[181,185],181],0,[[],18],[[181,186],181],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[181,17],181],[[181,21],181],[[181,[45,[21]]],181],[[181,54],181],[[181,60],181],[[181,18],181],[[181,[10,[187]]],2],[[181,41],181],[[181,188],181],[[181,17],181],[[181,21],181],[[181,[45,[21]]],181],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[181,181],[[181,21],181],[[181,189],181],[[181,102],181],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[190,-1],[[7,[191,192]]],[[26,[25]]]],[[],190],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[[192,27],28],[[192,27],28],[-1,-1,[]],[31,192],[-1,-1,[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,[192,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[186,186],[11,11],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],186],[[],11],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[186]]],77],[-1,[[7,[11]]],77],[18,2],[18,2],[18,2],[[11,11],54],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[186,27],28],[[11,27],28],[[11,27],28],[[193,27],28],[[193,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[50,[[7,[-1]]],[]],[50,[[7,[11]]]],[50,[[7,[-1]]],[]],[[-1,-2],102,[103,104],105],[[11,-1],2,106],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[186,-1],7,81],[[11,-1],7,81],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[182,54],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[182,182],[194,194],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[10,[195]]],[[10,[194]]]],[182,18],[[],182],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[182]]],77],[-1,[[7,[194]]],77],[18,2],[18,2],[[182,182],2],[[182,[10,[177]],174],2],[[182,-1],[[10,[23]]],196],[[182,27],28],[[194,27],28],[-1,-1,[]],[-1,-1,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[18,50],182],[[[10,[177]],174],182],[102,194],[[182,194],2],[[182,-1],7,81],[[194,-1],7,81],[[182,102,174,-1],[[24,[23,21]]],196],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[182,18],[182,[[45,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[197,-1],[[7,[64,198]]],[[26,[25]]]],[[],197],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],0,[18,2],[18,2],[[198,27],28],[[198,27],28],[-1,-1,[]],[-1,-1,[]],[31,198],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[198,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[199,199],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[[199,199],54],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[199,27],28],[[199,27],28],[-1,-1,[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[],18],[-1,-2,[],[]],[199,200],[-1,[[40,[-2]]],[],[]],[50,[[7,[199,201]]]],[-1,-2,[],[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[202,202],[[-1,-2],2,[],[]],[[],202],[18,-1,[]],[18,-1,[]],[-1,[[7,[202]]],77],[18,2],[[202,27],28],[-1,-1,[]],0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[202,-1],7,81],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],0,[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[203,203],[[-1,-2],2,[],[]],0,0,[[],203],[18,-1,[]],[18,-1,[]],[-1,[[7,[203]]],77],[18,2],[[203,27],28],[-1,-1,[]],0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,[[203,-1],7,81],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[204,204],[205,205],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],204],[[],205],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[204]]],77],[-1,[[7,[205]]],77],[18,2],[18,2],0,[[204,27],28],[[205,27],28],[-1,-1,[]],[-1,-1,[]],0,[[],18],[[],18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,0,0,0,0,[[204,-1],7,81],[[205,-1],7,81],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[206,206],[[-1,-2],2,[],[]],[[],[[10,[21]]]],[[],[[10,[21]]]],[[],21],[[],21],[18,-1,[]],[18,-1,[]],[-1,[[7,[206]]],77],[18,2],[[206,27],28],[185,206],[-1,-1,[]],0,0,0,0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[[206,-1],7,81],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,207],[208,208],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],207],[[],208],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[207]]],77],[-1,[[7,[208]]],77],[18,2],[18,2],0,[[207,27],28],[[208,27],28],[-1,-1,[]],[-1,-1,[]],0,[[],18],[[],18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,0,[[207,-1],7,81],[[208,-1],7,81],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[209,209],[[-1,-2],2,[],[]],[[],209],[18,-1,[]],[18,-1,[]],[-1,[[7,[209]]],77],[18,2],[[209,27],28],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[[209,-1],7,81],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],0,[-1,-2,[],[]],0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[60,60,60,60],189],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[189,189],[16,16],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],189],[[],16],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[189]]],77],[-1,[[7,[16]]],77],[18,2],[18,2],[[189,27],28],[[16,27],28],[16,189],[-1,-1,[]],[-1,-1,[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[17,17,17],189],[[-1,-1,-1],[[59,[189]]],[[22,[21]]]],[[189,-1],7,81],[[16,-1],7,81],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[16,210],2],[[16,210],2],[[16,210],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[[211,27],28],[[211,27],28],[130,211],[6,211],[212,211],[213,211],[214,211],[215,211],[112,211],[216,211],[217,211],[29,211],[62,211],[-1,-1,[]],[218,211],[91,211],[219,211],[220,211],[31,211],[146,211],[166,211],[221,211],[49,211],[222,211],[109,211],[223,211],[224,211],[225,211],[226,211],[227,211],[228,211],[120,211],[32,211],[229,211],[192,211],[230,211],[145,211],[231,211],[232,211],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[211,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],0,0,[233,234],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],0,[18,2],[18,2],0,[[235,27],28],[-1,-1,[]],[-1,-1,[]],[70,[[7,[235,71]]]],[70,[[7,[235,71]]]],[50,54],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[233,[10,[21]],236],[[7,[2,225]]]],0,0,[233,2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[235,70],[[7,[2,71]]]],[[235,70],[[7,[2,71]]]],0,[233,237],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[18,2],[[238,233],[[59,[2]]]],[[239,237],2],[[240,233],[[59,[2]]]],[[241,237],2],[[238,27],28],[[239,27],28],[[240,27],28],[[241,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[70,[[7,[238,71]]]],[70,[[7,[239,71]]]],[70,[[7,[240,71]]]],[70,[[7,[241,71]]]],[70,[[7,[238,71]]]],[70,[[7,[239,71]]]],[70,[[7,[240,71]]]],[70,[[7,[241,71]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[50,54],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[238,70],[[7,[2,71]]]],[[239,70],[[7,[2,71]]]],[[240,70],[[7,[2,71]]]],[[241,70],[[7,[2,71]]]],[[238,70],[[7,[2,71]]]],[[239,70],[[7,[2,71]]]],[[240,70],[[7,[2,71]]]],[[241,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[66,66],[66,66],[66,66],[66,66],[66,66],[66,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[242,243,244],17],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[[245,233],2],[[246,233],2],[[242,233],2],[[245,27],28],[[246,27],28],[[242,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[70,[[7,[245,71]]]],[70,[[7,[246,71]]]],[70,[[7,[242,71]]]],[70,[[7,[245,71]]]],[70,[[7,[246,71]]]],[70,[[7,[242,71]]]],[[],[[45,[74]]]],[[],[[45,[74]]]],[50,54],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[245,70],[[7,[2,71]]]],[[246,70],[[7,[2,71]]]],[[242,70],[[7,[2,71]]]],[[245,70],[[7,[2,71]]]],[[246,70],[[7,[2,71]]]],[[242,70],[[7,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],237],[18,-1,[]],[18,-1,[]],[18,2],[237,[[42,[247]]]],0,[237,2],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[],237],[237,[[42,[248]]]],0,[237,[[10,[248]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[237,[[42,[249]]]],0,[237,[[10,[249]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[7,[250,115]]],[[26,[25]]]],0,0,0,0,0,[251,[[7,[2,113]]]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[250,250],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[250]]],77],[18,2],[18,2],[[250,27],28],[[115,27],28],[[115,27],28],[-1,-1,[]],[31,115],[-1,-1,[]],[29,115],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,[-1,[[7,[250,115]]],[[26,[25]]]],[[250,-1],7,81],[115,[[45,[44]]]],[-1,-2,[],[]],[-1,21,[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[250,-1],[[7,[2,115]]],[[26,[25]]]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[252,253],254],[252,252],[255,255],[254,254],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[[252,27],28],[[255,27],28],[[254,27],28],[[252,18],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,[[252,256,253],254],0,0,0,[257,252],0,0,[[252,255],2],[[258,60],258],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[259,260],0,0,[259,[[45,[21]]]],[259,54],[259,[[10,[41]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[259,[[45,[261]]]],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[[116,27],28],[[116,27],28],[-1,-1,[]],[-1,-1,[]],[31,116],[262,116],[263,116],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[250,[45,[8]]],[[7,[259,116]]]],0,[259,175],0,[[259,8],[[7,[2,116]]]],[[259,21],2],[116,[[45,[44]]]],[259,253],0,[259,253],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[259,264],[-1,-2,[],[]],[-1,-2,[],[]],[259,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[59,[265]]],[[26,[25]]]],0,[266,[[7,[2,267]]]],0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[265,265],[[-1,-2],2,[],[]],[[],265],[18,-1,[]],[18,-1,[]],[-1,[[7,[265]]],77],[18,2],[[265,27],28],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,[-1,[[59,[265]]],[[26,[25]]]],[[265,-1],7,81],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[268,260],0,0,[268,[[45,[21]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[[111,27],28],[[111,27],28],[-1,-1,[]],[269,111],[-1,-1,[]],[31,111],[268,[[24,[21,171]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[265,268],0,[268,175],0,[[268,21],2],[[268,21],[[7,[171,111]]]],[111,[[45,[44]]]],[[268,21,171],[[7,[171,111]]]],[[268,21],[[7,[171,111]]]],0,[268,[[24,[21,270]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[268,64],0,0,0,0,0,0,0,0,0,0,[270,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[18,-1,[]],[271,272],[18,-1,[]],[18,-1,[]],[273,[[274,[171]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[18,2],[270,2],[18,2],[[270,27],28],[[269,27],28],[[269,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[192,269],[115,269],[31,269],[-1,-1,[]],[[],171],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[275,275],0,[-1,[],[]],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[270,54],0,0,[21,275],[[275,171],275],[270,171],0,[[270,-1],7,81],[270,2],[269,[[45,[44]]]],[275,[[7,[270,269]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[275,-1],275,[[26,[25]]]],0,0,0,0,0,0,0,0,0,0,[[21,[277,[[276,[268]]]]],[[7,[2,278]]]],[-1,-2,[],[]],[-1,-2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[[267,27],28],[[267,27],28],[279,267],[280,267],[-1,-1,[]],[113,267],[281,267],[282,267],[31,267],[266,[[7,[[0,[283]],278]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[21,266],[[7,[[0,[283]],278]]]],[267,[[45,[44]]]],[[21,266],[[7,[[0,[283]],278]]]],[266,[[7,[2,267]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[284,60],[284,285],[284,[[10,[286]]]],[[284,[10,[287]],54],288],0,[284,289],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[290,290],[[-1,-2],2,[],[]],[284,291],[284,258],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[284,292],[284,184],[[290,27],28],[[290,27],28],[[262,27],28],[[262,27],28],[284,[[10,[293]]]],0,0,[-1,-1,[]],[-1,-1,[]],[232,262],[-1,-1,[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[287,54],[[[294,[-1]]],54,[]],0,[[284,287],295],[296,[[7,[284,262]]]],[[258,293,290],2],[284,[[10,[287]]]],0,[[284,293,290,[7,[297,232]]],2],[[284,290],2],[[284,21,290],[[7,[2,262]]]],[[284,290],[[45,[298]]]],[284,299],[262,[[45,[44]]]],[[284,[10,[295]]],[[24,[21,300]]]],[-1,-2,[],[]],[-1,21,[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[253,[[10,[41]]]],0,[253,60],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[253,2],[253,[[10,[[2,[33,301]]]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],0,[[263,27],28],[[263,27],28],[-1,-1,[]],[-1,-1,[]],[262,263],[302,263],[31,263],[6,263],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[253,284],[253,284],0,0,[[8,250],[[7,[253,263]]]],[253,303],[253,2],[[253,60],2],[[253,255],2],[[253,185],2],[[253,21],2],[263,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[253,304],2],[253,264],0,[253,257],[253,257],0,[253,305],0,[253,305],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[18,-1,[]],[18,-1,[]],[18,2],[[113,27],28],[[113,27],28],[282,113],[279,113],[31,113],[281,113],[-1,-1,[]],[280,113],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[],[[7,[[0,[283]],278]]]],[-1,[],[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,0,0,[113,[[45,[44]]]],0,[251,[[7,[2,113]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],0,[-1,-2,[],[]],[251,[[0,[306,307]]]],[251,[[0,[306,307]]]],[[304,251],[[7,[[0,[283]],278]]]],0,0,0,[[21,251],[[7,[2,278]]]],[251,[[7,[[0,[283]],278]]]],[[54,251],[[7,[[0,[283]],278]]]],[[60,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[188,[[7,[[0,[283]],278]]]],[[171,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[185,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[251,8],[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[[304,251],[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[21,284,290],[[7,[[0,[283]],278]]]],[[251,[308,[2]]],[[0,[306,307]]]],[[],309],[[],310],0,0,[311,[[7,[[10,[295]],113]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[21,251],[[7,[[0,[283]],278]]]],[18,-1,[]],[18,-1,[]],[-1,[[7,[311]]],77],[18,2],[[311,27],28],0,[-1,-1,[]],[[21,251],[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[[312,21,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[311,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[],18],[-1,-2,[],[]],[21,[[7,[313,278]]]],[-1,[[40,[-2]]],[],[]],[50,[[7,[313,278]]]],[[314,251],[[7,[[0,[283]],278]]]],[[315,251],[[7,[[0,[283]],278]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,[[],316],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[[261,27],28],[[317,27],28],[[316,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],316],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[185,316],[278,[[7,[[0,[283]],278]]]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[318]],[42,[319]]],[[7,[[10,[318]],278]]]],[[[10,[320]],[42,[319]]],[[7,[[10,[320]],278]]]],[[[10,[-1]],[45,[102]],[45,[102]]],[[10,[-1]]],[]],[[50,171],278],[[],278],[[321,251],[[7,[[0,[283]],278]]]],[[322,251],[[7,[[0,[283]],278]]]],[[321,251],[[7,[323,278]]]],[[[10,[318]],[45,[324]]],[[10,[318]]]],[[[10,[320]],[45,[324]]],[[10,[320]]]],[25,[[7,[[10,[325]],113]]]],[25,[[7,[326,113]]]],[251,[[7,[[0,[283]],278]]]],[[21,251],[[7,[[0,[283]],278]]]],[[185,251],[[7,[[0,[283]],278]]]],[[185,-1,251],[[7,[[0,[283]],278]]],[[22,[21]],176]],[251,[[7,[[0,[283]],278]]]],[[21,21,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[185,251],[[7,[[0,[283]],278]]]],[[185,251],[[7,[[0,[283]],278]]]],[[327,251],[[7,[[0,[283]],278]]]],[[185,251],[[7,[[0,[283]],278]]]],[251,[[7,[[0,[283]],278]]]],[[21,21,251],[[7,[[0,[283]],278]]]],0,0,[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[305,50,50],[[10,[328]]]],[[305,50,50,50],[[10,[328]]]],[[],305],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[[],329],[[305,27],28],[[330,27],28],[-1,-1,[]],[-1,-1,[]],[[[45,[188]]],[[7,[305,302]]]],[[],18],[[],18],[[305,[10,[328]]],2],[[305,[10,[331]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[305,21,329],2],[[305,-1],[[45,[329]]],[[22,[21]]]],0,[305,[[10,[21]]]],[[305,50,50],329],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,[[305,50,50],[[10,[331]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[332,333],[-1,-2,[],[]],[-1,-2,[],[]],0,[18,-1,[]],[18,-1,[]],[18,2],[332,2],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[332,54],[[247,334],332],[332,334],0,[332,2],[332,2],[332,2],[332,2],[332,[[59,[335]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[336,50,21],334],[18,-1,[]],[18,-1,[]],[18,2],[336,2],[-1,-1,[]],0,[[],18],0,[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[336,2],[[4,337],336],[336,[[59,[332]]]],[[336,338],[[59,[339]]]],[[336,5,340,21],[[59,[341]]]],[[336,21],[[59,[341]]]],[[336,50],[[59,[342]]]],[[336,343],[[59,[342]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[341,333],[-1,-2,[],[]],[-1,-2,[],[]],0,[18,-1,[]],[18,-1,[]],[18,2],[341,2],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[341,54],[[249,334],341],[341,334],0,[341,2],[341,2],[341,2],[341,344],[341,2],[341,[[59,[335]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[342,333],[-1,-2,[],[]],[-1,-2,[],[]],[342,128],0,[18,-1,[]],[18,-1,[]],[18,2],[342,2],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[342,54],[[248,334],342],[342,334],0,[342,2],[342,2],[342,2],[342,2],[342,[[59,[335]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,0,0,[345,[[42,[41]]]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[[10,[346,347]]]]],[]],[-1,[[7,[[10,[348,347]]]]],[]],[345,345],[[-1,-2],2,[],[]],0,0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[-1,-2,[],[[350,[349]]]],[-1,-2,[],[[350,[349]]]],[[345,345],54],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],0,[[345,27],[[7,[2,80]]]],[[351,27],[[7,[2,80]]]],[[351,27],[[7,[2,80]]]],[-1,-1,[]],[[[42,[41]]],345],[-1,-1,[]],[352,351],[-1,-1,[]],[21,[[7,[345,351]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[351,[[354,[353]]]],[[355,345],54],[21,[[7,[355,351]]]],[[[10,[41,347]]],345],0,0,0,0,0,0,0,0,0,[351,[[45,[44]]]],[356,2],0,[-1,-2,[],[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-2],[[7,[2]]],[],357],[[-1,-2],[[7,[2]]],[],358],0,0,0,0,0,0,0,[[-1,1],2,[]],[359,260],0,0,[359,[[45,[21]]]],0,[[359,21],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[359,2],[172,172],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[172]]],77],[18,2],[18,2],[[172,172],54],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[-1,-2],54,[],[]],[[172,27],28],[[172,27],28],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[-1,8,[45,[21]]],359,[[26,[25]]]],0,0,[359,54],[359,54],[[172,-1],7,81],[359,[[45,[360]]]],0,[[359,8],2],[[359,360],2],[359,8],0,[359,8],0,0,[359,2],[359,172],0,[359,172],[359,2],[-1,-2,[],[]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[359,64],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[7,[169]]],77],[18,2],[18,2],[-1,[[7,[169,361]]],[[26,[25]]]],[[361,27],28],[[361,27],28],[-1,-1,[]],[-1,-1,[]],[362,361],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[363,54],[-1,169,[[26,[25]]]],[[169,-1],2,[[22,[21]]]],[[169,-1],2,[[22,[21]]]],[[169,-1],2,[[26,[25]]]],[[169,-1],2,[[22,[21]]]],[[169,-1],2,[[22,[21]]]],[[169,-1],2,[[22,[21]]]],0,[[169,-1],7,81],[361,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[21,[277,[[276,[359]]]]],[[7,[2,278]]]],[-1,-2,[],[]],[-1,-2,[],[]],[360,360],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[356,[[7,[[0,[283]],278]]]],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[278,[[7,[[0,[283]],201]]]],[356,[[7,[[0,[283]],278]]]],[[356,8],[[7,[[0,[283]],278]]]],[356,2],[356,[[7,[[0,[283]],278]]]],[360,2],[356,[[7,[[0,[283]],278]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[364,2],0,[18,-1,[]],[18,-1,[]],[18,2],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[356,364],[364,54],[364,54],0,[364,8],[364,2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[365,365],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],0,[[365,27],28],[-1,-1,[]],[[],18],0,[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[365,50],338],0,[[21,175,43,[45,[21]],21,-1],365,[[26,[25]]]],[365,[[10,[338]]]],[[365,50],338],0,[365,343],0,[365,43],0,[[199,365,340,8],[[59,[2]]]],0,[-1,-2,[],[]],[365,[[45,[21]]]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[365,21],0,[-1,-2,[],[]],0,[[365,8,340],[[59,[2]]]],[[],366],[[365,8,340],[[59,[2]]]],[[356,365,340],[[59,[2]]]],[[365,8,340],[[59,[2]]]],[[365,8,340],[[59,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[18,-1,[]],[18,-1,[]],[18,2],0,0,[-1,-1,[]],[13,5],[[5,367],[[7,[21,145]]]],[5,[[7,[21,145]]]],0,0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[-1,141,[]],[-1,147,[]],0,[-1,57,[]],[-1,58,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],0,0,0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,141,[]],[-1,147,[]],0,[-1,57,[]],[-1,58,[]],0,0,0,[247,21],[247,50],0,[-1,-2,[],[]],[-1,-2,[],[]],[247,368],[18,-1,[]],[18,-1,[]],[18,2],0,[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[333,369],247],[247,[[45,[370]]]],[247,335],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[371,19],371],0,[4,64],[[371,372],371],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[371,43],[[7,[4,32]]]],[4,4],[[-1,-2],2,[],[]],[[371,373],371],0,[4,[[10,[34]]]],0,[[],371],[4,[[10,[[2,[333,374]]]]]],[[4,50],[[59,[9]]]],[4,[[10,[9]]]],[4,[[10,[[2,[33,301]]]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[[371,375],371],[[32,27],28],[[32,27],28],[-1,-1,[]],[222,32],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[4,376],0,[-1,[],[]],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[],371],[[377,376],4],[4,14],[32,[[45,[44]]]],[4,[[59,[247]]]],[[4,338],[[59,[378]]]],[[4,5,340,21],[[59,[249]]]],[[4,21],[[59,[249]]]],[[4,50],[[59,[248]]]],[[4,343],[[59,[248]]]],[-1,-2,[],[]],[-1,21,[]],[[371,15],371],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[4,377],0,[[371,[10,[53]]],371],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[249,[[7,[2,32]]]],[[371,23],371],[[4,50],[[59,[34]]]],[[371,[10,[23]]],371],[4,379],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[380,-1],380,[[22,[21]]]],0,[[344,50],[[7,[[24,[21,[10,[381,347]],382]],224]]]],0,[[380,-1],380,[[22,[21]]]],0,[[380,[45,[21]]],380],0,[[380,[45,[21]]],380],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[383,340],257],[384,[[7,[21,385]]]],[380,386],[384,[[7,[21,385]]]],[[380,25],380],0,[387,388],[344,[[7,[[10,[318,347]],224]]]],0,0,0,[367,18],[344,344],[387,387],[367,367],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[380,-1],380,[[22,[21]]]],0,[[],384],[[],380],[[],387],[[344,50,50],[[7,[389,224]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[344,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[[50,390],[[7,[2,[0,[44]]]]]],[[380,54],380],0,[344,2],0,[[344,27],[[7,[2,80]]]],[[227,27],28],[[227,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[390,344],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[31,227],[168,227],[224,227],[[344,50],[[7,[304,224]]]],[344,[[7,[304,224]]]],0,0,0,[387,21],[387,[[45,[391]]]],[387,21],0,0,0,[344,[[7,[[10,[41,347]],224]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[344,[[7,[2,224]]]],[387,329],[-1,[],[]],[[380,25],380],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[344,392],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[380,25],380],0,[[380,50],380],0,[[380,60],380],0,[5,383],[[],384],[64,380],[393,344],[[],387],[[64,64,64,64],[[7,[367,146]]]],[-1,141,[]],[387,141],[367,141],[387,185],0,[-1,147,[]],[387,147],[367,147],0,[-1,57,[]],[387,57],[367,57],[387,185],0,[-1,58,[]],[387,58],[367,58],[387,185],0,[[380,25],380],0,0,[344,394],[[380,25],380],0,[[344,50,50],[[7,[320,224]]]],[[387,141,329],57],[387,395],[387,329],[[344,50],[[7,[[10,[320,347]],224]]]],0,0,0,[[344,[42,[396]]],[[7,[[10,[320,347]],224]]]],[[387,388],397],[367,18],[387,398],[[344,399],[[7,[2,224]]]],[[344,400],[[7,[2,224]]]],0,0,0,[[344,321],[[7,[323,224]]]],[[344,321],[[7,[329,224]]]],[[380,-1],380,[[22,[21]]]],[344,[[7,[264,224]]]],0,[[344,21],2],[[344,-1],2,[[22,[21]]]],[[344,129],2],[344,[[7,[[10,[21,347]],224]]]],[227,[[45,[44]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[344,50,50],[[7,[401,224]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[384,[10,[381,347]]],384],[[384,[10,[318,347]]],384],[[384,[10,[304,347]]],384],[[384,[10,[320,347]]],384],[[384,257],384],[[384,402],384],[[384,[10,[402,347]]],384],0,0,0,0,0,0,0,0,0,0,[249,260],0,[249,333],0,[249,403],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[249,[[7,[[10,[318]],227]]]],[249,54],0,0,[[249,50,50],[[7,[389,227]]]],[18,-1,[]],[18,-1,[]],[18,2],[249,2],0,[-1,-1,[]],0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,0,0,[[249,50],[[7,[[10,[320]],227]]]],[[249,399],[[7,[2,227]]]],0,0,0,[249,2],[249,[[7,[[10,[21]],227]]]],[249,335],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[[249,50,50],[[7,[401,227]]]],[-1,-2,[],[]],[249,[[7,[335,227]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[404,340],[[7,[21,145]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[[145,27],28],[[145,27],28],[-1,-1,[]],[385,145],[31,145],[-1,-1,[]],[198,145],[[5,367],[[7,[21,145]]]],[5,[[7,[21,145]]]],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[5,404],0,[145,[[45,[44]]]],[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[18,-1,[]],[18,-1,[]],[18,2],[[216,27],28],[[216,27],28],[405,216],[406,216],[-1,-1,[]],[407,216],[168,216],[31,216],[212,216],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[216,[[45,[44]]]],0,[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[248,21],[248,333],0,[248,403],[248,[[10,[41]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[248,54],[248,128],0,[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[248,2],[18,2],[[212,27],28],[[212,27],28],[-1,-1,[]],[-1,-1,[]],[130,212],[[-1,-2],[[36,[-2,-3]]],[],[37,38,39],[]],[-1,[],[]],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[333,408,[277,[[276,[335]]]],409],[[7,[248,212]]]],0,[248,408],0,[248,2],[212,[[45,[44]]]],[248,335],0,[-1,21,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[408,21],0,[408,260],[408,[[45,[260]]]],[408,260],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[408,408],[[-1,-2],2,[],[]],0,0,[18,-1,[]],[18,-1,[]],[18,2],0,[[408,27],28],[-1,-1,[]],0,[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],0,[408,21],0,0,[[43,[24,[333,390]]],408],0,0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],[408,21],0,[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,343,[[22,[21]]]],[[343,408],2],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],0,[-1,-2,[],[]],[[343,-1],343,[[22,[21]]]],[[343,175],343],[[343,264],343],0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[377,377],[[-1,-2],2,[],[]],[18,-1,[]],[18,-1,[]],[18,2],[[377,27],28],[-1,-1,[]],[[],18],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[[43,[45,[19]]],377],[43,-1,[]],[[43,[24,[333,410]]],-1,[]],[[15,179,43],-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,47,[]],0,[-1,-2,[],[]],0,[[4,5,365,340],[[59,[[2,[[10,[378]],249,248]]]]]],[[8,64],[[59,[[2,[4,5,365]]]]]],[[54,18,64],[[59,[[2,[4,5,365]]]]]]],"c":[],"p":[[3,"Private",5811],[15,"tuple"],[3,"VitBackendSettingsBuilder",10],[3,"VitController",5127],[3,"ValidVotePlanParameters",4935],[4,"Error",10],[4,"Result",5812],[3,"Config",2311],[3,"VotePlanDef",5813],[3,"Vec",5814],[4,"Role",2580],[3,"TokenIdentifier",5815],[3,"CurrentFund",5816],[3,"Settings",5817],[3,"Topology",5818],[3,"VoteBlockchainTime",3054],[3,"OffsetDateTime",5819],[15,"usize"],[3,"ArchiveConfiguration",132],[4,"Error",132],[3,"String",5820],[8,"Into",5821],[4,"WalletTemplate",5822],[3,"HashMap",5823],[3,"Path",5824],[8,"AsRef",5821],[3,"Formatter",5825],[6,"Result",5825],[3,"Error",5826],[4,"Error",208],[3,"Error",5827],[4,"Error",5127],[6,"WalletAlias",5828],[4,"Wallet",5828],[4,"DiscoverArchiveByFileError",132],[3,"IndentedSection",5829],[8,"Display",5825],[8,"Send",5830],[8,"Sync",5830],[3,"Request",5831],[15,"u8"],[15,"slice"],[3,"SessionSettings",5832],[8,"Error",5833],[4,"Option",5834],[3,"Span",5835],[3,"TypeId",5836],[4,"ParseError",5837],[4,"ImageError",5838],[15,"str"],[3,"FundInfo",5839],[3,"VitVotePlanDefBuilder",242],[3,"VotePlanTemplate",5840],[15,"bool"],[3,"TokenIdentifier",5841],[3,"ReviewGenerator",280],[3,"ProposalTemplate",5842],[3,"ReviewTemplate",5842],[6,"Result",0],[15,"u32"],[4,"Level",5843],[3,"SetGlobalDefaultError",5844],[3,"DeploymentTree",314],[3,"PathBuf",5824],[3,"TempDir",5845],[3,"Command",5846],[4,"VitCliCommand",338],[4,"StartCommand",338],[4,"GenerateCommand",338],[3,"ArgMatches",5847],[6,"Error",5848],[3,"DiffCommand",434],[3,"PatchFormatter",5849],[3,"Id",5850],[3,"CommitteeIdCommandArgs",504],[4,"Initial",532],[8,"Deserializer",5851],[4,"DataCommandArgs",532],[4,"RandomDataCommandArgs",532],[3,"Error",5825],[8,"Serializer",5852],[3,"ExternalDataCommandArgs",622],[3,"PerfDataCommandArgs",656],[3,"AllRandomDataCommandArgs",699],[3,"RandomReviewsDataCommandArgs",728],[3,"RandomScoresDataCommandArgs",756],[3,"QrCommandArgs",785],[3,"Snapshot",815],[3,"SnapshotCommandArgs",815],[4,"ImportCommand",863],[4,"Error",901],[4,"Format",901],[4,"Ordering",5853],[3,"InputScores",901],[4,"ImportFromIdeascaleFormatCommand",901],[3,"ImportProposals",901],[3,"ImportChallenges",901],[3,"ImportScores",901],[3,"ImportReviews",901],[3,"Error",5854],[3,"ParseFloatError",5855],[15,"u64"],[8,"Hash",5856],[8,"Sized",5830],[8,"BuildHasher",5856],[8,"Hasher",5856],[3,"AdvancedStartCommandArgs",1181],[3,"MockStartCommandArgs",1220],[4,"Error",1220],[3,"MockFarmCommand",1220],[4,"Error",3873],[3,"Error",5857],[4,"Error",4242],[3,"JoinError",5858],[4,"Error",3618],[4,"Error",3747],[3,"QuickStartCommandArgs",1311],[3,"TimeCommand",1367],[4,"ValidateCommand",1393],[4,"Error",1393],[4,"Error",1457],[4,"CheckError",1503],[4,"Error",1618],[3,"ConfigValidateCommand",1457],[4,"Check",1503],[3,"CheckIter",1503],[3,"DeploymentValidateCommand",1503],[3,"ValgrindClient",5859],[3,"Duration",5860],[4,"Error",5859],[3,"IterBridge",5861],[3,"ProgressBar",5862],[3,"ProgressBarIter",5863],[3,"Utf8CharSplitter",5864],[3,"Utf16CharSplitter",5865],[3,"Utf16CharMerger",5866],[3,"Utf8CharMerger",5866],[3,"IdeascaleValidateCommand",1618],[4,"Value",5867],[4,"ProposalError",1618],[3,"ChallengeTemplate",5842],[3,"LinkedList",5868],[4,"ReviewError",1618],[4,"ChallengeError",1618],[4,"Error",5541],[4,"TemplateLoad",5869],[3,"FundTemplate",5842],[3,"VitupClientCommand",1777],[4,"DisruptionCommand",1777],[3,"VitupDisruptionRestClient",2210],[4,"LogsCommand",1777],[4,"FilesCommand",1777],[4,"ControlCommand",1777],[4,"FragmentsCommand",1777],[4,"MockCommand",1777],[3,"VitupAdminRestClient",2210],[4,"MockStartCommand",1777],[3,"MockStartCustomCommand",1777],[4,"MockFilesCommand",1777],[4,"UtilsCommand",1777],[4,"PersistentLogCommand",1777],[3,"CountPersistentLogCommand",1777],[4,"Command",1777],[3,"SetFundIdCommand",1777],[3,"SetErrorCodeCommand",1777],[4,"Error",2210],[3,"VitupRest",2210],[3,"Error",5870],[3,"FolderDump",4784],[3,"Response",5871],[15,"u16"],[4,"State",4708],[4,"BorrowedFormatItem",5872],[4,"Discrimination",5873],[4,"Protocol",5874],[8,"Debug",5825],[3,"VoterHIR",5875],[3,"AdditionalServices",2433],[3,"Blockchain",2457],[3,"SecondsSinceUnixEpoch",5876],[3,"ConfigBuilder",2488],[3,"Initials",2666],[3,"ConsensusLeaderId",5877],[3,"LinearFee",5878],[15,"i32"],[3,"Initials",2580],[3,"CommitteeIdDef",5879],[3,"Initials",5880],[4,"VoteTime",3054],[3,"CertificatesBuilder",2536],[3,"Certs",5874],[4,"Error",2536],[4,"Error",2580],[4,"Initial",2666],[3,"InitialUTxO",5881],[8,"Fn",5882],[3,"MigrationFilesBuilder",2749],[4,"Error",2749],[4,"Mode",2794],[4,"SessionMode",5832],[4,"Infallible",5821],[3,"Service",2827],[3,"StaticData",2851],[3,"CurrentFund",2880],[3,"CurrentFundDates",2880],[3,"FundInfo",2940],[3,"NextFund",2972],[3,"NextFundDates",2972],[3,"VotePlan",3030],[3,"JormungandrRest",5883],[4,"Error",3116],[4,"Error",5660],[4,"Block0Error",5884],[4,"Block0Error",5885],[4,"FragmentSenderError",5886],[4,"Error",5586],[3,"GlobError",5887],[4,"FragmentVerifierError",5888],[4,"Parse",5889],[4,"Block0ConfigurationError",5890],[4,"Error",5891],[4,"Error",5892],[4,"WalletError",5828],[4,"Error",5893],[4,"InteractiveCommandError",5894],[4,"Error",5895],[4,"Error",5220],[4,"ConsumptionBenchmarkError",5896],[4,"Error",5897],[4,"ServerBootstrapperError",5898],[4,"Error",5873],[4,"Error",5884],[3,"VitInteractiveCommandExec",3234],[3,"UserInteractionController",5899],[4,"VitInteractiveCommand",3234],[3,"ConsoleWriter",5894],[3,"VitUserInteractionController",3489],[4,"Describe",3293],[3,"DescribeVitStations",3293],[3,"DescribeAll",3293],[3,"DescribeWalletProxies",3293],[3,"VoteTimeStatus",3403],[3,"BlockchainConfiguration",5900],[3,"BlockDate",5901],[4,"Show",3403],[3,"ShowStatus",3403],[3,"ExplorerController",5105],[3,"WalletProxyController",5660],[3,"VitStationController",5494],[3,"Configuration",3618],[6,"ContextLock",3747],[3,"NetworkCongestion",3671],[3,"MockState",4171],[3,"NetworkCongestionData",3671],[4,"NetworkCongestionMode",3671],[15,"f64"],[3,"Snapshot",5902],[3,"BlockDate",5903],[3,"Context",3747],[4,"SocketAddr",5904],[3,"ForcedErrorCode",4353],[4,"Error",4080],[4,"Error",4171],[3,"ServiceVersion",5905],[3,"Config",3845],[6,"ContextLock",3873],[4,"Error",4041],[3,"Context",3873],[4,"Error",3935],[3,"MockController",3935],[3,"NEXT_AVAILABLE_PORT_NUMBER",3935],[3,"AtomicU16",5906],[3,"OCCUPIED_PORTS",3935],[3,"HashSet",5907],[3,"MockBootstrap",3935],[3,"Mutex",5908],[3,"Arc",5909],[3,"Rejection",5910],[3,"Error",5911],[4,"Error",5912],[4,"Error",5913],[3,"Error",5914],[8,"Reply",5915],[3,"LedgerState",4080],[6,"Ledger",5916],[3,"VotePlanStatus",5917],[4,"Fragment",5918],[3,"FragmentsProcessingSummary",5919],[3,"Hash",5920],[4,"FragmentRecieveStrategy",4080],[3,"SystemTime",5876],[4,"BlockDateGenerator",5886],[3,"FragmentLog",5921],[3,"Transaction",5922],[6,"FragmentId",5918],[3,"Block0Configuration",5890],[3,"Ledger",5884],[3,"Hash",5923],[3,"SettingsDto",5924],[4,"FragmentStatus",5921],[3,"Wallet",5925],[4,"Error",5926],[3,"NodeStatsDto",5927],[3,"Fund",5928],[3,"VoterSnapshot",4432],[8,"Filter",5929],[8,"Clone",5930],[3,"BoxedFilter",5931],[3,"Cors",5932],[3,"HeaderMap",5933],[3,"GetMessageStatusesQuery",4322],[6,"VotePlanId",5934],[3,"Identifier",5916],[3,"FragmentsBatch",5935],[3,"Bytes",5936],[3,"GeneralException",4353],[3,"InvalidBatch",4353],[3,"Challenge",5937],[4,"Constraint",5938],[3,"FullProposalInfo",5939],[3,"SearchQuery",5938],[3,"SearchCountQuery",5938],[4,"SearchResponse",5938],[4,"OrderBy",5938],[3,"Certificate",5940],[3,"PrivateKey",5940],[6,"ProposalsByVoteplanIdAndIndex",5941],[3,"Contribution",5942],[15,"i64"],[3,"ArbitraryVoterHIR",4432],[3,"Voter",5942],[3,"ExplorerMonitorController",4495],[6,"NodeAlias",5943],[3,"ProgressBarController",5891],[4,"Status",5944],[3,"MonitorController",4521],[3,"MonitorController",5945],[3,"SpawnParams",5946],[3,"Node",5891],[8,"ValidVotingTemplateGenerator",4935],[3,"VitStationMonitorController",4547],[3,"WalletProxyMonitorController",4574],[3,"WalletProxySpawnParams",5755],[3,"RestClient",5220],[3,"APIToken",4602],[3,"u5",5947],[3,"Global",5948],[3,"u5",5947],[15,"char"],[8,"FromIterator",5949],[4,"TokenError",4602],[4,"DecodeError",5950],[3,"Body",5951],[3,"Response",5952],[3,"APITokenManager",4602],[6,"ControlContextLock",4708],[8,"WriteBase32",5947],[8,"WriteBase32",5947],[3,"ControlContext",4708],[3,"ServerStopper",4842],[4,"Error",4784],[3,"Error",5953],[3,"DirEntry",5954],[3,"ManagerService",4869],[3,"NetworkSpawnParams",4891],[3,"UserInteraction",5894],[3,"ExternalValidVotingTemplateGenerator",5220],[3,"Explorer",5955],[3,"ExplorerProcess",5955],[3,"Output",5956],[3,"VitControllerBuilder",5127],[3,"BlockchainConfiguration",5957],[4,"CommitteeTemplate",5958],[3,"NodeSetting",5959],[3,"ExplorerTemplate",5832],[3,"Controller",5960],[3,"VitSettings",5778],[3,"JormungandrProcess",5944],[4,"TestingDirectory",5961],[3,"BootstrapCommandBuilder",5220],[3,"AdvisorReview",5962],[3,"RandomState",5823],[3,"ValidVotePlanGenerator",5220],[3,"DbBuilder",5220],[4,"DbBuilderError",5963],[3,"Command",5956],[3,"ArbitraryValidVotingTemplateGenerator",5220],[4,"ChallengeType",5939],[3,"DelegatorInfo",5964],[3,"ServiceSettings",5965],[3,"ChallengeHighlights",5937],[3,"RestClient",5966],[3,"Url",5967],[3,"RestPathBuilder",5968],[3,"Category",5939],[3,"ProposalVoteplanIdAndIndexes",5941],[4,"ProposalChallengeInfo",5939],[3,"Proposer",5939],[3,"RawSnapshot",5969],[3,"Snapshot",5970],[3,"VoterInfo",5970],[3,"ApiTokenData",5971],[3,"NamedProcess",5972],[3,"DbGenerator",5541],[4,"MockClientError",5973],[3,"ScanError",5974],[4,"RestError",5883],[3,"WalletProxySettings",5713],[3,"Child",5956],[6,"VitStationSettings",5494],[8,"WalletExtension",208],[13,"CannotFindArchiveDB",204],[13,"CannotFindBlock0Folder",204],[8,"SessionSettingsExtension",312],[13,"AboveThreshold",2729],[13,"External",2729],[13,"BelowThreshold",2729],[13,"AroundLevel",2729],[13,"Wallet",2729],[13,"ZeroFunds",2729],[13,"Real",3112],[13,"ProxyNotFound",3219],[13,"NoChallengeIdAndGroupFound",3219],[13,"SyncTimeoutOccurred",3219],[13,"AssertionFailed",3219],[13,"TransactionNotInBlock",3219],[13,"NoChallengeIdFound",3219],[6,"MockState",3873],[6,"MockId",3873],[13,"CannotGetWallet",5219],[13,"NodeFailedToBootstrap",5488],[13,"NodeFailedToShutdown",5488],[13,"NodeFailedToBootstrap",5643],[13,"NodeFailedToShutdown",5643],[13,"FragmentNotInMemPoolLogs",5643],[13,"FragmentIsPendingForTooLong",5643],[13,"CannotCreateFile",5643],[13,"CannotWriteYamlFile",5643],[6,"Result",5220],[6,"Result",5586],[6,"VitStationSettings",5713],[8,"PrepareVitServerSettings",5778],[8,"PrepareWalletProxySettings",5778],[8,"PrepareSettings",5778]]},\
"voter_registration_mock":{"doc":"","t":"F","n":["main"],"q":[[0,"voter_registration_mock"],[1,"mainnet_tools::voter_registration::command"],[2,"core::result"]],"d":[""],"i":[0],"f":[[[],[[3,[1,2]]]]],"c":[],"p":[[15,"tuple"],[4,"Error",1],[4,"Result",2]]},\
"voting_tools_rs":{"doc":"Rust implementation of voting tools","t":"DNNDNNNNENNNDNNNNDENDDNNDDNNNEDDMAMAAMMMMMMAMMMAMMMMMAMMMMMMMMMMMMMFMMMMAAMMMAMFMMMMMMMMMMMMMMMMDNELLLLLLLLLLMMMMMMLFMLLLLLLLLLLLLMMMMFLLLLLLLLLLLLMSRDDDDNNRRRRCDRCDDDRCDDDDDDDDRREDDRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLAOLLLLLLLLLLLLMLLLLLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLALLLLLLLLLLLLLMMFFFLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLCCAADLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLMLLLMLMMMMMALLLLMLARRFNNNNNNDNNNNDENNNNNNLLLLLLLLLLMLLLLLLLLLLLLMMLLLMMMLLLLLLLMLLLLLLMMMMMMMMMMMMMCCCCCCCCCCCCCAFFDLLLMLLLLLLLMLLLMMMLLLLLDIKMACCADIKLLLLLMLLLLLLLADGRRRRRRGGGLLMMMLFLMLFFMMMLFMMMMFLLLFFL","n":["Args","CborDeserializationFailed","CddlParsingFailed","DbConfig","Delegated","DelegationError","Direct","DryRun","DryRunCommand","EmptyDelegations","IncorrectVotingPurpose","InvalidAddressPrefix","InvalidRegistration","MismatchedSignature","ObsoleteRegistration","RawBinCborRegistrationFailure","RawBinCborSignatureFailure","RegistrationCorruptedBin","RegistrationError","RegistrationFormat","Sig","Signature","SignatureError","SignatureFormat","SlotNo","SnapshotEntry","StakeKeyWrongNetwork","StakeKeyWrongType","StakePublicKeyError","VotingKey","VotingPowerArgs","VotingPurpose","cip_36_multidelegations","cli","connect_timeout","data","db","db","db_host","db_pass","db_user","dry_run","enable_cip36_multiple_delegations","error","errors","expected_voting_purpose","expected_voting_purpose","exports","host","inner","keepalives_idle","keepalives_interval","keepalives_retries","logic","max_slot","max_slot","min_slot","min_slot","name","network_id","network_id","nonce","out_file","password","registration","registration_bad_bin","rewards_address","show_error_warning","slot","spec_61284","spec_61285","stake_key","test_api","testing","tx_id","tx_id","user","verification","voting_key","voting_power","voting_power","voting_purpose","mock_json_file","actual","actual","err","err","err","err","err","err","err","err","expected","expected","hash_bytes","Args","DryRun","DryRunCommand","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","db","db_host","db_pass","db_user","dry_run","enable_cip36_multiple_delegations","eq","error_log_file","expected_voting_purpose","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","max_slot","min_slot","network_id","out_file","show_error_warning","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","mock_json_file","CATALYST","DELEGATIONS_OR_DIRECT","DbHost","DbName","DbPass","DbUser","Delegated","Direct","KEY_61284","KEY_61285","NETWORK_ID","NONCE","NetworkId","Nonce","PAYMENT_ADDRESS","PubKey","RawRegistration","Registration","RewardsAddress","STAKE_ADDRESS","Sig","Signature","SignedRegistration","SlotNo","SnapshotEntry","StakeAddr","StakeKeyHex","StakePubKey","TxId","VOTE_KEY","VOTE_PURPOSE","VotingKey","VotingKeyHex","VotingPurpose","WEIGHT","WITNESS","__WrapperDbPass","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","assert","base32_len","base32_len","base32_len","bin_reg","bin_sig","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","crypto2","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direct_from_hex","div","div","div","div","div_assign","div_assign","div_assign","div_assign","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expose_secret","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_hash","get_hash","hash","hash","hash","header","header","header","header","header","header","header","header","header","header","header","hex_bytes","hex_impls","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inspect_cip36_reg","inspect_cip36_sig","inspect_metamap_reg","inspect_metamap_sig","inspect_nonce","inspect_rewards_addr","inspect_stake_key","inspect_voting_key","inspect_voting_purpose","inspect_witness","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_i64","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_resettable","json_reg","json_sig","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","network_id","new","new","new","new","new","new","new","new","new","new","new","new","new","nonce","nonce","ox_hex","ox_hex_","ox_hex_sig","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","raw_reg_conversion","raw_sig_conversion","registration","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rewards_address","rewards_address","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","slot","slot","stake_key","stake_key","stake_key_hash","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_signed","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","tx_id","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_multi_delegation","validate_signature_bin","voting_key","voting_key","voting_power","voting_purpose","voting_purpose","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","write_base32","zeroize","PubKey","Sig","pub_key","sig","PubKey","__clone_box","arbitrary_with","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","cmp","deserialize","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","fmt","from","from_hex","get_hash","hash","into","network_id","partial_cmp","serialize","to_hex","to_owned","try_from","try_into","ty","type_id","vzip","write_base32","Sig","__clone_box","arbitrary_with","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","cmp","deserialize","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","fmt","from","from_hex","into","partial_cmp","serialize","to_owned","try_from","try_into","type_id","vzip","write_base32","BLAKE_2B_256_HASH_SIZE","hash","HexBytes","__clone_box","arbitrary_with","as_mut","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","deserialize","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","fmt","fmt","from","header","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","write_base32","Mainnet","NetworkId","NetworkInfoFromStrError","Testnet","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from_str","from_str","header","header","in_current_span","into","into","into_resettable","serialize","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbConfig","__clone_box","borrow","borrow_mut","clone","clone_into","connect_timeout","deserialize","fmt","from","host","into","keepalives_idle","keepalives_interval","keepalives_retries","name","password","queries","to_owned","try_from","try_into","type_id","user","vzip","staked_utxo_ada","STAKED_ADA","STAKE_CREDENTIAL","staked_utxo_ada","CborDeserializationFailed","CddlParsingFailed","DelegationError","EmptyDelegations","IncorrectVotingPurpose","InvalidAddressPrefix","InvalidRegistration","MismatchedSignature","ObsoleteRegistration","RawBinCborRegistrationFailure","RawBinCborSignatureFailure","RegistrationCorruptedBin","RegistrationError","RegistrationFormat","SignatureError","SignatureFormat","StakeKeyWrongNetwork","StakeKeyWrongType","StakePublicKeyError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","equivalent","equivalent","equivalent","errors","fmt","fmt","fmt","fmt","from","from","from","header","in_current_span","into","into","into","registration","registration_bad_bin","serialize","serialize","serialize","slot","spec_61284","spec_61285","to_string","try_from","try_from","try_from","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","vzip","vzip","vzip","actual","actual","err","err","err","err","err","err","err","err","expected","expected","hash_bytes","Args","DbConfig","DryRunCommand","Sig","Signature","SlotNo","SnapshotEntry","VotingKey","VotingPowerArgs","VotingPurpose","show_error_warning","voting_power","VotingPowerArgs","args","convert_to_snapshot_entry","voting_power","VotingPowerArgs","__clone_box","borrow","borrow_mut","cip_36_multidelegations","clone","clone_into","default","eq","equivalent","equivalent","equivalent","expected_voting_purpose","fmt","from","into","max_slot","min_slot","network_id","to_owned","try_from","try_into","type_id","vzip","SnapshotOutputAssert","VerifiableSnapshotOutput","assert","output","test_api","SnapshotOutputAssert","VerifiableSnapshotOutput","output_assertions","SnapshotOutputAssert","VerifiableSnapshotOutput","assert","borrow","borrow_mut","from","into","new","output","reward_address","stake_key","try_from","try_into","type_id","voting_key","vzip","verify","CddlConfig","Invalids","REG_BIN","REG_JSON","REG_SLOT_NO","REG_TX_ID","SIG_BIN","SIG_JSON","StakeKeyHash","Unregistered","Valids","borrow","borrow_mut","buf","buf","buf","default","filter_registrations","from","hasher","into","is_valid_rewards_address","latest_registrations","len","len","len","new","prefix_hex","shards","shift","spec_61284","spec_61285","stake_key_hash","try_from","try_into","type_id","validate_reg_cddl","validate_sig_cddl","vzip"],"q":[[0,"voting_tools_rs"],[82,"voting_tools_rs::DryRunCommand"],[83,"voting_tools_rs::RegistrationError"],[96,"voting_tools_rs::cli"],[147,"voting_tools_rs::cli::DryRunCommand"],[148,"voting_tools_rs::data"],[837,"voting_tools_rs::data::crypto2"],[841,"voting_tools_rs::data::crypto2::pub_key"],[876,"voting_tools_rs::data::crypto2::sig"],[906,"voting_tools_rs::data::hash"],[908,"voting_tools_rs::data::hex_bytes"],[939,"voting_tools_rs::data::network_id"],[980,"voting_tools_rs::db"],[1004,"voting_tools_rs::db::queries"],[1005,"voting_tools_rs::db::queries::staked_utxo_ada"],[1008,"voting_tools_rs::error"],[1072,"voting_tools_rs::error::RegistrationError"],[1085,"voting_tools_rs::exports"],[1097,"voting_tools_rs::logic"],[1101,"voting_tools_rs::logic::args"],[1125,"voting_tools_rs::test_api"],[1129,"voting_tools_rs::testing"],[1130,"voting_tools_rs::testing::test_api"],[1133,"voting_tools_rs::testing::test_api::output_assertions"],[1149,"voting_tools_rs::verification"],[1150,"voting_tools_rs::verification::verify"],[1189,"eyre"],[1190,"postgres::client"],[1191,"alloc::vec"],[1192,"clap_builder::builder::command"],[1193,"std::path"],[1194,"core::fmt"],[1195,"core::fmt"],[1196,"clap_builder"],[1197,"core::result"],[1198,"clap_builder::util::id"],[1199,"core::option"],[1200,"core::any"],[1201,"dyn_clone::sealed"],[1202,"bech32"],[1203,"alloc::alloc"],[1204,"core::cmp"],[1205,"microtype"],[1206,"serde::de"],[1207,"hex::error"],[1208,"core::iter::traits::collect"],[1209,"alloc::string"],[1210,"bytekind"],[1211,"bytekind::vec"],[1212,"core::hash"],[1213,"core::marker"],[1214,"core::hash"],[1215,"core::fmt"],[1216,"core::error"],[1217,"alloc::boxed"],[1218,"clap_builder::builder::os_str"],[1219,"clap_builder::builder::resettable"],[1220,"core::convert"],[1221,"serde::ser"],[1222,"bech32"],[1223,"cardano_serialization_lib::address"],[1224,"cardano_serialization_lib::crypto"]],"d":["CLI arguments for snapshot tool","","","Information required to connect to a database","Delegated voting","","Direct voting","Sub command for internal testing or dry runs","Sub command for internal testing or dry runs","","","","A registration that failed validation, along with the error","","","","","Registrations with a corrupted raw cbor binary require …","An error encountered during parsing and validation of a …","The registration couldn’t be parsed from json -&gt; struct","An ED25519 signature","A signature for a registration as defined in CIP-15","","The signature couldn’t be parsed from json -&gt; struct","A slot number","Single element in a snapshot","","","","The source of voting power for a given registration","Arguments to the <code>voting_power</code> function","A <code>u64</code> used to identify the purpose of a particular …","Are Multiple Delegations supported or not.","","The time limit in seconds applied to each socket-level …","","","Name of the cardano-db-sync database","Host for the cardano-db-sync database connection","Password for the cardano-db-sync database connection","User to connect to the  cardano-db-sync database with","This parameter should be used only for voting tool dry …","Enable Multiple delegations in CIP-36 registrations","","","The voting purpose to use in queries","The voting purpose we expect registrations to have","","The hostname to connect to","The actual signature","The number of seconds of inactivity after which a …","The time interval between TCP keepalive probes","The maximum number of TCP keepalive probes that will be …","","Upper bound for slot number to be included in queries","The upper bound for slots to include","Lower bound for slot number to be included in queries","The lower bound for slots to include","The name of the database","The network to validate signatures against","The network to validate addresses against","Registration Nonce","File to output the signed transaction to","The corresponding password for this user","","","Mainnet rewards address","If there are errors, we want to notify the user, but it’…","","","","Stake public key","Test api for internal tests as well for building mocks and …","","Registration transaction id","","The user to connect with","","Registration content","Calculate voting power info by querying a db-sync instance","Voting power expressed in ada","Voting purpose","Mock json file containing content of db sync db. This …","The actual voting purpose","","","","","","","","","","The expected voting purpose","","","CLI arguments for snapshot tool","Sub command for internal testing or dry runs","Sub command for internal testing or dry runs","","","","","","","","","","","Name of the cardano-db-sync database","Host for the cardano-db-sync database connection","Password for the cardano-db-sync database connection","User to connect to the  cardano-db-sync database with","This parameter should be used only for voting tool dry …","Enable Multiple delegations in CIP-36 registrations","","","The voting purpose to use in queries","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Upper bound for slot number to be included in queries","Lower bound for slot number to be included in queries","The network to validate signatures against","File to output the signed transaction to","If there are errors, we want to notify the user, but it’…","","","","","","","","","","","","","Mock json file containing content of db sync db. This …","The voting purpose for catalyst registrations","","Database host","Database name","Database password","Database user","Delegated voting","Direct voting","","","","","","","","","A Raw Registration from the …","A catalyst registration on Cardano in either CIP-15 or …","A rewards address in a catalyst registation","","","A signature for a registration as defined in CIP-15","A Catalyst registration in either CIP-15 or CIP-36 format, …","A slot number","Single element in a snapshot","","","","","","","The source of voting power for a given registration","","A <code>u64</code> used to identify the purpose of a particular …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cip 15/36: 61284 raw binary","cip 15/36: 61285 raw binary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a direct voting power source from a hex string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Decode a <code>RewardsAddress</code> from a hex string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual signature","","","","","","","","","","","","","","","","","","","","","","To produce the witness field in the case of a staking …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attempt to convert this to an <code>i64</code>","","","","","","","","","","","","","","cip 15/36: 61284 json from DB.","cip 15/36: 61285 json from DB.","","","","","","","","","","","","","","","","","","","","","","","","Registration Nonce","","","","","","","","","","","","The registration","","","","","","","","","","Mainnet rewards address","","","","","","","","","","","","","","","","","","The signature","The slot the registration was found in.","The slot the registration was found in.","","Stake public key","Stake Key Hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The id of the transaction that created this registration","registration tx_id","Registration transaction id","","","","","","","","","","","","","","","","","","","","","","The signature is generated by:","","Registration content","Voting power expressed in ada","","Voting purpose","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ED25519 public key","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a public key from a string slice containing hex …","","","Calls <code>U::from(self)</code>.","The network tag (0 = testnet, 1 = mainnet)","","","Convert this to the hex representation (without leading “…","","","","Get the type (i.e. the top 4 bits of the leading byte)","","","","An ED25519 signature","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a public key from a string slice containing hex …","Calls <code>U::from(self)</code>.","","","","","","","","","","Helper function to generate the <code>blake2b_256</code> hash of a byte …","A simple wrapper around some bytes that are serialized and …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","An identifier for a cardano network","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Information required to connect to a database","","","","","","The time limit in seconds applied to each socket-level …","","","Returns the argument unchanged.","The hostname to connect to","Calls <code>U::from(self)</code>.","The number of seconds of inactivity after which a …","The time interval between TCP keepalive probes","The maximum number of TCP keepalive probes that will be …","The name of the database","The corresponding password for this user","","","","","","The user to connect with","","","","DB columns","Get ALL UTXO for all possible Stake Addresses. Given a …","","","","","","","A registration that failed validation, along with the error","","","","","Registrations with a corrupted raw cbor binary require …","An error encountered during parsing and validation of a …","The registration couldn’t be parsed from json -&gt; struct","","The signature couldn’t be parsed from json -&gt; struct","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The actual voting purpose","","","","","","","","","","The expected voting purpose","","","","","","","","","","","","","","","","","","Calculate voting power info by querying a db-sync instance","Arguments to the <code>voting_power</code> function","","","","Are Multiple Delegations supported or not.","","","","","","","","The voting purpose we expect registrations to have","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The upper bound for slots to include","The lower bound for slots to include","The network to validate addresses against","","","","","","Fluent api for <code>SnapshotEntry</code> assertions","Allows <code>SnapshotEntry</code> struct to be assertable","returns assertion struct","","Test api for internal tests as well for building mocks and …","","","","Fluent api for <code>SnapshotEntry</code> assertions","Allows <code>SnapshotEntry</code> struct to be assertable","returns assertion struct","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates new instance based on <code>SnapshotEntry</code> reference","","Asserts reward address field from <code>SnapshotEntry</code>","Asserts stake public key field from <code>SnapshotEntry</code>","","","","Asserts delegations address field from <code>SnapshotEntry</code>","","","Cddl schema: …","Registrations which failed cddl and or sig checks","","","","DB columns","","","<code>Network_id</code> + Blake2b-224( Stake Public Key )","Unregistered voters stake","Contains the most recent registration for each public …","","","","","","","Query gathers all possible registration transactions Each …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reward addresses start with a single header byte …","Each stake key can have multiple registrations, the latest …","","","","","encoding of hex strings with a 0x prefix","","","","","The registration has a 32 byte “Stake Public Key”.  …","","","","Validate raw registration binary against 61284 CDDL spec","Validate raw signature binary against 61285 CDDL spec",""],"i":[0,79,79,0,42,79,42,11,0,79,79,79,0,79,79,79,79,0,0,79,0,0,79,79,0,0,79,79,79,0,0,0,6,0,84,0,0,14,14,14,14,14,14,0,1,14,6,0,84,44,84,84,84,0,14,6,14,6,84,14,6,7,14,84,1,1,7,0,87,1,1,7,0,0,7,87,84,0,7,0,7,7,93,94,95,96,97,98,99,100,101,102,103,94,95,104,0,11,0,14,14,11,11,14,11,14,11,14,14,14,14,14,14,14,14,11,0,14,14,11,14,11,14,11,14,11,14,11,14,11,14,14,14,14,0,14,11,14,11,14,11,14,11,14,11,14,11,93,27,0,0,0,0,0,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,29,31,32,33,34,35,36,47,48,25,26,27,28,37,25,26,27,28,25,26,27,28,29,31,25,26,27,28,29,31,32,33,34,35,36,37,7,29,31,37,46,46,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,29,31,37,42,43,44,45,46,29,31,32,33,34,35,36,47,48,25,26,27,28,37,42,43,44,45,46,29,31,32,33,34,35,36,47,48,25,26,27,28,37,29,31,25,26,27,28,29,31,32,33,34,35,36,25,26,27,28,37,0,25,26,27,28,29,31,32,33,34,35,36,25,26,27,28,37,29,31,32,33,34,35,36,25,26,27,28,37,42,43,44,45,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,42,25,26,27,28,25,26,27,28,29,31,37,29,31,37,42,43,44,45,7,29,31,32,33,34,35,36,25,26,27,28,37,29,29,29,31,31,31,25,25,25,26,26,26,27,27,27,28,28,28,37,37,37,47,42,43,44,45,46,7,29,29,31,31,32,32,33,33,34,34,35,35,36,36,47,48,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,37,42,43,44,45,46,7,29,29,31,31,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,47,48,25,25,26,26,27,27,28,28,37,37,37,32,32,33,33,34,34,35,35,36,36,47,47,25,25,26,26,27,27,28,28,29,31,0,29,31,29,31,32,33,34,35,36,25,26,27,28,0,0,29,31,32,33,34,35,36,25,26,27,28,37,44,29,31,32,33,34,35,36,25,26,27,28,37,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,26,29,31,32,33,34,35,36,25,26,27,28,37,27,46,46,25,26,27,28,25,26,27,28,0,29,31,32,33,34,35,36,47,25,26,27,28,37,43,7,0,0,0,29,31,25,26,27,28,46,46,45,25,26,27,28,25,26,27,28,43,7,42,43,44,45,7,29,31,32,33,34,35,36,25,26,27,28,37,45,45,46,43,7,45,25,26,27,28,25,26,27,28,42,43,44,45,46,29,31,32,33,34,35,36,47,48,25,26,27,28,37,46,29,31,32,33,34,35,36,25,26,27,28,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,45,46,7,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,45,45,43,7,7,43,7,42,43,44,45,46,7,29,31,32,33,34,35,36,47,48,25,26,27,28,37,29,31,37,48,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,71,0,0,71,71,71,83,71,83,71,71,71,71,71,71,71,71,83,83,71,83,71,71,71,83,83,71,83,71,71,71,71,83,71,83,71,83,71,83,71,83,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,84,84,84,84,84,84,0,0,0,0,79,79,79,79,79,79,0,79,79,79,79,0,0,79,79,79,79,79,79,79,1,87,79,1,87,79,79,79,79,1,79,79,1,87,79,1,87,79,79,79,1,87,1,1,79,1,87,87,1,1,79,79,1,87,79,1,87,87,79,1,87,79,1,87,94,95,96,97,98,99,100,101,102,103,94,95,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,105,38,0,0,0,0,0,0,105,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,78,78,91,92,88,78,0,78,9,78,0,0,91,92,88,78,0,9,9,78,78,0,78,78,78,0,0,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[4,[3]]]],0,0,0,0,0,0,0,0,0,0,0,[[5,5,6],[[4,[[3,[[8,[7]],[8,[1]],9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[10,10],[10,10],[10,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],0,0,0,0,0,0,[[11,11],12],[[],[[4,[13]]]],0,[[14,15],16],[[11,15],16],[-1,-1,[]],[-1,-1,[]],[17,[[19,[14,18]]]],[17,[[19,[11,18]]]],[17,[[19,[14,18]]]],[17,[[19,[11,18]]]],[[],[[21,[20]]]],[22,12],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[2,[1]]],[[4,[3]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[14,17],[[19,[3,18]]]],[[11,17],[[19,[3,18]]]],[[14,17],[[19,[3,18]]]],[[11,17],[[19,[3,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[-1,24],3,[]],[[25,25]],[[26,26]],[[27,27]],[[28,28]],[[25,25],3],[[26,26],3],[[27,27],3],[[28,28],3],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[2,[30]]]],[31,[[2,[30]]]],[32,22],[33,22],[34,22],[35,22],[36,22],[37,[[2,[30]]]],[7,38],[-1,39,[]],[-1,39,[]],[-1,39,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[8,[40,41]]]]],[]],[-1,[[19,[[8,[40,41]]]]],[]],[-1,[[19,[[8,[40,41]]]]],[]],[42,42],[43,43],[44,44],[45,45],[46,46],[29,29],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[47,47],[48,48],[25,25],[26,26],[27,27],[28,28],[37,37],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[29,29],49],[[31,31],49],[[25,25],49],[[26,26],49],[[27,27],49],[[28,28],49],[29,-1,50],[31,-1,50],[32,-1,50],[33,-1,50],[34,-1,50],[35,-1,50],[36,-1,50],[25,-1,50],[26,-1,50],[27,-1,50],[28,-1,50],[37,-1,50],0,[[],25],[[],26],[[],27],[[],28],[29],[31],[32],[33],[34],[35],[36],[25],[26],[27],[28],[37],[29],[31],[32],[33],[34],[35],[36],[25],[26],[27],[28],[37],[-1,[[19,[42]]],51],[-1,[[19,[43]]],51],[-1,[[19,[44]]],51],[-1,[[19,[45]]],51],[-1,[[19,[7]]],51],[-1,[[19,[29]]],51],[-1,[[19,[31]]],51],[-1,[[19,[32]]],51],[-1,[[19,[33]]],51],[-1,[[19,[34]]],51],[-1,[[19,[35]]],51],[-1,[[19,[36]]],51],[-1,[[19,[47]]],51],[-1,[[19,[48]]],51],[-1,[[19,[25]]],51],[-1,[[19,[26]]],51],[-1,[[19,[27]]],51],[-1,[[19,[28]]],51],[-1,[[19,[37]]],51],[22,[[19,[42,52]]]],[[25,25]],[[26,26]],[[27,27]],[[28,28]],[[25,25],3],[[26,26],3],[[27,27],3],[[28,28],3],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[[42,42],12],[[43,43],12],[[44,44],12],[[45,45],12],[[7,7],12],[[29,29],12],[[31,31],12],[[32,32],12],[[33,33],12],[[34,34],12],[[35,35],12],[[36,36],12],[[25,25],12],[[26,26],12],[[27,27],12],[[28,28],12],[[37,37],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[47,55],[[42,15],16],[[43,15],16],[[44,15],16],[[45,15],16],[[46,15],16],[[7,15],16],[[29,15],16],[[29,15],16],[[31,15],16],[[31,15],16],[[32,15],16],[[32,15],16],[[33,15],16],[[33,15],16],[[34,15],16],[[34,15],16],[[35,15],16],[[35,15],16],[[36,15],16],[[36,15],16],[[47,15],16],[[48,15],16],[[25,15],16],[[25,15],16],[[25,15],16],[[25,15],16],[[25,15],16],[[25,15],16],[[25,15],16],[[25,15],16],[[26,15],16],[[26,15],16],[[26,15],16],[[26,15],16],[[26,15],16],[[26,15],16],[[26,15],16],[[26,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[28,15],16],[[37,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,29],[-1,-1,[]],[56,31],[22,32],[55,32],[-1,-1,[]],[55,33],[22,33],[-1,-1,[]],[-1,-1,[]],[22,34],[55,34],[22,35],[-1,-1,[]],[55,35],[-1,-1,[]],[22,36],[55,36],[-1,-1,[]],[-1,-1,[]],[57,25],[-1,-1,[]],[57,26],[-1,-1,[]],[-1,-1,[]],[57,27],[57,28],[-1,-1,[]],[[[59,[58]]],37],[-1,-1,[]],[22,[[19,[37,52]]]],[22,[[19,[-1]]],[]],[22,[[19,[32]]]],[22,[[19,[33]]]],[22,[[19,[-1]]],[]],[22,[[19,[-1]]],[]],[22,[[19,[34]]]],[22,[[19,[35]]]],[22,[[19,[-1]]],[]],[22,[[19,[36]]]],[22,[[19,[-1]]],[]],[22,[[19,[-1]]],[]],[22,[[19,[47]]]],[22,[[19,[-1]]],[]],[22,[[19,[25]]]],[22,[[19,[26]]]],[22,[[19,[-1]]],[]],[22,[[19,[-1]]],[]],[22,[[19,[27]]]],[22,[[19,[-1]]],[]],[22,[[19,[28]]]],[[-1,-2],57,[60,61],62],[[-1,-2],57,[60,61],62],0,[[29,-1],3,63],[[31,-1],3,63],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],0,0,[29],[31],[32],[33],[34],[35],[36],[25],[26],[27],[28],[37],0,[29],[31],[32],[33],[34],[35],[36],[25],[26],[27],[28],[37],[68,[[19,[[8,[68]],[19,[43,[70,[69]]]]]]]],[68,[[19,[[8,[68]],[19,[44,[70,[69]]]]]]]],[[[2,[68]]],[[19,[[8,[[3,[68,68]]]],[19,[43,[70,[69]]]]]]]],[[[2,[68]]],[[19,[[8,[[3,[68,68]]]],[19,[44,[70,[69]]]]]]]],[[[2,[[3,[68,68]]]]],[[19,[25,[19,[43,[70,[69]]]]]]]],[[[2,[[3,[68,68]]]],71],[[19,[37,[19,[43,[70,[69]]]]]]]],[[[2,[[3,[68,68]]]]],[[19,[31,[19,[43,[70,[69]]]]]]]],[[[2,[[3,[68,68]]]]],[[19,[42,[19,[43,[70,[69]]]]]]]],[[[8,[[3,[68,68]]]]],[[21,[27]]]],[[[2,[[3,[68,68]]]]],[[19,[[72,[30]],[19,[44,[70,[69]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,[[21,[73]]]],[29],[31],[32],[33],[34],[35],[36],[25],[26],[27],[28],[37],[-1,[[75,[74]]],[]],0,0,[[25,25]],[[26,26]],[[27,27]],[[28,28]],[[25,25],3],[[26,26],3],[[27,27],3],[[28,28],3],0,[[],29],[[],31],[[],32],[[],33],[[],34],[[],35],[[],36],[[],47],[[],25],[[],26],[[],27],[[],28],[[],37],0,0,[[-1,-2],19,[[76,[[2,[30]]]]],77],[[-1,-2],19,[[76,[[2,[30]]]]],77],[[-1,-2],19,[[76,[[2,[30]]]]],77],[[29,29],[[21,[49]]]],[[31,31],[[21,[49]]]],[[25,25],[[21,[49]]]],[[26,26],[[21,[49]]]],[[27,27],[[21,[49]]]],[[28,28],[[21,[49]]]],[[46,71],[[19,[43,[70,[69]]]]]],[46,[[19,[44,[70,[69]]]]]],0,[[25,25]],[[26,26]],[[27,27]],[[28,28]],[[25,25],3],[[26,26],3],[[27,27],3],[[28,28],3],0,0,[[42,-1],19,77],[[43,-1],19,77],[[44,-1],19,77],[[45,-1],19,77],[[7,-1],19,77],[[29,-1],19,77],[[31,-1],19,77],[[32,-1],19,77],[[33,-1],19,77],[[34,-1],19,77],[[35,-1],19,77],[[36,-1],19,77],[[25,-1],19,77],[[26,-1],19,77],[[27,-1],19,77],[[28,-1],19,77],[[37,-1],19,77],0,0,0,0,0,0,[[25,25]],[[26,26]],[[27,27]],[[28,28]],[[25,25],3],[[26,26],3],[[27,27],3],[[28,28],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[46,78,71],[[19,[45,[70,[69]]]]]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],0,0,0,[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[45,12],[[19,[3,79]]]],[[45,[8,[30]]],[[19,[3,79]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[19,[3]]],[],80],[[-1,-2],[[19,[3]]],[],80],[[-1,-2],[[19,[3]]],[],80],[48,3],0,0,0,0,0,[[-1,24],3,[]],[[]],[56,[[2,[30]]]],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[8,[40,41]]]]],[]],[56,56],[[-1,-2],3,[],[]],[[56,56],49],[-1,[[19,[56]]],51],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[[56,56],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[56,15],16],[-1,-1,[]],[22,[[19,[56,52]]]],[[-1,-2],57,[60,61],62],[[56,-1],3,63],[-1,-2,[],[]],[56,[[21,[71]]]],[[56,56],[[21,[49]]]],[[56,-1],19,77],[56,55],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[56,30],[-1,23,[]],[-1,-2,[],[]],[[-1,-2],[[19,[3]]],[],80],0,[[-1,24],3,[]],[[]],[81,[[2,[30]]]],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[8,[40,41]]]]],[]],[81,81],[[-1,-2],3,[],[]],[[81,81],49],[-1,[[19,[81]]],51],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[[81,81],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[81,15],16],[-1,-1,[]],[22,[[19,[81,52]]]],[-1,-2,[],[]],[[81,81],[[21,[49]]]],[[81,-1],19,77],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,-2],[[19,[3]]],[],80],0,[[[2,[30]]],[[72,[30]]]],0,[[-1,24],3,[]],[[]],[82,[[2,[30]]]],[82,[[2,[30]]]],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[8,[40,41]]]]],[]],[82,82],[[-1,-2],3,[],[]],[-1,[[19,[82]]],51],[-1,-2,[],[[54,[53]]]],[-1,-2,[],[[54,[53]]]],[[82,82],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[82,15],16],[[82,15],16],[-1,-1,[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[-1,-2,[],[]],[[82,-1],19,77],[-1,-2,[],[]],[-1,55,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,-2],[[19,[3]]],[],80],0,0,0,0,[[-1,24],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],3,[],[]],[[71,71],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[71,15],16],[[71,15],16],[[83,15],16],[[83,15],16],[-1,-1,[]],[-1,-1,[]],[22,[[19,[71]]]],[22,[[19,[-1]]],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[75,[74]]],[]],[[71,-1],19,77],[-1,-2,[],[]],[-1,55,[]],[-1,55,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,24],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],3,[],[]],0,[-1,[[19,[84]]],51],[[84,15],16],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],0,[-1,-2,[],[]],0,0,0,[[73,5],[[19,[[86,[[8,[30]],85]],[70,[69]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[79,79],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[79,15],16],[[79,15],16],[[1,15],16],[[87,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[64,[-2,-3]]],[],[65,66,67],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[79,-1],19,77],[[1,-1],19,77],[[87,-1],19,77],0,0,0,[-1,55,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],0,[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,[86,[88,85]]],[[4,[7]]]],[[5,5,6],[[4,[[3,[[8,[7]],[8,[1]],9]]]]]],0,[[-1,24],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,6],[[-1,-2],3,[],[]],[[],6],[[6,6],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[6,15],16],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,0,[-1,38,[]],0,0,0,0,0,0,0,[-1,38,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[7,38],0,[[38,89],3],[[38,90],3],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[[38,42],3],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],78],[[26,26,5,71,12],[[19,[[3,[91,92]],[70,[69]]]]]],[-1,-1,[]],0,[-1,-2,[],[]],[[30,71],12],[[91,92],91],0,0,0,[[],78],[[[2,[30]]],55],0,0,0,0,[[31,71],88],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[[[2,[30]],78],[[19,[3,79]]]],[[[2,[30]],78],[[19,[3,79]]]],[-1,-2,[],[]]],"c":[],"p":[[3,"InvalidRegistration",1008],[15,"slice"],[15,"tuple"],[6,"Result",1189],[3,"Client",1190],[3,"VotingPowerArgs",1101],[3,"SnapshotEntry",148],[3,"Vec",1191],[6,"Unregistered",1150],[3,"Command",1192],[4,"DryRunCommand",96],[15,"bool"],[3,"PathBuf",1193],[3,"Args",96],[3,"Formatter",1194],[6,"Result",1194],[3,"ArgMatches",1195],[6,"Error",1196],[4,"Result",1197],[3,"Id",1198],[4,"Option",1199],[15,"str"],[3,"TypeId",1200],[3,"Private",1201],[3,"Nonce",148],[3,"SlotNo",148],[3,"VotingPurpose",148],[3,"TxId",148],[3,"VotingKeyHex",148],[15,"u8"],[3,"StakeKeyHex",148],[3,"DbName",148],[3,"DbUser",148],[3,"DbHost",148],[3,"StakeAddr",148],[3,"StakePubKey",148],[3,"RewardsAddress",148],[3,"SnapshotOutputAssert",1133],[15,"usize"],[3,"u5",1202],[3,"Global",1203],[4,"VotingKey",148],[3,"Registration",148],[3,"Signature",148],[3,"SignedRegistration",148],[3,"RawRegistration",148],[3,"DbPass",148],[3,"__WrapperDbPass",148],[4,"Ordering",1204],[8,"Microtype",1205],[8,"Deserializer",1206],[4,"FromHexError",1207],[15,"char"],[8,"FromIterator",1208],[3,"String",1209],[3,"PubKey",841],[15,"u64"],[3,"HexString",1210],[3,"Bytes",1211],[8,"Hash",1212],[8,"Sized",1213],[8,"BuildHasher",1212],[8,"Hasher",1212],[3,"IndentedSection",1214],[8,"Display",1194],[8,"Send",1213],[8,"Sync",1213],[4,"Value",1215],[8,"Error",1216],[3,"Box",1217],[4,"NetworkId",939],[15,"array"],[15,"i64"],[3,"OsStr",1218],[4,"Resettable",1219],[8,"AsRef",1220],[8,"Serializer",1221],[3,"CddlConfig",1150],[4,"RegistrationError",1008],[8,"WriteBase32",1202],[3,"Sig",876],[3,"HexBytes",908],[3,"NetworkInfoFromStrError",939],[3,"DbConfig",980],[15,"u128"],[3,"DashMap",1222],[3,"RegistrationCorruptedBin",1008],[6,"StakeKeyHash",1150],[3,"RewardAddress",1223],[3,"PublicKey",1224],[6,"Valids",1150],[6,"Invalids",1150],[13,"DryRun",147],[13,"IncorrectVotingPurpose",1072],[13,"StakeKeyWrongNetwork",1072],[13,"DelegationError",1072],[13,"StakePublicKeyError",1072],[13,"SignatureError",1072],[13,"CddlParsingFailed",1072],[13,"CborDeserializationFailed",1072],[13,"RawBinCborRegistrationFailure",1072],[13,"RawBinCborSignatureFailure",1072],[13,"InvalidAddressPrefix",1072],[13,"MismatchedSignature",1072],[8,"VerifiableSnapshotOutput",1133]]},\
"wallet":{"doc":"","t":"DCEENNNNGSDNDNCDAMLLLMMALLLLLLLLMLLLLLLMLLLLLLLMLLLAAMMAAMLLAMLLLLLMMDEENNNNNNDDDMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLMLMMDMMLLLLLLLLMLLLLMLLLLLLLMMLMLLLLGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLNENFLLLLLLLLLLFLLLLLEDENNNNRNNEENNENNNNDDDNEAMMMMMMMMAMAMENNENNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLMLLLLMLLLLLLLLLLLLLLMLLLLMNNREENDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLEDNNDILLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLL","n":["AccountId","AccountWitnessBuilder","EitherAccount","Error","Extended","InvalidLane","NonMonotonicSpendingCounter","NotEnoughFunds","Password","SIZE","ScrubbedBytes","Seed","Settings","SpendingCounters","TransactionBuilder","Wallet","account","account","address","as_ref","base32_len","block0_date","block0_initial_hash","blockchain","borrow","borrow_mut","check_base32","clone","clone_into","cmp","deref","deref_mut","discrimination","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","fees","fmt","fmt","from","from","from_str","from_str","hash","id","init","into","partial_cmp","password","scheme","slot_duration","state","states","time","time_era","to_owned","to_string","transaction","transaction_max_expiry_epochs","try_from","try_into","type_id","vzip","write_base32","current","needed","AccountId","EitherAccount","Error","Extended","InvalidLane","NonMonotonicSpendingCounter","NotEnoughFunds","Seed","SpendingCounters","State","Wallet","WalletBuildTx","account","account_id","account_id","add_fragment_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_fragment","confirm","confirmed_value","counters","current_counter","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","input","into","into","into","into","into","needed_input","new_from_key","new_from_key","new_from_seed","new_from_seed","new_transaction","next_value","pending_transactions","secret_key","secret_key","set_state","source","spending_counter","state","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unconfirmed_value","value","value","vzip","vzip","vzip","vzip","vzip","wallet","witness_builder","current","needed","Settings","block0_date","block0_initial_hash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","discrimination","discrimination","drop","eq","equivalent","equivalent","fees","fmt","from","init","into","is_input_worth","new","serialize","slot_duration","time_era","to_owned","transaction_max_expiry_epochs","try_from","try_into","type_id","vzip","Password","ScrubbedBytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","fmt","from","from","from","init","into","to_owned","try_from","try_into","type_id","vzip","write_base32","for_each_output","on_tx_input_and_witnesses","on_tx_output","Confirmed","Pending","StateRef","States","Status","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","confirm","confirm","confirmed_state","contains","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","is_confirmed","is_pending","iter","last_state","new","new","partial_cmp","pop_old_confirmed_states","push","state","state","states","status","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unconfirmed_states","vzip","vzip","vzip","BeforeBlock0Date","Error","FinalDateOutOfRange","block_date_from_system_time","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","max_expiration_date","to_string","try_from","try_into","type_id","vzip","AccountSecretKey","AccountWitnessBuilder","AddInputStatus","Added","BalancingError","BestEffort","BestEffort","DEFAULT_STRATEGIES","Ed25519","Ed25519Extended","Error","InputStrategy","InvalidWitnessInputAmount","NotEnoughSpace","OutputStrategy","PrivacyPreserving","SecretKey","Signature","Skipped","Strategy","StrategyBuilder","TransactionBuilder","UtxoReshuffle","WitnessInput","builder","input","input","inputs","output","output","outputs","payload","settings","strategy","validity","witness_builder","witness_builders","AddInputStatus","Added","BalancingError","Error","InvalidWitnessInputAmount","NotEnoughSpace","SecretKey","Signature","Skipped","TransactionBuilder","WitnessInput","add_input","add_input_if_worth","add_output","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_balance","check_balance_with","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","estimate_fee","estimate_fee_with","finalize_tx","fmt","fmt","from","from","from","from","get_sign_data","init","init","init","init","inputs","inputs","inputs_value","into","into","into","into","new","outputs","outputs","outputs_value","payload","prepare_tx","set_ios","set_validity","set_witnesses","settings","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validity","vzip","vzip","vzip","vzip","witness_builders","BestEffort","BestEffort","DEFAULT_STRATEGIES","InputStrategy","OutputStrategy","PrivacyPreserving","Strategy","StrategyBuilder","UtxoReshuffle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","init","init","input","input","input","into","into","into","into","most_efficient","most_private","output","output","output","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AccountSecretKey","AccountWitnessBuilder","Ed25519","Ed25519Extended","UtxoWitnessBuilder","WitnessBuilder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build_sign_data","build_sign_data","build_sign_data","build_sign_data","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","sign","sign","sign","sign","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"wallet"],[67,"wallet::Error"],[69,"wallet::account"],[177,"wallet::account::Error"],[179,"wallet::blockchain"],[211,"wallet::password"],[241,"wallet::scheme"],[244,"wallet::states"],[314,"wallet::time"],[334,"wallet::transaction"],[371,"wallet::transaction::builder"],[460,"wallet::transaction::strategy"],[547,"wallet::transaction::witness_builder"],[604,"chain_addr"],[605,"chain_addr"],[606,"alloc::alloc"],[607,"alloc::vec"],[608,"core::result"],[609,"core::cmp"],[610,"core::iter::traits::collect"],[611,"core::fmt"],[612,"core::fmt"],[613,"core::option"],[614,"alloc::string"],[615,"core::any"],[616,"bech32"],[617,"chain_impl_mockchain::fragment"],[618,"core::fmt"],[619,"chain_impl_mockchain::transaction::input"],[620,"chain_crypto::algorithms::ed25519_extended"],[621,"chain_crypto::key"],[622,"hdkeygen::account"],[623,"core::iter::traits::iterator"],[624,"chain_impl_mockchain::accounting::account::spending"],[625,"serde::de"],[626,"chain_impl_mockchain::block"],[627,"chain_impl_mockchain::ledger::ledger"],[628,"serde::ser"],[629,"chain_impl_mockchain::transaction::transaction"],[630,"core::ops::function"],[631,"core::hash"],[632,"core::borrow"],[633,"core::fmt"],[634,"chain_impl_mockchain::date"],[635,"chain_impl_mockchain::transaction::payload"],[636,"core::convert"],[637,"chain_impl_mockchain::transaction::transfer"],[638,"chain_impl_mockchain::transaction::element"],[639,"core::clone"],[640,"chain_impl_mockchain::transaction::builder"],[641,"chain_impl_mockchain::transaction::builder"],[642,"chain_impl_mockchain::transaction::witness"],[643,"chain_impl_mockchain::account"],[644,"chain_impl_mockchain::chaintypes"],[645,"chain_impl_mockchain::transaction::element"],[646,"hdkeygen::key"]],"d":["","","","","","","","","","the total size of an account ID","","","","","","","","","get the public address associated to this account …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","confirm a pending transaction","get the confirmed value of the wallet","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","get all the pending transactions of the wallet","","","set the state counter so we can sync with the blockchain …","","","","","","","","","","","","","","","","","","","","get the unconfirmed value of the wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","convenient function to check if a given input is covering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","access the confirmed state of the store verse","check wether the given state associate to this key is …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","iterate through the states from the confirmed one up to …","get the last state of the store","create a new States with the given initial state","","","","push a new <strong>unconfirmed</strong> state in the States","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","try to get the most optimise transaction consuming the …","If the transaction needs to offload extra inputs in an …","the default strategies, in order of importance, to apply …","","","","","","","","preserve the privacy of the UTxOs","","","","","","","Along with privacy preserving, this one will have the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new transaction builder with the given settings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try to get the most optimise transaction consuming the …","If the transaction needs to offload extra inputs in an …","the default strategies, in order of importance, to apply …","","","preserve the privacy of the UTxOs","","","Along with privacy preserving, this one will have the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,26,30,30,30,0,1,0,26,0,30,0,0,0,25,1,1,1,44,44,0,1,1,1,1,1,1,1,1,44,1,1,1,1,1,1,44,1,1,1,1,1,1,1,1,1,1,1,0,0,44,25,0,0,44,1,1,0,44,1,1,1,1,1,92,92,0,0,0,26,30,30,30,26,30,0,0,0,25,25,26,27,25,27,26,32,30,25,27,26,32,30,25,25,25,32,27,32,25,27,26,32,30,25,27,26,32,30,25,27,26,32,30,32,30,30,25,27,26,32,30,30,1,25,27,26,32,30,27,25,27,26,32,30,27,25,26,25,26,25,27,25,25,26,25,30,25,25,30,25,27,26,32,30,25,27,26,32,30,25,27,26,32,30,25,25,32,25,27,26,32,30,27,27,92,92,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,52,52,0,0,0,53,52,58,53,52,58,52,52,52,53,58,53,53,53,52,58,53,52,58,53,52,58,52,52,52,53,52,58,53,52,58,52,53,52,58,53,52,58,58,58,53,53,53,58,52,53,53,58,58,53,58,52,53,52,58,53,52,58,53,52,58,53,53,52,58,62,0,62,0,62,62,62,62,62,62,62,62,62,62,0,62,62,62,62,62,0,0,0,67,72,80,81,0,40,40,0,0,72,67,0,80,70,70,67,0,0,0,81,0,0,79,78,63,79,78,63,63,63,0,63,0,63,0,67,72,0,72,67,70,70,67,0,0,63,63,63,63,67,72,70,63,67,72,70,63,63,70,70,63,67,72,70,63,67,72,70,63,67,72,70,63,63,63,72,72,63,67,72,70,63,63,67,72,70,63,63,63,63,67,72,70,63,63,63,63,63,63,63,63,63,63,70,72,63,67,72,70,63,67,72,70,63,67,72,70,63,63,67,72,70,63,80,81,0,0,0,80,0,0,81,79,78,80,81,79,78,80,81,78,80,81,80,81,80,81,78,79,78,80,81,79,78,80,81,79,78,80,81,80,81,80,80,81,81,80,81,79,78,80,81,80,81,79,78,80,81,79,79,78,79,78,80,81,78,78,79,79,78,80,81,80,81,79,78,80,81,79,78,80,81,79,78,80,81,79,78,80,81,0,0,40,40,0,0,83,43,40,83,43,40,66,83,83,43,66,83,83,43,40,40,83,43,40,83,43,40,83,43,40,83,43,40,83,43,40,83,43,40,66,83,83,43,40,83,43,40,83,43,40,83,43,40,83,43,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[1,[[5,[4]]]],[-1,6,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[[9,[7,8]]]]],[]],[1,1],[[-1,-2],11,[],[]],[[1,1],12],[6,-1,[]],[6,-1,[]],0,[6,11],[-1,-2,[],[[14,[13]]]],[-1,-2,[],[[14,[13]]]],[[1,1],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,[[1,16],[[10,[11,17]]]],[[1,16],[[10,[11,17]]]],[-1,-1,[]],[[[18,[4]]],1],[19,[[10,[-1]]],[]],[19,[[10,[1]]]],[[1,-1],11,20],0,[[],6],[-1,-2,[],[]],[[1,1],[[21,[12]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,22,[]],0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,-2],[[10,[11]]],[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,1],[26,1],[[27,28],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,28,29],[[10,[15,30]]]],[[25,28],11],[25,31],0,0,[[],32],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,11],[6,11],[6,11],[6,11],[6,11],[[32,16],33],[[30,16],33],[[30,16],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,30],[-1,-1,[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[27,35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[37,[36]]],25],[[[37,[36]]],26],[38,25],[38,26],[[25,31,4],[[10,[27,30]]]],0,[25,[[0,[39]]]],[25,40],[26,40],[[25,31,[18,[41]]],[[10,[11,30]]]],[30,[[21,[42]]]],[25,[[18,[41]]]],0,[-1,22,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[25,[[21,[31]]]],[25,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[27,43],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],11,[],[]],[6,-1,[]],[6,-1,[]],[-1,[[10,[44]]],45],[44,2],0,[6,11],[[44,44],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,[[44,16],33],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[44,35],15],[46,[[10,[44,47]]]],[[44,-1],10,48],0,0,[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,0,[49,[[5,[4]]]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[[9,[7,8]]]]],[]],[49,49],[[-1,-2],11,[],[]],[[],49],[49],[6,-1,[]],[6,-1,[]],[49],[49,11],[6,11],[-1,-2,[],[[14,[13]]]],[-1,-2,[],[[14,[13]]]],[[49,16],33],[-1,-1,[]],[[[9,[4]]],49],[22,49],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,-2],[[10,[11]]],[],24],[[[50,[-1]],-2],11,[],51],[[29,-1],11,51],[[29,-1],11,51],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[[-1,-2],11,[],[]],[[52,52],12],[[[53,[-2,-3]],-1],11,[54,55,56],[[57,[-1]],54,55],[]],[[[58,[-1]]],11,[]],[[[53,[-1,-2]]],[[58,[-2]]],[],[]],[[[53,[-2,-3]],-1],15,[54,55,56],[[57,[-1]],54,55],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,11],[6,11],[6,11],[[52,52],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[53,[-1,-2]],16],33,59,59],[[52,16],33],[[[58,[-1]],16],33,59],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[52,-1],11,20],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[58,[-1]]],15,[]],[[[58,[-1]]],15,[]],[[[53,[-1,-2]]],[[0,[39]]],[],[]],[[[53,[-1,-2]]],[[58,[-2]]],[],[]],[[-1,-2],[[53,[-1,-2]]],[54,55],[]],[[-1,52],[[58,[-1]]],[]],[[52,52],[[21,[12]]]],[[[53,[-1,-2]]],11,[54,55],[]],[[[53,[-1,-2]],-1,-2],11,[54,55],[]],[[[58,[-1]]],-1,[]],0,0,0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[[53,[-1,-2]]],[[0,[39]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[44,60],[[10,[61,62]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,11],[[62,16],33],[[62,16],33],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[44,60],[[10,[61,62]]]],[-1,22,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[63,[-1,-2,-3,-4]],35,-5],15,64,[],[[65,[[5,[4]]]]],[],[[66,[-2,-3,-4]]]],[[[63,[-1,-2,-3,-4]],35,-5],67,64,[],[[65,[[5,[4]]]]],[],[[66,[-2,-3,-4]]]],[[[63,[-1,-2,-3,-4]],[68,[3]]],15,64,[],[[65,[[5,[4]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[63,[-1,-2,-3,-4]]],69,64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]],4,4],69,64,[],[[65,[[5,[4]]]]],[]],[[[70,[-1,-2]]],[[70,[-1,-2]]],71,71],[[-1,-2],11,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,11],[6,11],[6,11],[6,11],[[[63,[-1,-2,-3,-4]]],31,64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]],4,4],31,64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]],[9,[[70,[-2,-4]]]]],[[10,[[50,[-1]],72]]],64,[],[[65,[[5,[4]]]]],[]],[[72,16],33],[[72,16],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[63,[-1,-2,-3,-4]]],[[10,[[9,[-3]],72]]],64,[],[[65,[[5,[4]]]]],[]],[[],6],[[],6],[[],6],[[],6],[[[63,[-1,-2,-3,-4]]],[[5,[35]]],64,[],[[65,[[5,[4]]]]],[]],0,[[[63,[-1,-2,-3,-4]]],31,64,[],[[65,[[5,[4]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[44,-1,61],[[63,[-1,-2,-3,-4]]],64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]]],[[5,[[68,[3]]]]],64,[],[[65,[[5,[4]]]]],[]],0,[[[63,[-1,-2,-3,-4]]],31,64,[],[[65,[[5,[4]]]]],[]],0,[[[63,[-1,-2,-3,-4]]],[[10,[[74,[[73,[-1]]]],72]]],64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]],[74,[[75,[-1]]]]],[[74,[[73,[-1]]]]],64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]],[74,[[76,[-1]]]]],[[74,[[75,[-1]]]]],64,[],[[65,[[5,[4]]]]],[]],[[[63,[-1,-2,-3,-4]],[74,[[73,[-1]]]],[9,[[70,[-2,-4]]]]],[[10,[[74,[[77,[-1]]]],72]]],64,[],[[65,[[5,[4]]]]],[]],0,[-1,-2,[],[]],[-1,22,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,79],[80,80],[81,81],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[80,80],12],[[81,81],12],[[],78],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,11],[6,11],[6,11],[6,11],[[80,80],15],[[81,81],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[80,16],33],[[81,16],33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[80,-1],11,20],[[81,-1],11,20],[[],6],[[],6],[[],6],[[],6],[79,80],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],78],[[],78],[79,81],0,0,[[80,80],[[21,[12]]]],[[81,81],[[21,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],82,[],[]],[[83,[85,[84]]],82],[[83,[85,[84]]],82],[[43,86],82],[[-1,87,88],-2,[],[]],[[83,87,88],84],[[83,87,88],84],[[43,87,88],89],[40,40],[[-1,-2],11,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,11],[6,11],[6,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3],82,[],[],[]],[[83,84,[37,[36]]],82],[[83,84,[91,[90,-1]]],82,[]],[[43,89,40],82],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"AccountId",0],[4,"Discrimination",604],[3,"Address",604],[15,"u8"],[15,"slice"],[15,"usize"],[3,"u5",605],[3,"Global",606],[3,"Vec",607],[4,"Result",608],[15,"tuple"],[4,"Ordering",609],[15,"char"],[8,"FromIterator",610],[15,"bool"],[3,"Formatter",611],[3,"Error",611],[15,"array"],[15,"str"],[8,"Hasher",612],[4,"Option",613],[3,"String",614],[3,"TypeId",615],[8,"WriteBase32",605],[3,"Wallet",69],[4,"EitherAccount",69],[3,"WalletBuildTx",69],[6,"FragmentId",616],[4,"Fragment",616],[4,"Error",69],[3,"Value",617],[3,"State",69],[6,"Result",611],[4,"Error",618],[3,"Input",619],[3,"Ed25519Extended",620],[3,"SecretKey",621],[6,"Seed",622],[8,"Iterator",623],[4,"AccountSecretKey",547],[3,"SpendingCounter",618],[8,"Error",624],[3,"AccountWitnessBuilder",547],[3,"Settings",179],[8,"Deserializer",625],[3,"Block",626],[4,"Error",627],[8,"Serializer",628],[3,"ScrubbedBytes",211],[3,"Transaction",629],[8,"FnMut",630],[4,"Status",244],[3,"States",244],[8,"Hash",612],[8,"Eq",609],[8,"Sized",631],[8,"Borrow",632],[3,"StateRef",244],[8,"Debug",611],[3,"SystemTime",633],[3,"BlockDate",634],[4,"Error",314],[3,"TransactionBuilder",371],[8,"Payload",635],[8,"AsRef",636],[8,"WitnessBuilder",547],[4,"AddInputStatus",371],[3,"Output",637],[4,"Balance",638],[4,"WitnessInput",371],[8,"Clone",639],[4,"Error",371],[3,"SetWitnesses",640],[3,"TxBuilderState",640],[3,"SetIOs",640],[3,"SetTtl",640],[3,"SetAuthData",640],[3,"StrategyBuilder",460],[3,"Strategy",460],[4,"InputStrategy",460],[4,"OutputStrategy",460],[4,"Witness",641],[3,"UtxoWitnessBuilder",547],[3,"WitnessUtxoData",641],[6,"SpendingSignature",642],[6,"Witness",643],[6,"HeaderId",644],[6,"TransactionSignDataHash",638],[3,"WitnessAccountData",641],[3,"XPrv",645],[3,"Key",646],[13,"NotEnoughFunds",177]]},\
"wallet_core":{"doc":"","t":"DDEENNEGNNNNNNNNNNNNNNNDNEENNNNNDNNDDNNNNNNDNNRDNNNDNNNNNNNNMLLLLLLLLLMMLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLMMLLLMLLLLLLLMLLLLMLLLLLLLMLLLLLLLLLLLLLLALLLLLLLAMLLLLLLALMGRGRDDGDGDDGMMLLLLLLLLMMFLLLLLLLLMLLLLMLLLLALLLLLLLLLLLLMAAMFFAMLLMLLLLLLLLLLLLALLLLFFFFFFFFFFFFFFOOOEGDDDNDGNDMMLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLMMFFFFMMMMMLLLLLLLLLLLLLLLLLLLLLLLLDFLLLLLMLLLLFMLLLLDDDMMLLLLLLLLMLLMLLLLLLFMMMLLLLLLLLLLDEENNNNNNNNNNNNDNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLMLLLLLLLLLLLLLLENDNRLLLLLLLLLLLLMLLLLLLLMMLLLLLLLMLLDLMLLLLLLLLLLLLLLLLLLL","n":["Choice","Error","ErrorCode","ErrorKind","Evm","EvmMapping","Fragment","FragmentId","Initial","InvalidFragment","InvalidFragment","InvalidInput","InvalidInput","InvalidSpendingCounters","InvalidSpendingCounters","InvalidTransactionValidityDate","InvalidTransactionValidityDate","InvalidVoteEncryptionKey","InvalidVoteEncryptionKey","MintToken","NotEnoughFunds","NotEnoughFunds","OldUtxoDeclaration","Options","OwnerStakeDelegation","PayloadType","PayloadTypeConfig","PoolRegistration","PoolRetirement","PoolUpdate","Private","Private","Proposal","Public","Public","Result","Settings","StakeDelegation","SymmetricCipherError","SymmetricCipherError","SymmetricCipherInvalidPassword","SymmetricCipherInvalidPassword","Transaction","TxBuilder","UpdateProposal","UpdateVote","VOTE_PLAN_ID_LENGTH","Value","VoteCast","VotePlan","VoteTally","Wallet","WalletConversion","WalletConversion","WalletRecovering","WalletRecovering","WalletTransactionBuilding","WalletTransactionBuilding","WalletVoteOutOfRange","WalletVoteOutOfRange","account","add","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","as_byte","as_ref","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","bytes","c","checked_add","checked_sub","choice_range","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","details","discrimination","discrimination","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","id","index","init","init","init","init","init","init","into","into","into","into","into","into","is_input_worth","kind","new","new","new_length","options","options_range","partial_cmp","partial_cmp","partial_cmp","payload_type","saturating_add","scale","serialize","serialize","serialize","serialized_size","serialized_size","slot_duration","split_in","sub","sum","sum","time_era","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_builder","type_id","type_id","type_id","type_id","type_id","type_id","validate","vote","vote_plan_id","vzip","vzip","vzip","vzip","vzip","vzip","wallet","zero","argument_name","ErrorPtr","FRAGMENT_ID_LENGTH","FragmentPtr","NONCES_SIZE","NulPtr","OutOfBound","ProposalPtr","Settings","SettingsPtr","SpendingCounters","TransactionOut","WalletPtr","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","data","delete_buffer","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","fees","fmt","fmt","fmt","fmt","fragment","from","from","from","from","init","init","init","init","into","into","into","into","len","macros","settings","slot_duration","spending_counters_delete","symmetric_cipher_decrypt","time","time_era","to_string","to_string","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vote","vzip","vzip","vzip","vzip","wallet_confirm_transaction","wallet_delete_error","wallet_delete_proposal","wallet_delete_settings","wallet_delete_wallet","wallet_id","wallet_import_keys","wallet_set_state","wallet_spending_counters","wallet_total_value","wallet_vote_cast","fragment_delete","fragment_from_raw","fragment_id","non_null","non_null_array","non_null_mut","Discrimination","Epoch","LinearFee","PerCertificateFee","PerVoteCertificateFee","Production","SettingsInit","Slot","Test","TimeEra","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","constant","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","epoch_start","fees","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","per_certificate_fees","per_vote_certificate_fees","settings_block0_hash","settings_discrimination","settings_fees","settings_new","slot_duration","slot_start","slots_per_epoch","time_era","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","BlockDate","block_date_from_system_time","borrow","borrow_mut","deref","deref_mut","drop","epoch","from","from","init","into","max_epiration_date","slot","try_from","try_into","type_id","vzip","ProposalPrivate","ProposalPublic","Settings","block0_date","block0_initial_hash","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","discrimination","drop","drop","fees","from","from","init","init","into","into","proposal_new","slot_duration","time_era","transaction_max_expiry_epochs","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Error","ErrorCode","ErrorKind","InvalidFragment","InvalidFragment","InvalidInput","InvalidInput","InvalidSpendingCounters","InvalidSpendingCounters","InvalidTransactionValidityDate","InvalidTransactionValidityDate","InvalidVoteEncryptionKey","InvalidVoteEncryptionKey","NotEnoughFunds","NotEnoughFunds","Result","SymmetricCipherError","SymmetricCipherError","SymmetricCipherInvalidPassword","SymmetricCipherInvalidPassword","WalletConversion","WalletConversion","WalletRecovering","WalletRecovering","WalletTransactionBuilding","WalletTransactionBuilding","WalletVoteOutOfRange","WalletVoteOutOfRange","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","details","details","drop","drop","drop","drop","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","into","into","into","into","into_c_api","invalid_fragment","invalid_input","invalid_spending_counters","invalid_transaction_validity_date","invalid_vote_encryption_key","is_err","is_ok","kind","kind","not_enough_funds","source","success","symmetric_cipher_error","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wallet_conversion","wallet_recovering","wallet_transaction","wallet_vote_range","with","with","argument_name","TxBuilder","borrow","borrow_mut","build_tx","builder","deref","deref_mut","drop","from","get_sign_data","init","into","new","prepare_tx","sign_tx","try_from","try_into","type_id","vzip","PayloadTypeConfig","Private","Proposal","Public","VOTE_PLAN_ID_LENGTH","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","index","init","init","into","into","new","new_private","new_public","options","payload_type","try_from","try_from","try_into","try_into","type_id","type_id","vote","vote_plan_id","vzip","vzip","Wallet","account","account","borrow","borrow_mut","confirm_transaction","deref","deref_mut","drop","from","id","init","into","recover_free_keys","set_state","spending_counter","total_value","try_from","try_into","type_id","vote","vzip"],"q":[[0,"wallet_core"],[254,"wallet_core::ErrorKind"],[255,"wallet_core::c"],[350,"wallet_core::c::fragment"],[353,"wallet_core::c::macros"],[356,"wallet_core::c::settings"],[465,"wallet_core::c::time"],[483,"wallet_core::c::vote"],[520,"wallet_core::error"],[628,"wallet_core::error::ErrorKind"],[629,"wallet_core::tx_builder"],[648,"wallet_core::vote"],[685,"wallet_core::wallet"],[707,"quickcheck::arbitrary"],[708,"chain_impl_mockchain::value"],[709,"core::result"],[710,"core::ops::range"],[711,"core::cmp"],[712,"serde::de"],[713,"chain_ser::packer"],[714,"chain_ser::deser"],[715,"std::io"],[716,"chain_addr"],[717,"core::fmt"],[718,"core::fmt"],[719,"chain_impl_mockchain::testing::arbitrary"],[720,"jormungandr_lib::interfaces::value"],[721,"chain_impl_mockchain::testing::arbitrary"],[722,"chain_impl_mockchain::key"],[723,"core::hash"],[724,"chain_impl_mockchain::transaction::input"],[725,"chain_impl_mockchain::block"],[726,"chain_impl_mockchain::ledger::ledger"],[727,"chain_impl_mockchain::vote::choice"],[728,"core::option"],[729,"serde::ser"],[730,"chain_ser::deser"],[731,"alloc::string"],[732,"core::any"],[733,"core::fmt"],[734,"core::convert"],[735,"core::error"],[736,"symmetric_cipher"],[737,"core::marker"],[738,"core::marker"],[739,"core::ops::function"],[740,"chain_impl_mockchain::transaction::witness"],[741,"chain_impl_mockchain::accounting::account::spending"],[742,"chain_impl_mockchain::certificate::vote_plan"],[743,"chain_vote::committee"],[744,"chain_impl_mockchain::certificate::vote_cast"],[745,"chain_addr"],[746,"alloc::boxed"]],"d":["a choice","The error structure, contains details of what may have …","a code representing the kind of error that occurred","","","","All possible messages recordable in the content","","","invalid fragment","invalid fragment","the input was not valid, it may be because it was a null …","kind of error where the input (named <code>argument_name</code>) is of …","invalid spending counters provided to the set_state …","invalid spending counters provided to the set_state …","invalid transaction validity date, it’s either before …","invalid transaction validity date","vote encryption key is invalid either because is not valid …","vote encryption key is invalid either because is not valid …","","wallet out of funds","wallet out of funds","","options for the vote","","the <code>PayloadType</code> to use for a vote plan","","","","","","","","","","result returned by a call, this allows to check if an error","","","error encrypting or decrypting transfer protocol payload","format error (malformed input, etc…)","authentication failed","authentication failed","","","","","","Unspent transaction value.","","","","the wallet","the operation on the wallet conversion object fail, it may …","This is the kind of error that may happen when operating …","an error occurred while recovering a wallet","an error occurred while recovering a wallet","the wallet failed to build a valid transaction, for example","the wallet failed to build a valid transaction","the provided voting choice is out of the allowed range","the provided voting choice is out of the allowed range","","","","","","","","","","","","","","","","","","","","","","","","","","","This module expose handy C compatible functions to reuse …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The ID of a message is a hash of its serialization <em>without</em> …","","","","","The ID of a fragment is a hash of its serialization <em>without</em>…","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","convenient function to check if a given input is covering …","","","","create a new <code>Options</code> with the given number of available …","","","","","","","","","","","","","","","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","validate the given <code>Choice</code> against the available <code>Options</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete a binary buffer that was returned by this library …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Release the memory holding the spending counters","decrypt payload of the wallet transfer protocol","","","","","","","","","","","","","","","","","","","","","","","Confirm the previously generated transaction identified by …","delete the pointer and free the allocated memory","delete the pointer","delete the pointer and free the allocated memory","delete the pointer, zero all the keys and free the …","get the wallet id","recover a wallet from an account and a list of utxo keys","update the wallet account state","get the current spending counter for the (only) account in …","get the total value in the wallet","build the vote cast transaction","Safety","Safety","Safety","","","","","","Linear fee using the basic affine formula …","","","","","","","","Unix timestamp of the genesis block. Provides an anchor to …","block_0_initial_hash is assumed to point to 32 bytes of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Safety","Safety","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Safety","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","build the proposal object","","","","","","","","","","","","","","The error structure, contains details of what may have …","a code representing the kind of error that occurred","","invalid fragment","invalid fragment","the input was not valid, it may be because it was a null …","kind of error where the input (named <code>argument_name</code>) is of …","invalid spending counters provided to the set_state …","invalid spending counters provided to the set_state …","invalid transaction validity date, it’s either before …","invalid transaction validity date","vote encryption key is invalid either because is not valid …","vote encryption key is invalid either because is not valid …","wallet out of funds","wallet out of funds","result returned by a call, this allows to check if an error","error encrypting or decrypting transfer protocol payload","format error (malformed input, etc…)","authentication failed","authentication failed","the operation on the wallet conversion object fail, it may …","This is the kind of error that may happen when operating …","an error occurred while recovering a wallet","an error occurred while recovering a wallet","the wallet failed to build a valid transaction, for example","the wallet failed to build a valid transaction","the provided voting choice is out of the allowed range","the provided voting choice is out of the allowed range","","","","","","","","","retrieve the error code associated to the error kind","","","","","","","","","if there are details return the pointer to the error type …","","","","","","if it is an error, this function will returns the the …","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","construct a Result which is an error with invalid inputs","","","","returns <code>true</code> if the <code>Result</code> means error","returns <code>true</code> if the <code>Result</code> means success","access the error kind","","","","constructor to build a <code>Result</code> that means success","","","","","","","","","","","","","","","","","","","","","","","","set some details to the <code>Result</code> object if the <code>Result</code> is of …","set some details to the <code>Result</code> object if the <code>Result</code> is of …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","the wallet","Returns address of the account with the given chain …","","","","use this function to confirm a transaction has been …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Retrieve a wallet from a key used as utxo’s","Update the wallet’s account state.","get the current spending counter","get the total value in the wallet","","","","Cast a vote",""],"i":[0,0,0,0,2,2,0,0,2,70,69,70,69,70,69,70,69,70,69,2,70,69,2,0,2,0,0,2,2,2,64,6,0,64,6,0,0,2,70,69,70,69,2,0,2,2,0,0,2,2,2,0,70,69,70,69,70,69,70,69,85,1,2,1,4,5,6,1,5,1,13,13,13,2,1,4,5,6,13,2,1,4,5,6,76,1,0,1,1,4,13,2,1,4,5,6,13,2,1,4,5,6,1,5,6,1,6,13,2,1,4,5,6,13,2,1,4,5,6,13,2,1,2,1,67,13,13,13,2,1,4,5,6,13,2,1,4,5,6,13,13,2,2,1,1,4,4,5,5,6,6,0,13,13,2,1,1,4,5,6,13,2,2,1,1,1,1,4,5,6,6,2,1,5,6,87,2,82,13,2,1,4,5,6,13,2,1,4,5,6,13,67,13,5,4,82,4,1,5,6,82,1,1,13,2,1,2,1,13,1,1,1,1,13,13,2,1,4,5,6,1,13,13,2,1,1,4,5,6,6,13,2,1,4,5,6,0,13,2,1,4,5,6,4,0,82,13,2,1,4,5,6,0,1,90,0,0,0,0,0,0,0,0,0,0,0,0,13,13,49,56,46,48,49,56,46,48,49,56,0,49,56,46,48,49,56,46,48,13,49,56,46,48,13,46,46,48,48,0,49,56,46,48,49,56,46,48,49,56,46,48,56,0,0,13,0,0,0,13,46,48,13,49,56,46,48,49,56,46,48,49,56,46,48,0,49,56,46,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,0,0,61,0,62,62,61,91,62,58,59,60,61,91,62,58,59,60,58,59,59,59,60,60,58,58,58,59,60,61,91,62,58,59,60,61,91,62,58,59,60,62,61,91,62,58,59,60,91,62,61,91,62,58,59,60,61,91,62,58,59,60,61,91,62,58,59,60,58,58,0,0,0,0,62,91,91,62,62,61,91,62,58,59,60,61,91,62,58,59,60,61,91,62,58,59,60,61,91,62,58,59,60,0,0,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,0,0,0,13,13,66,68,66,68,66,68,66,68,13,66,68,13,66,68,66,68,66,68,0,13,13,13,66,68,66,66,68,68,66,68,66,68,0,0,0,70,69,70,69,70,69,70,69,70,69,70,69,0,70,69,70,69,70,69,70,69,70,69,70,69,50,70,67,69,50,70,67,69,69,50,70,67,69,50,70,67,69,67,67,50,70,67,69,50,67,67,69,69,50,50,50,70,67,69,50,70,67,69,50,70,67,69,50,67,67,67,67,67,50,50,67,67,67,67,50,67,67,69,50,70,67,69,50,70,67,69,50,70,67,69,50,70,67,69,67,67,67,67,50,67,90,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,64,0,64,0,82,64,82,64,82,64,82,64,82,64,82,64,82,82,64,82,64,82,82,82,82,82,82,64,82,64,82,64,82,82,82,64,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[-1,2,3],[-1,1,3],[-1,4,3],[-1,5,3],[-1,6,3],[[]],[5,7],[1,8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,[[9,[7]]]],0,[[1,1],[[11,[1,10]]]],[[1,1],[[11,[1,10]]]],[4,[[12,[7]]]],[13,13],[2,2],[1,1],[4,4],[5,5],[6,6],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[1,1],15],[[5,5],15],[[6,6],15],[[],1],[[],6],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[11,[13]]],17],[[[18,[-1]]],[[11,[2,19]]],20],[[[18,[-1]]],[[11,[1,19]]],20],[[[18,[[21,[7]]]]],[[11,[-1,19]]],[]],[[[18,[[21,[7]]]]],[[11,[-1,19]]],[]],0,[13,22],0,[16,14],[16,14],[16,14],[16,14],[16,14],[16,14],[[13,13],23],[[2,2],23],[[1,1],23],[[4,4],23],[[5,5],23],[[6,6],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],0,0,[[13,24],[[11,[14,25]]]],[[2,24],[[11,[14,25]]]],[[1,24],[[11,[14,25]]]],[[1,24],[[11,[14,25]]]],[[4,24],[[11,[14,25]]]],[[5,24],[[11,[14,25]]]],[[6,24],[[11,[14,25]]]],[-1,-1,[]],[26,2],[-1,-1,[]],[-1,-1,[]],[27,1],[28,1],[29,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[30,6],[2,31],[[1,-1],14,32],[[5,-1],14,32],[[6,-1],14,32],0,[2],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,33],23],0,[34,[[11,[13,35]]]],[7,5],[7,[[11,[4,36]]]],0,0,[[1,1],[[37,[15]]]],[[5,5],[[37,[15]]]],[[6,6],[[37,[15]]]],0,[[1,1],1],[[1,38],[[11,[1,10]]]],[[13,-1],11,39],[[2,[18,[-1]]],[[11,[14,40]]],41],[[1,[18,[-1]]],[[11,[14,40]]],41],[2,16],[1,16],0,[[1,38],42],[[1,1]],[-1,1,43],[-1,[[11,[1,10]]],43],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[21,[7]]],[[11,[1,10]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[7,[[11,[6]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[4,5],23],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[7,16],14],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],0,[16,14],[16,14],[16,14],[16,14],0,[[46,24],47],[[46,24],47],[[48,24],47],[[48,24],47],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[49,14],[[7,16,7,16,7,16],50],0,0,[-1,44,[]],[-1,44,[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,7],50],[52,14],[53,14],[54,14],[51,14],[[51,7],50],[[7,51],50],[[51,8,49],50],[[51,49],50],[[51,8],50],[[51,54,53,7,55,7,56],50],[57,14],[[7,16,57],50],[[57,7],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[],58],[[],59],[[],60],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],0,[16,14],[16,14],[16,14],[16,14],[16,14],[16,14],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[13,7],50],[[13,61],50],[[13,58],50],[[62,13],50],0,0,0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[13,8,55],50],[-1,-2,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[16,14],0,[63,55],[-1,-1,[]],[[],16],[-1,-2,[],[]],[[13,8,55],50],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],0,[16,14],[16,14],0,[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[7,7,7,-1,53],50,[[65,[64]]]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[66,[[11,[64,67]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[68,[[11,[64,67]]]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,70],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[67,[[37,[71]]]],0,[16,14],[16,14],[16,14],[16,14],[50,[[37,[67]]]],[[67,24],47],[[67,24],47],[[69,24],47],[[69,24],47],[[[11,[14,67]]],50],[-1,-1,[]],[67,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,67],[[],67],[72,67],[[],67],[[],67],[[],67],[50,23],[50,23],[67,69],0,[[],67],[67,[[37,[71]]]],[[],50],[73,67],[-1,44,[]],[-1,44,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],67],[[],67],[[],67],[[],67],[[50,-1],50,[71,74,75]],[[67,-1],67,[71,74,75]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1]],[21,[7]],-2],[[11,[2,67]]],77,78],0,[16,-1,[]],[16,-1,[]],[16,14],[-1,-1,[]],[[[76,[-1]]],[[11,[79,67]]],77],[[],16],[-1,-2,[],[]],[[13,-1],[[76,[-1]]],77],[[[76,[-1]],44,80],[[11,[[76,[-1]],67]]],77],[[[76,[-1]],[21,[7]],-2],[[11,[2,67]]],77,78],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,14],[16,14],[-1,-1,[]],[-1,-1,[]],0,[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[81,7,4,64],82],[[81,7,4,83],82],[[81,7,4],82],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[[82,5],[[37,[84]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[85,22],86],0,[-1,-2,[],[]],[-1,-2,[],[]],[[85,87],14],[16,-1,[]],[16,-1,[]],[16,14],[-1,-1,[]],[85,88],[[],16],[-1,-2,[],[]],[[[21,[7]]],[[11,[85,67]]]],[[85,1,[9,[38]]],[[11,[14,67]]]],[85,[[9,[38]]]],[85,1],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[[85,13,82,5,63,7],[[11,[[89,[[21,[7]]]],67]]]],[-1,-2,[],[]]],"c":[],"p":[[3,"Value",0],[4,"Fragment",0],[8,"Gen",707],[3,"Options",0],[3,"Choice",0],[4,"PayloadType",0],[15,"u8"],[15,"u64"],[15,"array"],[4,"ValueError",708],[4,"Result",709],[3,"Range",710],[3,"Settings",0],[15,"tuple"],[4,"Ordering",711],[15,"usize"],[8,"Deserializer",712],[3,"Codec",713],[4,"ReadError",714],[8,"Read",715],[15,"slice"],[4,"Discrimination",716],[15,"bool"],[3,"Formatter",717],[3,"Error",717],[3,"FragmentDef",718],[3,"NonZeroValue",719],[3,"Value",720],[3,"AverageValue",719],[3,"VotePrivacy",721],[3,"Hash",722],[8,"Hasher",723],[3,"Input",724],[3,"Block",725],[4,"Error",726],[3,"InvalidOptionsLength",727],[4,"Option",728],[15,"u32"],[8,"Serializer",729],[4,"WriteError",714],[8,"Write",715],[3,"SplitValueIn",708],[8,"Iterator",730],[3,"String",731],[3,"TypeId",732],[3,"NulPtr",255],[6,"Result",717],[3,"OutOfBound",255],[3,"SpendingCounters",255],[3,"Result",520],[6,"WalletPtr",255],[6,"ErrorPtr",255],[6,"ProposalPtr",255],[6,"SettingsPtr",255],[3,"BlockDate",465],[3,"TransactionOut",255],[6,"FragmentPtr",255],[3,"LinearFee",356],[3,"PerCertificateFee",356],[3,"PerVoteCertificateFee",356],[4,"Discrimination",356],[3,"SettingsInit",356],[3,"BlockDate",733],[4,"PayloadTypeConfig",648],[8,"TryInto",734],[3,"ProposalPublic",483],[3,"Error",520],[3,"ProposalPrivate",483],[4,"ErrorKind",520],[4,"ErrorCode",520],[8,"Error",735],[15,"str"],[4,"Error",736],[8,"Send",737],[8,"Sync",737],[3,"TxBuilder",629],[8,"Payload",738],[8,"FnOnce",739],[3,"WitnessAccountData",740],[3,"SpendingCounter",741],[6,"VotePlanId",742],[3,"Proposal",648],[3,"ElectionPublicKey",743],[3,"VoteCast",744],[3,"Wallet",685],[3,"Address",716],[6,"FragmentId",0],[3,"AccountId",745],[3,"Box",746],[13,"InvalidInput",628],[3,"TimeEra",356]]},\
"wallet_wasm_js":{"doc":"JavaScript and TypeScript bindings for the Jormungandr …","t":"DDDDDDDDDLLLLLALLLLLLLLALLLLLLOLLLLLLLLOLLLLLLLLLLLLLLLLLLLLALLDLLLLLLLLLLLLLLLLLLLLALALDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLL","n":["Certificate","ElectionPublicKey","Fragment","FragmentId","Payload","Settings","VoteCast","VoteCastTxBuilder","VotePlanId","borrow","borrow","borrow_mut","borrow_mut","build_tx","certificates","deref","deref","deref_mut","deref_mut","describe","describe","drop","drop","fragment","from","from","from_abi","from_abi","from_json","get_sign_data","impl_collection","init","init","into","into","into_abi","into_abi","is_none","is_none","log","long_ref_from_abi","long_ref_from_abi","new","none","none","prepare_tx","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","sign_tx","to_json","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","Certificate","borrow","borrow_mut","deref","deref_mut","describe","drop","from","from_abi","init","into","into_abi","is_none","long_ref_from_abi","none","ref_from_abi","ref_mut_from_abi","return_abi","try_from","try_into","type_id","vote_cast","vote_cast","vote_plan","vzip","ElectionPublicKey","Payload","VoteCast","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","describe","describe","describe","drop","drop","drop","from","from","from","from_abi","from_abi","from_abi","from_bytes","from_hex","init","init","init","into","into","into","into_abi","into_abi","into_abi","is_none","is_none","is_none","long_ref_from_abi","long_ref_from_abi","long_ref_from_abi","new","new_private","new_public","none","none","none","ref_from_abi","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","return_abi","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","VotePlanId","borrow","borrow_mut","clone","clone_into","deref","deref_mut","describe","drop","eq","equivalent","equivalent","fmt","from","from_abi","from_bytes","from_hex","init","into","into_abi","is_none","long_ref_from_abi","none","ref_from_abi","ref_mut_from_abi","return_abi","to_bytes","to_owned","try_from","try_into","type_id","vzip","Fragment","FragmentId","FragmentIds","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","describe","describe","describe","drop","drop","drop","from","from","from","from","from_abi","from_abi","from_abi","from_bytes","id","init","init","init","instanceof","into","into","into","into_abi","into_abi","into_abi","into_abi","is_none","is_none","is_none","long_ref_from_abi","long_ref_from_abi","long_ref_from_abi","none","none","none","none","obj","ref_from_abi","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","return_abi","to_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_from_js","unchecked_from_js_ref","vzip","vzip","vzip"],"q":[[0,"wallet_wasm_js"],[63,"wallet_wasm_js::certificates"],[88,"wallet_wasm_js::certificates::vote_cast"],[159,"wallet_wasm_js::certificates::vote_plan"],[191,"wallet_wasm_js::fragment"],[269,"alloc::string"],[270,"wasm_bindgen"],[271,"core::result"],[272,"alloc::boxed"],[273,"core::any"],[274,"core::fmt"],[275,"core::fmt"]],"d":["","","","Identifier of a block fragment","","Encapsulates blockchain settings needed for some …","","","","","","","","Finish step of building VoteCast fragment with passing an …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a transaction signing data","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Initializing of the VoteCastTxBuilder","","","First step of the VoteCast transaction building process","","","","","","","Finish step of signing and building VoteCast fragment","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Identifier of a block fragment","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,9,1,9,1,0,1,9,1,9,1,9,1,9,0,1,9,1,9,9,1,0,1,9,1,9,1,9,1,9,0,1,9,1,1,9,1,1,9,1,9,1,9,1,9,1,9,1,9,1,9,0,1,9,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,0,16,0,0,0,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,17,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,14,18,18,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,17,18,14,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,22,22,23,22,3,23,22,3,23,22,22,3,23,22,3,23,22,3,23,22,3,23,22,22,3,23,22,3,3,3,23,22,3,22,23,22,3,23,22,22,3,23,22,3,23,22,3,23,22,22,3,22,23,22,3,23,3,23,22,3,3,23,22,3,23,22,3,23,22,3,22,22,23,22,3],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],[[5,[3,4]]]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[],7],[[],7],[6,7],[6,7],0,[-1,-1,[]],[-1,-1,[]],[8,1],[8,9],[2,[[5,[9,4]]]],[1,[[5,[[12,[[11,[10]]]],4]]]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[1,8],[9,8],[[],13],[[],13],0,[[]],[[]],[[9,14],1],[[]],[[]],[[1,2],[[5,[1,4]]]],[[]],[[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[[1,2],[[5,[3,4]]]],[9,[[5,[2,4]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[[],7],[6,7],[-1,-1,[]],[8,16],[[],6],[-1,-2,[],[]],[16,8],[[],13],[[]],[[]],[[]],[[]],[-1,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],0,[14,16],0,[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[],7],[[],7],[[],7],[6,7],[6,7],[6,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[8,17],[8,18],[8,14],[[[11,[10]]],[[5,[17,4]]]],[2,[[5,[17,4]]]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,8],[18,8],[14,8],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[19,10,18],14],[[19,6,10,17],[[5,[18,4]]]],[10,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],7,[],[]],[6,-1,[]],[6,-1,[]],[[],7],[6,7],[[19,19],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[19,20],21],[-1,-1,[]],[8,19],[[[11,[10]]],[[5,[19,4]]]],[2,[[5,[19,4]]]],[[],6],[-1,-2,[],[]],[19,8],[[],13],[[]],[[]],[[]],[[]],[-1,[],[]],[19,[[5,[[12,[[11,[10]]]],4]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,[22,4],[22,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[22,4],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[],7],[[],7],[[],7],[6,7],[6,7],[6,7],[-1,-1,[]],[4,22],[-1,-1,[]],[-1,-1,[]],[8,23],[[],22],[8,3],[[[11,[10]]],[[5,[3,4]]]],[3,23],[[],6],[[],6],[[],6],[4,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,8],[22],[22],[3,8],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[3,[[5,[[12,[[11,[10]]]],4]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[4,22],[4,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"VoteCastTxBuilder",0],[3,"String",269],[3,"Fragment",191],[3,"JsValue",270],[4,"Result",271],[15,"usize"],[15,"tuple"],[15,"u32"],[3,"Settings",0],[15,"u8"],[15,"slice"],[3,"Box",272],[15,"bool"],[3,"VoteCast",88],[3,"TypeId",273],[3,"Certificate",63],[3,"ElectionPublicKey",88],[3,"Payload",88],[3,"VotePlanId",159],[3,"Formatter",274],[6,"Result",274],[3,"FragmentIds",191],[3,"FragmentId",191]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
