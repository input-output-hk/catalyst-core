name: CIv2

on:
  push:
    # branches:
    #   - main

permissions:
  id-token: write
  contents: read
  packages: write

env:
  AWS_REGION: eu-central-1
  AWS_ROLE_ARN: arn:aws:iam::332405224602:role/ci
  ECR_REGISTRY: 332405224602.dkr.ecr.eu-central-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Install Earthly
        uses: earthly/actions/setup-earthly@v1
        with:
          version: v0.7.0
      # Until https://github.com/actions/checkout/pull/579/files is merged
      - uses: RobertWieczoreck/checkout@c7a760cf65a2b7579e8b874e2b341534ce674801
        with:
          fetch-tags: true
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
          else
            branch="${GITHUB_REF##*/}"
          fi
          git checkout -b "$branch" || true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}
      - name: Configure Earthly remote runner
        run: |
            mkdir -p /tmp/certs

            JSON=$(aws secretsmanager get-secret-value --secret-id global/ci/ci-tls --query SecretString --output text)
            echo "${JSON}" | jq -r .private_key | sed 's/\\n/\n/g' > /tmp/certs/key.pem
            echo "${JSON}" | jq -r .certificate | sed 's/\\n/\n/g' > /tmp/certs/cert.pem
            echo "${JSON}" | jq -r .ca_certificate | sed 's/\\n/\n/g' > /tmp/certs/ca.pem

            earthly config global.tlskey /tmp/certs/key.pem
            earthly config global.tlscert /tmp/certs/cert.pem
            earthly config global.tlsca /tmp/certs/ca.pem
      - name: Check tags
        run: git tag -l
      - name: Discover Earthfiles
        run: |
          docker run -v $(pwd):/workspace ghcr.io/input-output-hk/catalyst-core/ci:latest scan -t +docker .

