version: "3"

services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalystEventDev
      - PGPASSWORD=postgres
      - PGUSER=catalyst-event-dev
      - PGDATABASE=CatalystEventDev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    volumes:
      - eventdb:/var/lib/postgresql/data

  migrations:
    image: migrations:latest
    environment:
      # Required environment variables for migrations
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=CatalystEventDev
      - DB_SUPERUSER=postgres
      - DB_SUPERUSER_PASSWORD=postgres
      - DB_USER=catalyst-event-dev
      - DB_USER_PASSWORD=CHANGE_ME
      - ADMIN_ROLE_PASSWORD=CHANGE_ME
      - ADMIN_USER_PASSWORD=CHANGE_ME
      - ANON_ROLE_PASSWORD=CHANGE_ME
    depends_on:
      postgres:
        condition: service_healthy

  graphql:
    image: event-db-graphql:latest
    environment:
      - DATABASE_URL=postgres://catalyst-event-dev:CHANGE_ME@postgres/CatalystEventDev
      - JWT_SECRET=CHANGE_ME
      - GRAPHQL_PORT=5000
    ports:
      - 5000:5000
    depends_on:
      migrations:
        condition: service_completed_successfully

  cat-data-service:
    image: cat-data-service:latest
    environment:
      - DATABASE_URL=postgres://catalyst-event-dev:CHANGE_ME@postgres/CatalystEventDev
    depends_on:
      migrations:
        condition: service_completed_successfully
    ports:
      - 3030:3030

  leader0:
    image: voting-node:latest
    hostname: leader0
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      # Required env vars
      - IS_NODE_RELOADABLE=True
      - VOTING_HOST=0.0.0.0
      - VOTING_PORT=8000
      - VOTING_LOG_LEVEL=info
      - VOTING_LOG_FORMAT=text
      - VOTING_NODE_STORAGE=node_storage
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@postgres/CatalystEventDev
      - JORM_PATH=jormungandr
      - JCLI_PATH=jcli
      ### SECRET GENERATION
      # The CRS is used to generate committee members, this is only used by leader0
      - COMMITTEE_CRS=COMMON-REFERENCE-STRING-USED-THAT-IS-SECRET
      - SECRET_SECRET=SUPER_SECRET_SECRET_THAT_MUST_BE_CHANGED
      ### EXTERNAL DATA IMPORTER
      - IDEASCALE_API_TOKEN=USE-A-VALID-API-TOKEN-FROM-IDEASCALE
      - IDEASCALE_CAMPAIGN_GROUP=66
      - IDEASCALE_STAGE_ID=4385
      - IDEASCALE_CONFIG_PATH=/app/ideascale-importer-config.json
      - IDEASCALE_API_URL=https://cardano.ideascale.com
      ### SNAPSHOT TOOL DATA IMPORTER
      - SNAPSHOT_INTERVAL_SECONDS=1800
      - SNAPSHOT_OUTPUT_DIR=/tmp/snapshot-output
      - SNAPSHOT_NETWORK_IDS=testnet
      - TESTNET_DBSYNC_URL=postgres://CHANGE_ME
      - GVC_API_URL=https://CHANGE_ME
    volumes:
      - leader0_store:/node_storage
      - leader0_store:/tmp/snapshot-output
      - ./ideascale-importer-config.json:/app/ideascale-importer-config.json

  leader1:
    image: voting-node:latest
    hostname: leader1
    depends_on:
      postgres:
        condition: service_started
    environment:
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@postgres/CatalystEventDev
    volumes:
      - leader1_store:/node_storage
    profiles:
      - "donotstart"

  leader2:
    image: voting-node:latest
    hostname: leader2
    depends_on:
      postgres:
        condition: service_started
    environment:
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@postgres/CatalystEventDev
    volumes:
      - leader2_store:/node_storage
    profiles:
      - "donotstart"

  follower3:
    image: voting-node:latest
    hostname: follower3
    ports:
      - 5057:5057
    depends_on:
      postgres:
        condition: service_started
    environment:
      - EVENTDB_URL=postgres://catalyst-event-dev:CHANGE_ME@postgres/CatalystEventDev
    volumes:
      - leader2_store:/node_storage
    profiles:
      - "donotstart"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./extras/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317"
    profiles:
      - "donotstart"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./extras/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    profiles:
      - "donotstart"

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./extras/tempo-local.yaml:/etc/tempo.yaml
      - ./extras/tempo-data:/tmp/tempo
    ports:
      - "3200:3200"  # tempo
      - "4317"  # otlp grpc
    profiles:
      - "donotstart"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasource.yml
    profiles:
      - "donotstart"

volumes:
  eventdb:
  leader0_store:
  leader1_store:
  leader2_store:
