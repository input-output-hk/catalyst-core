(function() {var implementors = {
"chain_core":[],
"chain_impl_mockchain":[["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/update_vote/struct.UpdateVote.html\" title=\"struct chain_impl_mockchain::certificate::update_vote::UpdateVote\">UpdateVote</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/key/struct.BftLeaderId.html\" title=\"struct chain_impl_mockchain::key::BftLeaderId\">BftLeaderId</a>"],["impl DeserializeFromSlice for <a class=\"enum\" href=\"chain_impl_mockchain/config/enum.ConfigParam.html\" title=\"enum chain_impl_mockchain::config::ConfigParam\">ConfigParam</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/transaction/payload/struct.NoExtra.html\" title=\"struct chain_impl_mockchain::transaction::payload::NoExtra\">NoExtra</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/ledger/ledger/struct.Ledger.html\" title=\"struct chain_impl_mockchain::ledger::ledger::Ledger\">Ledger</a>"],["impl DeserializeFromSlice for <a class=\"enum\" href=\"chain_impl_mockchain/transaction/element/enum.AccountBindingSignature.html\" title=\"enum chain_impl_mockchain::transaction::element::AccountBindingSignature\">AccountBindingSignature</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/key/struct.GenesisPraosLeader.html\" title=\"struct chain_impl_mockchain::key::GenesisPraosLeader\">GenesisPraosLeader</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/pool/struct.PoolRegistration.html\" title=\"struct chain_impl_mockchain::certificate::pool::PoolRegistration\">PoolRegistration</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/fragment/config/struct.ConfigParams.html\" title=\"struct chain_impl_mockchain::fragment::config::ConfigParams\">ConfigParams</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/update_proposal/struct.UpdateProposal.html\" title=\"struct chain_impl_mockchain::certificate::update_proposal::UpdateProposal\">UpdateProposal</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/vote_cast/struct.VoteCast.html\" title=\"struct chain_impl_mockchain::certificate::vote_cast::VoteCast\">VoteCast</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/multisig/witness/struct.Witness.html\" title=\"struct chain_impl_mockchain::multisig::witness::Witness\">Witness</a>"],["impl DeserializeFromSlice for <a class=\"enum\" href=\"chain_impl_mockchain/certificate/pool/enum.PoolSignature.html\" title=\"enum chain_impl_mockchain::certificate::pool::PoolSignature\">PoolSignature</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/account/struct.Identifier.html\" title=\"struct chain_impl_mockchain::account::Identifier\">Identifier</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/transaction/element/struct.SingleAccountBindingSignature.html\" title=\"struct chain_impl_mockchain::transaction::element::SingleAccountBindingSignature\">SingleAccountBindingSignature</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/pool/struct.PoolUpdate.html\" title=\"struct chain_impl_mockchain::certificate::pool::PoolUpdate\">PoolUpdate</a>"],["impl DeserializeFromSlice for <a class=\"enum\" href=\"chain_impl_mockchain/certificate/vote_tally/enum.TallyProof.html\" title=\"enum chain_impl_mockchain::certificate::vote_tally::TallyProof\">TallyProof</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/evm_mapping/struct.EvmMapping.html\" title=\"struct chain_impl_mockchain::certificate::evm_mapping::EvmMapping\">EvmMapping</a>"],["impl DeserializeFromSlice for <a class=\"enum\" href=\"chain_impl_mockchain/transaction/witness/enum.Witness.html\" title=\"enum chain_impl_mockchain::transaction::witness::Witness\">Witness</a>"],["impl&lt;T: Deserialize, A: VerificationAlgorithm&gt; DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/key/struct.Signed.html\" title=\"struct chain_impl_mockchain::key::Signed\">Signed</a>&lt;T, A&gt;"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/vote_plan/struct.VotePlan.html\" title=\"struct chain_impl_mockchain::certificate::vote_plan::VotePlan\">VotePlan</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/legacy/struct.UtxoDeclaration.html\" title=\"struct chain_impl_mockchain::legacy::UtxoDeclaration\">UtxoDeclaration</a>"],["impl DeserializeFromSlice for <a class=\"type\" href=\"chain_impl_mockchain/certificate/pool/type.PoolOwnersSigned.html\" title=\"type chain_impl_mockchain::certificate::pool::PoolOwnersSigned\">PoolOwnersSigned</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/vote/committee/struct.CommitteeId.html\" title=\"struct chain_impl_mockchain::vote::committee::CommitteeId\">CommitteeId</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/vote_tally/struct.VoteTally.html\" title=\"struct chain_impl_mockchain::certificate::vote_tally::VoteTally\">VoteTally</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/vote_plan/struct.VotePlanProof.html\" title=\"struct chain_impl_mockchain::certificate::vote_plan::VotePlanProof\">VotePlanProof</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"chain_impl_mockchain/certificate/mint_token/struct.MintToken.html\" title=\"struct chain_impl_mockchain::certificate::mint_token::MintToken\">MintToken</a>"]],
"chain_ser":[],
"jormungandr_lib":[["impl DeserializeFromSlice for <a class=\"struct\" href=\"jormungandr_lib/interfaces/certificate/struct.SignedCertificate.html\" title=\"struct jormungandr_lib::interfaces::certificate::SignedCertificate\">SignedCertificate</a>"],["impl DeserializeFromSlice for <a class=\"struct\" href=\"jormungandr_lib/interfaces/certificate/struct.Certificate.html\" title=\"struct jormungandr_lib::interfaces::certificate::Certificate\">Certificate</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()