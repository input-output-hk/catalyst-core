/*
 * Catalyst 1.0
 *
 * Revised API expressing all capabilities of the Catalyst 1.0 Backend.  TODO: * Implement Permissionless Auth. * Implement Replacement Functionality for GVC. * Implement drep registration on main-chain, distinct from voter registration. * Implement Voting API abstracting the Jormungandr API from public exposure. * Implement Audit API's (Retrieve voting blockchain records,  registration/voting power audit and private tally audit. * Implement API's needed to support posting Ideas/Proposals etc.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: steven.johnson@iohk.io
 * Generated by: https://openapi-generator.tech
 */

/// ProposalSupplementalDetails : Additional Information related to the proposal.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProposalSupplementalDetails {
    /// For `simple` challenges, the free-form description of the proposed solution.
    #[serde(rename = "solution", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub solution: Option<Option<serde_json::Value>>,
    /// For `community-choice` challenges, the free-form brief explanation of the proposal.
    #[serde(rename = "brief", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub brief: Option<Option<serde_json::Value>>,
    /// For `community-choice` challenges, the free-form explanation of the proposals importance, in the view of the proposers.
    #[serde(rename = "importance", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub importance: Option<Option<serde_json::Value>>,
    /// For `community-choice` challenges, the free-form explanation of the metrics of success.  As proposed by the proposers.
    #[serde(rename = "metrics", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<Option<serde_json::Value>>,
}

impl ProposalSupplementalDetails {
    /// Additional Information related to the proposal.
    pub fn new() -> ProposalSupplementalDetails {
        ProposalSupplementalDetails {
            solution: None,
            brief: None,
            importance: None,
            metrics: None,
        }
    }
}


