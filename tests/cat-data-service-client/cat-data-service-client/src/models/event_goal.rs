/*
 * Catalyst 1.0
 *
 * Revised API expressing all capabilities of the Catalyst 1.0 Backend.  TODO: * Implement Permissionless Auth. * Implement Replacement Functionality for GVC. * Implement drep registration on main-chain, distinct from voter registration. * Implement Voting API abstracting the Jormungandr API from public exposure. * Implement Audit API's (Retrieve voting blockchain records,  registration/voting power audit and private tally audit. * Implement API's needed to support posting Ideas/Proposals etc.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: steven.johnson@iohk.io
 * Generated by: https://openapi-generator.tech
 */

/// EventGoal : An Individual Event Goal

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EventGoal {
    /// The Relative order of this Goal. 0 being highest.
    #[serde(rename = "idx", deserialize_with = "Option::deserialize")]
    pub idx: Option<serde_json::Value>,
    /// The name/short description of the goal.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<serde_json::Value>,
}

impl EventGoal {
    /// An Individual Event Goal
    pub fn new(idx: Option<serde_json::Value>, name: Option<serde_json::Value>) -> EventGoal {
        EventGoal { idx, name }
    }
}
