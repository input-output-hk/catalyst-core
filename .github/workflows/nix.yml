name: Nix CI

on:
  pull_request:
    paths:
      - '.github/workflows/nix.yml'
      - 'nix/**'
      - 'src/**'
      - 'Cargo.*'
      - 'flake.*'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/nix.yml'
      - 'nix/**'
      - 'src/**'
      - 'Cargo.*'
      - 'flake.*'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.sha }}
  cancel-in-progress: true

env:
  ECR_REGISTRY: 432820653916.dkr.ecr.eu-central-1.amazonaws.com
  S3_CACHE: s3://iog-catalyst-nix-cache?region=eu-central-1

jobs:
  discover:
    outputs:
      hits: ${{ steps.discovery.outputs.hits }}
      nix_conf: ${{ steps.discovery.outputs.nix_conf }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}
    steps:
      - name: Standard Discovery
        uses: divnix/std-action/discover@main
        id: discovery
  build-packages:
    needs: discover
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).packages.build }}
    name: ${{ matrix.target.cell }} - ${{ matrix.target.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: divnix/std-action/run@main
        with:
          extra_nix_config: |
            ${{ needs.discover.outputs.nix_conf }}
          json: ${{ toJSON(matrix.target) }}
          nix_key: ${{ secrets.NIX_SIGNING_KEY }}
          s3_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          s3_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cache: ${{ env.S3_CACHE }}
  build-devshells:
    needs: discover
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).devshells.build }}
    name: ${{ matrix.target.cell }} - ${{ matrix.target.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: divnix/std-action/run@main
        with:
          extra_nix_config: |
            ${{ needs.discover.outputs.nix_conf }}
          json: ${{ toJSON(matrix.target) }}
          nix_key: ${{ secrets.NIX_SIGNING_KEY }}
          s3_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          s3_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cache: ${{ env.S3_CACHE }}
  publish-containers:
    if: github.ref == 'refs/heads/main'
    needs:
      - discover
      - build-packages
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).containers.publish }}
    name: ${{ matrix.target.cell }} - ${{ matrix.target.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure Registry
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin "${{ env.ECR_REGISTRY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
      - uses: divnix/std-action/run@main
        with:
          extra_nix_config: |
            ${{ needs.discover.outputs.nix_conf }}
          json: ${{ toJSON(matrix.target) }}
          nix_key: ${{ secrets.NIX_SIGNING_KEY }}
          s3_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          s3_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cache: ${{ env.S3_CACHE }}