/*
 * Catalyst 1.0
 *
 * Revised API expressing all capabilities of the Catalyst 1.0 Backend.  TODO: * Implement Permissionless Auth. * Implement Replacement Functionality for GVC. * Implement drep registration on main-chain, distinct from voter registration. * Implement Voting API abstracting the Jormungandr API from public exposure. * Implement Audit API's (Retrieve voting blockchain records,  registration/voting power audit and private tally audit. * Implement API's needed to support posting Ideas/Proposals etc.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: steven.johnson@iohk.io
 * Generated by: https://openapi-generator.tech
 */

/// VotersInfo : The voting power for the requested voting key.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VotersInfo {
    #[serde(rename = "voter_info")]
    pub voter_info: Box<crate::models::VoterInfo>,
    /// Date and time for the latest update to this snapshot information.
    #[serde(rename = "last_updated", deserialize_with = "Option::deserialize")]
    pub last_updated: Option<serde_json::Value>,
    /// Date and time the latest snapshot represents.
    #[serde(
        rename = "as_at",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub as_at: Option<Option<serde_json::Value>>,
    /// `True` = this is the final snapshot which will be used for voting power in the event.</br>`False` =This is an interim snapshot, subject to change.
    #[serde(
        rename = "final",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#final: Option<Option<serde_json::Value>>,
}

impl VotersInfo {
    /// The voting power for the requested voting key.
    pub fn new(
        voter_info: crate::models::VoterInfo,
        last_updated: Option<serde_json::Value>,
    ) -> VotersInfo {
        VotersInfo {
            voter_info: Box::new(voter_info),
            last_updated,
            as_at: None,
            r#final: None,
        }
    }
}
