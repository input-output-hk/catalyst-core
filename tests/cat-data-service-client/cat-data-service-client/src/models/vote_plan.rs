/*
 * Catalyst 1.0
 *
 * Revised API expressing all capabilities of the Catalyst 1.0 Backend.  TODO: * Implement Permissionless Auth. * Implement Replacement Functionality for GVC. * Implement drep registration on main-chain, distinct from voter registration. * Implement Voting API abstracting the Jormungandr API from public exposure. * Implement Audit API's (Retrieve voting blockchain records,  registration/voting power audit and private tally audit. * Implement API's needed to support posting Ideas/Proposals etc.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: steven.johnson@iohk.io
 * Generated by: https://openapi-generator.tech
 */

/// VotePlan : The voteplan to use for this group.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VotePlan {
    /// The Index of the proposal, needed to create a ballot for it.
    #[serde(rename = "chain_proposal_index", deserialize_with = "Option::deserialize")]
    pub chain_proposal_index: Option<serde_json::Value>,
    /// The name of the group (Must be unique in the array).
    #[serde(rename = "group")]
    pub group: crate::models::VoterGroupId,
    /// The type of ballot this group must cast.
    #[serde(rename = "ballot_type", skip_serializing_if = "Option::is_none")]
    pub ballot_type: Option<crate::models::BallotType>,
    /// Blockchain ID of the vote plan transaction.
    #[serde(rename = "chain_voteplan_id", deserialize_with = "Option::deserialize")]
    pub chain_voteplan_id: Option<serde_json::Value>,
    /// The public encryption key used. ONLY if required by the ballot type (private, cast-private).
    #[serde(rename = "encryption_key", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub encryption_key: Option<Option<serde_json::Value>>,
}

impl VotePlan {
    /// The voteplan to use for this group.
    pub fn new(chain_proposal_index: Option<serde_json::Value>, group: crate::models::VoterGroupId, chain_voteplan_id: Option<serde_json::Value>) -> VotePlan {
        VotePlan {
            chain_proposal_index,
            group,
            ballot_type: None,
            chain_voteplan_id,
            encryption_key: None,
        }
    }
}


