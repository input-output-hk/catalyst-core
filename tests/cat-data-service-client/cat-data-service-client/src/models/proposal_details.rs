/*
 * Catalyst 1.0
 *
 * Revised API expressing all capabilities of the Catalyst 1.0 Backend.  TODO: * Implement Permissionless Auth. * Implement Replacement Functionality for GVC. * Implement drep registration on main-chain, distinct from voter registration. * Implement Voting API abstracting the Jormungandr API from public exposure. * Implement Audit API's (Retrieve voting blockchain records,  registration/voting power audit and private tally audit. * Implement API's needed to support posting Ideas/Proposals etc.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: steven.johnson@iohk.io
 * Generated by: https://openapi-generator.tech
 */

/// ProposalDetails : Details of a particular Proposal

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProposalDetails {
    /// The amount of funds requested by this proposal. In the denomination of the Objectives Reward. If not present, then this proposal is not requesting any funds.
    #[serde(
        rename = "funds",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub funds: Option<Option<serde_json::Value>>,
    /// URL to a web page with details on this proposal.
    #[serde(
        rename = "url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub url: Option<Option<serde_json::Value>>,
    /// Link to extra files associated with this proposal. Only included if there are linked files.
    #[serde(
        rename = "files",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub files: Option<Option<serde_json::Value>>,
    /// List of all proposers making this proposal.
    #[serde(
        rename = "proposer",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub proposer: Option<Option<serde_json::Value>>,
    #[serde(rename = "supplemental", skip_serializing_if = "Option::is_none")]
    pub supplemental: Option<Box<crate::models::ProposalSupplementalDetails>>,
}

impl ProposalDetails {
    /// Details of a particular Proposal
    pub fn new() -> ProposalDetails {
        ProposalDetails {
            funds: None,
            url: None,
            files: None,
            proposer: None,
            supplemental: None,
        }
    }
}
