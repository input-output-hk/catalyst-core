# This is a Dockerfile for building a container image for the Catalyst Event Database.
# The container image is built from scratch and includes the necessary files for running
# the database and its associated software.

VERSION 0.7

build:
    FROM python:3.11-slim-bullseye # Use a debian stable with python
    WORKDIR /event-db # Set the working directory to /event-db
    COPY refinery.toml . # Copy the refinery.toml file to the working directory
    COPY --dir setup . # Copy the setup directory to the working directory
    COPY --dir migrations . # Copy the migrations directory to the working directory
    COPY --dir historic_data . # Copy the historic_data directory to the working directory
    COPY --dir test_data . # Copy the test_data directory to the working directory
    COPY --dir stage_data . # Copy Stage specific data into the working directory.

    RUN python3 historic_data/fund_2/mk_fund2_sql.py historic_data/fund_2/fund2_database_encrypted.sqlite3 >> historic_data/fund_2.sql
    RUN python3 historic_data/fund_3/mk_fund3_sql.py historic_data/fund_3/fund3_database_encrypted.sqlite3 >> historic_data/fund_3.sql
    RUN python3 historic_data/fund_4/mk_fund4_sql.py historic_data/fund_4/fund4_database_encrypted.sqlite3 >> historic_data/fund_4.sql
    RUN python3 historic_data/fund_5/mk_fund5_sql.py historic_data/fund_5/fund5_database_encrypted.sqlite3 >> historic_data/fund_5.sql
    RUN python3 historic_data/fund_6/mk_fund6_sql.py historic_data/fund_6/fund6_database_encrypted.sqlite3 >> historic_data/fund_6.sql
    RUN python3 historic_data/fund_7/mk_fund7_sql.py historic_data/fund_7/fund7_database_encrypted.sqlite3 >> historic_data/fund_7.sql
    RUN python3 historic_data/fund_8/mk_fund8_sql.py historic_data/fund_8/fund8_database_encrypted.sqlite3 >> historic_data/fund_8.sql
    RUN python3 historic_data/fund_9/mk_fund9_sql.py historic_data/fund_9/fund9_database_encrypted.sqlite3 >> historic_data/fund_9.sql
    RUN python3 historic_data/fund_9/mk_fund9_voteplan_sql.py historic_data/fund_9/fund9_database_encrypted.sqlite3 >> historic_data/fund_9.sql

    SAVE ARTIFACT refinery.toml # Save the refinery.toml file as an artifact
    SAVE ARTIFACT setup # Save the setup directory as an artifact
    SAVE ARTIFACT migrations # Save the migrations directory as an artifact
    SAVE ARTIFACT historic_data # Save the historic_data directory as an artifact
    SAVE ARTIFACT test_data # Save the test_data directory as an artifact
    SAVE ARTIFACT stage_data # Save the stage_data directory as an artifact

docker-compose:
    FROM scratch
    COPY docker-compose.yml .
    SAVE ARTIFACT docker-compose.yml

# Need to be run with the -P flag
test:
    FROM ../../+builder

    COPY +docker-compose/docker-compose.yml .
    WITH DOCKER \
        --compose docker-compose.yml \
        --pull postgres:14 \
        --load migrations:latest=(../../containers/event-db-migrations+docker --data=test) \
        --service migrations \
        --allow-privileged
        RUN EVENT_DB_URL="postgres://catalyst-event-dev:CHANGE_ME@localhost/CatalystEventDev" cargo test -p event-db
    END
